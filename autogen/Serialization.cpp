
#include <nlohmann/json.hpp>

// for convenience
using json = nlohmann::json;

#include <Serialization.hpp>
#include <Server.hpp>
#include <Synchronization.hpp>
#include <ThreadStruct.hpp>


    json serialize_VkBaseOutStructure(VkBaseOutStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_omVUcOr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XSkzfwI=json({});
    
        if (name.pNext==NULL){
            return_XSkzfwI["null"]=true;
            return return_XSkzfwI;
        }
        return_XSkzfwI=[&]() {
    json return_jLAdOqJ=json({});
    return serialize_VkBaseOutStructure(*name.pNext);}();
return return_XSkzfwI;}();
return result;}

    VkBaseOutStructure deserialize_VkBaseOutStructure(json name){
        auto result=VkBaseOutStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    [&]() {
*(result.pNext)=deserialize_VkBaseOutStructure(name["members"]["pNext"]);}();
}();
return result;}

    json serialize_VkBaseInStructure(VkBaseInStructure name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MVpbGVI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KJelIdb=json({});
    
        if (name.pNext==NULL){
            return_KJelIdb["null"]=true;
            return return_KJelIdb;
        }
        return_KJelIdb=[&]() {
    json return_jDLgfEt=json({});
    return serialize_VkBaseInStructure(*name.pNext);}();
return return_KJelIdb;}();
return result;}

    VkBaseInStructure deserialize_VkBaseInStructure(json name){
        auto result=VkBaseInStructure();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
VkBaseInStructure* temp_PjkFVMr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PjkFVMr=NULL;
        }
    [&]() {
*(temp_PjkFVMr)=deserialize_VkBaseInStructure(name["members"]["pNext"]);}();
}();result.pNext=temp_PjkFVMr;}();
return result;}

    json serialize_VkOffset2D(VkOffset2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_MpRGuyY=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_SIjVYVX=json({});
    return serialize_int32_t(name.y);}();
return result;}

    VkOffset2D deserialize_VkOffset2D(json name){
        auto result=VkOffset2D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
return result;}

    json serialize_VkOffset3D(VkOffset3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_tjcbhPZ=json({});
    return serialize_int32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_AfLnino=json({});
    return serialize_int32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_jMLCEOL=json({});
    return serialize_int32_t(name.z);}();
return result;}

    VkOffset3D deserialize_VkOffset3D(json name){
        auto result=VkOffset3D();
    
[&]() {
result.x=deserialize_int32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_int32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_int32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkExtent2D(VkExtent2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_UeTypJg=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_VPBVSkp=json({});
    return serialize_uint32_t(name.height);}();
return result;}

    VkExtent2D deserialize_VkExtent2D(json name){
        auto result=VkExtent2D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
return result;}

    json serialize_VkExtent3D(VkExtent3D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_lWrVyUx=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_HnAPAeC=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_sXXSUhm=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkExtent3D deserialize_VkExtent3D(json name){
        auto result=VkExtent3D();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkViewport(VkViewport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_cNRTqyv=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_PrGQuRs=json({});
    return serialize_float(name.y);}();
result["members"]["width"]=[&]() {
    json return_IFiBdhc=json({});
    return serialize_float(name.width);}();
result["members"]["height"]=[&]() {
    json return_VpVOAqZ=json({});
    return serialize_float(name.height);}();
result["members"]["minDepth"]=[&]() {
    json return_eyDHyzD=json({});
    return serialize_float(name.minDepth);}();
result["members"]["maxDepth"]=[&]() {
    json return_gxnSjsq=json({});
    return serialize_float(name.maxDepth);}();
return result;}

    VkViewport deserialize_VkViewport(json name){
        auto result=VkViewport();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
[&]() {
result.width=deserialize_float(name["members"]["width"]);}();
[&]() {
result.height=deserialize_float(name["members"]["height"]);}();
[&]() {
result.minDepth=deserialize_float(name["members"]["minDepth"]);}();
[&]() {
result.maxDepth=deserialize_float(name["members"]["maxDepth"]);}();
return result;}

    json serialize_VkRect2D(VkRect2D name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_pkRNcaU=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_MQmwaXe=json({});
    return serialize_VkExtent2D(name.extent);}();
return result;}

    VkRect2D deserialize_VkRect2D(json name){
        auto result=VkRect2D();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
return result;}

    json serialize_VkClearRect(VkClearRect name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rect"]=[&]() {
    json return_bUbVfzr=json({});
    return serialize_VkRect2D(name.rect);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_zCsGKpz=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_tpLIbvU=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkClearRect deserialize_VkClearRect(json name){
        auto result=VkClearRect();
    
[&]() {
result.rect=deserialize_VkRect2D(name["members"]["rect"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkComponentMapping(VkComponentMapping name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["r"]=[&]() {
    json return_QYyfwIE=json({});
    return serialize_VkComponentSwizzle(name.r);}();
result["members"]["g"]=[&]() {
    json return_ungBnxG=json({});
    return serialize_VkComponentSwizzle(name.g);}();
result["members"]["b"]=[&]() {
    json return_uvglWYm=json({});
    return serialize_VkComponentSwizzle(name.b);}();
result["members"]["a"]=[&]() {
    json return_YaxRXFn=json({});
    return serialize_VkComponentSwizzle(name.a);}();
return result;}

    VkComponentMapping deserialize_VkComponentMapping(json name){
        auto result=VkComponentMapping();
    
[&]() {
result.r=deserialize_VkComponentSwizzle(name["members"]["r"]);}();
[&]() {
result.g=deserialize_VkComponentSwizzle(name["members"]["g"]);}();
[&]() {
result.b=deserialize_VkComponentSwizzle(name["members"]["b"]);}();
[&]() {
result.a=deserialize_VkComponentSwizzle(name["members"]["a"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties(VkPhysicalDeviceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["apiVersion"]=[&]() {
    json return_nHdyrMV=json({});
    return serialize_uint32_t(name.apiVersion);}();
result["members"]["driverVersion"]=[&]() {
    json return_LWAVhck=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_zuxmMZm=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_nWExlUq=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["deviceType"]=[&]() {
    json return_xBqCZSb=json({});
    return serialize_VkPhysicalDeviceType(name.deviceType);}();
result["members"]["deviceName"]=[&]() {
    json return_bIyNltx=json({});
    
        return_bIyNltx["members"]={};
        for(int i=0; i < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_VnQSbnt=json({});
    return serialize_char(name.deviceName[i]);}();
            return_bIyNltx["members"][std::to_string(i)].push_back(temp);
        }
        return return_bIyNltx;
        }();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_hTsHVug=json({});
    
        return_hTsHVug["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_uRAznuB=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_hTsHVug["members"][std::to_string(i)].push_back(temp);
        }
        return return_hTsHVug;
        }();
result["members"]["limits"]=[&]() {
    json return_PtBCwDR=json({});
    return serialize_VkPhysicalDeviceLimits(name.limits);}();
result["members"]["sparseProperties"]=[&]() {
    json return_LyCWMlb=json({});
    return serialize_VkPhysicalDeviceSparseProperties(name.sparseProperties);}();
return result;}

    VkPhysicalDeviceProperties deserialize_VkPhysicalDeviceProperties(json name){
        auto result=VkPhysicalDeviceProperties();
    
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.deviceType=deserialize_VkPhysicalDeviceType(name["members"]["deviceType"]);}();
[&]() {

        for (int VnujIWN=0; VnujIWN < VK_MAX_PHYSICAL_DEVICE_NAME_SIZE; VnujIWN++){
            [&]() {
result.deviceName[VnujIWN]=deserialize_char(name["members"]["deviceName"]["members"][VnujIWN]);}();;
        }
        }();
[&]() {

        for (int NSsgjcZ=0; NSsgjcZ < VK_UUID_SIZE; NSsgjcZ++){
            [&]() {
result.pipelineCacheUUID[NSsgjcZ]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][NSsgjcZ]);}();;
        }
        }();
[&]() {
result.limits=deserialize_VkPhysicalDeviceLimits(name["members"]["limits"]);}();
[&]() {
result.sparseProperties=deserialize_VkPhysicalDeviceSparseProperties(name["members"]["sparseProperties"]);}();
return result;}

    json serialize_VkExtensionProperties(VkExtensionProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["extensionName"]=[&]() {
    json return_ZrdxsWh=json({});
    
        return_ZrdxsWh["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_kfKzDmv=json({});
    return serialize_char(name.extensionName[i]);}();
            return_ZrdxsWh["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZrdxsWh;
        }();
result["members"]["specVersion"]=[&]() {
    json return_erIMjej=json({});
    return serialize_uint32_t(name.specVersion);}();
return result;}

    VkExtensionProperties deserialize_VkExtensionProperties(json name){
        auto result=VkExtensionProperties();
    
[&]() {

        for (int sZHmSvg=0; sZHmSvg < VK_MAX_EXTENSION_NAME_SIZE; sZHmSvg++){
            [&]() {
result.extensionName[sZHmSvg]=deserialize_char(name["members"]["extensionName"]["members"][sZHmSvg]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
return result;}

    json serialize_VkLayerProperties(VkLayerProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["layerName"]=[&]() {
    json return_ZCVsGoL=json({});
    
        return_ZCVsGoL["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_QKTlrDE=json({});
    return serialize_char(name.layerName[i]);}();
            return_ZCVsGoL["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZCVsGoL;
        }();
result["members"]["specVersion"]=[&]() {
    json return_tCLNYSl=json({});
    return serialize_uint32_t(name.specVersion);}();
result["members"]["implementationVersion"]=[&]() {
    json return_sTTTBYK=json({});
    return serialize_uint32_t(name.implementationVersion);}();
result["members"]["description"]=[&]() {
    json return_tMaVdRz=json({});
    
        return_tMaVdRz["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_IfxYSaG=json({});
    return serialize_char(name.description[i]);}();
            return_tMaVdRz["members"][std::to_string(i)].push_back(temp);
        }
        return return_tMaVdRz;
        }();
return result;}

    VkLayerProperties deserialize_VkLayerProperties(json name){
        auto result=VkLayerProperties();
    
[&]() {

        for (int xrnCSQH=0; xrnCSQH < VK_MAX_EXTENSION_NAME_SIZE; xrnCSQH++){
            [&]() {
result.layerName[xrnCSQH]=deserialize_char(name["members"]["layerName"]["members"][xrnCSQH]);}();;
        }
        }();
[&]() {
result.specVersion=deserialize_uint32_t(name["members"]["specVersion"]);}();
[&]() {
result.implementationVersion=deserialize_uint32_t(name["members"]["implementationVersion"]);}();
[&]() {

        for (int ORbTNOp=0; ORbTNOp < VK_MAX_DESCRIPTION_SIZE; ORbTNOp++){
            [&]() {
result.description[ORbTNOp]=deserialize_char(name["members"]["description"]["members"][ORbTNOp]);}();;
        }
        }();
return result;}

    json serialize_VkApplicationInfo(VkApplicationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ieBZcfD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cvTERvR=json({});
    
        if (name.pNext==NULL){
            return_cvTERvR["null"]=true;
            return return_cvTERvR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pApplicationName"]=[&]() {
    json return_MPWZjNf=json({});
    
        if (name.pApplicationName==NULL){
            return_MPWZjNf["null"]=true;
            return return_MPWZjNf;
        }
        return serialize_char_p(name.pApplicationName);
}();
result["members"]["applicationVersion"]=[&]() {
    json return_vAoFNFB=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["pEngineName"]=[&]() {
    json return_uMcqEYg=json({});
    
        if (name.pEngineName==NULL){
            return_uMcqEYg["null"]=true;
            return return_uMcqEYg;
        }
        return serialize_char_p(name.pEngineName);
}();
result["members"]["engineVersion"]=[&]() {
    json return_bWigFQs=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_eDNQvpI=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkApplicationInfo deserialize_VkApplicationInfo(json name){
        auto result=VkApplicationInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zpJOfFG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zpJOfFG=NULL;
        }
    temp_zpJOfFG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zpJOfFG;}();
[&]() {
char* temp_nqicAxT;[&]() {

        if (name["members"]["pApplicationName"].contains("null")){
        temp_nqicAxT=NULL;
        }
    temp_nqicAxT=deserialize_char_p(name["members"]["pApplicationName"]);
}();result.pApplicationName=temp_nqicAxT;}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
char* temp_aygGImN;[&]() {

        if (name["members"]["pEngineName"].contains("null")){
        temp_aygGImN=NULL;
        }
    temp_aygGImN=deserialize_char_p(name["members"]["pEngineName"]);
}();result.pEngineName=temp_aygGImN;}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkAllocationCallbacks(VkAllocationCallbacks name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pUserData"]=[&]() {
    json return_nZnjyWO=json({});
    
        if (name.pUserData==NULL){
            return_nZnjyWO["null"]=true;
            return return_nZnjyWO;
        }
        return serialize_void_p(name.pUserData);
}();
result["members"]["pfnAllocation"]=[&]() {
    json return_NEmkbwZ=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkAllocationFunction(name.pfnAllocation);
        #endif
        }();
result["members"]["pfnReallocation"]=[&]() {
    json return_uzForAZ=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkReallocationFunction(name.pfnReallocation);
        #endif
        }();
result["members"]["pfnFree"]=[&]() {
    json return_iarBBUA=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkFreeFunction(name.pfnFree);
        #endif
        }();
result["members"]["pfnInternalAllocation"]=[&]() {
    json return_zIJwSWl=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalAllocationNotification(name.pfnInternalAllocation);
        #endif
        }();
result["members"]["pfnInternalFree"]=[&]() {
    json return_EfqvjMT=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkInternalFreeNotification(name.pfnInternalFree);
        #endif
        }();
return result;}
typedef struct {
void* pUserData;
uintptr_t PFN_vkAllocationFunction_id;
uintptr_t PFN_vkReallocationFunction_id;
uintptr_t PFN_vkFreeFunction_id;
uintptr_t PFN_vkInternalAllocationNotification_id;
uintptr_t PFN_vkInternalFreeNotification_id;
} VkAllocationCallbacks_struct;

    VkAllocationCallbacks deserialize_VkAllocationCallbacks(json name){
        auto result=VkAllocationCallbacks();
    
auto _struct = new VkAllocationCallbacks_struct;
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
[&]() {

        #ifndef CLIENT
        result.pfnAllocation=deserialize_PFN_vkAllocationFunction(name["members"]["pfnAllocation"]);
        #endif
        }();
_struct->PFN_vkAllocationFunction_id=name["members"]["pfnAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnReallocation=deserialize_PFN_vkReallocationFunction(name["members"]["pfnReallocation"]);
        #endif
        }();
_struct->PFN_vkReallocationFunction_id=name["members"]["pfnReallocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnFree=deserialize_PFN_vkFreeFunction(name["members"]["pfnFree"]);
        #endif
        }();
_struct->PFN_vkFreeFunction_id=name["members"]["pfnFree"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalAllocation=deserialize_PFN_vkInternalAllocationNotification(name["members"]["pfnInternalAllocation"]);
        #endif
        }();
_struct->PFN_vkInternalAllocationNotification_id=name["members"]["pfnInternalAllocation"]["id"];
[&]() {

        #ifndef CLIENT
        result.pfnInternalFree=deserialize_PFN_vkInternalFreeNotification(name["members"]["pfnInternalFree"]);
        #endif
        }();
_struct->PFN_vkInternalFreeNotification_id=name["members"]["pfnInternalFree"]["id"];
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceQueueCreateInfo(VkDeviceQueueCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YGDmAUB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dRKBlgn=json({});
    
        if (name.pNext==NULL){
            return_dRKBlgn["null"]=true;
            return return_dRKBlgn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PXJTPgS=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_JQXaYpe=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueCount"]=[&]() {
    json return_LMsmExt=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["pQueuePriorities"]=[&]() {
    json return_hhkNuQm=json({});
    
        if (name.pQueuePriorities==NULL){
            return_hhkNuQm["null"]=true;
            return return_hhkNuQm;
        }
        
        return_hhkNuQm["members"]={};
        for(int i=0; i < name.queueCount; i++){
            json temp;
            temp=[&]() {
    json return_OzFBjbr=json({});
    return serialize_float(name.pQueuePriorities[i]);}();
            return_hhkNuQm["members"][std::to_string(i)].push_back(temp);
        }
        return return_hhkNuQm;
        }();
return result;}

    VkDeviceQueueCreateInfo deserialize_VkDeviceQueueCreateInfo(json name){
        auto result=VkDeviceQueueCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kGuaQnm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kGuaQnm=NULL;
        }
    temp_kGuaQnm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kGuaQnm;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
float* temp_zwQAwcI;[&]() {

        if (name["members"]["pQueuePriorities"].contains("null")){
        temp_zwQAwcI=NULL;
        }
    temp_zwQAwcI=(float*)malloc(result.queueCount*sizeof(float));
        for (int qMWkOTp=0; qMWkOTp < result.queueCount; qMWkOTp++){
            [&]() {
temp_zwQAwcI[qMWkOTp]=deserialize_float(name["members"]["pQueuePriorities"]["members"][qMWkOTp]);}();;
        }
        }();result.pQueuePriorities=temp_zwQAwcI;}();
return result;}

    json serialize_VkDeviceCreateInfo(VkDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SGusTfj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wTRPpOx=json({});
    
        if (name.pNext==NULL){
            return_wTRPpOx["null"]=true;
            return return_wTRPpOx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DzjzixR=json({});
    return serialize_VkDeviceCreateFlags(name.flags);}();
result["members"]["queueCreateInfoCount"]=[&]() {
    json return_fdkjwUX=json({});
    return serialize_uint32_t(name.queueCreateInfoCount);}();
result["members"]["pQueueCreateInfos"]=[&]() {
    json return_ogiOibX=json({});
    
        if (name.pQueueCreateInfos==NULL){
            return_ogiOibX["null"]=true;
            return return_ogiOibX;
        }
        
        return_ogiOibX["members"]={};
        for(int i=0; i < name.queueCreateInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_DlmfrPw=json({});
    return serialize_VkDeviceQueueCreateInfo(name.pQueueCreateInfos[i]);}();
            return_ogiOibX["members"][std::to_string(i)].push_back(temp);
        }
        return return_ogiOibX;
        }();
result["members"]["enabledLayerCount"]=[&]() {
    json return_EruFLOq=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_kTVBTRv=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_kTVBTRv["null"]=true;
            return return_kTVBTRv;
        }
        
        return_kTVBTRv["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_OLEGxlk=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_OLEGxlk["null"]=true;
            return return_OLEGxlk;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_kTVBTRv["members"][std::to_string(i)].push_back(temp);
        }
        return return_kTVBTRv;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_MXZZcbP=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_rkFkhka=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_rkFkhka["null"]=true;
            return return_rkFkhka;
        }
        
        return_rkFkhka["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_eqEbpbQ=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_eqEbpbQ["null"]=true;
            return return_eqEbpbQ;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_rkFkhka["members"][std::to_string(i)].push_back(temp);
        }
        return return_rkFkhka;
        }();
result["members"]["pEnabledFeatures"]=[&]() {
    json return_BKpKLjg=json({});
    
        if (name.pEnabledFeatures==NULL){
            return_BKpKLjg["null"]=true;
            return return_BKpKLjg;
        }
        return_BKpKLjg=[&]() {
    json return_PIeLBZW=json({});
    return serialize_VkPhysicalDeviceFeatures(*name.pEnabledFeatures);}();
return return_BKpKLjg;}();
return result;}

    VkDeviceCreateInfo deserialize_VkDeviceCreateInfo(json name){
        auto result=VkDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iwFhMGP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iwFhMGP=NULL;
        }
    temp_iwFhMGP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iwFhMGP;}();
[&]() {
result.flags=deserialize_VkDeviceCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueCreateInfoCount=deserialize_uint32_t(name["members"]["queueCreateInfoCount"]);}();
[&]() {
VkDeviceQueueCreateInfo* temp_vKXsOqf;[&]() {

        if (name["members"]["pQueueCreateInfos"].contains("null")){
        temp_vKXsOqf=NULL;
        }
    temp_vKXsOqf=(VkDeviceQueueCreateInfo*)malloc(result.queueCreateInfoCount*sizeof(VkDeviceQueueCreateInfo));
        for (int LnYNbnn=0; LnYNbnn < result.queueCreateInfoCount; LnYNbnn++){
            [&]() {
temp_vKXsOqf[LnYNbnn]=deserialize_VkDeviceQueueCreateInfo(name["members"]["pQueueCreateInfos"]["members"][LnYNbnn]);}();;
        }
        }();result.pQueueCreateInfos=temp_vKXsOqf;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_RLlGJYp;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_RLlGJYp=NULL;
        }
    temp_RLlGJYp=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int zUztWna=0; zUztWna < result.enabledLayerCount; zUztWna++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][zUztWna].contains("null")){
        temp_RLlGJYp[zUztWna]=NULL;
        }
    temp_RLlGJYp[zUztWna]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][zUztWna]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_RLlGJYp;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_wzXRTkt;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_wzXRTkt=NULL;
        }
    temp_wzXRTkt=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int yxfDeKt=0; yxfDeKt < result.enabledExtensionCount; yxfDeKt++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][yxfDeKt].contains("null")){
        temp_wzXRTkt[yxfDeKt]=NULL;
        }
    temp_wzXRTkt[yxfDeKt]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][yxfDeKt]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_wzXRTkt;}();
[&]() {
VkPhysicalDeviceFeatures* temp_isQHXkS;[&]() {

        if (name["members"]["pEnabledFeatures"].contains("null")){
        temp_isQHXkS=NULL;
        }
    [&]() {
*(temp_isQHXkS)=deserialize_VkPhysicalDeviceFeatures(name["members"]["pEnabledFeatures"]);}();
}();result.pEnabledFeatures=temp_isQHXkS;}();
return result;}

    json serialize_VkInstanceCreateInfo(VkInstanceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OUjNIRw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LNYmzuo=json({});
    
        if (name.pNext==NULL){
            return_LNYmzuo["null"]=true;
            return return_LNYmzuo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LuODwrz=json({});
    return serialize_VkInstanceCreateFlags(name.flags);}();
result["members"]["pApplicationInfo"]=[&]() {
    json return_bbbZPtp=json({});
    
        if (name.pApplicationInfo==NULL){
            return_bbbZPtp["null"]=true;
            return return_bbbZPtp;
        }
        return_bbbZPtp=[&]() {
    json return_SuccQQj=json({});
    return serialize_VkApplicationInfo(*name.pApplicationInfo);}();
return return_bbbZPtp;}();
result["members"]["enabledLayerCount"]=[&]() {
    json return_rrtmlhM=json({});
    return serialize_uint32_t(name.enabledLayerCount);}();
result["members"]["ppEnabledLayerNames"]=[&]() {
    json return_jundXyc=json({});
    
        if (name.ppEnabledLayerNames==NULL){
            return_jundXyc["null"]=true;
            return return_jundXyc;
        }
        
        return_jundXyc["members"]={};
        for(int i=0; i < name.enabledLayerCount; i++){
            json temp;
            temp=[&]() {
    json return_tEYBoXt=json({});
    
        if (name.ppEnabledLayerNames[i]==NULL){
            return_tEYBoXt["null"]=true;
            return return_tEYBoXt;
        }
        return serialize_char_p(name.ppEnabledLayerNames[i]);
}();
            return_jundXyc["members"][std::to_string(i)].push_back(temp);
        }
        return return_jundXyc;
        }();
result["members"]["enabledExtensionCount"]=[&]() {
    json return_YWMWUCn=json({});
    return serialize_uint32_t(name.enabledExtensionCount);}();
result["members"]["ppEnabledExtensionNames"]=[&]() {
    json return_WSgiKmb=json({});
    
        if (name.ppEnabledExtensionNames==NULL){
            return_WSgiKmb["null"]=true;
            return return_WSgiKmb;
        }
        
        return_WSgiKmb["members"]={};
        for(int i=0; i < name.enabledExtensionCount; i++){
            json temp;
            temp=[&]() {
    json return_RONGHHD=json({});
    
        if (name.ppEnabledExtensionNames[i]==NULL){
            return_RONGHHD["null"]=true;
            return return_RONGHHD;
        }
        return serialize_char_p(name.ppEnabledExtensionNames[i]);
}();
            return_WSgiKmb["members"][std::to_string(i)].push_back(temp);
        }
        return return_WSgiKmb;
        }();
return result;}

    VkInstanceCreateInfo deserialize_VkInstanceCreateInfo(json name){
        auto result=VkInstanceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lKxeesc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lKxeesc=NULL;
        }
    temp_lKxeesc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lKxeesc;}();
[&]() {
result.flags=deserialize_VkInstanceCreateFlags(name["members"]["flags"]);}();
[&]() {
VkApplicationInfo* temp_fyRhmPt;[&]() {

        if (name["members"]["pApplicationInfo"].contains("null")){
        temp_fyRhmPt=NULL;
        }
    [&]() {
*(temp_fyRhmPt)=deserialize_VkApplicationInfo(name["members"]["pApplicationInfo"]);}();
}();result.pApplicationInfo=temp_fyRhmPt;}();
[&]() {
result.enabledLayerCount=deserialize_uint32_t(name["members"]["enabledLayerCount"]);}();
[&]() {
char** temp_QekFQrP;[&]() {

        if (name["members"]["ppEnabledLayerNames"].contains("null")){
        temp_QekFQrP=NULL;
        }
    temp_QekFQrP=(char**)malloc(result.enabledLayerCount*sizeof(char*));
        for (int MRkRtFj=0; MRkRtFj < result.enabledLayerCount; MRkRtFj++){
            [&]() {

        if (name["members"]["ppEnabledLayerNames"]["members"][MRkRtFj].contains("null")){
        temp_QekFQrP[MRkRtFj]=NULL;
        }
    temp_QekFQrP[MRkRtFj]=deserialize_char_p(name["members"]["ppEnabledLayerNames"]["members"][MRkRtFj]);
}();;
        }
        }();result.ppEnabledLayerNames=temp_QekFQrP;}();
[&]() {
result.enabledExtensionCount=deserialize_uint32_t(name["members"]["enabledExtensionCount"]);}();
[&]() {
char** temp_BPQvDlR;[&]() {

        if (name["members"]["ppEnabledExtensionNames"].contains("null")){
        temp_BPQvDlR=NULL;
        }
    temp_BPQvDlR=(char**)malloc(result.enabledExtensionCount*sizeof(char*));
        for (int hGFtikW=0; hGFtikW < result.enabledExtensionCount; hGFtikW++){
            [&]() {

        if (name["members"]["ppEnabledExtensionNames"]["members"][hGFtikW].contains("null")){
        temp_BPQvDlR[hGFtikW]=NULL;
        }
    temp_BPQvDlR[hGFtikW]=deserialize_char_p(name["members"]["ppEnabledExtensionNames"]["members"][hGFtikW]);
}();;
        }
        }();result.ppEnabledExtensionNames=temp_BPQvDlR;}();
return result;}

    json serialize_VkQueueFamilyProperties(VkQueueFamilyProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["queueFlags"]=[&]() {
    json return_dBZOJZh=json({});
    return serialize_VkQueueFlags(name.queueFlags);}();
result["members"]["queueCount"]=[&]() {
    json return_Hrlvacb=json({});
    return serialize_uint32_t(name.queueCount);}();
result["members"]["timestampValidBits"]=[&]() {
    json return_aElbftX=json({});
    return serialize_uint32_t(name.timestampValidBits);}();
result["members"]["minImageTransferGranularity"]=[&]() {
    json return_wdjanrT=json({});
    return serialize_VkExtent3D(name.minImageTransferGranularity);}();
return result;}

    VkQueueFamilyProperties deserialize_VkQueueFamilyProperties(json name){
        auto result=VkQueueFamilyProperties();
    
[&]() {
result.queueFlags=deserialize_VkQueueFlags(name["members"]["queueFlags"]);}();
[&]() {
result.queueCount=deserialize_uint32_t(name["members"]["queueCount"]);}();
[&]() {
result.timestampValidBits=deserialize_uint32_t(name["members"]["timestampValidBits"]);}();
[&]() {
result.minImageTransferGranularity=deserialize_VkExtent3D(name["members"]["minImageTransferGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties(VkPhysicalDeviceMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["memoryTypeCount"]=[&]() {
    json return_EiZIwFB=json({});
    return serialize_uint32_t(name.memoryTypeCount);}();
result["members"]["memoryTypes"]=[&]() {
    json return_fTqLlpy=json({});
    
        return_fTqLlpy["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_TYPES; i++){
            json temp;
            temp=[&]() {
    json return_IHheWXF=json({});
    return serialize_VkMemoryType(name.memoryTypes[i]);}();
            return_fTqLlpy["members"][std::to_string(i)].push_back(temp);
        }
        return return_fTqLlpy;
        }();
result["members"]["memoryHeapCount"]=[&]() {
    json return_AGPdPKF=json({});
    return serialize_uint32_t(name.memoryHeapCount);}();
result["members"]["memoryHeaps"]=[&]() {
    json return_JUVsCzs=json({});
    
        return_JUVsCzs["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_nTDTaUx=json({});
    return serialize_VkMemoryHeap(name.memoryHeaps[i]);}();
            return_JUVsCzs["members"][std::to_string(i)].push_back(temp);
        }
        return return_JUVsCzs;
        }();
return result;}

    VkPhysicalDeviceMemoryProperties deserialize_VkPhysicalDeviceMemoryProperties(json name){
        auto result=VkPhysicalDeviceMemoryProperties();
    
[&]() {
result.memoryTypeCount=deserialize_uint32_t(name["members"]["memoryTypeCount"]);}();
[&]() {

        for (int FvgYdlo=0; FvgYdlo < VK_MAX_MEMORY_TYPES; FvgYdlo++){
            [&]() {
result.memoryTypes[FvgYdlo]=deserialize_VkMemoryType(name["members"]["memoryTypes"]["members"][FvgYdlo]);}();;
        }
        }();
[&]() {
result.memoryHeapCount=deserialize_uint32_t(name["members"]["memoryHeapCount"]);}();
[&]() {

        for (int BlhrPrh=0; BlhrPrh < VK_MAX_MEMORY_HEAPS; BlhrPrh++){
            [&]() {
result.memoryHeaps[BlhrPrh]=deserialize_VkMemoryHeap(name["members"]["memoryHeaps"]["members"][BlhrPrh]);}();;
        }
        }();
return result;}

    json serialize_VkMemoryAllocateInfo(VkMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hTsZYZW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KgDntBe=json({});
    
        if (name.pNext==NULL){
            return_KgDntBe["null"]=true;
            return return_KgDntBe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allocationSize"]=[&]() {
    json return_XPiBWAz=json({});
    return_XPiBWAz=[&]() {
    json return_DTljPvp=json({});
    return serialize_uint64_t(name.allocationSize);}();return return_XPiBWAz;}();
result["members"]["memoryTypeIndex"]=[&]() {
    json return_sLVbjhG=json({});
    return serialize_uint32_t(name.memoryTypeIndex);}();
return result;}

    VkMemoryAllocateInfo deserialize_VkMemoryAllocateInfo(json name){
        auto result=VkMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_inCOPoW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_inCOPoW=NULL;
        }
    temp_inCOPoW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_inCOPoW;}();
[&]() {
[&]() {
result.allocationSize=deserialize_uint64_t(name["members"]["allocationSize"]);}();}();
[&]() {
result.memoryTypeIndex=deserialize_uint32_t(name["members"]["memoryTypeIndex"]);}();
return result;}

    json serialize_VkMemoryRequirements(VkMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_fCGxsCm=json({});
    return_fCGxsCm=[&]() {
    json return_mDAMybM=json({});
    return serialize_uint64_t(name.size);}();return return_fCGxsCm;}();
result["members"]["alignment"]=[&]() {
    json return_CWtzGXV=json({});
    return_CWtzGXV=[&]() {
    json return_alNCzkw=json({});
    return serialize_uint64_t(name.alignment);}();return return_CWtzGXV;}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_PbzyZvT=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryRequirements deserialize_VkMemoryRequirements(json name){
        auto result=VkMemoryRequirements();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.alignment=deserialize_uint64_t(name["members"]["alignment"]);}();}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties(VkSparseImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_YsTayDl=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["imageGranularity"]=[&]() {
    json return_GqjWbCu=json({});
    return serialize_VkExtent3D(name.imageGranularity);}();
result["members"]["flags"]=[&]() {
    json return_rzlEjqR=json({});
    return serialize_VkSparseImageFormatFlags(name.flags);}();
return result;}

    VkSparseImageFormatProperties deserialize_VkSparseImageFormatProperties(json name){
        auto result=VkSparseImageFormatProperties();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.imageGranularity=deserialize_VkExtent3D(name["members"]["imageGranularity"]);}();
[&]() {
result.flags=deserialize_VkSparseImageFormatFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements(VkSparseImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["formatProperties"]=[&]() {
    json return_mwrUWtx=json({});
    return serialize_VkSparseImageFormatProperties(name.formatProperties);}();
result["members"]["imageMipTailFirstLod"]=[&]() {
    json return_Xirjsep=json({});
    return serialize_uint32_t(name.imageMipTailFirstLod);}();
result["members"]["imageMipTailSize"]=[&]() {
    json return_auXgOxs=json({});
    return_auXgOxs=[&]() {
    json return_UotUDLR=json({});
    return serialize_uint64_t(name.imageMipTailSize);}();return return_auXgOxs;}();
result["members"]["imageMipTailOffset"]=[&]() {
    json return_PtQpMxx=json({});
    return_PtQpMxx=[&]() {
    json return_KcwBaNh=json({});
    return serialize_uint64_t(name.imageMipTailOffset);}();return return_PtQpMxx;}();
result["members"]["imageMipTailStride"]=[&]() {
    json return_UrykpNK=json({});
    return_UrykpNK=[&]() {
    json return_mHKqdhw=json({});
    return serialize_uint64_t(name.imageMipTailStride);}();return return_UrykpNK;}();
return result;}

    VkSparseImageMemoryRequirements deserialize_VkSparseImageMemoryRequirements(json name){
        auto result=VkSparseImageMemoryRequirements();
    
[&]() {
result.formatProperties=deserialize_VkSparseImageFormatProperties(name["members"]["formatProperties"]);}();
[&]() {
result.imageMipTailFirstLod=deserialize_uint32_t(name["members"]["imageMipTailFirstLod"]);}();
[&]() {
[&]() {
result.imageMipTailSize=deserialize_uint64_t(name["members"]["imageMipTailSize"]);}();}();
[&]() {
[&]() {
result.imageMipTailOffset=deserialize_uint64_t(name["members"]["imageMipTailOffset"]);}();}();
[&]() {
[&]() {
result.imageMipTailStride=deserialize_uint64_t(name["members"]["imageMipTailStride"]);}();}();
return result;}

    json serialize_VkMemoryType(VkMemoryType name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["propertyFlags"]=[&]() {
    json return_ZqChnMT=json({});
    return serialize_VkMemoryPropertyFlags(name.propertyFlags);}();
result["members"]["heapIndex"]=[&]() {
    json return_SrqZFMU=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkMemoryType deserialize_VkMemoryType(json name){
        auto result=VkMemoryType();
    
[&]() {
result.propertyFlags=deserialize_VkMemoryPropertyFlags(name["members"]["propertyFlags"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkMemoryHeap(VkMemoryHeap name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["size"]=[&]() {
    json return_oRmKaSm=json({});
    return_oRmKaSm=[&]() {
    json return_cPULSTe=json({});
    return serialize_uint64_t(name.size);}();return return_oRmKaSm;}();
result["members"]["flags"]=[&]() {
    json return_EQCutNJ=json({});
    return serialize_VkMemoryHeapFlags(name.flags);}();
return result;}

    VkMemoryHeap deserialize_VkMemoryHeap(json name){
        auto result=VkMemoryHeap();
    
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.flags=deserialize_VkMemoryHeapFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkMappedMemoryRange(VkMappedMemoryRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xOUyriF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QbwPdws=json({});
    
        if (name.pNext==NULL){
            return_QbwPdws["null"]=true;
            return return_QbwPdws;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_MnTRcdj=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_ZdSgweH=json({});
    return_ZdSgweH=[&]() {
    json return_Ujkkgqy=json({});
    return serialize_uint64_t(name.offset);}();return return_ZdSgweH;}();
result["members"]["size"]=[&]() {
    json return_ZVmLPnl=json({});
    return_ZVmLPnl=[&]() {
    json return_BWaNvOL=json({});
    return serialize_uint64_t(name.size);}();return return_ZVmLPnl;}();
return result;}

    VkMappedMemoryRange deserialize_VkMappedMemoryRange(json name){
        auto result=VkMappedMemoryRange();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iXdKMGE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iXdKMGE=NULL;
        }
    temp_iXdKMGE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iXdKMGE;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkFormatProperties(VkFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["linearTilingFeatures"]=[&]() {
    json return_ZsSvjCC=json({});
    return serialize_VkFormatFeatureFlags(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_ZRGIuqp=json({});
    return serialize_VkFormatFeatureFlags(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_lHqffYB=json({});
    return serialize_VkFormatFeatureFlags(name.bufferFeatures);}();
return result;}

    VkFormatProperties deserialize_VkFormatProperties(json name){
        auto result=VkFormatProperties();
    
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkImageFormatProperties(VkImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxExtent"]=[&]() {
    json return_vUzIkoi=json({});
    return serialize_VkExtent3D(name.maxExtent);}();
result["members"]["maxMipLevels"]=[&]() {
    json return_HzISftX=json({});
    return serialize_uint32_t(name.maxMipLevels);}();
result["members"]["maxArrayLayers"]=[&]() {
    json return_WkXYDKu=json({});
    return serialize_uint32_t(name.maxArrayLayers);}();
result["members"]["sampleCounts"]=[&]() {
    json return_IqgJuhr=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["maxResourceSize"]=[&]() {
    json return_FlEIltu=json({});
    return_FlEIltu=[&]() {
    json return_aIIcsOP=json({});
    return serialize_uint64_t(name.maxResourceSize);}();return return_FlEIltu;}();
return result;}

    VkImageFormatProperties deserialize_VkImageFormatProperties(json name){
        auto result=VkImageFormatProperties();
    
[&]() {
result.maxExtent=deserialize_VkExtent3D(name["members"]["maxExtent"]);}();
[&]() {
result.maxMipLevels=deserialize_uint32_t(name["members"]["maxMipLevels"]);}();
[&]() {
result.maxArrayLayers=deserialize_uint32_t(name["members"]["maxArrayLayers"]);}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
[&]() {
result.maxResourceSize=deserialize_uint64_t(name["members"]["maxResourceSize"]);}();}();
return result;}

    json serialize_VkDescriptorBufferInfo(VkDescriptorBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_DNyRchU=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_xXhYskk=json({});
    return_xXhYskk=[&]() {
    json return_OEDZwiw=json({});
    return serialize_uint64_t(name.offset);}();return return_xXhYskk;}();
result["members"]["range"]=[&]() {
    json return_cBLmYWn=json({});
    return_cBLmYWn=[&]() {
    json return_oTLhzHz=json({});
    return serialize_uint64_t(name.range);}();return return_cBLmYWn;}();
return result;}

    VkDescriptorBufferInfo deserialize_VkDescriptorBufferInfo(json name){
        auto result=VkDescriptorBufferInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkDescriptorImageInfo(VkDescriptorImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sampler"]=[&]() {
    json return_nPZWIre=json({});
    return serialize_VkSampler(name.sampler);}();
result["members"]["imageView"]=[&]() {
    json return_tUjmVjt=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_LbZPmLH=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkDescriptorImageInfo deserialize_VkDescriptorImageInfo(json name){
        auto result=VkDescriptorImageInfo();
    
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkWriteDescriptorSet(VkWriteDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yjmOJSq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GWeJNoc=json({});
    
        if (name.pNext==NULL){
            return_GWeJNoc["null"]=true;
            return return_GWeJNoc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dstSet"]=[&]() {
    json return_DiTldSE=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_PnktWny=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_zgIcGtX=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_HsyiaLP=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_OWLhQfi=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["pImageInfo"]=[&]() {
    json return_RZrsyMi=json({});
    
        if (name.pImageInfo==NULL){
            return_RZrsyMi["null"]=true;
            return return_RZrsyMi;
        }
        
        return_RZrsyMi["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_usqVOOP=json({});
    return serialize_VkDescriptorImageInfo(name.pImageInfo[i]);}();
            return_RZrsyMi["members"][std::to_string(i)].push_back(temp);
        }
        return return_RZrsyMi;
        }();
result["members"]["pBufferInfo"]=[&]() {
    json return_cIVuLZH=json({});
    
        if (name.pBufferInfo==NULL){
            return_cIVuLZH["null"]=true;
            return return_cIVuLZH;
        }
        
        return_cIVuLZH["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_SJKsVxD=json({});
    return serialize_VkDescriptorBufferInfo(name.pBufferInfo[i]);}();
            return_cIVuLZH["members"][std::to_string(i)].push_back(temp);
        }
        return return_cIVuLZH;
        }();
result["members"]["pTexelBufferView"]=[&]() {
    json return_yrVuhRy=json({});
    
        if (name.pTexelBufferView==NULL){
            return_yrVuhRy["null"]=true;
            return return_yrVuhRy;
        }
        
        return_yrVuhRy["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_CFUFTYA=json({});
    return serialize_VkBufferView(name.pTexelBufferView[i]);}();
            return_yrVuhRy["members"][std::to_string(i)].push_back(temp);
        }
        return return_yrVuhRy;
        }();
return result;}

    VkWriteDescriptorSet deserialize_VkWriteDescriptorSet(json name){
        auto result=VkWriteDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IgtnaTZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IgtnaTZ=NULL;
        }
    temp_IgtnaTZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IgtnaTZ;}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
VkDescriptorImageInfo* temp_bWsvPWo;[&]() {

        if (name["members"]["pImageInfo"].contains("null")){
        temp_bWsvPWo=NULL;
        }
    temp_bWsvPWo=(VkDescriptorImageInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorImageInfo));
        for (int wOgCvao=0; wOgCvao < result.descriptorCount; wOgCvao++){
            [&]() {
temp_bWsvPWo[wOgCvao]=deserialize_VkDescriptorImageInfo(name["members"]["pImageInfo"]["members"][wOgCvao]);}();;
        }
        }();result.pImageInfo=temp_bWsvPWo;}();
[&]() {
VkDescriptorBufferInfo* temp_MNaQcHw;[&]() {

        if (name["members"]["pBufferInfo"].contains("null")){
        temp_MNaQcHw=NULL;
        }
    temp_MNaQcHw=(VkDescriptorBufferInfo*)malloc(result.descriptorCount*sizeof(VkDescriptorBufferInfo));
        for (int cCowpKW=0; cCowpKW < result.descriptorCount; cCowpKW++){
            [&]() {
temp_MNaQcHw[cCowpKW]=deserialize_VkDescriptorBufferInfo(name["members"]["pBufferInfo"]["members"][cCowpKW]);}();;
        }
        }();result.pBufferInfo=temp_MNaQcHw;}();
[&]() {
VkBufferView* temp_qDTEFzh;[&]() {

        if (name["members"]["pTexelBufferView"].contains("null")){
        temp_qDTEFzh=NULL;
        }
    temp_qDTEFzh=(VkBufferView*)malloc(result.descriptorCount*sizeof(VkBufferView));
        for (int eQNUUVK=0; eQNUUVK < result.descriptorCount; eQNUUVK++){
            [&]() {
temp_qDTEFzh[eQNUUVK]=deserialize_VkBufferView(name["members"]["pTexelBufferView"]["members"][eQNUUVK]);}();;
        }
        }();result.pTexelBufferView=temp_qDTEFzh;}();
return result;}

    json serialize_VkCopyDescriptorSet(VkCopyDescriptorSet name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YJqDMJs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YgnAZAI=json({});
    
        if (name.pNext==NULL){
            return_YgnAZAI["null"]=true;
            return return_YgnAZAI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSet"]=[&]() {
    json return_iwaZzbo=json({});
    return serialize_VkDescriptorSet(name.srcSet);}();
result["members"]["srcBinding"]=[&]() {
    json return_uVptZhC=json({});
    return serialize_uint32_t(name.srcBinding);}();
result["members"]["srcArrayElement"]=[&]() {
    json return_kNEYLna=json({});
    return serialize_uint32_t(name.srcArrayElement);}();
result["members"]["dstSet"]=[&]() {
    json return_ijZQtBU=json({});
    return serialize_VkDescriptorSet(name.dstSet);}();
result["members"]["dstBinding"]=[&]() {
    json return_hxKYhQb=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_RqKZQlz=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_wDqZbRn=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkCopyDescriptorSet deserialize_VkCopyDescriptorSet(json name){
        auto result=VkCopyDescriptorSet();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GQrerwT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GQrerwT=NULL;
        }
    temp_GQrerwT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GQrerwT;}();
[&]() {
result.srcSet=deserialize_VkDescriptorSet(name["members"]["srcSet"]);}();
[&]() {
result.srcBinding=deserialize_uint32_t(name["members"]["srcBinding"]);}();
[&]() {
result.srcArrayElement=deserialize_uint32_t(name["members"]["srcArrayElement"]);}();
[&]() {
result.dstSet=deserialize_VkDescriptorSet(name["members"]["dstSet"]);}();
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkBufferUsageFlags2CreateInfoKHR(VkBufferUsageFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yDRRSHo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gCzDDNN=json({});
    
        if (name.pNext==NULL){
            return_gCzDDNN["null"]=true;
            return return_gCzDDNN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_XHrisne=json({});
    return serialize_VkBufferUsageFlags2KHR(name.usage);}();
return result;}

    VkBufferUsageFlags2CreateInfoKHR deserialize_VkBufferUsageFlags2CreateInfoKHR(json name){
        auto result=VkBufferUsageFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fdSOKIj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fdSOKIj=NULL;
        }
    temp_fdSOKIj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fdSOKIj;}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags2KHR(name["members"]["usage"]);}();
return result;}

    json serialize_VkBufferCreateInfo(VkBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VPzyQBP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GXVtXqm=json({});
    
        if (name.pNext==NULL){
            return_GXVtXqm["null"]=true;
            return return_GXVtXqm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nanVhJO=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["size"]=[&]() {
    json return_sBtOlYI=json({});
    return_sBtOlYI=[&]() {
    json return_sgtIezf=json({});
    return serialize_uint64_t(name.size);}();return return_sBtOlYI;}();
result["members"]["usage"]=[&]() {
    json return_MLMXQQZ=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_BjCAHyc=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_HOeLHnZ=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_HfyPnxv=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_HfyPnxv["null"]=true;
            return return_HfyPnxv;
        }
        
        return_HfyPnxv["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_kuhdUIH=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_HfyPnxv["members"][std::to_string(i)].push_back(temp);
        }
        return return_HfyPnxv;
        }();
return result;}

    VkBufferCreateInfo deserialize_VkBufferCreateInfo(json name){
        auto result=VkBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RpkOGQC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RpkOGQC=NULL;
        }
    temp_RpkOGQC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RpkOGQC;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_hzwnsHN;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_hzwnsHN=NULL;
        }
    temp_hzwnsHN=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int igwIwYZ=0; igwIwYZ < result.queueFamilyIndexCount; igwIwYZ++){
            [&]() {
temp_hzwnsHN[igwIwYZ]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][igwIwYZ]);}();;
        }
        }();result.pQueueFamilyIndices=temp_hzwnsHN;}();
return result;}

    json serialize_VkBufferViewCreateInfo(VkBufferViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xfJreJn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CwssfGg=json({});
    
        if (name.pNext==NULL){
            return_CwssfGg["null"]=true;
            return return_CwssfGg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sCEHUfo=json({});
    return serialize_VkBufferViewCreateFlags(name.flags);}();
result["members"]["buffer"]=[&]() {
    json return_PKJUmXk=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["format"]=[&]() {
    json return_PUzebcZ=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_PdrsdPW=json({});
    return_PdrsdPW=[&]() {
    json return_TMDZqzA=json({});
    return serialize_uint64_t(name.offset);}();return return_PdrsdPW;}();
result["members"]["range"]=[&]() {
    json return_YNVtQrP=json({});
    return_YNVtQrP=[&]() {
    json return_yjiiriA=json({});
    return serialize_uint64_t(name.range);}();return return_YNVtQrP;}();
return result;}

    VkBufferViewCreateInfo deserialize_VkBufferViewCreateInfo(json name){
        auto result=VkBufferViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TFDNbEU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TFDNbEU=NULL;
        }
    temp_TFDNbEU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TFDNbEU;}();
[&]() {
result.flags=deserialize_VkBufferViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
return result;}

    json serialize_VkImageSubresource(VkImageSubresource name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_UEngEpy=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_SXcgUqd=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["arrayLayer"]=[&]() {
    json return_hjujLnm=json({});
    return serialize_uint32_t(name.arrayLayer);}();
return result;}

    VkImageSubresource deserialize_VkImageSubresource(json name){
        auto result=VkImageSubresource();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.arrayLayer=deserialize_uint32_t(name["members"]["arrayLayer"]);}();
return result;}

    json serialize_VkImageSubresourceLayers(VkImageSubresourceLayers name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_EApCrbE=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["mipLevel"]=[&]() {
    json return_bIcyezJ=json({});
    return serialize_uint32_t(name.mipLevel);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_RAFKWSh=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_lXazRUt=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceLayers deserialize_VkImageSubresourceLayers(json name){
        auto result=VkImageSubresourceLayers();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.mipLevel=deserialize_uint32_t(name["members"]["mipLevel"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkImageSubresourceRange(VkImageSubresourceRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_smPBKZW=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["baseMipLevel"]=[&]() {
    json return_edBDQYD=json({});
    return serialize_uint32_t(name.baseMipLevel);}();
result["members"]["levelCount"]=[&]() {
    json return_RMhKDCK=json({});
    return serialize_uint32_t(name.levelCount);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_wXFXSRM=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["layerCount"]=[&]() {
    json return_lSAIaUS=json({});
    return serialize_uint32_t(name.layerCount);}();
return result;}

    VkImageSubresourceRange deserialize_VkImageSubresourceRange(json name){
        auto result=VkImageSubresourceRange();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.baseMipLevel=deserialize_uint32_t(name["members"]["baseMipLevel"]);}();
[&]() {
result.levelCount=deserialize_uint32_t(name["members"]["levelCount"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
return result;}

    json serialize_VkMemoryBarrier(VkMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QVRDndg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EWFlIec=json({});
    
        if (name.pNext==NULL){
            return_EWFlIec["null"]=true;
            return return_EWFlIec;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_MbZamHO=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_xBhLdPo=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier deserialize_VkMemoryBarrier(json name){
        auto result=VkMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IxGuBOa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IxGuBOa=NULL;
        }
    temp_IxGuBOa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IxGuBOa;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier(VkBufferMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AYsYuEJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eLSOArc=json({});
    
        if (name.pNext==NULL){
            return_eLSOArc["null"]=true;
            return return_eLSOArc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_xVowkJd=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_YDMMOsa=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_bXnSBtH=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_HiEHttO=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_AKXDPaL=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_gCPFHcw=json({});
    return_gCPFHcw=[&]() {
    json return_KkpVPEc=json({});
    return serialize_uint64_t(name.offset);}();return return_gCPFHcw;}();
result["members"]["size"]=[&]() {
    json return_yfmAwNi=json({});
    return_yfmAwNi=[&]() {
    json return_bxDJEAP=json({});
    return serialize_uint64_t(name.size);}();return return_yfmAwNi;}();
return result;}

    VkBufferMemoryBarrier deserialize_VkBufferMemoryBarrier(json name){
        auto result=VkBufferMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TbIbRrR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TbIbRrR=NULL;
        }
    temp_TbIbRrR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TbIbRrR;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageMemoryBarrier(VkImageMemoryBarrier name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ReREwix=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kEUKRrj=json({});
    
        if (name.pNext==NULL){
            return_kEUKRrj["null"]=true;
            return return_kEUKRrj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcAccessMask"]=[&]() {
    json return_vSLLwJo=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_LBcpsAM=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_iRlhDvv=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_HmxcTyZ=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_NYOlduX=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_WnTdRHc=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_fTxipeB=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_pSBBIbm=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier deserialize_VkImageMemoryBarrier(json name){
        auto result=VkImageMemoryBarrier();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZnWzAod;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZnWzAod=NULL;
        }
    temp_ZnWzAod=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZnWzAod;}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageCreateInfo(VkImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nlixPUr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kQFPFnO=json({});
    
        if (name.pNext==NULL){
            return_kQFPFnO["null"]=true;
            return return_kQFPFnO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_zuaGVCD=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["imageType"]=[&]() {
    json return_nyHQnID=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["format"]=[&]() {
    json return_xlmNtVZ=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["extent"]=[&]() {
    json return_nxNqWdd=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["mipLevels"]=[&]() {
    json return_TwtMTzZ=json({});
    return serialize_uint32_t(name.mipLevels);}();
result["members"]["arrayLayers"]=[&]() {
    json return_vNBDJHd=json({});
    return serialize_uint32_t(name.arrayLayers);}();
result["members"]["samples"]=[&]() {
    json return_eqIiCAE=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["tiling"]=[&]() {
    json return_lVhCcKY=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_HoBPIlJ=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["sharingMode"]=[&]() {
    json return_IYGPEgX=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_joxBvic=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_esLLXgU=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_esLLXgU["null"]=true;
            return return_esLLXgU;
        }
        
        return_esLLXgU["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_JmMAluG=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_esLLXgU["members"][std::to_string(i)].push_back(temp);
        }
        return return_esLLXgU;
        }();
result["members"]["initialLayout"]=[&]() {
    json return_OiRFezh=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
return result;}

    VkImageCreateInfo deserialize_VkImageCreateInfo(json name){
        auto result=VkImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YPsaZxl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YPsaZxl=NULL;
        }
    temp_YPsaZxl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YPsaZxl;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.mipLevels=deserialize_uint32_t(name["members"]["mipLevels"]);}();
[&]() {
result.arrayLayers=deserialize_uint32_t(name["members"]["arrayLayers"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_oHkHVkJ;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_oHkHVkJ=NULL;
        }
    temp_oHkHVkJ=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int cVkNfaA=0; cVkNfaA < result.queueFamilyIndexCount; cVkNfaA++){
            [&]() {
temp_oHkHVkJ[cVkNfaA]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][cVkNfaA]);}();;
        }
        }();result.pQueueFamilyIndices=temp_oHkHVkJ;}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout(VkSubresourceLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_yJCZbjn=json({});
    return_yJCZbjn=[&]() {
    json return_pMnolQL=json({});
    return serialize_uint64_t(name.offset);}();return return_yJCZbjn;}();
result["members"]["size"]=[&]() {
    json return_CshkcwB=json({});
    return_CshkcwB=[&]() {
    json return_PzlvTPg=json({});
    return serialize_uint64_t(name.size);}();return return_CshkcwB;}();
result["members"]["rowPitch"]=[&]() {
    json return_KCpdeiI=json({});
    return_KCpdeiI=[&]() {
    json return_BuNnNkq=json({});
    return serialize_uint64_t(name.rowPitch);}();return return_KCpdeiI;}();
result["members"]["arrayPitch"]=[&]() {
    json return_AhqRWHY=json({});
    return_AhqRWHY=[&]() {
    json return_ljQjhvX=json({});
    return serialize_uint64_t(name.arrayPitch);}();return return_AhqRWHY;}();
result["members"]["depthPitch"]=[&]() {
    json return_FaUeDXX=json({});
    return_FaUeDXX=[&]() {
    json return_mytdLIA=json({});
    return serialize_uint64_t(name.depthPitch);}();return return_FaUeDXX;}();
return result;}

    VkSubresourceLayout deserialize_VkSubresourceLayout(json name){
        auto result=VkSubresourceLayout();
    
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.rowPitch=deserialize_uint64_t(name["members"]["rowPitch"]);}();}();
[&]() {
[&]() {
result.arrayPitch=deserialize_uint64_t(name["members"]["arrayPitch"]);}();}();
[&]() {
[&]() {
result.depthPitch=deserialize_uint64_t(name["members"]["depthPitch"]);}();}();
return result;}

    json serialize_VkImageViewCreateInfo(VkImageViewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LLeznUy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wTlFiFR=json({});
    
        if (name.pNext==NULL){
            return_wTlFiFR["null"]=true;
            return return_wTlFiFR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gmkFzdd=json({});
    return serialize_VkImageViewCreateFlags(name.flags);}();
result["members"]["image"]=[&]() {
    json return_eAUujKv=json({});
    return serialize_VkImage(name.image);}();
result["members"]["viewType"]=[&]() {
    json return_SLbZhfc=json({});
    return serialize_VkImageViewType(name.viewType);}();
result["members"]["format"]=[&]() {
    json return_ItdaadB=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["components"]=[&]() {
    json return_Rmdcjol=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["subresourceRange"]=[&]() {
    json return_StMmGba=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageViewCreateInfo deserialize_VkImageViewCreateInfo(json name){
        auto result=VkImageViewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YyZVkRo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YyZVkRo=NULL;
        }
    temp_YyZVkRo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YyZVkRo;}();
[&]() {
result.flags=deserialize_VkImageViewCreateFlags(name["members"]["flags"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.viewType=deserialize_VkImageViewType(name["members"]["viewType"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferCopy(VkBufferCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcOffset"]=[&]() {
    json return_sYQkRWH=json({});
    return_sYQkRWH=[&]() {
    json return_nZydEXd=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_sYQkRWH;}();
result["members"]["dstOffset"]=[&]() {
    json return_WyKllSU=json({});
    return_WyKllSU=[&]() {
    json return_yrmcHAU=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_WyKllSU;}();
result["members"]["size"]=[&]() {
    json return_lKNcpjc=json({});
    return_lKNcpjc=[&]() {
    json return_jUQvJKR=json({});
    return serialize_uint64_t(name.size);}();return return_lKNcpjc;}();
return result;}

    VkBufferCopy deserialize_VkBufferCopy(json name){
        auto result=VkBufferCopy();
    
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkSparseMemoryBind(VkSparseMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["resourceOffset"]=[&]() {
    json return_KELypjR=json({});
    return_KELypjR=[&]() {
    json return_ZbxTHQJ=json({});
    return serialize_uint64_t(name.resourceOffset);}();return return_KELypjR;}();
result["members"]["size"]=[&]() {
    json return_TUqhBMA=json({});
    return_TUqhBMA=[&]() {
    json return_FfpCDUF=json({});
    return serialize_uint64_t(name.size);}();return return_TUqhBMA;}();
result["members"]["memory"]=[&]() {
    json return_DQmSSIY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_pHGiYbF=json({});
    return_pHGiYbF=[&]() {
    json return_GLyRurl=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_pHGiYbF;}();
result["members"]["flags"]=[&]() {
    json return_NUUUyQR=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseMemoryBind deserialize_VkSparseMemoryBind(json name){
        auto result=VkSparseMemoryBind();
    
[&]() {
[&]() {
result.resourceOffset=deserialize_uint64_t(name["members"]["resourceOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseImageMemoryBind(VkSparseImageMemoryBind name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subresource"]=[&]() {
    json return_ZtsjAdR=json({});
    return serialize_VkImageSubresource(name.subresource);}();
result["members"]["offset"]=[&]() {
    json return_koDqigC=json({});
    return serialize_VkOffset3D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_sxTglGP=json({});
    return serialize_VkExtent3D(name.extent);}();
result["members"]["memory"]=[&]() {
    json return_YtLNlCG=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_rUyitVf=json({});
    return_rUyitVf=[&]() {
    json return_WHXmEsb=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_rUyitVf;}();
result["members"]["flags"]=[&]() {
    json return_CqPvheA=json({});
    return serialize_VkSparseMemoryBindFlags(name.flags);}();
return result;}

    VkSparseImageMemoryBind deserialize_VkSparseImageMemoryBind(json name){
        auto result=VkSparseImageMemoryBind();
    
[&]() {
result.subresource=deserialize_VkImageSubresource(name["members"]["subresource"]);}();
[&]() {
result.offset=deserialize_VkOffset3D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.flags=deserialize_VkSparseMemoryBindFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkSparseBufferMemoryBindInfo(VkSparseBufferMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_fLWPMsQ=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["bindCount"]=[&]() {
    json return_hinTQTn=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_slpifBi=json({});
    
        if (name.pBinds==NULL){
            return_slpifBi["null"]=true;
            return return_slpifBi;
        }
        
        return_slpifBi["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_gOouvVL=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_slpifBi["members"][std::to_string(i)].push_back(temp);
        }
        return return_slpifBi;
        }();
return result;}

    VkSparseBufferMemoryBindInfo deserialize_VkSparseBufferMemoryBindInfo(json name){
        auto result=VkSparseBufferMemoryBindInfo();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_WHBIGrH;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_WHBIGrH=NULL;
        }
    temp_WHBIGrH=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int ZOKkMEn=0; ZOKkMEn < result.bindCount; ZOKkMEn++){
            [&]() {
temp_WHBIGrH[ZOKkMEn]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][ZOKkMEn]);}();;
        }
        }();result.pBinds=temp_WHBIGrH;}();
return result;}

    json serialize_VkSparseImageOpaqueMemoryBindInfo(VkSparseImageOpaqueMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_gJQfRgs=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_RjiLnBC=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_nkatMeO=json({});
    
        if (name.pBinds==NULL){
            return_nkatMeO["null"]=true;
            return return_nkatMeO;
        }
        
        return_nkatMeO["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_QBzsKXH=json({});
    return serialize_VkSparseMemoryBind(name.pBinds[i]);}();
            return_nkatMeO["members"][std::to_string(i)].push_back(temp);
        }
        return return_nkatMeO;
        }();
return result;}

    VkSparseImageOpaqueMemoryBindInfo deserialize_VkSparseImageOpaqueMemoryBindInfo(json name){
        auto result=VkSparseImageOpaqueMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseMemoryBind* temp_kchtkMy;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_kchtkMy=NULL;
        }
    temp_kchtkMy=(VkSparseMemoryBind*)malloc(result.bindCount*sizeof(VkSparseMemoryBind));
        for (int YFxsKOn=0; YFxsKOn < result.bindCount; YFxsKOn++){
            [&]() {
temp_kchtkMy[YFxsKOn]=deserialize_VkSparseMemoryBind(name["members"]["pBinds"]["members"][YFxsKOn]);}();;
        }
        }();result.pBinds=temp_kchtkMy;}();
return result;}

    json serialize_VkSparseImageMemoryBindInfo(VkSparseImageMemoryBindInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["image"]=[&]() {
    json return_YRRqFFm=json({});
    return serialize_VkImage(name.image);}();
result["members"]["bindCount"]=[&]() {
    json return_pMvbOGj=json({});
    return serialize_uint32_t(name.bindCount);}();
result["members"]["pBinds"]=[&]() {
    json return_wSzmgWu=json({});
    
        if (name.pBinds==NULL){
            return_wSzmgWu["null"]=true;
            return return_wSzmgWu;
        }
        
        return_wSzmgWu["members"]={};
        for(int i=0; i < name.bindCount; i++){
            json temp;
            temp=[&]() {
    json return_hWEkWAG=json({});
    return serialize_VkSparseImageMemoryBind(name.pBinds[i]);}();
            return_wSzmgWu["members"][std::to_string(i)].push_back(temp);
        }
        return return_wSzmgWu;
        }();
return result;}

    VkSparseImageMemoryBindInfo deserialize_VkSparseImageMemoryBindInfo(json name){
        auto result=VkSparseImageMemoryBindInfo();
    
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.bindCount=deserialize_uint32_t(name["members"]["bindCount"]);}();
[&]() {
VkSparseImageMemoryBind* temp_ABSIZWd;[&]() {

        if (name["members"]["pBinds"].contains("null")){
        temp_ABSIZWd=NULL;
        }
    temp_ABSIZWd=(VkSparseImageMemoryBind*)malloc(result.bindCount*sizeof(VkSparseImageMemoryBind));
        for (int iQsYimq=0; iQsYimq < result.bindCount; iQsYimq++){
            [&]() {
temp_ABSIZWd[iQsYimq]=deserialize_VkSparseImageMemoryBind(name["members"]["pBinds"]["members"][iQsYimq]);}();;
        }
        }();result.pBinds=temp_ABSIZWd;}();
return result;}

    json serialize_VkBindSparseInfo(VkBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sugtFIk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hsmLRdI=json({});
    
        if (name.pNext==NULL){
            return_hsmLRdI["null"]=true;
            return return_hsmLRdI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_mEURVtS=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_RmpaIXK=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_RmpaIXK["null"]=true;
            return return_RmpaIXK;
        }
        
        return_RmpaIXK["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_iJiCQSD=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_RmpaIXK["members"][std::to_string(i)].push_back(temp);
        }
        return return_RmpaIXK;
        }();
result["members"]["bufferBindCount"]=[&]() {
    json return_SdNVhbe=json({});
    return serialize_uint32_t(name.bufferBindCount);}();
result["members"]["pBufferBinds"]=[&]() {
    json return_UTolBxY=json({});
    
        if (name.pBufferBinds==NULL){
            return_UTolBxY["null"]=true;
            return return_UTolBxY;
        }
        
        return_UTolBxY["members"]={};
        for(int i=0; i < name.bufferBindCount; i++){
            json temp;
            temp=[&]() {
    json return_rsDQnJM=json({});
    return serialize_VkSparseBufferMemoryBindInfo(name.pBufferBinds[i]);}();
            return_UTolBxY["members"][std::to_string(i)].push_back(temp);
        }
        return return_UTolBxY;
        }();
result["members"]["imageOpaqueBindCount"]=[&]() {
    json return_AxuzdvH=json({});
    return serialize_uint32_t(name.imageOpaqueBindCount);}();
result["members"]["pImageOpaqueBinds"]=[&]() {
    json return_jVENQjx=json({});
    
        if (name.pImageOpaqueBinds==NULL){
            return_jVENQjx["null"]=true;
            return return_jVENQjx;
        }
        
        return_jVENQjx["members"]={};
        for(int i=0; i < name.imageOpaqueBindCount; i++){
            json temp;
            temp=[&]() {
    json return_qXTrxLD=json({});
    return serialize_VkSparseImageOpaqueMemoryBindInfo(name.pImageOpaqueBinds[i]);}();
            return_jVENQjx["members"][std::to_string(i)].push_back(temp);
        }
        return return_jVENQjx;
        }();
result["members"]["imageBindCount"]=[&]() {
    json return_KJKftKC=json({});
    return serialize_uint32_t(name.imageBindCount);}();
result["members"]["pImageBinds"]=[&]() {
    json return_XkCFvTj=json({});
    
        if (name.pImageBinds==NULL){
            return_XkCFvTj["null"]=true;
            return return_XkCFvTj;
        }
        
        return_XkCFvTj["members"]={};
        for(int i=0; i < name.imageBindCount; i++){
            json temp;
            temp=[&]() {
    json return_TKLrTLq=json({});
    return serialize_VkSparseImageMemoryBindInfo(name.pImageBinds[i]);}();
            return_XkCFvTj["members"][std::to_string(i)].push_back(temp);
        }
        return return_XkCFvTj;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_gRceUKt=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_EJDZwMp=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_EJDZwMp["null"]=true;
            return return_EJDZwMp;
        }
        
        return_EJDZwMp["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_YZYcqXG=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_EJDZwMp["members"][std::to_string(i)].push_back(temp);
        }
        return return_EJDZwMp;
        }();
return result;}

    VkBindSparseInfo deserialize_VkBindSparseInfo(json name){
        auto result=VkBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JMXbanl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JMXbanl=NULL;
        }
    temp_JMXbanl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JMXbanl;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_EkkPtSP;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_EkkPtSP=NULL;
        }
    temp_EkkPtSP=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int SbbwhsA=0; SbbwhsA < result.waitSemaphoreCount; SbbwhsA++){
            [&]() {
temp_EkkPtSP[SbbwhsA]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][SbbwhsA]);}();;
        }
        }();result.pWaitSemaphores=temp_EkkPtSP;}();
[&]() {
result.bufferBindCount=deserialize_uint32_t(name["members"]["bufferBindCount"]);}();
[&]() {
VkSparseBufferMemoryBindInfo* temp_mCqSJkp;[&]() {

        if (name["members"]["pBufferBinds"].contains("null")){
        temp_mCqSJkp=NULL;
        }
    temp_mCqSJkp=(VkSparseBufferMemoryBindInfo*)malloc(result.bufferBindCount*sizeof(VkSparseBufferMemoryBindInfo));
        for (int dDQqbMh=0; dDQqbMh < result.bufferBindCount; dDQqbMh++){
            [&]() {
temp_mCqSJkp[dDQqbMh]=deserialize_VkSparseBufferMemoryBindInfo(name["members"]["pBufferBinds"]["members"][dDQqbMh]);}();;
        }
        }();result.pBufferBinds=temp_mCqSJkp;}();
[&]() {
result.imageOpaqueBindCount=deserialize_uint32_t(name["members"]["imageOpaqueBindCount"]);}();
[&]() {
VkSparseImageOpaqueMemoryBindInfo* temp_zPGvzOm;[&]() {

        if (name["members"]["pImageOpaqueBinds"].contains("null")){
        temp_zPGvzOm=NULL;
        }
    temp_zPGvzOm=(VkSparseImageOpaqueMemoryBindInfo*)malloc(result.imageOpaqueBindCount*sizeof(VkSparseImageOpaqueMemoryBindInfo));
        for (int jtfxMJe=0; jtfxMJe < result.imageOpaqueBindCount; jtfxMJe++){
            [&]() {
temp_zPGvzOm[jtfxMJe]=deserialize_VkSparseImageOpaqueMemoryBindInfo(name["members"]["pImageOpaqueBinds"]["members"][jtfxMJe]);}();;
        }
        }();result.pImageOpaqueBinds=temp_zPGvzOm;}();
[&]() {
result.imageBindCount=deserialize_uint32_t(name["members"]["imageBindCount"]);}();
[&]() {
VkSparseImageMemoryBindInfo* temp_QMnNrhU;[&]() {

        if (name["members"]["pImageBinds"].contains("null")){
        temp_QMnNrhU=NULL;
        }
    temp_QMnNrhU=(VkSparseImageMemoryBindInfo*)malloc(result.imageBindCount*sizeof(VkSparseImageMemoryBindInfo));
        for (int ONaXtev=0; ONaXtev < result.imageBindCount; ONaXtev++){
            [&]() {
temp_QMnNrhU[ONaXtev]=deserialize_VkSparseImageMemoryBindInfo(name["members"]["pImageBinds"]["members"][ONaXtev]);}();;
        }
        }();result.pImageBinds=temp_QMnNrhU;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_szQQNSV;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_szQQNSV=NULL;
        }
    temp_szQQNSV=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int CtFvAGx=0; CtFvAGx < result.signalSemaphoreCount; CtFvAGx++){
            [&]() {
temp_szQQNSV[CtFvAGx]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][CtFvAGx]);}();;
        }
        }();result.pSignalSemaphores=temp_szQQNSV;}();
return result;}

    json serialize_VkImageCopy(VkImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_JVtRUHc=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_yduBHgj=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_xNFuUMU=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_AlWPiYG=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_DumdNBC=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy deserialize_VkImageCopy(json name){
        auto result=VkImageCopy();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit(VkImageBlit name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_HpRgMhg=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_iMkIjLh=json({});
    
        return_iMkIjLh["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_XDNCdWr=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_iMkIjLh["members"][std::to_string(i)].push_back(temp);
        }
        return return_iMkIjLh;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_hoWuWoO=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_IjijRit=json({});
    
        return_IjijRit["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_gszrDsJ=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_IjijRit["members"][std::to_string(i)].push_back(temp);
        }
        return return_IjijRit;
        }();
return result;}

    VkImageBlit deserialize_VkImageBlit(json name){
        auto result=VkImageBlit();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int GQDoBJZ=0; GQDoBJZ < 2; GQDoBJZ++){
            [&]() {
result.srcOffsets[GQDoBJZ]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][GQDoBJZ]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int ZaGEdhb=0; ZaGEdhb < 2; ZaGEdhb++){
            [&]() {
result.dstOffsets[ZaGEdhb]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][ZaGEdhb]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy(VkBufferImageCopy name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferOffset"]=[&]() {
    json return_zKSVfGg=json({});
    return_zKSVfGg=[&]() {
    json return_tFZdSyU=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_zKSVfGg;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_aIzTPCu=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_jYsvDld=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_BNcKlxu=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_UaLXvAR=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_sEKzjQb=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy deserialize_VkBufferImageCopy(json name){
        auto result=VkBufferImageCopy();
    
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryIndirectCommandNV(VkCopyMemoryIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_eZbRgVo=json({});
    return_eZbRgVo=[&]() {
    json return_yOsqbIA=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_eZbRgVo;}();
result["members"]["dstAddress"]=[&]() {
    json return_kFxdjqe=json({});
    return_kFxdjqe=[&]() {
    json return_xZGZDRh=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_kFxdjqe;}();
result["members"]["size"]=[&]() {
    json return_RGiwMuE=json({});
    return_RGiwMuE=[&]() {
    json return_CfHqbJw=json({});
    return serialize_uint64_t(name.size);}();return return_RGiwMuE;}();
return result;}

    VkCopyMemoryIndirectCommandNV deserialize_VkCopyMemoryIndirectCommandNV(json name){
        auto result=VkCopyMemoryIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkCopyMemoryToImageIndirectCommandNV(VkCopyMemoryToImageIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_yjZhcdP=json({});
    return_yjZhcdP=[&]() {
    json return_lDKbLJh=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_yjZhcdP;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_eyDzNCc=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_PmqHBfq=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_HfQUWvh=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_RTYeHTU=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_wyQBzgw=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkCopyMemoryToImageIndirectCommandNV deserialize_VkCopyMemoryToImageIndirectCommandNV(json name){
        auto result=VkCopyMemoryToImageIndirectCommandNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve(VkImageResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubresource"]=[&]() {
    json return_kEKGVCr=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_WgtCKEb=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_SxPNOTq=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_KNGllTX=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_yBNsGis=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve deserialize_VkImageResolve(json name){
        auto result=VkImageResolve();
    
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkShaderModuleCreateInfo(VkShaderModuleCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oMxKocn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WVDGjqm=json({});
    
        if (name.pNext==NULL){
            return_WVDGjqm["null"]=true;
            return return_WVDGjqm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_uSpvTxH=json({});
    return serialize_VkShaderModuleCreateFlags(name.flags);}();
result["members"]["codeSize"]=[&]() {
    json return_kGavxNV=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_GByGJHY=json({});
    
        if (name.pCode==NULL){
            return_GByGJHY["null"]=true;
            return return_GByGJHY;
        }
        
        return_GByGJHY["members"]={};
        for(int i=0; i < name.codeSize / 4; i++){
            json temp;
            temp=[&]() {
    json return_kbEUNCL=json({});
    return serialize_uint32_t(name.pCode[i]);}();
            return_GByGJHY["members"][std::to_string(i)].push_back(temp);
        }
        return return_GByGJHY;
        }();
return result;}

    VkShaderModuleCreateInfo deserialize_VkShaderModuleCreateInfo(json name){
        auto result=VkShaderModuleCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kBPtoMt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kBPtoMt=NULL;
        }
    temp_kBPtoMt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kBPtoMt;}();
[&]() {
result.flags=deserialize_VkShaderModuleCreateFlags(name["members"]["flags"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
uint32_t* temp_hVnqPtf;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_hVnqPtf=NULL;
        }
    temp_hVnqPtf=(uint32_t*)malloc(result.codeSize / 4*sizeof(uint32_t));
        for (int MFpPoRc=0; MFpPoRc < result.codeSize / 4; MFpPoRc++){
            [&]() {
temp_hVnqPtf[MFpPoRc]=deserialize_uint32_t(name["members"]["pCode"]["members"][MFpPoRc]);}();;
        }
        }();result.pCode=temp_hVnqPtf;}();
return result;}

    json serialize_VkDescriptorSetLayoutBinding(VkDescriptorSetLayoutBinding name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_fgchLnl=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["descriptorType"]=[&]() {
    json return_BRzCdAq=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["descriptorCount"]=[&]() {
    json return_iqcsdLG=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["stageFlags"]=[&]() {
    json return_tmpDsBp=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["pImmutableSamplers"]=[&]() {
    json return_FYaoMPp=json({});
    
        if (name.pImmutableSamplers==NULL){
            return_FYaoMPp["null"]=true;
            return return_FYaoMPp;
        }
        
        return_FYaoMPp["members"]={};
        for(int i=0; i < name.descriptorCount; i++){
            json temp;
            temp=[&]() {
    json return_IWqQaUM=json({});
    return serialize_VkSampler(name.pImmutableSamplers[i]);}();
            return_FYaoMPp["members"][std::to_string(i)].push_back(temp);
        }
        return return_FYaoMPp;
        }();
return result;}

    VkDescriptorSetLayoutBinding deserialize_VkDescriptorSetLayoutBinding(json name){
        auto result=VkDescriptorSetLayoutBinding();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
VkSampler* temp_DNzCkaG;[&]() {

        if (name["members"]["pImmutableSamplers"].contains("null")){
        temp_DNzCkaG=NULL;
        }
    temp_DNzCkaG=(VkSampler*)malloc(result.descriptorCount*sizeof(VkSampler));
        for (int FRObeVB=0; FRObeVB < result.descriptorCount; FRObeVB++){
            [&]() {
temp_DNzCkaG[FRObeVB]=deserialize_VkSampler(name["members"]["pImmutableSamplers"]["members"][FRObeVB]);}();;
        }
        }();result.pImmutableSamplers=temp_DNzCkaG;}();
return result;}

    json serialize_VkDescriptorSetLayoutCreateInfo(VkDescriptorSetLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SloBRbE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TepbzAz=json({});
    
        if (name.pNext==NULL){
            return_TepbzAz["null"]=true;
            return return_TepbzAz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_bPtUuDG=json({});
    return serialize_VkDescriptorSetLayoutCreateFlags(name.flags);}();
result["members"]["bindingCount"]=[&]() {
    json return_IIjkQeB=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindings"]=[&]() {
    json return_NyUZIrQ=json({});
    
        if (name.pBindings==NULL){
            return_NyUZIrQ["null"]=true;
            return return_NyUZIrQ;
        }
        
        return_NyUZIrQ["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_SLhmejP=json({});
    return serialize_VkDescriptorSetLayoutBinding(name.pBindings[i]);}();
            return_NyUZIrQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_NyUZIrQ;
        }();
return result;}

    VkDescriptorSetLayoutCreateInfo deserialize_VkDescriptorSetLayoutCreateInfo(json name){
        auto result=VkDescriptorSetLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YTdSJig;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YTdSJig=NULL;
        }
    temp_YTdSJig=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YTdSJig;}();
[&]() {
result.flags=deserialize_VkDescriptorSetLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorSetLayoutBinding* temp_bkyQZor;[&]() {

        if (name["members"]["pBindings"].contains("null")){
        temp_bkyQZor=NULL;
        }
    temp_bkyQZor=(VkDescriptorSetLayoutBinding*)malloc(result.bindingCount*sizeof(VkDescriptorSetLayoutBinding));
        for (int JxBuTKs=0; JxBuTKs < result.bindingCount; JxBuTKs++){
            [&]() {
temp_bkyQZor[JxBuTKs]=deserialize_VkDescriptorSetLayoutBinding(name["members"]["pBindings"]["members"][JxBuTKs]);}();;
        }
        }();result.pBindings=temp_bkyQZor;}();
return result;}

    json serialize_VkDescriptorPoolSize(VkDescriptorPoolSize name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_SkPqpIF=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["descriptorCount"]=[&]() {
    json return_cbKnmIn=json({});
    return serialize_uint32_t(name.descriptorCount);}();
return result;}

    VkDescriptorPoolSize deserialize_VkDescriptorPoolSize(json name){
        auto result=VkDescriptorPoolSize();
    
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
return result;}

    json serialize_VkDescriptorPoolCreateInfo(VkDescriptorPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ClUMXTS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PqNADmz=json({});
    
        if (name.pNext==NULL){
            return_PqNADmz["null"]=true;
            return return_PqNADmz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XVLqHco=json({});
    return serialize_VkDescriptorPoolCreateFlags(name.flags);}();
result["members"]["maxSets"]=[&]() {
    json return_xOrsYpe=json({});
    return serialize_uint32_t(name.maxSets);}();
result["members"]["poolSizeCount"]=[&]() {
    json return_YIngNvy=json({});
    return serialize_uint32_t(name.poolSizeCount);}();
result["members"]["pPoolSizes"]=[&]() {
    json return_eKVnfxG=json({});
    
        if (name.pPoolSizes==NULL){
            return_eKVnfxG["null"]=true;
            return return_eKVnfxG;
        }
        
        return_eKVnfxG["members"]={};
        for(int i=0; i < name.poolSizeCount; i++){
            json temp;
            temp=[&]() {
    json return_moiakJw=json({});
    return serialize_VkDescriptorPoolSize(name.pPoolSizes[i]);}();
            return_eKVnfxG["members"][std::to_string(i)].push_back(temp);
        }
        return return_eKVnfxG;
        }();
return result;}

    VkDescriptorPoolCreateInfo deserialize_VkDescriptorPoolCreateInfo(json name){
        auto result=VkDescriptorPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SqDAsGl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SqDAsGl=NULL;
        }
    temp_SqDAsGl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SqDAsGl;}();
[&]() {
result.flags=deserialize_VkDescriptorPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.maxSets=deserialize_uint32_t(name["members"]["maxSets"]);}();
[&]() {
result.poolSizeCount=deserialize_uint32_t(name["members"]["poolSizeCount"]);}();
[&]() {
VkDescriptorPoolSize* temp_fkJOiER;[&]() {

        if (name["members"]["pPoolSizes"].contains("null")){
        temp_fkJOiER=NULL;
        }
    temp_fkJOiER=(VkDescriptorPoolSize*)malloc(result.poolSizeCount*sizeof(VkDescriptorPoolSize));
        for (int VOSdFSk=0; VOSdFSk < result.poolSizeCount; VOSdFSk++){
            [&]() {
temp_fkJOiER[VOSdFSk]=deserialize_VkDescriptorPoolSize(name["members"]["pPoolSizes"]["members"][VOSdFSk]);}();;
        }
        }();result.pPoolSizes=temp_fkJOiER;}();
return result;}

    json serialize_VkDescriptorSetAllocateInfo(VkDescriptorSetAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fvEBvIr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DpvDBoh=json({});
    
        if (name.pNext==NULL){
            return_DpvDBoh["null"]=true;
            return return_DpvDBoh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPool"]=[&]() {
    json return_fPXxkLf=json({});
    return serialize_VkDescriptorPool(name.descriptorPool);}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_xazcWOi=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_rOONFeK=json({});
    
        if (name.pSetLayouts==NULL){
            return_rOONFeK["null"]=true;
            return return_rOONFeK;
        }
        
        return_rOONFeK["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_eXqzFJr=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_rOONFeK["members"][std::to_string(i)].push_back(temp);
        }
        return return_rOONFeK;
        }();
return result;}

    VkDescriptorSetAllocateInfo deserialize_VkDescriptorSetAllocateInfo(json name){
        auto result=VkDescriptorSetAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MDCYwZM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MDCYwZM=NULL;
        }
    temp_MDCYwZM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MDCYwZM;}();
[&]() {
result.descriptorPool=deserialize_VkDescriptorPool(name["members"]["descriptorPool"]);}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_NpQpyAf;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_NpQpyAf=NULL;
        }
    temp_NpQpyAf=(VkDescriptorSetLayout*)malloc(result.descriptorSetCount*sizeof(VkDescriptorSetLayout));
        for (int bRofuDJ=0; bRofuDJ < result.descriptorSetCount; bRofuDJ++){
            [&]() {
temp_NpQpyAf[bRofuDJ]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][bRofuDJ]);}();;
        }
        }();result.pSetLayouts=temp_NpQpyAf;}();
return result;}

    json serialize_VkSpecializationMapEntry(VkSpecializationMapEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["constantID"]=[&]() {
    json return_VWfantS=json({});
    return serialize_uint32_t(name.constantID);}();
result["members"]["offset"]=[&]() {
    json return_fqBJvyC=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_YaBIdsC=json({});
    return serialize_size_t(name.size);}();
return result;}

    VkSpecializationMapEntry deserialize_VkSpecializationMapEntry(json name){
        auto result=VkSpecializationMapEntry();
    
[&]() {
result.constantID=deserialize_uint32_t(name["members"]["constantID"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_size_t(name["members"]["size"]);}();
return result;}

    json serialize_VkSpecializationInfo(VkSpecializationInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["mapEntryCount"]=[&]() {
    json return_XfnFDkY=json({});
    return serialize_uint32_t(name.mapEntryCount);}();
result["members"]["pMapEntries"]=[&]() {
    json return_ILhPKIg=json({});
    
        if (name.pMapEntries==NULL){
            return_ILhPKIg["null"]=true;
            return return_ILhPKIg;
        }
        
        return_ILhPKIg["members"]={};
        for(int i=0; i < name.mapEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_ReyehkT=json({});
    return serialize_VkSpecializationMapEntry(name.pMapEntries[i]);}();
            return_ILhPKIg["members"][std::to_string(i)].push_back(temp);
        }
        return return_ILhPKIg;
        }();
result["members"]["dataSize"]=[&]() {
    json return_dPmSkHR=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_cTVesKM=json({});
    
        if (name.pData==NULL){
            return_cTVesKM["null"]=true;
            return return_cTVesKM;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkSpecializationInfo deserialize_VkSpecializationInfo(json name){
        auto result=VkSpecializationInfo();
    
[&]() {
result.mapEntryCount=deserialize_uint32_t(name["members"]["mapEntryCount"]);}();
[&]() {
VkSpecializationMapEntry* temp_caCkIsb;[&]() {

        if (name["members"]["pMapEntries"].contains("null")){
        temp_caCkIsb=NULL;
        }
    temp_caCkIsb=(VkSpecializationMapEntry*)malloc(result.mapEntryCount*sizeof(VkSpecializationMapEntry));
        for (int FipQabL=0; FipQabL < result.mapEntryCount; FipQabL++){
            [&]() {
temp_caCkIsb[FipQabL]=deserialize_VkSpecializationMapEntry(name["members"]["pMapEntries"]["members"][FipQabL]);}();;
        }
        }();result.pMapEntries=temp_caCkIsb;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_JyYRKqg;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_JyYRKqg=NULL;
        }
    temp_JyYRKqg=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_JyYRKqg;}();
return result;}

    json serialize_VkPipelineShaderStageCreateInfo(VkPipelineShaderStageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LObPSzi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eaiyvHd=json({});
    
        if (name.pNext==NULL){
            return_eaiyvHd["null"]=true;
            return return_eaiyvHd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NnIbUuQ=json({});
    return serialize_VkPipelineShaderStageCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_WiWuCMT=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["module"]=[&]() {
    json return_fHDIMNL=json({});
    return serialize_VkShaderModule(name.module);}();
result["members"]["pName"]=[&]() {
    json return_AYHezED=json({});
    
        if (name.pName==NULL){
            return_AYHezED["null"]=true;
            return return_AYHezED;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pName"]=[&]() {
    json return_ZROiHDY=json({});
    
        if (name.pName==NULL){
            return_ZROiHDY["null"]=true;
            return return_ZROiHDY;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_HsouEdl=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_HsouEdl["null"]=true;
            return return_HsouEdl;
        }
        return_HsouEdl=[&]() {
    json return_UjACyGV=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_HsouEdl;}();
return result;}

    VkPipelineShaderStageCreateInfo deserialize_VkPipelineShaderStageCreateInfo(json name){
        auto result=VkPipelineShaderStageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oyWTGOj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oyWTGOj=NULL;
        }
    temp_oyWTGOj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oyWTGOj;}();
[&]() {
result.flags=deserialize_VkPipelineShaderStageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.module=deserialize_VkShaderModule(name["members"]["module"]);}();
[&]() {
char* temp_HhtsPTW;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_HhtsPTW=NULL;
        }
    temp_HhtsPTW=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_HhtsPTW;}();
[&]() {
char* temp_TFEVdhK;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_TFEVdhK=NULL;
        }
    temp_TFEVdhK=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_TFEVdhK;}();
[&]() {
VkSpecializationInfo* temp_OxeTsQF;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_OxeTsQF=NULL;
        }
    [&]() {
*(temp_OxeTsQF)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_OxeTsQF;}();
return result;}

    json serialize_VkComputePipelineCreateInfo(VkComputePipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KscWOgG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lpjkbtE=json({});
    
        if (name.pNext==NULL){
            return_lpjkbtE["null"]=true;
            return return_lpjkbtE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LZXXngL=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_zWwPMru=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.stage);}();
result["members"]["layout"]=[&]() {
    json return_ttekgrS=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_uMzteDp=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_VfXVLmH=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkComputePipelineCreateInfo deserialize_VkComputePipelineCreateInfo(json name){
        auto result=VkComputePipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RajIuUA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RajIuUA=NULL;
        }
    temp_RajIuUA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RajIuUA;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["stage"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkComputePipelineIndirectBufferInfoNV(VkComputePipelineIndirectBufferInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gAezXok=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bFfWYlx=json({});
    
        if (name.pNext==NULL){
            return_bFfWYlx["null"]=true;
            return return_bFfWYlx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_KqaYaAX=json({});
    return_KqaYaAX=[&]() {
    json return_RfkGxeS=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_KqaYaAX;}();
result["members"]["size"]=[&]() {
    json return_XfUphKx=json({});
    return_XfUphKx=[&]() {
    json return_jxDPUQV=json({});
    return serialize_uint64_t(name.size);}();return return_XfUphKx;}();
result["members"]["pipelineDeviceAddressCaptureReplay"]=[&]() {
    json return_DxHuivC=json({});
    return_DxHuivC=[&]() {
    json return_RYclMgs=json({});
    return serialize_uint64_t(name.pipelineDeviceAddressCaptureReplay);}();return return_DxHuivC;}();
return result;}

    VkComputePipelineIndirectBufferInfoNV deserialize_VkComputePipelineIndirectBufferInfoNV(json name){
        auto result=VkComputePipelineIndirectBufferInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aTVeFHI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aTVeFHI=NULL;
        }
    temp_aTVeFHI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aTVeFHI;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
[&]() {
result.pipelineDeviceAddressCaptureReplay=deserialize_uint64_t(name["members"]["pipelineDeviceAddressCaptureReplay"]);}();}();
return result;}

    json serialize_VkPipelineCreateFlags2CreateInfoKHR(VkPipelineCreateFlags2CreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gHEHsda=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WXysoel=json({});
    
        if (name.pNext==NULL){
            return_WXysoel["null"]=true;
            return return_WXysoel;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YyFheGA=json({});
    return serialize_VkPipelineCreateFlags2KHR(name.flags);}();
return result;}

    VkPipelineCreateFlags2CreateInfoKHR deserialize_VkPipelineCreateFlags2CreateInfoKHR(json name){
        auto result=VkPipelineCreateFlags2CreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_APuVWrO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_APuVWrO=NULL;
        }
    temp_APuVWrO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_APuVWrO;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags2KHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVertexInputBindingDescription(VkVertexInputBindingDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_CoSCXoF=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_yTMvJVW=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_iYIPwOx=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
return result;}

    VkVertexInputBindingDescription deserialize_VkVertexInputBindingDescription(json name){
        auto result=VkVertexInputBindingDescription();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription(VkVertexInputAttributeDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["location"]=[&]() {
    json return_PrtBdWq=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_ELSLjuf=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_LNceSFq=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_pIsuBQU=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription deserialize_VkVertexInputAttributeDescription(json name){
        auto result=VkVertexInputAttributeDescription();
    
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPipelineVertexInputStateCreateInfo(VkPipelineVertexInputStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mDaOBpH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CuAJFzb=json({});
    
        if (name.pNext==NULL){
            return_CuAJFzb["null"]=true;
            return return_CuAJFzb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lXbBlXw=json({});
    return serialize_VkPipelineVertexInputStateCreateFlags(name.flags);}();
result["members"]["vertexBindingDescriptionCount"]=[&]() {
    json return_thhXFvF=json({});
    return serialize_uint32_t(name.vertexBindingDescriptionCount);}();
result["members"]["pVertexBindingDescriptions"]=[&]() {
    json return_FgOVCCO=json({});
    
        if (name.pVertexBindingDescriptions==NULL){
            return_FgOVCCO["null"]=true;
            return return_FgOVCCO;
        }
        
        return_FgOVCCO["members"]={};
        for(int i=0; i < name.vertexBindingDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_aCicEtH=json({});
    return serialize_VkVertexInputBindingDescription(name.pVertexBindingDescriptions[i]);}();
            return_FgOVCCO["members"][std::to_string(i)].push_back(temp);
        }
        return return_FgOVCCO;
        }();
result["members"]["vertexAttributeDescriptionCount"]=[&]() {
    json return_InNCNeB=json({});
    return serialize_uint32_t(name.vertexAttributeDescriptionCount);}();
result["members"]["pVertexAttributeDescriptions"]=[&]() {
    json return_BsuCDsr=json({});
    
        if (name.pVertexAttributeDescriptions==NULL){
            return_BsuCDsr["null"]=true;
            return return_BsuCDsr;
        }
        
        return_BsuCDsr["members"]={};
        for(int i=0; i < name.vertexAttributeDescriptionCount; i++){
            json temp;
            temp=[&]() {
    json return_nInDIiv=json({});
    return serialize_VkVertexInputAttributeDescription(name.pVertexAttributeDescriptions[i]);}();
            return_BsuCDsr["members"][std::to_string(i)].push_back(temp);
        }
        return return_BsuCDsr;
        }();
return result;}

    VkPipelineVertexInputStateCreateInfo deserialize_VkPipelineVertexInputStateCreateInfo(json name){
        auto result=VkPipelineVertexInputStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sOHNEyu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sOHNEyu=NULL;
        }
    temp_sOHNEyu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sOHNEyu;}();
[&]() {
result.flags=deserialize_VkPipelineVertexInputStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.vertexBindingDescriptionCount=deserialize_uint32_t(name["members"]["vertexBindingDescriptionCount"]);}();
[&]() {
VkVertexInputBindingDescription* temp_fJXjIkQ;[&]() {

        if (name["members"]["pVertexBindingDescriptions"].contains("null")){
        temp_fJXjIkQ=NULL;
        }
    temp_fJXjIkQ=(VkVertexInputBindingDescription*)malloc(result.vertexBindingDescriptionCount*sizeof(VkVertexInputBindingDescription));
        for (int emWhgxr=0; emWhgxr < result.vertexBindingDescriptionCount; emWhgxr++){
            [&]() {
temp_fJXjIkQ[emWhgxr]=deserialize_VkVertexInputBindingDescription(name["members"]["pVertexBindingDescriptions"]["members"][emWhgxr]);}();;
        }
        }();result.pVertexBindingDescriptions=temp_fJXjIkQ;}();
[&]() {
result.vertexAttributeDescriptionCount=deserialize_uint32_t(name["members"]["vertexAttributeDescriptionCount"]);}();
[&]() {
VkVertexInputAttributeDescription* temp_dUSJNqM;[&]() {

        if (name["members"]["pVertexAttributeDescriptions"].contains("null")){
        temp_dUSJNqM=NULL;
        }
    temp_dUSJNqM=(VkVertexInputAttributeDescription*)malloc(result.vertexAttributeDescriptionCount*sizeof(VkVertexInputAttributeDescription));
        for (int TxVzYgV=0; TxVzYgV < result.vertexAttributeDescriptionCount; TxVzYgV++){
            [&]() {
temp_dUSJNqM[TxVzYgV]=deserialize_VkVertexInputAttributeDescription(name["members"]["pVertexAttributeDescriptions"]["members"][TxVzYgV]);}();;
        }
        }();result.pVertexAttributeDescriptions=temp_dUSJNqM;}();
return result;}

    json serialize_VkPipelineInputAssemblyStateCreateInfo(VkPipelineInputAssemblyStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jZSTMdc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vPzikpW=json({});
    
        if (name.pNext==NULL){
            return_vPzikpW["null"]=true;
            return return_vPzikpW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MIkpoOe=json({});
    return serialize_VkPipelineInputAssemblyStateCreateFlags(name.flags);}();
result["members"]["topology"]=[&]() {
    json return_tzxTFdO=json({});
    return serialize_VkPrimitiveTopology(name.topology);}();
result["members"]["primitiveRestartEnable"]=[&]() {
    json return_VAwBtzC=json({});
    return_VAwBtzC=[&]() {
    json return_yTfAvjQ=json({});
    return serialize_uint32_t(name.primitiveRestartEnable);}();return return_VAwBtzC;}();
return result;}

    VkPipelineInputAssemblyStateCreateInfo deserialize_VkPipelineInputAssemblyStateCreateInfo(json name){
        auto result=VkPipelineInputAssemblyStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nfvWvFL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nfvWvFL=NULL;
        }
    temp_nfvWvFL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nfvWvFL;}();
[&]() {
result.flags=deserialize_VkPipelineInputAssemblyStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.topology=deserialize_VkPrimitiveTopology(name["members"]["topology"]);}();
[&]() {
[&]() {
result.primitiveRestartEnable=deserialize_uint32_t(name["members"]["primitiveRestartEnable"]);}();}();
return result;}

    json serialize_VkPipelineTessellationStateCreateInfo(VkPipelineTessellationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MZIFibw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qoVWzEj=json({});
    
        if (name.pNext==NULL){
            return_qoVWzEj["null"]=true;
            return return_qoVWzEj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FLOVzxx=json({});
    return serialize_VkPipelineTessellationStateCreateFlags(name.flags);}();
result["members"]["patchControlPoints"]=[&]() {
    json return_RxiUudW=json({});
    return serialize_uint32_t(name.patchControlPoints);}();
return result;}

    VkPipelineTessellationStateCreateInfo deserialize_VkPipelineTessellationStateCreateInfo(json name){
        auto result=VkPipelineTessellationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QFOvBUP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QFOvBUP=NULL;
        }
    temp_QFOvBUP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QFOvBUP;}();
[&]() {
result.flags=deserialize_VkPipelineTessellationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.patchControlPoints=deserialize_uint32_t(name["members"]["patchControlPoints"]);}();
return result;}

    json serialize_VkPipelineViewportStateCreateInfo(VkPipelineViewportStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UMUmutY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vYjsJti=json({});
    
        if (name.pNext==NULL){
            return_vYjsJti["null"]=true;
            return return_vYjsJti;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wJxeuDh=json({});
    return serialize_VkPipelineViewportStateCreateFlags(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_SHwSeOI=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewports"]=[&]() {
    json return_VGBCAJF=json({});
    
        if (name.pViewports==NULL){
            return_VGBCAJF["null"]=true;
            return return_VGBCAJF;
        }
        
        return_VGBCAJF["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_ripHuBj=json({});
    return serialize_VkViewport(name.pViewports[i]);}();
            return_VGBCAJF["members"][std::to_string(i)].push_back(temp);
        }
        return return_VGBCAJF;
        }();
result["members"]["scissorCount"]=[&]() {
    json return_KqQSzAq=json({});
    return serialize_uint32_t(name.scissorCount);}();
result["members"]["pScissors"]=[&]() {
    json return_DaiFSAF=json({});
    
        if (name.pScissors==NULL){
            return_DaiFSAF["null"]=true;
            return return_DaiFSAF;
        }
        
        return_DaiFSAF["members"]={};
        for(int i=0; i < name.scissorCount; i++){
            json temp;
            temp=[&]() {
    json return_cCawkJX=json({});
    return serialize_VkRect2D(name.pScissors[i]);}();
            return_DaiFSAF["members"][std::to_string(i)].push_back(temp);
        }
        return return_DaiFSAF;
        }();
return result;}

    VkPipelineViewportStateCreateInfo deserialize_VkPipelineViewportStateCreateInfo(json name){
        auto result=VkPipelineViewportStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_Obqxwmj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_Obqxwmj=NULL;
        }
    temp_Obqxwmj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_Obqxwmj;}();
[&]() {
result.flags=deserialize_VkPipelineViewportStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewport* temp_gfgGpFn;[&]() {

        if (name["members"]["pViewports"].contains("null")){
        temp_gfgGpFn=NULL;
        }
    temp_gfgGpFn=(VkViewport*)malloc(result.viewportCount*sizeof(VkViewport));
        for (int ObMhycP=0; ObMhycP < result.viewportCount; ObMhycP++){
            [&]() {
temp_gfgGpFn[ObMhycP]=deserialize_VkViewport(name["members"]["pViewports"]["members"][ObMhycP]);}();;
        }
        }();result.pViewports=temp_gfgGpFn;}();
[&]() {
result.scissorCount=deserialize_uint32_t(name["members"]["scissorCount"]);}();
[&]() {
VkRect2D* temp_gUKXeJh;[&]() {

        if (name["members"]["pScissors"].contains("null")){
        temp_gUKXeJh=NULL;
        }
    temp_gUKXeJh=(VkRect2D*)malloc(result.scissorCount*sizeof(VkRect2D));
        for (int nlpqzqA=0; nlpqzqA < result.scissorCount; nlpqzqA++){
            [&]() {
temp_gUKXeJh[nlpqzqA]=deserialize_VkRect2D(name["members"]["pScissors"]["members"][nlpqzqA]);}();;
        }
        }();result.pScissors=temp_gUKXeJh;}();
return result;}

    json serialize_VkPipelineRasterizationStateCreateInfo(VkPipelineRasterizationStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CLuMcgv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mjmcvkZ=json({});
    
        if (name.pNext==NULL){
            return_mjmcvkZ["null"]=true;
            return return_mjmcvkZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JMeDwnl=json({});
    return serialize_VkPipelineRasterizationStateCreateFlags(name.flags);}();
result["members"]["depthClampEnable"]=[&]() {
    json return_irzHzew=json({});
    return_irzHzew=[&]() {
    json return_ItjxBiY=json({});
    return serialize_uint32_t(name.depthClampEnable);}();return return_irzHzew;}();
result["members"]["rasterizerDiscardEnable"]=[&]() {
    json return_ZJgRetO=json({});
    return_ZJgRetO=[&]() {
    json return_LqgEowA=json({});
    return serialize_uint32_t(name.rasterizerDiscardEnable);}();return return_ZJgRetO;}();
result["members"]["polygonMode"]=[&]() {
    json return_pfwiRCF=json({});
    return serialize_VkPolygonMode(name.polygonMode);}();
result["members"]["cullMode"]=[&]() {
    json return_KGVXkiN=json({});
    return serialize_VkCullModeFlags(name.cullMode);}();
result["members"]["frontFace"]=[&]() {
    json return_yvffFpY=json({});
    return serialize_VkFrontFace(name.frontFace);}();
result["members"]["depthBiasEnable"]=[&]() {
    json return_NYjjcUc=json({});
    return_NYjjcUc=[&]() {
    json return_hOFBUNS=json({});
    return serialize_uint32_t(name.depthBiasEnable);}();return return_NYjjcUc;}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_zTPuCMk=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_dyIagMq=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_BRHIlUI=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
result["members"]["lineWidth"]=[&]() {
    json return_EApOfqt=json({});
    return serialize_float(name.lineWidth);}();
return result;}

    VkPipelineRasterizationStateCreateInfo deserialize_VkPipelineRasterizationStateCreateInfo(json name){
        auto result=VkPipelineRasterizationStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TkpwGLr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TkpwGLr=NULL;
        }
    temp_TkpwGLr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TkpwGLr;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClampEnable=deserialize_uint32_t(name["members"]["depthClampEnable"]);}();}();
[&]() {
[&]() {
result.rasterizerDiscardEnable=deserialize_uint32_t(name["members"]["rasterizerDiscardEnable"]);}();}();
[&]() {
result.polygonMode=deserialize_VkPolygonMode(name["members"]["polygonMode"]);}();
[&]() {
result.cullMode=deserialize_VkCullModeFlags(name["members"]["cullMode"]);}();
[&]() {
result.frontFace=deserialize_VkFrontFace(name["members"]["frontFace"]);}();
[&]() {
[&]() {
result.depthBiasEnable=deserialize_uint32_t(name["members"]["depthBiasEnable"]);}();}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
[&]() {
result.lineWidth=deserialize_float(name["members"]["lineWidth"]);}();
return result;}

    json serialize_VkPipelineMultisampleStateCreateInfo(VkPipelineMultisampleStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eVlekIY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vASmQoO=json({});
    
        if (name.pNext==NULL){
            return_vASmQoO["null"]=true;
            return return_vASmQoO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jVTYxnk=json({});
    return serialize_VkPipelineMultisampleStateCreateFlags(name.flags);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_UUMVHZd=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["sampleShadingEnable"]=[&]() {
    json return_APPlXQQ=json({});
    return_APPlXQQ=[&]() {
    json return_zIsLsZi=json({});
    return serialize_uint32_t(name.sampleShadingEnable);}();return return_APPlXQQ;}();
result["members"]["minSampleShading"]=[&]() {
    json return_mLQzWNS=json({});
    return serialize_float(name.minSampleShading);}();
result["members"]["pSampleMask"]=[&]() {
    json return_naGvblu=json({});
    
        if (name.pSampleMask==NULL){
            return_naGvblu["null"]=true;
            return return_naGvblu;
        }
        
        return_naGvblu["members"]={};
        for(int i=0; i < (name.rasterizationSamples + 31) / 32; i++){
            json temp;
            temp=[&]() {
    json return_oXkRdCr=json({});
    return_oXkRdCr=[&]() {
    json return_ywpBiUI=json({});
    return serialize_uint32_t(name.pSampleMask[i]);}();return return_oXkRdCr;}();
            return_naGvblu["members"][std::to_string(i)].push_back(temp);
        }
        return return_naGvblu;
        }();
result["members"]["alphaToCoverageEnable"]=[&]() {
    json return_VsyLuNk=json({});
    return_VsyLuNk=[&]() {
    json return_tzZeoLr=json({});
    return serialize_uint32_t(name.alphaToCoverageEnable);}();return return_VsyLuNk;}();
result["members"]["alphaToOneEnable"]=[&]() {
    json return_anYubyM=json({});
    return_anYubyM=[&]() {
    json return_HRFkjCg=json({});
    return serialize_uint32_t(name.alphaToOneEnable);}();return return_anYubyM;}();
return result;}

    VkPipelineMultisampleStateCreateInfo deserialize_VkPipelineMultisampleStateCreateInfo(json name){
        auto result=VkPipelineMultisampleStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lPuMsHD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lPuMsHD=NULL;
        }
    temp_lPuMsHD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lPuMsHD;}();
[&]() {
result.flags=deserialize_VkPipelineMultisampleStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
[&]() {
result.sampleShadingEnable=deserialize_uint32_t(name["members"]["sampleShadingEnable"]);}();}();
[&]() {
result.minSampleShading=deserialize_float(name["members"]["minSampleShading"]);}();
[&]() {
VkSampleMask* temp_MZOrgRd;[&]() {

        if (name["members"]["pSampleMask"].contains("null")){
        temp_MZOrgRd=NULL;
        }
    temp_MZOrgRd=(VkSampleMask*)malloc((result.rasterizationSamples + 31) / 32*sizeof(VkSampleMask));
        for (int mbxhVTE=0; mbxhVTE < (result.rasterizationSamples + 31) / 32; mbxhVTE++){
            [&]() {
[&]() {
temp_MZOrgRd[mbxhVTE]=deserialize_uint32_t(name["members"]["pSampleMask"]["members"][mbxhVTE]);}();}();;
        }
        }();result.pSampleMask=temp_MZOrgRd;}();
[&]() {
[&]() {
result.alphaToCoverageEnable=deserialize_uint32_t(name["members"]["alphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.alphaToOneEnable=deserialize_uint32_t(name["members"]["alphaToOneEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAttachmentState(VkPipelineColorBlendAttachmentState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["blendEnable"]=[&]() {
    json return_jvzXzUb=json({});
    return_jvzXzUb=[&]() {
    json return_dSjtQor=json({});
    return serialize_uint32_t(name.blendEnable);}();return return_jvzXzUb;}();
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_MPVEsIS=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_nbTHTIh=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_nXjgFQv=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_ucgFqbK=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_pGpEDzE=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_dMwNnUb=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
result["members"]["colorWriteMask"]=[&]() {
    json return_KhNjhJl=json({});
    return serialize_VkColorComponentFlags(name.colorWriteMask);}();
return result;}

    VkPipelineColorBlendAttachmentState deserialize_VkPipelineColorBlendAttachmentState(json name){
        auto result=VkPipelineColorBlendAttachmentState();
    
[&]() {
[&]() {
result.blendEnable=deserialize_uint32_t(name["members"]["blendEnable"]);}();}();
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
[&]() {
result.colorWriteMask=deserialize_VkColorComponentFlags(name["members"]["colorWriteMask"]);}();
return result;}

    json serialize_VkPipelineColorBlendStateCreateInfo(VkPipelineColorBlendStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hVjOTNt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MVyLpUk=json({});
    
        if (name.pNext==NULL){
            return_MVyLpUk["null"]=true;
            return return_MVyLpUk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fckZlQY=json({});
    return serialize_VkPipelineColorBlendStateCreateFlags(name.flags);}();
result["members"]["logicOpEnable"]=[&]() {
    json return_DdQNbua=json({});
    return_DdQNbua=[&]() {
    json return_SIOUJeg=json({});
    return serialize_uint32_t(name.logicOpEnable);}();return return_DdQNbua;}();
result["members"]["logicOp"]=[&]() {
    json return_oSxzkOs=json({});
    return serialize_VkLogicOp(name.logicOp);}();
result["members"]["attachmentCount"]=[&]() {
    json return_sOrRwGg=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_rRiUVTM=json({});
    
        if (name.pAttachments==NULL){
            return_rRiUVTM["null"]=true;
            return return_rRiUVTM;
        }
        
        return_rRiUVTM["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ceFuPfV=json({});
    return serialize_VkPipelineColorBlendAttachmentState(name.pAttachments[i]);}();
            return_rRiUVTM["members"][std::to_string(i)].push_back(temp);
        }
        return return_rRiUVTM;
        }();
result["members"]["blendConstants"]=[&]() {
    json return_NYAfnIg=json({});
    
        return_NYAfnIg["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_TdaKWBZ=json({});
    return serialize_float(name.blendConstants[i]);}();
            return_NYAfnIg["members"][std::to_string(i)].push_back(temp);
        }
        return return_NYAfnIg;
        }();
return result;}

    VkPipelineColorBlendStateCreateInfo deserialize_VkPipelineColorBlendStateCreateInfo(json name){
        auto result=VkPipelineColorBlendStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DvBcvob;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DvBcvob=NULL;
        }
    temp_DvBcvob=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DvBcvob;}();
[&]() {
result.flags=deserialize_VkPipelineColorBlendStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.logicOpEnable=deserialize_uint32_t(name["members"]["logicOpEnable"]);}();}();
[&]() {
result.logicOp=deserialize_VkLogicOp(name["members"]["logicOp"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkPipelineColorBlendAttachmentState* temp_mSpyUyj;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_mSpyUyj=NULL;
        }
    temp_mSpyUyj=(VkPipelineColorBlendAttachmentState*)malloc(result.attachmentCount*sizeof(VkPipelineColorBlendAttachmentState));
        for (int jyYJHhX=0; jyYJHhX < result.attachmentCount; jyYJHhX++){
            [&]() {
temp_mSpyUyj[jyYJHhX]=deserialize_VkPipelineColorBlendAttachmentState(name["members"]["pAttachments"]["members"][jyYJHhX]);}();;
        }
        }();result.pAttachments=temp_mSpyUyj;}();
[&]() {

        for (int BNXMPUi=0; BNXMPUi < 4; BNXMPUi++){
            [&]() {
result.blendConstants[BNXMPUi]=deserialize_float(name["members"]["blendConstants"]["members"][BNXMPUi]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineDynamicStateCreateInfo(VkPipelineDynamicStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iSUhgJU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pbrVzps=json({});
    
        if (name.pNext==NULL){
            return_pbrVzps["null"]=true;
            return return_pbrVzps;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yjawRWo=json({});
    return serialize_VkPipelineDynamicStateCreateFlags(name.flags);}();
result["members"]["dynamicStateCount"]=[&]() {
    json return_FuKCjeA=json({});
    return serialize_uint32_t(name.dynamicStateCount);}();
result["members"]["pDynamicStates"]=[&]() {
    json return_jISjfnT=json({});
    
        if (name.pDynamicStates==NULL){
            return_jISjfnT["null"]=true;
            return return_jISjfnT;
        }
        
        return_jISjfnT["members"]={};
        for(int i=0; i < name.dynamicStateCount; i++){
            json temp;
            temp=[&]() {
    json return_gEUKeuN=json({});
    return serialize_VkDynamicState(name.pDynamicStates[i]);}();
            return_jISjfnT["members"][std::to_string(i)].push_back(temp);
        }
        return return_jISjfnT;
        }();
return result;}

    VkPipelineDynamicStateCreateInfo deserialize_VkPipelineDynamicStateCreateInfo(json name){
        auto result=VkPipelineDynamicStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XNHOZgN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XNHOZgN=NULL;
        }
    temp_XNHOZgN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XNHOZgN;}();
[&]() {
result.flags=deserialize_VkPipelineDynamicStateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.dynamicStateCount=deserialize_uint32_t(name["members"]["dynamicStateCount"]);}();
[&]() {
VkDynamicState* temp_ykmcEgl;[&]() {

        if (name["members"]["pDynamicStates"].contains("null")){
        temp_ykmcEgl=NULL;
        }
    temp_ykmcEgl=(VkDynamicState*)malloc(result.dynamicStateCount*sizeof(VkDynamicState));
        for (int XRqUMjH=0; XRqUMjH < result.dynamicStateCount; XRqUMjH++){
            [&]() {
temp_ykmcEgl[XRqUMjH]=deserialize_VkDynamicState(name["members"]["pDynamicStates"]["members"][XRqUMjH]);}();;
        }
        }();result.pDynamicStates=temp_ykmcEgl;}();
return result;}

    json serialize_VkStencilOpState(VkStencilOpState name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["failOp"]=[&]() {
    json return_adbVjev=json({});
    return serialize_VkStencilOp(name.failOp);}();
result["members"]["passOp"]=[&]() {
    json return_hMSBphF=json({});
    return serialize_VkStencilOp(name.passOp);}();
result["members"]["depthFailOp"]=[&]() {
    json return_mkjnJMt=json({});
    return serialize_VkStencilOp(name.depthFailOp);}();
result["members"]["compareOp"]=[&]() {
    json return_LUvdLIz=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["compareMask"]=[&]() {
    json return_KGtAuZn=json({});
    return serialize_uint32_t(name.compareMask);}();
result["members"]["writeMask"]=[&]() {
    json return_BsOEqVB=json({});
    return serialize_uint32_t(name.writeMask);}();
result["members"]["reference"]=[&]() {
    json return_GSjMhpD=json({});
    return serialize_uint32_t(name.reference);}();
return result;}

    VkStencilOpState deserialize_VkStencilOpState(json name){
        auto result=VkStencilOpState();
    
[&]() {
result.failOp=deserialize_VkStencilOp(name["members"]["failOp"]);}();
[&]() {
result.passOp=deserialize_VkStencilOp(name["members"]["passOp"]);}();
[&]() {
result.depthFailOp=deserialize_VkStencilOp(name["members"]["depthFailOp"]);}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.compareMask=deserialize_uint32_t(name["members"]["compareMask"]);}();
[&]() {
result.writeMask=deserialize_uint32_t(name["members"]["writeMask"]);}();
[&]() {
result.reference=deserialize_uint32_t(name["members"]["reference"]);}();
return result;}

    json serialize_VkPipelineDepthStencilStateCreateInfo(VkPipelineDepthStencilStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_looMKRo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OYwKARO=json({});
    
        if (name.pNext==NULL){
            return_OYwKARO["null"]=true;
            return return_OYwKARO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_injCfeG=json({});
    return serialize_VkPipelineDepthStencilStateCreateFlags(name.flags);}();
result["members"]["depthTestEnable"]=[&]() {
    json return_bxDTcNF=json({});
    return_bxDTcNF=[&]() {
    json return_cXztYUe=json({});
    return serialize_uint32_t(name.depthTestEnable);}();return return_bxDTcNF;}();
result["members"]["depthWriteEnable"]=[&]() {
    json return_oFffrIr=json({});
    return_oFffrIr=[&]() {
    json return_vMvBtcf=json({});
    return serialize_uint32_t(name.depthWriteEnable);}();return return_oFffrIr;}();
result["members"]["depthCompareOp"]=[&]() {
    json return_lKlShqQ=json({});
    return serialize_VkCompareOp(name.depthCompareOp);}();
result["members"]["depthBoundsTestEnable"]=[&]() {
    json return_koZLCVk=json({});
    return_koZLCVk=[&]() {
    json return_CzsOHIg=json({});
    return serialize_uint32_t(name.depthBoundsTestEnable);}();return return_koZLCVk;}();
result["members"]["stencilTestEnable"]=[&]() {
    json return_TYKjQuw=json({});
    return_TYKjQuw=[&]() {
    json return_QyxmZcT=json({});
    return serialize_uint32_t(name.stencilTestEnable);}();return return_TYKjQuw;}();
result["members"]["front"]=[&]() {
    json return_UlJEjUH=json({});
    return serialize_VkStencilOpState(name.front);}();
result["members"]["back"]=[&]() {
    json return_AqEDXXP=json({});
    return serialize_VkStencilOpState(name.back);}();
result["members"]["minDepthBounds"]=[&]() {
    json return_lfNdrOw=json({});
    return serialize_float(name.minDepthBounds);}();
result["members"]["maxDepthBounds"]=[&]() {
    json return_qRaKYoE=json({});
    return serialize_float(name.maxDepthBounds);}();
return result;}

    VkPipelineDepthStencilStateCreateInfo deserialize_VkPipelineDepthStencilStateCreateInfo(json name){
        auto result=VkPipelineDepthStencilStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mMvUcVM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mMvUcVM=NULL;
        }
    temp_mMvUcVM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mMvUcVM;}();
[&]() {
result.flags=deserialize_VkPipelineDepthStencilStateCreateFlags(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthTestEnable=deserialize_uint32_t(name["members"]["depthTestEnable"]);}();}();
[&]() {
[&]() {
result.depthWriteEnable=deserialize_uint32_t(name["members"]["depthWriteEnable"]);}();}();
[&]() {
result.depthCompareOp=deserialize_VkCompareOp(name["members"]["depthCompareOp"]);}();
[&]() {
[&]() {
result.depthBoundsTestEnable=deserialize_uint32_t(name["members"]["depthBoundsTestEnable"]);}();}();
[&]() {
[&]() {
result.stencilTestEnable=deserialize_uint32_t(name["members"]["stencilTestEnable"]);}();}();
[&]() {
result.front=deserialize_VkStencilOpState(name["members"]["front"]);}();
[&]() {
result.back=deserialize_VkStencilOpState(name["members"]["back"]);}();
[&]() {
result.minDepthBounds=deserialize_float(name["members"]["minDepthBounds"]);}();
[&]() {
result.maxDepthBounds=deserialize_float(name["members"]["maxDepthBounds"]);}();
return result;}

    json serialize_VkGraphicsPipelineCreateInfo(VkGraphicsPipelineCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qanzcSH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fdBjRnP=json({});
    
        if (name.pNext==NULL){
            return_fdBjRnP["null"]=true;
            return return_fdBjRnP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XofpHQV=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_iWxixUK=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_RCFLqcD=json({});
    
        if (name.pStages==NULL){
            return_RCFLqcD["null"]=true;
            return return_RCFLqcD;
        }
        
        return_RCFLqcD["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_YKADnzg=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_RCFLqcD["members"][std::to_string(i)].push_back(temp);
        }
        return return_RCFLqcD;
        }();
result["members"]["pStages"]=[&]() {
    json return_ibJYHhY=json({});
    
        if (name.pStages==NULL){
            return_ibJYHhY["null"]=true;
            return return_ibJYHhY;
        }
        
        return_ibJYHhY["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_yCWloij=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_ibJYHhY["members"][std::to_string(i)].push_back(temp);
        }
        return return_ibJYHhY;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_bNHuqFd=json({});
    
        if (name.pVertexInputState==NULL){
            return_bNHuqFd["null"]=true;
            return return_bNHuqFd;
        }
        return_bNHuqFd=[&]() {
    json return_zMCBomU=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_bNHuqFd;}();
result["members"]["pInputAssemblyState"]=[&]() {
    json return_oKrviMM=json({});
    
        if (name.pInputAssemblyState==NULL){
            return_oKrviMM["null"]=true;
            return return_oKrviMM;
        }
        return_oKrviMM=[&]() {
    json return_YRoBQOL=json({});
    return serialize_VkPipelineInputAssemblyStateCreateInfo(*name.pInputAssemblyState);}();
return return_oKrviMM;}();
result["members"]["pTessellationState"]=[&]() {
    json return_sqxkLcX=json({});
    
        if (name.pTessellationState==NULL){
            return_sqxkLcX["null"]=true;
            return return_sqxkLcX;
        }
        return_sqxkLcX=[&]() {
    json return_OtPnOhV=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_sqxkLcX;}();
result["members"]["pViewportState"]=[&]() {
    json return_LNGwypB=json({});
    
        if (name.pViewportState==NULL){
            return_LNGwypB["null"]=true;
            return return_LNGwypB;
        }
        return_LNGwypB=[&]() {
    json return_VwtMJDd=json({});
    return serialize_VkPipelineViewportStateCreateInfo(*name.pViewportState);}();
return return_LNGwypB;}();
result["members"]["pRasterizationState"]=[&]() {
    json return_NiAoIzN=json({});
    
        if (name.pRasterizationState==NULL){
            return_NiAoIzN["null"]=true;
            return return_NiAoIzN;
        }
        return_NiAoIzN=[&]() {
    json return_urKpSGh=json({});
    return serialize_VkPipelineRasterizationStateCreateInfo(*name.pRasterizationState);}();
return return_NiAoIzN;}();
result["members"]["pMultisampleState"]=[&]() {
    json return_sprxljb=json({});
    
        if (name.pMultisampleState==NULL){
            return_sprxljb["null"]=true;
            return return_sprxljb;
        }
        return_sprxljb=[&]() {
    json return_TNoIhHb=json({});
    return serialize_VkPipelineMultisampleStateCreateInfo(*name.pMultisampleState);}();
return return_sprxljb;}();
result["members"]["pDepthStencilState"]=[&]() {
    json return_lulLOsl=json({});
    
        if (name.pDepthStencilState==NULL){
            return_lulLOsl["null"]=true;
            return return_lulLOsl;
        }
        return_lulLOsl=[&]() {
    json return_YlecqZv=json({});
    return serialize_VkPipelineDepthStencilStateCreateInfo(*name.pDepthStencilState);}();
return return_lulLOsl;}();
result["members"]["pColorBlendState"]=[&]() {
    json return_Yfqmcoy=json({});
    
        if (name.pColorBlendState==NULL){
            return_Yfqmcoy["null"]=true;
            return return_Yfqmcoy;
        }
        return_Yfqmcoy=[&]() {
    json return_kuvkrgu=json({});
    return serialize_VkPipelineColorBlendStateCreateInfo(*name.pColorBlendState);}();
return return_Yfqmcoy;}();
result["members"]["pDynamicState"]=[&]() {
    json return_zlyPBnB=json({});
    
        if (name.pDynamicState==NULL){
            return_zlyPBnB["null"]=true;
            return return_zlyPBnB;
        }
        return_zlyPBnB=[&]() {
    json return_oOwkIbV=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_zlyPBnB;}();
result["members"]["layout"]=[&]() {
    json return_eqGoPVQ=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["renderPass"]=[&]() {
    json return_RwntSmw=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_yCfXpNP=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_XZDMKse=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_nylFchF=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkGraphicsPipelineCreateInfo deserialize_VkGraphicsPipelineCreateInfo(json name){
        auto result=VkGraphicsPipelineCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wEjVcyc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wEjVcyc=NULL;
        }
    temp_wEjVcyc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wEjVcyc;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_rzAqaJf;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_rzAqaJf=NULL;
        }
    temp_rzAqaJf=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int YdDelOI=0; YdDelOI < result.stageCount; YdDelOI++){
            [&]() {
temp_rzAqaJf[YdDelOI]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][YdDelOI]);}();;
        }
        }();result.pStages=temp_rzAqaJf;}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_fuwRkVa;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_fuwRkVa=NULL;
        }
    temp_fuwRkVa=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int xcqqypz=0; xcqqypz < result.stageCount; xcqqypz++){
            [&]() {
temp_fuwRkVa[xcqqypz]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][xcqqypz]);}();;
        }
        }();result.pStages=temp_fuwRkVa;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_pBGEBPw;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_pBGEBPw=NULL;
        }
    [&]() {
*(temp_pBGEBPw)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_pBGEBPw;}();
[&]() {
VkPipelineInputAssemblyStateCreateInfo* temp_VYPhxSd;[&]() {

        if (name["members"]["pInputAssemblyState"].contains("null")){
        temp_VYPhxSd=NULL;
        }
    [&]() {
*(temp_VYPhxSd)=deserialize_VkPipelineInputAssemblyStateCreateInfo(name["members"]["pInputAssemblyState"]);}();
}();result.pInputAssemblyState=temp_VYPhxSd;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_ILTmFEV;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_ILTmFEV=NULL;
        }
    [&]() {
*(temp_ILTmFEV)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_ILTmFEV;}();
[&]() {
VkPipelineViewportStateCreateInfo* temp_uoNqaGN;[&]() {

        if (name["members"]["pViewportState"].contains("null")){
        temp_uoNqaGN=NULL;
        }
    [&]() {
*(temp_uoNqaGN)=deserialize_VkPipelineViewportStateCreateInfo(name["members"]["pViewportState"]);}();
}();result.pViewportState=temp_uoNqaGN;}();
[&]() {
VkPipelineRasterizationStateCreateInfo* temp_uXlDBXn;[&]() {

        if (name["members"]["pRasterizationState"].contains("null")){
        temp_uXlDBXn=NULL;
        }
    [&]() {
*(temp_uXlDBXn)=deserialize_VkPipelineRasterizationStateCreateInfo(name["members"]["pRasterizationState"]);}();
}();result.pRasterizationState=temp_uXlDBXn;}();
[&]() {
VkPipelineMultisampleStateCreateInfo* temp_qQaOjkP;[&]() {

        if (name["members"]["pMultisampleState"].contains("null")){
        temp_qQaOjkP=NULL;
        }
    [&]() {
*(temp_qQaOjkP)=deserialize_VkPipelineMultisampleStateCreateInfo(name["members"]["pMultisampleState"]);}();
}();result.pMultisampleState=temp_qQaOjkP;}();
[&]() {
VkPipelineDepthStencilStateCreateInfo* temp_TDNompc;[&]() {

        if (name["members"]["pDepthStencilState"].contains("null")){
        temp_TDNompc=NULL;
        }
    [&]() {
*(temp_TDNompc)=deserialize_VkPipelineDepthStencilStateCreateInfo(name["members"]["pDepthStencilState"]);}();
}();result.pDepthStencilState=temp_TDNompc;}();
[&]() {
VkPipelineColorBlendStateCreateInfo* temp_GzssXFj;[&]() {

        if (name["members"]["pColorBlendState"].contains("null")){
        temp_GzssXFj=NULL;
        }
    [&]() {
*(temp_GzssXFj)=deserialize_VkPipelineColorBlendStateCreateInfo(name["members"]["pColorBlendState"]);}();
}();result.pColorBlendState=temp_GzssXFj;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_BsnHxop;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_BsnHxop=NULL;
        }
    [&]() {
*(temp_BsnHxop)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_BsnHxop;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkPipelineCacheCreateInfo(VkPipelineCacheCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AzswnJK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xJJyLcb=json({});
    
        if (name.pNext==NULL){
            return_xJJyLcb["null"]=true;
            return return_xJJyLcb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_PfflIFL=json({});
    return serialize_VkPipelineCacheCreateFlags(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_dLAUKHO=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["initialDataSize"]=[&]() {
    json return_TvxGlKk=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_zJfVGyz=json({});
    
        if (name.pInitialData==NULL){
            return_zJfVGyz["null"]=true;
            return return_zJfVGyz;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkPipelineCacheCreateInfo deserialize_VkPipelineCacheCreateInfo(json name){
        auto result=VkPipelineCacheCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xJKNiWF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xJKNiWF=NULL;
        }
    temp_xJKNiWF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xJKNiWF;}();
[&]() {
result.flags=deserialize_VkPipelineCacheCreateFlags(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_XyTYEhw;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_XyTYEhw=NULL;
        }
    temp_XyTYEhw=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_XyTYEhw;}();
return result;}

    json serialize_VkPipelineCacheHeaderVersionOne(VkPipelineCacheHeaderVersionOne name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_nFAlrih=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_jsovyGH=json({});
    return serialize_VkPipelineCacheHeaderVersion(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_TCMPRye=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_hyNbPbS=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_qekRnlb=json({});
    
        return_qekRnlb["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ZAVBcXc=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_qekRnlb["members"][std::to_string(i)].push_back(temp);
        }
        return return_qekRnlb;
        }();
return result;}

    VkPipelineCacheHeaderVersionOne deserialize_VkPipelineCacheHeaderVersionOne(json name){
        auto result=VkPipelineCacheHeaderVersionOne();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkPipelineCacheHeaderVersion(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {

        for (int brNnWwp=0; brNnWwp < VK_UUID_SIZE; brNnWwp++){
            [&]() {
result.pipelineCacheUUID[brNnWwp]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][brNnWwp]);}();;
        }
        }();
return result;}

    json serialize_VkPushConstantRange(VkPushConstantRange name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["stageFlags"]=[&]() {
    json return_BDEOetn=json({});
    return serialize_VkShaderStageFlags(name.stageFlags);}();
result["members"]["offset"]=[&]() {
    json return_aGJfEYi=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["size"]=[&]() {
    json return_HjAZgto=json({});
    return serialize_uint32_t(name.size);}();
return result;}

    VkPushConstantRange deserialize_VkPushConstantRange(json name){
        auto result=VkPushConstantRange();
    
[&]() {
result.stageFlags=deserialize_VkShaderStageFlags(name["members"]["stageFlags"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
return result;}

    json serialize_VkPipelineLayoutCreateInfo(VkPipelineLayoutCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XgyBxBn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CMGFOuz=json({});
    
        if (name.pNext==NULL){
            return_CMGFOuz["null"]=true;
            return return_CMGFOuz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DkthdmB=json({});
    return serialize_VkPipelineLayoutCreateFlags(name.flags);}();
result["members"]["setLayoutCount"]=[&]() {
    json return_KdEqVPA=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_UrotQhx=json({});
    
        if (name.pSetLayouts==NULL){
            return_UrotQhx["null"]=true;
            return return_UrotQhx;
        }
        
        return_UrotQhx["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_tWKCDyG=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_UrotQhx["members"][std::to_string(i)].push_back(temp);
        }
        return return_UrotQhx;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_BxTtNZe=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_ixZyMgM=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_ixZyMgM["null"]=true;
            return return_ixZyMgM;
        }
        
        return_ixZyMgM["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_EuwFpoF=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_ixZyMgM["members"][std::to_string(i)].push_back(temp);
        }
        return return_ixZyMgM;
        }();
return result;}

    VkPipelineLayoutCreateInfo deserialize_VkPipelineLayoutCreateInfo(json name){
        auto result=VkPipelineLayoutCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qAGBkKh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qAGBkKh=NULL;
        }
    temp_qAGBkKh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qAGBkKh;}();
[&]() {
result.flags=deserialize_VkPipelineLayoutCreateFlags(name["members"]["flags"]);}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_EeTpIYw;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_EeTpIYw=NULL;
        }
    temp_EeTpIYw=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int OzKqLOR=0; OzKqLOR < result.setLayoutCount; OzKqLOR++){
            [&]() {
temp_EeTpIYw[OzKqLOR]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][OzKqLOR]);}();;
        }
        }();result.pSetLayouts=temp_EeTpIYw;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_VuwgsEV;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_VuwgsEV=NULL;
        }
    temp_VuwgsEV=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int AlPUasA=0; AlPUasA < result.pushConstantRangeCount; AlPUasA++){
            [&]() {
temp_VuwgsEV[AlPUasA]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][AlPUasA]);}();;
        }
        }();result.pPushConstantRanges=temp_VuwgsEV;}();
return result;}

    json serialize_VkSamplerCreateInfo(VkSamplerCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nnmzvry=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wGVtiRq=json({});
    
        if (name.pNext==NULL){
            return_wGVtiRq["null"]=true;
            return return_wGVtiRq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YTbBFhY=json({});
    return serialize_VkSamplerCreateFlags(name.flags);}();
result["members"]["magFilter"]=[&]() {
    json return_tCcFZCe=json({});
    return serialize_VkFilter(name.magFilter);}();
result["members"]["minFilter"]=[&]() {
    json return_iNsYOIg=json({});
    return serialize_VkFilter(name.minFilter);}();
result["members"]["mipmapMode"]=[&]() {
    json return_XFxkdIl=json({});
    return serialize_VkSamplerMipmapMode(name.mipmapMode);}();
result["members"]["addressModeU"]=[&]() {
    json return_xbTOLCd=json({});
    return serialize_VkSamplerAddressMode(name.addressModeU);}();
result["members"]["addressModeV"]=[&]() {
    json return_sMetvnX=json({});
    return serialize_VkSamplerAddressMode(name.addressModeV);}();
result["members"]["addressModeW"]=[&]() {
    json return_JXXNQAw=json({});
    return serialize_VkSamplerAddressMode(name.addressModeW);}();
result["members"]["mipLodBias"]=[&]() {
    json return_QcdjeQI=json({});
    return serialize_float(name.mipLodBias);}();
result["members"]["anisotropyEnable"]=[&]() {
    json return_GsBuVRd=json({});
    return_GsBuVRd=[&]() {
    json return_YTAFoKK=json({});
    return serialize_uint32_t(name.anisotropyEnable);}();return return_GsBuVRd;}();
result["members"]["maxAnisotropy"]=[&]() {
    json return_aYyPmhJ=json({});
    return serialize_float(name.maxAnisotropy);}();
result["members"]["compareEnable"]=[&]() {
    json return_bCypyiH=json({});
    return_bCypyiH=[&]() {
    json return_LqCGyry=json({});
    return serialize_uint32_t(name.compareEnable);}();return return_bCypyiH;}();
result["members"]["compareOp"]=[&]() {
    json return_YiWhppC=json({});
    return serialize_VkCompareOp(name.compareOp);}();
result["members"]["minLod"]=[&]() {
    json return_kcvgAKW=json({});
    return serialize_float(name.minLod);}();
result["members"]["maxLod"]=[&]() {
    json return_LFnYBfw=json({});
    return serialize_float(name.maxLod);}();
result["members"]["borderColor"]=[&]() {
    json return_XKcVZEU=json({});
    return serialize_VkBorderColor(name.borderColor);}();
result["members"]["unnormalizedCoordinates"]=[&]() {
    json return_NkOjodW=json({});
    return_NkOjodW=[&]() {
    json return_xGDOKxw=json({});
    return serialize_uint32_t(name.unnormalizedCoordinates);}();return return_NkOjodW;}();
return result;}

    VkSamplerCreateInfo deserialize_VkSamplerCreateInfo(json name){
        auto result=VkSamplerCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RDElKcJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RDElKcJ=NULL;
        }
    temp_RDElKcJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RDElKcJ;}();
[&]() {
result.flags=deserialize_VkSamplerCreateFlags(name["members"]["flags"]);}();
[&]() {
result.magFilter=deserialize_VkFilter(name["members"]["magFilter"]);}();
[&]() {
result.minFilter=deserialize_VkFilter(name["members"]["minFilter"]);}();
[&]() {
result.mipmapMode=deserialize_VkSamplerMipmapMode(name["members"]["mipmapMode"]);}();
[&]() {
result.addressModeU=deserialize_VkSamplerAddressMode(name["members"]["addressModeU"]);}();
[&]() {
result.addressModeV=deserialize_VkSamplerAddressMode(name["members"]["addressModeV"]);}();
[&]() {
result.addressModeW=deserialize_VkSamplerAddressMode(name["members"]["addressModeW"]);}();
[&]() {
result.mipLodBias=deserialize_float(name["members"]["mipLodBias"]);}();
[&]() {
[&]() {
result.anisotropyEnable=deserialize_uint32_t(name["members"]["anisotropyEnable"]);}();}();
[&]() {
result.maxAnisotropy=deserialize_float(name["members"]["maxAnisotropy"]);}();
[&]() {
[&]() {
result.compareEnable=deserialize_uint32_t(name["members"]["compareEnable"]);}();}();
[&]() {
result.compareOp=deserialize_VkCompareOp(name["members"]["compareOp"]);}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
[&]() {
result.maxLod=deserialize_float(name["members"]["maxLod"]);}();
[&]() {
result.borderColor=deserialize_VkBorderColor(name["members"]["borderColor"]);}();
[&]() {
[&]() {
result.unnormalizedCoordinates=deserialize_uint32_t(name["members"]["unnormalizedCoordinates"]);}();}();
return result;}

    json serialize_VkCommandPoolCreateInfo(VkCommandPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NuDukDM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FyByGvF=json({});
    
        if (name.pNext==NULL){
            return_FyByGvF["null"]=true;
            return return_FyByGvF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gZgqHOj=json({});
    return serialize_VkCommandPoolCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_tWUBlfc=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
return result;}

    VkCommandPoolCreateInfo deserialize_VkCommandPoolCreateInfo(json name){
        auto result=VkCommandPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mDHzKcZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mDHzKcZ=NULL;
        }
    temp_mDHzKcZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mDHzKcZ;}();
[&]() {
result.flags=deserialize_VkCommandPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
return result;}

    json serialize_VkCommandBufferAllocateInfo(VkCommandBufferAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zyNIwYC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_stUOxZg=json({});
    
        if (name.pNext==NULL){
            return_stUOxZg["null"]=true;
            return return_stUOxZg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandPool"]=[&]() {
    json return_FSvokBk=json({});
    return serialize_VkCommandPool(name.commandPool);}();
result["members"]["level"]=[&]() {
    json return_tXKiKKk=json({});
    return serialize_VkCommandBufferLevel(name.level);}();
result["members"]["commandBufferCount"]=[&]() {
    json return_LYkEDzo=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
return result;}

    VkCommandBufferAllocateInfo deserialize_VkCommandBufferAllocateInfo(json name){
        auto result=VkCommandBufferAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ulwJWQq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ulwJWQq=NULL;
        }
    temp_ulwJWQq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ulwJWQq;}();
[&]() {
result.commandPool=deserialize_VkCommandPool(name["members"]["commandPool"]);}();
[&]() {
result.level=deserialize_VkCommandBufferLevel(name["members"]["level"]);}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceInfo(VkCommandBufferInheritanceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FbhUJTa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EjYsueQ=json({});
    
        if (name.pNext==NULL){
            return_EjYsueQ["null"]=true;
            return return_EjYsueQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_twCRPyq=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_FuAATha=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["framebuffer"]=[&]() {
    json return_YlEDvjp=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["occlusionQueryEnable"]=[&]() {
    json return_bPPKYJn=json({});
    return_bPPKYJn=[&]() {
    json return_giMROkH=json({});
    return serialize_uint32_t(name.occlusionQueryEnable);}();return return_bPPKYJn;}();
result["members"]["queryFlags"]=[&]() {
    json return_PFaFtiJ=json({});
    return serialize_VkQueryControlFlags(name.queryFlags);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_PdZzGEn=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkCommandBufferInheritanceInfo deserialize_VkCommandBufferInheritanceInfo(json name){
        auto result=VkCommandBufferInheritanceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_acWZcBr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_acWZcBr=NULL;
        }
    temp_acWZcBr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_acWZcBr;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
[&]() {
result.occlusionQueryEnable=deserialize_uint32_t(name["members"]["occlusionQueryEnable"]);}();}();
[&]() {
result.queryFlags=deserialize_VkQueryControlFlags(name["members"]["queryFlags"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkCommandBufferBeginInfo(VkCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bvlzcOs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KfoJaAh=json({});
    
        if (name.pNext==NULL){
            return_KfoJaAh["null"]=true;
            return return_KfoJaAh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sunszzO=json({});
    return serialize_VkCommandBufferUsageFlags(name.flags);}();
result["members"]["pInheritanceInfo"]=[&]() {
    json return_PzLwzTA=json({});
    
        if (name.pInheritanceInfo==NULL){
            return_PzLwzTA["null"]=true;
            return return_PzLwzTA;
        }
        return_PzLwzTA=[&]() {
    json return_ABHjMZZ=json({});
    return serialize_VkCommandBufferInheritanceInfo(*name.pInheritanceInfo);}();
return return_PzLwzTA;}();
return result;}

    VkCommandBufferBeginInfo deserialize_VkCommandBufferBeginInfo(json name){
        auto result=VkCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XEERuIU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XEERuIU=NULL;
        }
    temp_XEERuIU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XEERuIU;}();
[&]() {
result.flags=deserialize_VkCommandBufferUsageFlags(name["members"]["flags"]);}();
[&]() {
VkCommandBufferInheritanceInfo* temp_wWzeyFW;[&]() {

        if (name["members"]["pInheritanceInfo"].contains("null")){
        temp_wWzeyFW=NULL;
        }
    [&]() {
*(temp_wWzeyFW)=deserialize_VkCommandBufferInheritanceInfo(name["members"]["pInheritanceInfo"]);}();
}();result.pInheritanceInfo=temp_wWzeyFW;}();
return result;}

    json serialize_VkRenderPassBeginInfo(VkRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XTzUSLe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ALIGDuI=json({});
    
        if (name.pNext==NULL){
            return_ALIGDuI["null"]=true;
            return return_ALIGDuI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_PdJvmjt=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["framebuffer"]=[&]() {
    json return_ulsbbLE=json({});
    return serialize_VkFramebuffer(name.framebuffer);}();
result["members"]["renderArea"]=[&]() {
    json return_FzPVyCk=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["clearValueCount"]=[&]() {
    json return_JPsvlNH=json({});
    return serialize_uint32_t(name.clearValueCount);}();
result["members"]["pClearValues"]=[&]() {
    json return_vZYAYGJ=json({});
    
        if (name.pClearValues==NULL){
            return_vZYAYGJ["null"]=true;
            return return_vZYAYGJ;
        }
        
        return_vZYAYGJ["members"]={};
        for(int i=0; i < name.clearValueCount; i++){
            json temp;
            temp=[&]() {
    json return_LjoAJSy=json({});
    return serialize_VkClearValue(name.pClearValues[i]);}();
            return_vZYAYGJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_vZYAYGJ;
        }();
return result;}

    VkRenderPassBeginInfo deserialize_VkRenderPassBeginInfo(json name){
        auto result=VkRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XEJEZPg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XEJEZPg=NULL;
        }
    temp_XEJEZPg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XEJEZPg;}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.framebuffer=deserialize_VkFramebuffer(name["members"]["framebuffer"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.clearValueCount=deserialize_uint32_t(name["members"]["clearValueCount"]);}();
[&]() {
VkClearValue* temp_uvYQMAd;[&]() {

        if (name["members"]["pClearValues"].contains("null")){
        temp_uvYQMAd=NULL;
        }
    temp_uvYQMAd=(VkClearValue*)malloc(result.clearValueCount*sizeof(VkClearValue));
        for (int qNSNFAt=0; qNSNFAt < result.clearValueCount; qNSNFAt++){
            [&]() {
temp_uvYQMAd[qNSNFAt]=deserialize_VkClearValue(name["members"]["pClearValues"]["members"][qNSNFAt]);}();;
        }
        }();result.pClearValues=temp_uvYQMAd;}();
return result;}

    json serialize_VkClearColorValue(VkClearColorValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["float32"]=[&]() {
    json return_LzwjsEY=json({});
    
        return_LzwjsEY["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_SrjOMUq=json({});
    return serialize_float(name.float32[i]);}();
            return_LzwjsEY["members"][std::to_string(i)].push_back(temp);
        }
        return return_LzwjsEY;
        }();
result["members"]["int32"]=[&]() {
    json return_LYYPCKv=json({});
    
        return_LYYPCKv["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_gNvtJOi=json({});
    return serialize_int32_t(name.int32[i]);}();
            return_LYYPCKv["members"][std::to_string(i)].push_back(temp);
        }
        return return_LYYPCKv;
        }();
result["members"]["uint32"]=[&]() {
    json return_BoilYFw=json({});
    
        return_BoilYFw["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_VWdPnNu=json({});
    return serialize_uint32_t(name.uint32[i]);}();
            return_BoilYFw["members"][std::to_string(i)].push_back(temp);
        }
        return return_BoilYFw;
        }();
return result;}

    VkClearColorValue deserialize_VkClearColorValue(json name){
        auto result=VkClearColorValue();
    
[&]() {

        for (int SlKndmx=0; SlKndmx < 4; SlKndmx++){
            [&]() {
result.float32[SlKndmx]=deserialize_float(name["members"]["float32"]["members"][SlKndmx]);}();;
        }
        }();
[&]() {

        for (int FHGsgaG=0; FHGsgaG < 4; FHGsgaG++){
            [&]() {
result.int32[FHGsgaG]=deserialize_int32_t(name["members"]["int32"]["members"][FHGsgaG]);}();;
        }
        }();
[&]() {

        for (int bNMMRgR=0; bNMMRgR < 4; bNMMRgR++){
            [&]() {
result.uint32[bNMMRgR]=deserialize_uint32_t(name["members"]["uint32"]["members"][bNMMRgR]);}();;
        }
        }();
return result;}

    json serialize_VkClearDepthStencilValue(VkClearDepthStencilValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["depth"]=[&]() {
    json return_LrzqsCv=json({});
    return serialize_float(name.depth);}();
result["members"]["stencil"]=[&]() {
    json return_cBSlrgS=json({});
    return serialize_uint32_t(name.stencil);}();
return result;}

    VkClearDepthStencilValue deserialize_VkClearDepthStencilValue(json name){
        auto result=VkClearDepthStencilValue();
    
[&]() {
result.depth=deserialize_float(name["members"]["depth"]);}();
[&]() {
result.stencil=deserialize_uint32_t(name["members"]["stencil"]);}();
return result;}

    json serialize_VkClearValue(VkClearValue name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["color"]=[&]() {
    json return_dBdqBjf=json({});
    return serialize_VkClearColorValue(name.color);}();
result["members"]["depthStencil"]=[&]() {
    json return_rgGKQGN=json({});
    return serialize_VkClearDepthStencilValue(name.depthStencil);}();
return result;}

    VkClearValue deserialize_VkClearValue(json name){
        auto result=VkClearValue();
    
[&]() {
result.color=deserialize_VkClearColorValue(name["members"]["color"]);}();
[&]() {
result.depthStencil=deserialize_VkClearDepthStencilValue(name["members"]["depthStencil"]);}();
return result;}

    json serialize_VkClearAttachment(VkClearAttachment name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["aspectMask"]=[&]() {
    json return_qskgaJL=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
result["members"]["colorAttachment"]=[&]() {
    json return_OiAIZAY=json({});
    return serialize_uint32_t(name.colorAttachment);}();
result["members"]["clearValue"]=[&]() {
    json return_LETnoLq=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkClearAttachment deserialize_VkClearAttachment(json name){
        auto result=VkClearAttachment();
    
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
[&]() {
result.colorAttachment=deserialize_uint32_t(name["members"]["colorAttachment"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkAttachmentDescription(VkAttachmentDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_feaQdqv=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_llbrmih=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_CQRwVUX=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_NRKMYOk=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_EJhrcJl=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_TxtaiIc=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_MlydDyQ=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_LeDAUSq=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_jqfrNuQ=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription deserialize_VkAttachmentDescription(json name){
        auto result=VkAttachmentDescription();
    
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference(VkAttachmentReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachment"]=[&]() {
    json return_uNJGQal=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_RtBZuIB=json({});
    return serialize_VkImageLayout(name.layout);}();
return result;}

    VkAttachmentReference deserialize_VkAttachmentReference(json name){
        auto result=VkAttachmentReference();
    
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
return result;}

    json serialize_VkSubpassDescription(VkSubpassDescription name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_mNmrdLJ=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_WLSxHyv=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_IBbEQdV=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_ohJylVG=json({});
    
        if (name.pInputAttachments==NULL){
            return_ohJylVG["null"]=true;
            return return_ohJylVG;
        }
        
        return_ohJylVG["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_gXDeouR=json({});
    return serialize_VkAttachmentReference(name.pInputAttachments[i]);}();
            return_ohJylVG["members"][std::to_string(i)].push_back(temp);
        }
        return return_ohJylVG;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_UXkIvrb=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_DTExXFN=json({});
    
        if (name.pColorAttachments==NULL){
            return_DTExXFN["null"]=true;
            return return_DTExXFN;
        }
        
        return_DTExXFN["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ZvBFXkO=json({});
    return serialize_VkAttachmentReference(name.pColorAttachments[i]);}();
            return_DTExXFN["members"][std::to_string(i)].push_back(temp);
        }
        return return_DTExXFN;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_StQmuhB=json({});
    
        if (name.pResolveAttachments==NULL){
            return_StQmuhB["null"]=true;
            return return_StQmuhB;
        }
        
        return_StQmuhB["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_HUTEVUX=json({});
    return serialize_VkAttachmentReference(name.pResolveAttachments[i]);}();
            return_StQmuhB["members"][std::to_string(i)].push_back(temp);
        }
        return return_StQmuhB;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_OZqDrVs=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_OZqDrVs["null"]=true;
            return return_OZqDrVs;
        }
        return_OZqDrVs=[&]() {
    json return_UZkaHOM=json({});
    return serialize_VkAttachmentReference(*name.pDepthStencilAttachment);}();
return return_OZqDrVs;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_EVXDvGb=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_nEdMNov=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_nEdMNov["null"]=true;
            return return_nEdMNov;
        }
        
        return_nEdMNov["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_QaDyptn=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_nEdMNov["members"][std::to_string(i)].push_back(temp);
        }
        return return_nEdMNov;
        }();
return result;}

    VkSubpassDescription deserialize_VkSubpassDescription(json name){
        auto result=VkSubpassDescription();
    
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_qWXHCHZ;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_qWXHCHZ=NULL;
        }
    temp_qWXHCHZ=(VkAttachmentReference*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference));
        for (int uzwbMhI=0; uzwbMhI < result.inputAttachmentCount; uzwbMhI++){
            [&]() {
temp_qWXHCHZ[uzwbMhI]=deserialize_VkAttachmentReference(name["members"]["pInputAttachments"]["members"][uzwbMhI]);}();;
        }
        }();result.pInputAttachments=temp_qWXHCHZ;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference* temp_xsLGWos;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_xsLGWos=NULL;
        }
    temp_xsLGWos=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int CGlDtKf=0; CGlDtKf < result.colorAttachmentCount; CGlDtKf++){
            [&]() {
temp_xsLGWos[CGlDtKf]=deserialize_VkAttachmentReference(name["members"]["pColorAttachments"]["members"][CGlDtKf]);}();;
        }
        }();result.pColorAttachments=temp_xsLGWos;}();
[&]() {
VkAttachmentReference* temp_myvzSqV;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_myvzSqV=NULL;
        }
    temp_myvzSqV=(VkAttachmentReference*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference));
        for (int JJHNYXF=0; JJHNYXF < result.colorAttachmentCount; JJHNYXF++){
            [&]() {
temp_myvzSqV[JJHNYXF]=deserialize_VkAttachmentReference(name["members"]["pResolveAttachments"]["members"][JJHNYXF]);}();;
        }
        }();result.pResolveAttachments=temp_myvzSqV;}();
[&]() {
VkAttachmentReference* temp_DRygwPz;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_DRygwPz=NULL;
        }
    [&]() {
*(temp_DRygwPz)=deserialize_VkAttachmentReference(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_DRygwPz;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_aUtRyvc;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_aUtRyvc=NULL;
        }
    temp_aUtRyvc=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int kEZXxbf=0; kEZXxbf < result.preserveAttachmentCount; kEZXxbf++){
            [&]() {
temp_aUtRyvc[kEZXxbf]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][kEZXxbf]);}();;
        }
        }();result.pPreserveAttachments=temp_aUtRyvc;}();
return result;}

    json serialize_VkSubpassDependency(VkSubpassDependency name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcSubpass"]=[&]() {
    json return_unEkjDV=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_djExjyO=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_gIYNXnW=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_zrWBeFo=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_hIkpSeu=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_bJmTmhg=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_TZWYDsK=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
return result;}

    VkSubpassDependency deserialize_VkSubpassDependency(json name){
        auto result=VkSubpassDependency();
    
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo(VkRenderPassCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IsbLIpR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wUkjeCO=json({});
    
        if (name.pNext==NULL){
            return_wUkjeCO["null"]=true;
            return return_wUkjeCO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_inQPNVz=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_SEmgVeO=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_GDxMPuY=json({});
    
        if (name.pAttachments==NULL){
            return_GDxMPuY["null"]=true;
            return return_GDxMPuY;
        }
        
        return_GDxMPuY["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_GYgQNov=json({});
    return serialize_VkAttachmentDescription(name.pAttachments[i]);}();
            return_GDxMPuY["members"][std::to_string(i)].push_back(temp);
        }
        return return_GDxMPuY;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_gNymsqU=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_sPxzNQy=json({});
    
        if (name.pSubpasses==NULL){
            return_sPxzNQy["null"]=true;
            return return_sPxzNQy;
        }
        
        return_sPxzNQy["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_SEnTmQY=json({});
    return serialize_VkSubpassDescription(name.pSubpasses[i]);}();
            return_sPxzNQy["members"][std::to_string(i)].push_back(temp);
        }
        return return_sPxzNQy;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_pxSBBgk=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_KaqVaOf=json({});
    
        if (name.pDependencies==NULL){
            return_KaqVaOf["null"]=true;
            return return_KaqVaOf;
        }
        
        return_KaqVaOf["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_aezsvku=json({});
    return serialize_VkSubpassDependency(name.pDependencies[i]);}();
            return_KaqVaOf["members"][std::to_string(i)].push_back(temp);
        }
        return return_KaqVaOf;
        }();
return result;}

    VkRenderPassCreateInfo deserialize_VkRenderPassCreateInfo(json name){
        auto result=VkRenderPassCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BRJOqjZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BRJOqjZ=NULL;
        }
    temp_BRJOqjZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BRJOqjZ;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription* temp_yOFUnuM;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_yOFUnuM=NULL;
        }
    temp_yOFUnuM=(VkAttachmentDescription*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription));
        for (int jNpKHgC=0; jNpKHgC < result.attachmentCount; jNpKHgC++){
            [&]() {
temp_yOFUnuM[jNpKHgC]=deserialize_VkAttachmentDescription(name["members"]["pAttachments"]["members"][jNpKHgC]);}();;
        }
        }();result.pAttachments=temp_yOFUnuM;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription* temp_JTeSWHB;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_JTeSWHB=NULL;
        }
    temp_JTeSWHB=(VkSubpassDescription*)malloc(result.subpassCount*sizeof(VkSubpassDescription));
        for (int ObraeDs=0; ObraeDs < result.subpassCount; ObraeDs++){
            [&]() {
temp_JTeSWHB[ObraeDs]=deserialize_VkSubpassDescription(name["members"]["pSubpasses"]["members"][ObraeDs]);}();;
        }
        }();result.pSubpasses=temp_JTeSWHB;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency* temp_GulkjkR;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_GulkjkR=NULL;
        }
    temp_GulkjkR=(VkSubpassDependency*)malloc(result.dependencyCount*sizeof(VkSubpassDependency));
        for (int XohJLSR=0; XohJLSR < result.dependencyCount; XohJLSR++){
            [&]() {
temp_GulkjkR[XohJLSR]=deserialize_VkSubpassDependency(name["members"]["pDependencies"]["members"][XohJLSR]);}();;
        }
        }();result.pDependencies=temp_GulkjkR;}();
return result;}

    json serialize_VkEventCreateInfo(VkEventCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CxnyxEy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KaFBYUW=json({});
    
        if (name.pNext==NULL){
            return_KaFBYUW["null"]=true;
            return return_KaFBYUW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AAtApiK=json({});
    return serialize_VkEventCreateFlags(name.flags);}();
return result;}

    VkEventCreateInfo deserialize_VkEventCreateInfo(json name){
        auto result=VkEventCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JZhWeCl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JZhWeCl=NULL;
        }
    temp_JZhWeCl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JZhWeCl;}();
[&]() {
result.flags=deserialize_VkEventCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkFenceCreateInfo(VkFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MDeUJcE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wwmnpAQ=json({});
    
        if (name.pNext==NULL){
            return_wwmnpAQ["null"]=true;
            return return_wwmnpAQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MCuqAGa=json({});
    return serialize_VkFenceCreateFlags(name.flags);}();
return result;}

    VkFenceCreateInfo deserialize_VkFenceCreateInfo(json name){
        auto result=VkFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OOgJXKR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OOgJXKR=NULL;
        }
    temp_OOgJXKR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OOgJXKR;}();
[&]() {
result.flags=deserialize_VkFenceCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures(VkPhysicalDeviceFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["robustBufferAccess"]=[&]() {
    json return_HnQpvqQ=json({});
    return_HnQpvqQ=[&]() {
    json return_lIpXdIK=json({});
    return serialize_uint32_t(name.robustBufferAccess);}();return return_HnQpvqQ;}();
result["members"]["fullDrawIndexUint32"]=[&]() {
    json return_eADECYM=json({});
    return_eADECYM=[&]() {
    json return_IzNDdMh=json({});
    return serialize_uint32_t(name.fullDrawIndexUint32);}();return return_eADECYM;}();
result["members"]["imageCubeArray"]=[&]() {
    json return_PMvLJhG=json({});
    return_PMvLJhG=[&]() {
    json return_MjHJuah=json({});
    return serialize_uint32_t(name.imageCubeArray);}();return return_PMvLJhG;}();
result["members"]["independentBlend"]=[&]() {
    json return_Dykomzq=json({});
    return_Dykomzq=[&]() {
    json return_osfljPT=json({});
    return serialize_uint32_t(name.independentBlend);}();return return_Dykomzq;}();
result["members"]["geometryShader"]=[&]() {
    json return_ScYNaBZ=json({});
    return_ScYNaBZ=[&]() {
    json return_OqmqkIB=json({});
    return serialize_uint32_t(name.geometryShader);}();return return_ScYNaBZ;}();
result["members"]["tessellationShader"]=[&]() {
    json return_JsnTzap=json({});
    return_JsnTzap=[&]() {
    json return_jSNvDjJ=json({});
    return serialize_uint32_t(name.tessellationShader);}();return return_JsnTzap;}();
result["members"]["sampleRateShading"]=[&]() {
    json return_zIktMOn=json({});
    return_zIktMOn=[&]() {
    json return_tGhfEVO=json({});
    return serialize_uint32_t(name.sampleRateShading);}();return return_zIktMOn;}();
result["members"]["dualSrcBlend"]=[&]() {
    json return_XYpgkbH=json({});
    return_XYpgkbH=[&]() {
    json return_DJUadLr=json({});
    return serialize_uint32_t(name.dualSrcBlend);}();return return_XYpgkbH;}();
result["members"]["logicOp"]=[&]() {
    json return_vKCivaD=json({});
    return_vKCivaD=[&]() {
    json return_KydvTCg=json({});
    return serialize_uint32_t(name.logicOp);}();return return_vKCivaD;}();
result["members"]["multiDrawIndirect"]=[&]() {
    json return_ryivvuA=json({});
    return_ryivvuA=[&]() {
    json return_rRmaUhH=json({});
    return serialize_uint32_t(name.multiDrawIndirect);}();return return_ryivvuA;}();
result["members"]["drawIndirectFirstInstance"]=[&]() {
    json return_mRiNHBS=json({});
    return_mRiNHBS=[&]() {
    json return_xlQJDDd=json({});
    return serialize_uint32_t(name.drawIndirectFirstInstance);}();return return_mRiNHBS;}();
result["members"]["depthClamp"]=[&]() {
    json return_fuNXxsJ=json({});
    return_fuNXxsJ=[&]() {
    json return_HPoNOzN=json({});
    return serialize_uint32_t(name.depthClamp);}();return return_fuNXxsJ;}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_JMPbbuG=json({});
    return_JMPbbuG=[&]() {
    json return_lFhWZDn=json({});
    return serialize_uint32_t(name.depthBiasClamp);}();return return_JMPbbuG;}();
result["members"]["fillModeNonSolid"]=[&]() {
    json return_JFcFWyl=json({});
    return_JFcFWyl=[&]() {
    json return_uXbqwdE=json({});
    return serialize_uint32_t(name.fillModeNonSolid);}();return return_JFcFWyl;}();
result["members"]["depthBounds"]=[&]() {
    json return_ItSghbz=json({});
    return_ItSghbz=[&]() {
    json return_VrjIAlu=json({});
    return serialize_uint32_t(name.depthBounds);}();return return_ItSghbz;}();
result["members"]["wideLines"]=[&]() {
    json return_nivCWHx=json({});
    return_nivCWHx=[&]() {
    json return_ioVONAE=json({});
    return serialize_uint32_t(name.wideLines);}();return return_nivCWHx;}();
result["members"]["largePoints"]=[&]() {
    json return_dxniQCV=json({});
    return_dxniQCV=[&]() {
    json return_pqKwAJT=json({});
    return serialize_uint32_t(name.largePoints);}();return return_dxniQCV;}();
result["members"]["alphaToOne"]=[&]() {
    json return_fzYgcLN=json({});
    return_fzYgcLN=[&]() {
    json return_HSnzQlE=json({});
    return serialize_uint32_t(name.alphaToOne);}();return return_fzYgcLN;}();
result["members"]["multiViewport"]=[&]() {
    json return_PLiFRld=json({});
    return_PLiFRld=[&]() {
    json return_Mlftmmw=json({});
    return serialize_uint32_t(name.multiViewport);}();return return_PLiFRld;}();
result["members"]["samplerAnisotropy"]=[&]() {
    json return_ADroKjx=json({});
    return_ADroKjx=[&]() {
    json return_ISoDSTp=json({});
    return serialize_uint32_t(name.samplerAnisotropy);}();return return_ADroKjx;}();
result["members"]["textureCompressionETC2"]=[&]() {
    json return_aNKJTrx=json({});
    return_aNKJTrx=[&]() {
    json return_NhguEdz=json({});
    return serialize_uint32_t(name.textureCompressionETC2);}();return return_aNKJTrx;}();
result["members"]["textureCompressionASTC_LDR"]=[&]() {
    json return_DdXmwnP=json({});
    return_DdXmwnP=[&]() {
    json return_ZjCgrvh=json({});
    return serialize_uint32_t(name.textureCompressionASTC_LDR);}();return return_DdXmwnP;}();
result["members"]["textureCompressionBC"]=[&]() {
    json return_rlnSgxe=json({});
    return_rlnSgxe=[&]() {
    json return_ZooCxCx=json({});
    return serialize_uint32_t(name.textureCompressionBC);}();return return_rlnSgxe;}();
result["members"]["occlusionQueryPrecise"]=[&]() {
    json return_gKtGdQJ=json({});
    return_gKtGdQJ=[&]() {
    json return_VbBCWoD=json({});
    return serialize_uint32_t(name.occlusionQueryPrecise);}();return return_gKtGdQJ;}();
result["members"]["pipelineStatisticsQuery"]=[&]() {
    json return_dLlHhtn=json({});
    return_dLlHhtn=[&]() {
    json return_nOhDEzs=json({});
    return serialize_uint32_t(name.pipelineStatisticsQuery);}();return return_dLlHhtn;}();
result["members"]["vertexPipelineStoresAndAtomics"]=[&]() {
    json return_NRJtLBn=json({});
    return_NRJtLBn=[&]() {
    json return_ravXOFj=json({});
    return serialize_uint32_t(name.vertexPipelineStoresAndAtomics);}();return return_NRJtLBn;}();
result["members"]["fragmentStoresAndAtomics"]=[&]() {
    json return_tmcmyvG=json({});
    return_tmcmyvG=[&]() {
    json return_iPsmntS=json({});
    return serialize_uint32_t(name.fragmentStoresAndAtomics);}();return return_tmcmyvG;}();
result["members"]["shaderTessellationAndGeometryPointSize"]=[&]() {
    json return_XxLlsdB=json({});
    return_XxLlsdB=[&]() {
    json return_sPthOkK=json({});
    return serialize_uint32_t(name.shaderTessellationAndGeometryPointSize);}();return return_XxLlsdB;}();
result["members"]["shaderImageGatherExtended"]=[&]() {
    json return_GcKZRLH=json({});
    return_GcKZRLH=[&]() {
    json return_kHRLFZL=json({});
    return serialize_uint32_t(name.shaderImageGatherExtended);}();return return_GcKZRLH;}();
result["members"]["shaderStorageImageExtendedFormats"]=[&]() {
    json return_iFUMBwk=json({});
    return_iFUMBwk=[&]() {
    json return_FAVNzYL=json({});
    return serialize_uint32_t(name.shaderStorageImageExtendedFormats);}();return return_iFUMBwk;}();
result["members"]["shaderStorageImageMultisample"]=[&]() {
    json return_GmNJxqa=json({});
    return_GmNJxqa=[&]() {
    json return_lKYPujJ=json({});
    return serialize_uint32_t(name.shaderStorageImageMultisample);}();return return_GmNJxqa;}();
result["members"]["shaderStorageImageReadWithoutFormat"]=[&]() {
    json return_pCfxoxn=json({});
    return_pCfxoxn=[&]() {
    json return_QNhwZtw=json({});
    return serialize_uint32_t(name.shaderStorageImageReadWithoutFormat);}();return return_pCfxoxn;}();
result["members"]["shaderStorageImageWriteWithoutFormat"]=[&]() {
    json return_taFaOWp=json({});
    return_taFaOWp=[&]() {
    json return_RSwdlsL=json({});
    return serialize_uint32_t(name.shaderStorageImageWriteWithoutFormat);}();return return_taFaOWp;}();
result["members"]["shaderUniformBufferArrayDynamicIndexing"]=[&]() {
    json return_EYClAqs=json({});
    return_EYClAqs=[&]() {
    json return_uUsLjWs=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayDynamicIndexing);}();return return_EYClAqs;}();
result["members"]["shaderSampledImageArrayDynamicIndexing"]=[&]() {
    json return_KQFJqUm=json({});
    return_KQFJqUm=[&]() {
    json return_vAhJCyi=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayDynamicIndexing);}();return return_KQFJqUm;}();
result["members"]["shaderStorageBufferArrayDynamicIndexing"]=[&]() {
    json return_WZUJagw=json({});
    return_WZUJagw=[&]() {
    json return_plKDvDr=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayDynamicIndexing);}();return return_WZUJagw;}();
result["members"]["shaderStorageImageArrayDynamicIndexing"]=[&]() {
    json return_PAxKGqx=json({});
    return_PAxKGqx=[&]() {
    json return_wCDFwtz=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayDynamicIndexing);}();return return_PAxKGqx;}();
result["members"]["shaderClipDistance"]=[&]() {
    json return_SDmzIjl=json({});
    return_SDmzIjl=[&]() {
    json return_GStLJGE=json({});
    return serialize_uint32_t(name.shaderClipDistance);}();return return_SDmzIjl;}();
result["members"]["shaderCullDistance"]=[&]() {
    json return_HGpzirf=json({});
    return_HGpzirf=[&]() {
    json return_ZneeyQf=json({});
    return serialize_uint32_t(name.shaderCullDistance);}();return return_HGpzirf;}();
result["members"]["shaderFloat64"]=[&]() {
    json return_ikdWVAb=json({});
    return_ikdWVAb=[&]() {
    json return_ASiHfYF=json({});
    return serialize_uint32_t(name.shaderFloat64);}();return return_ikdWVAb;}();
result["members"]["shaderInt64"]=[&]() {
    json return_IYQhzOs=json({});
    return_IYQhzOs=[&]() {
    json return_lpebRVZ=json({});
    return serialize_uint32_t(name.shaderInt64);}();return return_IYQhzOs;}();
result["members"]["shaderInt16"]=[&]() {
    json return_krneItN=json({});
    return_krneItN=[&]() {
    json return_chKurTt=json({});
    return serialize_uint32_t(name.shaderInt16);}();return return_krneItN;}();
result["members"]["shaderResourceResidency"]=[&]() {
    json return_iZLgGYz=json({});
    return_iZLgGYz=[&]() {
    json return_nqRDvLz=json({});
    return serialize_uint32_t(name.shaderResourceResidency);}();return return_iZLgGYz;}();
result["members"]["shaderResourceMinLod"]=[&]() {
    json return_YERiuAr=json({});
    return_YERiuAr=[&]() {
    json return_FdjQNRt=json({});
    return serialize_uint32_t(name.shaderResourceMinLod);}();return return_YERiuAr;}();
result["members"]["sparseBinding"]=[&]() {
    json return_WCBLiGm=json({});
    return_WCBLiGm=[&]() {
    json return_qZyHYyk=json({});
    return serialize_uint32_t(name.sparseBinding);}();return return_WCBLiGm;}();
result["members"]["sparseResidencyBuffer"]=[&]() {
    json return_ldduiCz=json({});
    return_ldduiCz=[&]() {
    json return_WoaBQxB=json({});
    return serialize_uint32_t(name.sparseResidencyBuffer);}();return return_ldduiCz;}();
result["members"]["sparseResidencyImage2D"]=[&]() {
    json return_EDeigvU=json({});
    return_EDeigvU=[&]() {
    json return_ZOUFCDE=json({});
    return serialize_uint32_t(name.sparseResidencyImage2D);}();return return_EDeigvU;}();
result["members"]["sparseResidencyImage3D"]=[&]() {
    json return_nvWHtwo=json({});
    return_nvWHtwo=[&]() {
    json return_sMeEYMp=json({});
    return serialize_uint32_t(name.sparseResidencyImage3D);}();return return_nvWHtwo;}();
result["members"]["sparseResidency2Samples"]=[&]() {
    json return_Ransnyf=json({});
    return_Ransnyf=[&]() {
    json return_BoronzK=json({});
    return serialize_uint32_t(name.sparseResidency2Samples);}();return return_Ransnyf;}();
result["members"]["sparseResidency4Samples"]=[&]() {
    json return_fsoCmeW=json({});
    return_fsoCmeW=[&]() {
    json return_UKWfeVU=json({});
    return serialize_uint32_t(name.sparseResidency4Samples);}();return return_fsoCmeW;}();
result["members"]["sparseResidency8Samples"]=[&]() {
    json return_EyfjIoI=json({});
    return_EyfjIoI=[&]() {
    json return_JJZBJTo=json({});
    return serialize_uint32_t(name.sparseResidency8Samples);}();return return_EyfjIoI;}();
result["members"]["sparseResidency16Samples"]=[&]() {
    json return_jzZnYOP=json({});
    return_jzZnYOP=[&]() {
    json return_BLvnEln=json({});
    return serialize_uint32_t(name.sparseResidency16Samples);}();return return_jzZnYOP;}();
result["members"]["sparseResidencyAliased"]=[&]() {
    json return_JuzeSFy=json({});
    return_JuzeSFy=[&]() {
    json return_NucvYok=json({});
    return serialize_uint32_t(name.sparseResidencyAliased);}();return return_JuzeSFy;}();
result["members"]["variableMultisampleRate"]=[&]() {
    json return_YdsnejI=json({});
    return_YdsnejI=[&]() {
    json return_UjmqSXk=json({});
    return serialize_uint32_t(name.variableMultisampleRate);}();return return_YdsnejI;}();
result["members"]["inheritedQueries"]=[&]() {
    json return_sICNbhe=json({});
    return_sICNbhe=[&]() {
    json return_ypmDgwS=json({});
    return serialize_uint32_t(name.inheritedQueries);}();return return_sICNbhe;}();
return result;}

    VkPhysicalDeviceFeatures deserialize_VkPhysicalDeviceFeatures(json name){
        auto result=VkPhysicalDeviceFeatures();
    
[&]() {
[&]() {
result.robustBufferAccess=deserialize_uint32_t(name["members"]["robustBufferAccess"]);}();}();
[&]() {
[&]() {
result.fullDrawIndexUint32=deserialize_uint32_t(name["members"]["fullDrawIndexUint32"]);}();}();
[&]() {
[&]() {
result.imageCubeArray=deserialize_uint32_t(name["members"]["imageCubeArray"]);}();}();
[&]() {
[&]() {
result.independentBlend=deserialize_uint32_t(name["members"]["independentBlend"]);}();}();
[&]() {
[&]() {
result.geometryShader=deserialize_uint32_t(name["members"]["geometryShader"]);}();}();
[&]() {
[&]() {
result.tessellationShader=deserialize_uint32_t(name["members"]["tessellationShader"]);}();}();
[&]() {
[&]() {
result.sampleRateShading=deserialize_uint32_t(name["members"]["sampleRateShading"]);}();}();
[&]() {
[&]() {
result.dualSrcBlend=deserialize_uint32_t(name["members"]["dualSrcBlend"]);}();}();
[&]() {
[&]() {
result.logicOp=deserialize_uint32_t(name["members"]["logicOp"]);}();}();
[&]() {
[&]() {
result.multiDrawIndirect=deserialize_uint32_t(name["members"]["multiDrawIndirect"]);}();}();
[&]() {
[&]() {
result.drawIndirectFirstInstance=deserialize_uint32_t(name["members"]["drawIndirectFirstInstance"]);}();}();
[&]() {
[&]() {
result.depthClamp=deserialize_uint32_t(name["members"]["depthClamp"]);}();}();
[&]() {
[&]() {
result.depthBiasClamp=deserialize_uint32_t(name["members"]["depthBiasClamp"]);}();}();
[&]() {
[&]() {
result.fillModeNonSolid=deserialize_uint32_t(name["members"]["fillModeNonSolid"]);}();}();
[&]() {
[&]() {
result.depthBounds=deserialize_uint32_t(name["members"]["depthBounds"]);}();}();
[&]() {
[&]() {
result.wideLines=deserialize_uint32_t(name["members"]["wideLines"]);}();}();
[&]() {
[&]() {
result.largePoints=deserialize_uint32_t(name["members"]["largePoints"]);}();}();
[&]() {
[&]() {
result.alphaToOne=deserialize_uint32_t(name["members"]["alphaToOne"]);}();}();
[&]() {
[&]() {
result.multiViewport=deserialize_uint32_t(name["members"]["multiViewport"]);}();}();
[&]() {
[&]() {
result.samplerAnisotropy=deserialize_uint32_t(name["members"]["samplerAnisotropy"]);}();}();
[&]() {
[&]() {
result.textureCompressionETC2=deserialize_uint32_t(name["members"]["textureCompressionETC2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_LDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_LDR"]);}();}();
[&]() {
[&]() {
result.textureCompressionBC=deserialize_uint32_t(name["members"]["textureCompressionBC"]);}();}();
[&]() {
[&]() {
result.occlusionQueryPrecise=deserialize_uint32_t(name["members"]["occlusionQueryPrecise"]);}();}();
[&]() {
[&]() {
result.pipelineStatisticsQuery=deserialize_uint32_t(name["members"]["pipelineStatisticsQuery"]);}();}();
[&]() {
[&]() {
result.vertexPipelineStoresAndAtomics=deserialize_uint32_t(name["members"]["vertexPipelineStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.fragmentStoresAndAtomics=deserialize_uint32_t(name["members"]["fragmentStoresAndAtomics"]);}();}();
[&]() {
[&]() {
result.shaderTessellationAndGeometryPointSize=deserialize_uint32_t(name["members"]["shaderTessellationAndGeometryPointSize"]);}();}();
[&]() {
[&]() {
result.shaderImageGatherExtended=deserialize_uint32_t(name["members"]["shaderImageGatherExtended"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageExtendedFormats=deserialize_uint32_t(name["members"]["shaderStorageImageExtendedFormats"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageMultisample=deserialize_uint32_t(name["members"]["shaderStorageImageMultisample"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageReadWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageReadWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageWriteWithoutFormat=deserialize_uint32_t(name["members"]["shaderStorageImageWriteWithoutFormat"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderClipDistance=deserialize_uint32_t(name["members"]["shaderClipDistance"]);}();}();
[&]() {
[&]() {
result.shaderCullDistance=deserialize_uint32_t(name["members"]["shaderCullDistance"]);}();}();
[&]() {
[&]() {
result.shaderFloat64=deserialize_uint32_t(name["members"]["shaderFloat64"]);}();}();
[&]() {
[&]() {
result.shaderInt64=deserialize_uint32_t(name["members"]["shaderInt64"]);}();}();
[&]() {
[&]() {
result.shaderInt16=deserialize_uint32_t(name["members"]["shaderInt16"]);}();}();
[&]() {
[&]() {
result.shaderResourceResidency=deserialize_uint32_t(name["members"]["shaderResourceResidency"]);}();}();
[&]() {
[&]() {
result.shaderResourceMinLod=deserialize_uint32_t(name["members"]["shaderResourceMinLod"]);}();}();
[&]() {
[&]() {
result.sparseBinding=deserialize_uint32_t(name["members"]["sparseBinding"]);}();}();
[&]() {
[&]() {
result.sparseResidencyBuffer=deserialize_uint32_t(name["members"]["sparseResidencyBuffer"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage2D=deserialize_uint32_t(name["members"]["sparseResidencyImage2D"]);}();}();
[&]() {
[&]() {
result.sparseResidencyImage3D=deserialize_uint32_t(name["members"]["sparseResidencyImage3D"]);}();}();
[&]() {
[&]() {
result.sparseResidency2Samples=deserialize_uint32_t(name["members"]["sparseResidency2Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency4Samples=deserialize_uint32_t(name["members"]["sparseResidency4Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency8Samples=deserialize_uint32_t(name["members"]["sparseResidency8Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidency16Samples=deserialize_uint32_t(name["members"]["sparseResidency16Samples"]);}();}();
[&]() {
[&]() {
result.sparseResidencyAliased=deserialize_uint32_t(name["members"]["sparseResidencyAliased"]);}();}();
[&]() {
[&]() {
result.variableMultisampleRate=deserialize_uint32_t(name["members"]["variableMultisampleRate"]);}();}();
[&]() {
[&]() {
result.inheritedQueries=deserialize_uint32_t(name["members"]["inheritedQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSparseProperties(VkPhysicalDeviceSparseProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["residencyStandard2DBlockShape"]=[&]() {
    json return_AexoAag=json({});
    return_AexoAag=[&]() {
    json return_ObAhQcl=json({});
    return serialize_uint32_t(name.residencyStandard2DBlockShape);}();return return_AexoAag;}();
result["members"]["residencyStandard2DMultisampleBlockShape"]=[&]() {
    json return_QBVfXRx=json({});
    return_QBVfXRx=[&]() {
    json return_iPqSzpV=json({});
    return serialize_uint32_t(name.residencyStandard2DMultisampleBlockShape);}();return return_QBVfXRx;}();
result["members"]["residencyStandard3DBlockShape"]=[&]() {
    json return_fojgWpd=json({});
    return_fojgWpd=[&]() {
    json return_ItgoJiQ=json({});
    return serialize_uint32_t(name.residencyStandard3DBlockShape);}();return return_fojgWpd;}();
result["members"]["residencyAlignedMipSize"]=[&]() {
    json return_eLkuPNB=json({});
    return_eLkuPNB=[&]() {
    json return_PFJOpEk=json({});
    return serialize_uint32_t(name.residencyAlignedMipSize);}();return return_eLkuPNB;}();
result["members"]["residencyNonResidentStrict"]=[&]() {
    json return_ySFLVsi=json({});
    return_ySFLVsi=[&]() {
    json return_iTuhDxz=json({});
    return serialize_uint32_t(name.residencyNonResidentStrict);}();return return_ySFLVsi;}();
return result;}

    VkPhysicalDeviceSparseProperties deserialize_VkPhysicalDeviceSparseProperties(json name){
        auto result=VkPhysicalDeviceSparseProperties();
    
[&]() {
[&]() {
result.residencyStandard2DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard2DMultisampleBlockShape=deserialize_uint32_t(name["members"]["residencyStandard2DMultisampleBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyStandard3DBlockShape=deserialize_uint32_t(name["members"]["residencyStandard3DBlockShape"]);}();}();
[&]() {
[&]() {
result.residencyAlignedMipSize=deserialize_uint32_t(name["members"]["residencyAlignedMipSize"]);}();}();
[&]() {
[&]() {
result.residencyNonResidentStrict=deserialize_uint32_t(name["members"]["residencyNonResidentStrict"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLimits(VkPhysicalDeviceLimits name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["maxImageDimension1D"]=[&]() {
    json return_qybvpHc=json({});
    return serialize_uint32_t(name.maxImageDimension1D);}();
result["members"]["maxImageDimension2D"]=[&]() {
    json return_TnFUMvV=json({});
    return serialize_uint32_t(name.maxImageDimension2D);}();
result["members"]["maxImageDimension3D"]=[&]() {
    json return_sBrugfr=json({});
    return serialize_uint32_t(name.maxImageDimension3D);}();
result["members"]["maxImageDimensionCube"]=[&]() {
    json return_xPrHJAb=json({});
    return serialize_uint32_t(name.maxImageDimensionCube);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_oFPJveU=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["maxTexelBufferElements"]=[&]() {
    json return_QCOWbqr=json({});
    return serialize_uint32_t(name.maxTexelBufferElements);}();
result["members"]["maxUniformBufferRange"]=[&]() {
    json return_rjnJjKQ=json({});
    return serialize_uint32_t(name.maxUniformBufferRange);}();
result["members"]["maxStorageBufferRange"]=[&]() {
    json return_qnCePnD=json({});
    return serialize_uint32_t(name.maxStorageBufferRange);}();
result["members"]["maxPushConstantsSize"]=[&]() {
    json return_izhbynU=json({});
    return serialize_uint32_t(name.maxPushConstantsSize);}();
result["members"]["maxMemoryAllocationCount"]=[&]() {
    json return_olOOFpP=json({});
    return serialize_uint32_t(name.maxMemoryAllocationCount);}();
result["members"]["maxSamplerAllocationCount"]=[&]() {
    json return_NoTUivX=json({});
    return serialize_uint32_t(name.maxSamplerAllocationCount);}();
result["members"]["bufferImageGranularity"]=[&]() {
    json return_YslnKIo=json({});
    return_YslnKIo=[&]() {
    json return_jCtzYdI=json({});
    return serialize_uint64_t(name.bufferImageGranularity);}();return return_YslnKIo;}();
result["members"]["sparseAddressSpaceSize"]=[&]() {
    json return_MhNvzUI=json({});
    return_MhNvzUI=[&]() {
    json return_CINQNYa=json({});
    return serialize_uint64_t(name.sparseAddressSpaceSize);}();return return_MhNvzUI;}();
result["members"]["maxBoundDescriptorSets"]=[&]() {
    json return_tbuTwbb=json({});
    return serialize_uint32_t(name.maxBoundDescriptorSets);}();
result["members"]["maxPerStageDescriptorSamplers"]=[&]() {
    json return_LCMNPRP=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSamplers);}();
result["members"]["maxPerStageDescriptorUniformBuffers"]=[&]() {
    json return_YynaUYi=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUniformBuffers);}();
result["members"]["maxPerStageDescriptorStorageBuffers"]=[&]() {
    json return_KvGvIlh=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageBuffers);}();
result["members"]["maxPerStageDescriptorSampledImages"]=[&]() {
    json return_fHHvBdR=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorSampledImages);}();
result["members"]["maxPerStageDescriptorStorageImages"]=[&]() {
    json return_ijaEQzy=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorStorageImages);}();
result["members"]["maxPerStageDescriptorInputAttachments"]=[&]() {
    json return_kWvgErI=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInputAttachments);}();
result["members"]["maxPerStageResources"]=[&]() {
    json return_xKiJdcX=json({});
    return serialize_uint32_t(name.maxPerStageResources);}();
result["members"]["maxDescriptorSetSamplers"]=[&]() {
    json return_sLtDSUb=json({});
    return serialize_uint32_t(name.maxDescriptorSetSamplers);}();
result["members"]["maxDescriptorSetUniformBuffers"]=[&]() {
    json return_HotQguv=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffers);}();
result["members"]["maxDescriptorSetUniformBuffersDynamic"]=[&]() {
    json return_bSJwmzG=json({});
    return serialize_uint32_t(name.maxDescriptorSetUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetStorageBuffers"]=[&]() {
    json return_bFMXkZl=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffers);}();
result["members"]["maxDescriptorSetStorageBuffersDynamic"]=[&]() {
    json return_uNyXBXg=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetSampledImages"]=[&]() {
    json return_YEypiWz=json({});
    return serialize_uint32_t(name.maxDescriptorSetSampledImages);}();
result["members"]["maxDescriptorSetStorageImages"]=[&]() {
    json return_lgTMrKC=json({});
    return serialize_uint32_t(name.maxDescriptorSetStorageImages);}();
result["members"]["maxDescriptorSetInputAttachments"]=[&]() {
    json return_DaYinrq=json({});
    return serialize_uint32_t(name.maxDescriptorSetInputAttachments);}();
result["members"]["maxVertexInputAttributes"]=[&]() {
    json return_MqlVPMJ=json({});
    return serialize_uint32_t(name.maxVertexInputAttributes);}();
result["members"]["maxVertexInputBindings"]=[&]() {
    json return_AILMcGx=json({});
    return serialize_uint32_t(name.maxVertexInputBindings);}();
result["members"]["maxVertexInputAttributeOffset"]=[&]() {
    json return_RAuKYrK=json({});
    return serialize_uint32_t(name.maxVertexInputAttributeOffset);}();
result["members"]["maxVertexInputBindingStride"]=[&]() {
    json return_wVJZeXe=json({});
    return serialize_uint32_t(name.maxVertexInputBindingStride);}();
result["members"]["maxVertexOutputComponents"]=[&]() {
    json return_qJwzqBU=json({});
    return serialize_uint32_t(name.maxVertexOutputComponents);}();
result["members"]["maxTessellationGenerationLevel"]=[&]() {
    json return_zwTUrcC=json({});
    return serialize_uint32_t(name.maxTessellationGenerationLevel);}();
result["members"]["maxTessellationPatchSize"]=[&]() {
    json return_GHBItzK=json({});
    return serialize_uint32_t(name.maxTessellationPatchSize);}();
result["members"]["maxTessellationControlPerVertexInputComponents"]=[&]() {
    json return_lbdDerk=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexInputComponents);}();
result["members"]["maxTessellationControlPerVertexOutputComponents"]=[&]() {
    json return_WvFAwwn=json({});
    return serialize_uint32_t(name.maxTessellationControlPerVertexOutputComponents);}();
result["members"]["maxTessellationControlPerPatchOutputComponents"]=[&]() {
    json return_xJAImhl=json({});
    return serialize_uint32_t(name.maxTessellationControlPerPatchOutputComponents);}();
result["members"]["maxTessellationControlTotalOutputComponents"]=[&]() {
    json return_IZGvapQ=json({});
    return serialize_uint32_t(name.maxTessellationControlTotalOutputComponents);}();
result["members"]["maxTessellationEvaluationInputComponents"]=[&]() {
    json return_ZaIoNyg=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationInputComponents);}();
result["members"]["maxTessellationEvaluationOutputComponents"]=[&]() {
    json return_ALeUKrp=json({});
    return serialize_uint32_t(name.maxTessellationEvaluationOutputComponents);}();
result["members"]["maxGeometryShaderInvocations"]=[&]() {
    json return_JXssONR=json({});
    return serialize_uint32_t(name.maxGeometryShaderInvocations);}();
result["members"]["maxGeometryInputComponents"]=[&]() {
    json return_XWdlRdk=json({});
    return serialize_uint32_t(name.maxGeometryInputComponents);}();
result["members"]["maxGeometryOutputComponents"]=[&]() {
    json return_vedZLez=json({});
    return serialize_uint32_t(name.maxGeometryOutputComponents);}();
result["members"]["maxGeometryOutputVertices"]=[&]() {
    json return_xyrzdXI=json({});
    return serialize_uint32_t(name.maxGeometryOutputVertices);}();
result["members"]["maxGeometryTotalOutputComponents"]=[&]() {
    json return_RLAGcFe=json({});
    return serialize_uint32_t(name.maxGeometryTotalOutputComponents);}();
result["members"]["maxFragmentInputComponents"]=[&]() {
    json return_GzrKsRZ=json({});
    return serialize_uint32_t(name.maxFragmentInputComponents);}();
result["members"]["maxFragmentOutputAttachments"]=[&]() {
    json return_NcxZDZF=json({});
    return serialize_uint32_t(name.maxFragmentOutputAttachments);}();
result["members"]["maxFragmentDualSrcAttachments"]=[&]() {
    json return_JosYZsx=json({});
    return serialize_uint32_t(name.maxFragmentDualSrcAttachments);}();
result["members"]["maxFragmentCombinedOutputResources"]=[&]() {
    json return_UvmAeMY=json({});
    return serialize_uint32_t(name.maxFragmentCombinedOutputResources);}();
result["members"]["maxComputeSharedMemorySize"]=[&]() {
    json return_VNBZIOm=json({});
    return serialize_uint32_t(name.maxComputeSharedMemorySize);}();
result["members"]["maxComputeWorkGroupCount"]=[&]() {
    json return_kLHqJfr=json({});
    
        return_kLHqJfr["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_LPhHCmO=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupCount[i]);}();
            return_kLHqJfr["members"][std::to_string(i)].push_back(temp);
        }
        return return_kLHqJfr;
        }();
result["members"]["maxComputeWorkGroupInvocations"]=[&]() {
    json return_sygYqdT=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupInvocations);}();
result["members"]["maxComputeWorkGroupSize"]=[&]() {
    json return_HNSZjdO=json({});
    
        return_HNSZjdO["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_eTZjQJT=json({});
    return serialize_uint32_t(name.maxComputeWorkGroupSize[i]);}();
            return_HNSZjdO["members"][std::to_string(i)].push_back(temp);
        }
        return return_HNSZjdO;
        }();
result["members"]["subPixelPrecisionBits"]=[&]() {
    json return_hPrhNPK=json({});
    return serialize_uint32_t(name.subPixelPrecisionBits);}();
result["members"]["subTexelPrecisionBits"]=[&]() {
    json return_oSGGWMK=json({});
    return serialize_uint32_t(name.subTexelPrecisionBits);}();
result["members"]["mipmapPrecisionBits"]=[&]() {
    json return_xisamfB=json({});
    return serialize_uint32_t(name.mipmapPrecisionBits);}();
result["members"]["maxDrawIndexedIndexValue"]=[&]() {
    json return_zlkeowq=json({});
    return serialize_uint32_t(name.maxDrawIndexedIndexValue);}();
result["members"]["maxDrawIndirectCount"]=[&]() {
    json return_BbKtoxy=json({});
    return serialize_uint32_t(name.maxDrawIndirectCount);}();
result["members"]["maxSamplerLodBias"]=[&]() {
    json return_CWUaszb=json({});
    return serialize_float(name.maxSamplerLodBias);}();
result["members"]["maxSamplerAnisotropy"]=[&]() {
    json return_cSTxjxX=json({});
    return serialize_float(name.maxSamplerAnisotropy);}();
result["members"]["maxViewports"]=[&]() {
    json return_uYKLyVo=json({});
    return serialize_uint32_t(name.maxViewports);}();
result["members"]["maxViewportDimensions"]=[&]() {
    json return_TbzIERH=json({});
    
        return_TbzIERH["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_otAGKsh=json({});
    return serialize_uint32_t(name.maxViewportDimensions[i]);}();
            return_TbzIERH["members"][std::to_string(i)].push_back(temp);
        }
        return return_TbzIERH;
        }();
result["members"]["viewportBoundsRange"]=[&]() {
    json return_FXZhWqt=json({});
    
        return_FXZhWqt["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_wgldvng=json({});
    return serialize_float(name.viewportBoundsRange[i]);}();
            return_FXZhWqt["members"][std::to_string(i)].push_back(temp);
        }
        return return_FXZhWqt;
        }();
result["members"]["viewportSubPixelBits"]=[&]() {
    json return_ifKkxrf=json({});
    return serialize_uint32_t(name.viewportSubPixelBits);}();
result["members"]["minMemoryMapAlignment"]=[&]() {
    json return_KoARKwh=json({});
    return serialize_size_t(name.minMemoryMapAlignment);}();
result["members"]["minTexelBufferOffsetAlignment"]=[&]() {
    json return_IzHCLnJ=json({});
    return_IzHCLnJ=[&]() {
    json return_iumQDpp=json({});
    return serialize_uint64_t(name.minTexelBufferOffsetAlignment);}();return return_IzHCLnJ;}();
result["members"]["minUniformBufferOffsetAlignment"]=[&]() {
    json return_mBQjmve=json({});
    return_mBQjmve=[&]() {
    json return_FrTtKLn=json({});
    return serialize_uint64_t(name.minUniformBufferOffsetAlignment);}();return return_mBQjmve;}();
result["members"]["minStorageBufferOffsetAlignment"]=[&]() {
    json return_ekUeIkz=json({});
    return_ekUeIkz=[&]() {
    json return_eagHGPT=json({});
    return serialize_uint64_t(name.minStorageBufferOffsetAlignment);}();return return_ekUeIkz;}();
result["members"]["minTexelOffset"]=[&]() {
    json return_rQKmDyn=json({});
    return serialize_int32_t(name.minTexelOffset);}();
result["members"]["maxTexelOffset"]=[&]() {
    json return_xgcJUtL=json({});
    return serialize_uint32_t(name.maxTexelOffset);}();
result["members"]["minTexelGatherOffset"]=[&]() {
    json return_hsBjbTA=json({});
    return serialize_int32_t(name.minTexelGatherOffset);}();
result["members"]["maxTexelGatherOffset"]=[&]() {
    json return_zaTmEbH=json({});
    return serialize_uint32_t(name.maxTexelGatherOffset);}();
result["members"]["minInterpolationOffset"]=[&]() {
    json return_kgvdcLg=json({});
    return serialize_float(name.minInterpolationOffset);}();
result["members"]["maxInterpolationOffset"]=[&]() {
    json return_jWhRlho=json({});
    return serialize_float(name.maxInterpolationOffset);}();
result["members"]["subPixelInterpolationOffsetBits"]=[&]() {
    json return_UvRNwJm=json({});
    return serialize_uint32_t(name.subPixelInterpolationOffsetBits);}();
result["members"]["maxFramebufferWidth"]=[&]() {
    json return_JwzoXky=json({});
    return serialize_uint32_t(name.maxFramebufferWidth);}();
result["members"]["maxFramebufferHeight"]=[&]() {
    json return_lvyHcMA=json({});
    return serialize_uint32_t(name.maxFramebufferHeight);}();
result["members"]["maxFramebufferLayers"]=[&]() {
    json return_bxDCRGZ=json({});
    return serialize_uint32_t(name.maxFramebufferLayers);}();
result["members"]["framebufferColorSampleCounts"]=[&]() {
    json return_fdOaSzz=json({});
    return serialize_VkSampleCountFlags(name.framebufferColorSampleCounts);}();
result["members"]["framebufferDepthSampleCounts"]=[&]() {
    json return_kmBFylu=json({});
    return serialize_VkSampleCountFlags(name.framebufferDepthSampleCounts);}();
result["members"]["framebufferStencilSampleCounts"]=[&]() {
    json return_eoWbiOK=json({});
    return serialize_VkSampleCountFlags(name.framebufferStencilSampleCounts);}();
result["members"]["framebufferNoAttachmentsSampleCounts"]=[&]() {
    json return_MQIWnyN=json({});
    return serialize_VkSampleCountFlags(name.framebufferNoAttachmentsSampleCounts);}();
result["members"]["maxColorAttachments"]=[&]() {
    json return_invwyJK=json({});
    return serialize_uint32_t(name.maxColorAttachments);}();
result["members"]["sampledImageColorSampleCounts"]=[&]() {
    json return_TSuQlgR=json({});
    return serialize_VkSampleCountFlags(name.sampledImageColorSampleCounts);}();
result["members"]["sampledImageIntegerSampleCounts"]=[&]() {
    json return_WEBLGMp=json({});
    return serialize_VkSampleCountFlags(name.sampledImageIntegerSampleCounts);}();
result["members"]["sampledImageDepthSampleCounts"]=[&]() {
    json return_yJivSen=json({});
    return serialize_VkSampleCountFlags(name.sampledImageDepthSampleCounts);}();
result["members"]["sampledImageStencilSampleCounts"]=[&]() {
    json return_WgUgAYX=json({});
    return serialize_VkSampleCountFlags(name.sampledImageStencilSampleCounts);}();
result["members"]["storageImageSampleCounts"]=[&]() {
    json return_hloFrZh=json({});
    return serialize_VkSampleCountFlags(name.storageImageSampleCounts);}();
result["members"]["maxSampleMaskWords"]=[&]() {
    json return_ujlMYxj=json({});
    return serialize_uint32_t(name.maxSampleMaskWords);}();
result["members"]["timestampComputeAndGraphics"]=[&]() {
    json return_fIOuMNh=json({});
    return_fIOuMNh=[&]() {
    json return_bcohEwg=json({});
    return serialize_uint32_t(name.timestampComputeAndGraphics);}();return return_fIOuMNh;}();
result["members"]["timestampPeriod"]=[&]() {
    json return_tdgqtIQ=json({});
    return serialize_float(name.timestampPeriod);}();
result["members"]["maxClipDistances"]=[&]() {
    json return_EagsIjj=json({});
    return serialize_uint32_t(name.maxClipDistances);}();
result["members"]["maxCullDistances"]=[&]() {
    json return_ERMaRPS=json({});
    return serialize_uint32_t(name.maxCullDistances);}();
result["members"]["maxCombinedClipAndCullDistances"]=[&]() {
    json return_PiaAIUf=json({});
    return serialize_uint32_t(name.maxCombinedClipAndCullDistances);}();
result["members"]["discreteQueuePriorities"]=[&]() {
    json return_NjEqwzg=json({});
    return serialize_uint32_t(name.discreteQueuePriorities);}();
result["members"]["pointSizeRange"]=[&]() {
    json return_MZPqUKX=json({});
    
        return_MZPqUKX["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_PXGuGVj=json({});
    return serialize_float(name.pointSizeRange[i]);}();
            return_MZPqUKX["members"][std::to_string(i)].push_back(temp);
        }
        return return_MZPqUKX;
        }();
result["members"]["lineWidthRange"]=[&]() {
    json return_fpNlylj=json({});
    
        return_fpNlylj["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_NvcDxzB=json({});
    return serialize_float(name.lineWidthRange[i]);}();
            return_fpNlylj["members"][std::to_string(i)].push_back(temp);
        }
        return return_fpNlylj;
        }();
result["members"]["pointSizeGranularity"]=[&]() {
    json return_QhVAOXn=json({});
    return serialize_float(name.pointSizeGranularity);}();
result["members"]["lineWidthGranularity"]=[&]() {
    json return_GPjHOzK=json({});
    return serialize_float(name.lineWidthGranularity);}();
result["members"]["strictLines"]=[&]() {
    json return_OHuiQhW=json({});
    return_OHuiQhW=[&]() {
    json return_JqPEddI=json({});
    return serialize_uint32_t(name.strictLines);}();return return_OHuiQhW;}();
result["members"]["standardSampleLocations"]=[&]() {
    json return_cscXRIO=json({});
    return_cscXRIO=[&]() {
    json return_tQxbNJV=json({});
    return serialize_uint32_t(name.standardSampleLocations);}();return return_cscXRIO;}();
result["members"]["optimalBufferCopyOffsetAlignment"]=[&]() {
    json return_FxAqIdC=json({});
    return_FxAqIdC=[&]() {
    json return_uOEDadC=json({});
    return serialize_uint64_t(name.optimalBufferCopyOffsetAlignment);}();return return_FxAqIdC;}();
result["members"]["optimalBufferCopyRowPitchAlignment"]=[&]() {
    json return_TWecGLl=json({});
    return_TWecGLl=[&]() {
    json return_GsRQRyl=json({});
    return serialize_uint64_t(name.optimalBufferCopyRowPitchAlignment);}();return return_TWecGLl;}();
result["members"]["nonCoherentAtomSize"]=[&]() {
    json return_bnZZvnc=json({});
    return_bnZZvnc=[&]() {
    json return_QebjDQF=json({});
    return serialize_uint64_t(name.nonCoherentAtomSize);}();return return_bnZZvnc;}();
return result;}

    VkPhysicalDeviceLimits deserialize_VkPhysicalDeviceLimits(json name){
        auto result=VkPhysicalDeviceLimits();
    
[&]() {
result.maxImageDimension1D=deserialize_uint32_t(name["members"]["maxImageDimension1D"]);}();
[&]() {
result.maxImageDimension2D=deserialize_uint32_t(name["members"]["maxImageDimension2D"]);}();
[&]() {
result.maxImageDimension3D=deserialize_uint32_t(name["members"]["maxImageDimension3D"]);}();
[&]() {
result.maxImageDimensionCube=deserialize_uint32_t(name["members"]["maxImageDimensionCube"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.maxTexelBufferElements=deserialize_uint32_t(name["members"]["maxTexelBufferElements"]);}();
[&]() {
result.maxUniformBufferRange=deserialize_uint32_t(name["members"]["maxUniformBufferRange"]);}();
[&]() {
result.maxStorageBufferRange=deserialize_uint32_t(name["members"]["maxStorageBufferRange"]);}();
[&]() {
result.maxPushConstantsSize=deserialize_uint32_t(name["members"]["maxPushConstantsSize"]);}();
[&]() {
result.maxMemoryAllocationCount=deserialize_uint32_t(name["members"]["maxMemoryAllocationCount"]);}();
[&]() {
result.maxSamplerAllocationCount=deserialize_uint32_t(name["members"]["maxSamplerAllocationCount"]);}();
[&]() {
[&]() {
result.bufferImageGranularity=deserialize_uint64_t(name["members"]["bufferImageGranularity"]);}();}();
[&]() {
[&]() {
result.sparseAddressSpaceSize=deserialize_uint64_t(name["members"]["sparseAddressSpaceSize"]);}();}();
[&]() {
result.maxBoundDescriptorSets=deserialize_uint32_t(name["members"]["maxBoundDescriptorSets"]);}();
[&]() {
result.maxPerStageDescriptorSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInputAttachments"]);}();
[&]() {
result.maxPerStageResources=deserialize_uint32_t(name["members"]["maxPerStageResources"]);}();
[&]() {
result.maxDescriptorSetSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSamplers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetSampledImages"]);}();
[&]() {
result.maxDescriptorSetStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetStorageImages"]);}();
[&]() {
result.maxDescriptorSetInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetInputAttachments"]);}();
[&]() {
result.maxVertexInputAttributes=deserialize_uint32_t(name["members"]["maxVertexInputAttributes"]);}();
[&]() {
result.maxVertexInputBindings=deserialize_uint32_t(name["members"]["maxVertexInputBindings"]);}();
[&]() {
result.maxVertexInputAttributeOffset=deserialize_uint32_t(name["members"]["maxVertexInputAttributeOffset"]);}();
[&]() {
result.maxVertexInputBindingStride=deserialize_uint32_t(name["members"]["maxVertexInputBindingStride"]);}();
[&]() {
result.maxVertexOutputComponents=deserialize_uint32_t(name["members"]["maxVertexOutputComponents"]);}();
[&]() {
result.maxTessellationGenerationLevel=deserialize_uint32_t(name["members"]["maxTessellationGenerationLevel"]);}();
[&]() {
result.maxTessellationPatchSize=deserialize_uint32_t(name["members"]["maxTessellationPatchSize"]);}();
[&]() {
result.maxTessellationControlPerVertexInputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexInputComponents"]);}();
[&]() {
result.maxTessellationControlPerVertexOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerVertexOutputComponents"]);}();
[&]() {
result.maxTessellationControlPerPatchOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlPerPatchOutputComponents"]);}();
[&]() {
result.maxTessellationControlTotalOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationControlTotalOutputComponents"]);}();
[&]() {
result.maxTessellationEvaluationInputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationInputComponents"]);}();
[&]() {
result.maxTessellationEvaluationOutputComponents=deserialize_uint32_t(name["members"]["maxTessellationEvaluationOutputComponents"]);}();
[&]() {
result.maxGeometryShaderInvocations=deserialize_uint32_t(name["members"]["maxGeometryShaderInvocations"]);}();
[&]() {
result.maxGeometryInputComponents=deserialize_uint32_t(name["members"]["maxGeometryInputComponents"]);}();
[&]() {
result.maxGeometryOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryOutputComponents"]);}();
[&]() {
result.maxGeometryOutputVertices=deserialize_uint32_t(name["members"]["maxGeometryOutputVertices"]);}();
[&]() {
result.maxGeometryTotalOutputComponents=deserialize_uint32_t(name["members"]["maxGeometryTotalOutputComponents"]);}();
[&]() {
result.maxFragmentInputComponents=deserialize_uint32_t(name["members"]["maxFragmentInputComponents"]);}();
[&]() {
result.maxFragmentOutputAttachments=deserialize_uint32_t(name["members"]["maxFragmentOutputAttachments"]);}();
[&]() {
result.maxFragmentDualSrcAttachments=deserialize_uint32_t(name["members"]["maxFragmentDualSrcAttachments"]);}();
[&]() {
result.maxFragmentCombinedOutputResources=deserialize_uint32_t(name["members"]["maxFragmentCombinedOutputResources"]);}();
[&]() {
result.maxComputeSharedMemorySize=deserialize_uint32_t(name["members"]["maxComputeSharedMemorySize"]);}();
[&]() {

        for (int jjXIHhG=0; jjXIHhG < 3; jjXIHhG++){
            [&]() {
result.maxComputeWorkGroupCount[jjXIHhG]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupCount"]["members"][jjXIHhG]);}();;
        }
        }();
[&]() {
result.maxComputeWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxComputeWorkGroupInvocations"]);}();
[&]() {

        for (int FXKtqYa=0; FXKtqYa < 3; FXKtqYa++){
            [&]() {
result.maxComputeWorkGroupSize[FXKtqYa]=deserialize_uint32_t(name["members"]["maxComputeWorkGroupSize"]["members"][FXKtqYa]);}();;
        }
        }();
[&]() {
result.subPixelPrecisionBits=deserialize_uint32_t(name["members"]["subPixelPrecisionBits"]);}();
[&]() {
result.subTexelPrecisionBits=deserialize_uint32_t(name["members"]["subTexelPrecisionBits"]);}();
[&]() {
result.mipmapPrecisionBits=deserialize_uint32_t(name["members"]["mipmapPrecisionBits"]);}();
[&]() {
result.maxDrawIndexedIndexValue=deserialize_uint32_t(name["members"]["maxDrawIndexedIndexValue"]);}();
[&]() {
result.maxDrawIndirectCount=deserialize_uint32_t(name["members"]["maxDrawIndirectCount"]);}();
[&]() {
result.maxSamplerLodBias=deserialize_float(name["members"]["maxSamplerLodBias"]);}();
[&]() {
result.maxSamplerAnisotropy=deserialize_float(name["members"]["maxSamplerAnisotropy"]);}();
[&]() {
result.maxViewports=deserialize_uint32_t(name["members"]["maxViewports"]);}();
[&]() {

        for (int UFgEkEb=0; UFgEkEb < 2; UFgEkEb++){
            [&]() {
result.maxViewportDimensions[UFgEkEb]=deserialize_uint32_t(name["members"]["maxViewportDimensions"]["members"][UFgEkEb]);}();;
        }
        }();
[&]() {

        for (int AkrkvyY=0; AkrkvyY < 2; AkrkvyY++){
            [&]() {
result.viewportBoundsRange[AkrkvyY]=deserialize_float(name["members"]["viewportBoundsRange"]["members"][AkrkvyY]);}();;
        }
        }();
[&]() {
result.viewportSubPixelBits=deserialize_uint32_t(name["members"]["viewportSubPixelBits"]);}();
[&]() {
result.minMemoryMapAlignment=deserialize_size_t(name["members"]["minMemoryMapAlignment"]);}();
[&]() {
[&]() {
result.minTexelBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minTexelBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minUniformBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minUniformBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minStorageBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minStorageBufferOffsetAlignment"]);}();}();
[&]() {
result.minTexelOffset=deserialize_int32_t(name["members"]["minTexelOffset"]);}();
[&]() {
result.maxTexelOffset=deserialize_uint32_t(name["members"]["maxTexelOffset"]);}();
[&]() {
result.minTexelGatherOffset=deserialize_int32_t(name["members"]["minTexelGatherOffset"]);}();
[&]() {
result.maxTexelGatherOffset=deserialize_uint32_t(name["members"]["maxTexelGatherOffset"]);}();
[&]() {
result.minInterpolationOffset=deserialize_float(name["members"]["minInterpolationOffset"]);}();
[&]() {
result.maxInterpolationOffset=deserialize_float(name["members"]["maxInterpolationOffset"]);}();
[&]() {
result.subPixelInterpolationOffsetBits=deserialize_uint32_t(name["members"]["subPixelInterpolationOffsetBits"]);}();
[&]() {
result.maxFramebufferWidth=deserialize_uint32_t(name["members"]["maxFramebufferWidth"]);}();
[&]() {
result.maxFramebufferHeight=deserialize_uint32_t(name["members"]["maxFramebufferHeight"]);}();
[&]() {
result.maxFramebufferLayers=deserialize_uint32_t(name["members"]["maxFramebufferLayers"]);}();
[&]() {
result.framebufferColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferColorSampleCounts"]);}();
[&]() {
result.framebufferDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferDepthSampleCounts"]);}();
[&]() {
result.framebufferStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferStencilSampleCounts"]);}();
[&]() {
result.framebufferNoAttachmentsSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferNoAttachmentsSampleCounts"]);}();
[&]() {
result.maxColorAttachments=deserialize_uint32_t(name["members"]["maxColorAttachments"]);}();
[&]() {
result.sampledImageColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageColorSampleCounts"]);}();
[&]() {
result.sampledImageIntegerSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageIntegerSampleCounts"]);}();
[&]() {
result.sampledImageDepthSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageDepthSampleCounts"]);}();
[&]() {
result.sampledImageStencilSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampledImageStencilSampleCounts"]);}();
[&]() {
result.storageImageSampleCounts=deserialize_VkSampleCountFlags(name["members"]["storageImageSampleCounts"]);}();
[&]() {
result.maxSampleMaskWords=deserialize_uint32_t(name["members"]["maxSampleMaskWords"]);}();
[&]() {
[&]() {
result.timestampComputeAndGraphics=deserialize_uint32_t(name["members"]["timestampComputeAndGraphics"]);}();}();
[&]() {
result.timestampPeriod=deserialize_float(name["members"]["timestampPeriod"]);}();
[&]() {
result.maxClipDistances=deserialize_uint32_t(name["members"]["maxClipDistances"]);}();
[&]() {
result.maxCullDistances=deserialize_uint32_t(name["members"]["maxCullDistances"]);}();
[&]() {
result.maxCombinedClipAndCullDistances=deserialize_uint32_t(name["members"]["maxCombinedClipAndCullDistances"]);}();
[&]() {
result.discreteQueuePriorities=deserialize_uint32_t(name["members"]["discreteQueuePriorities"]);}();
[&]() {

        for (int TaHwdkA=0; TaHwdkA < 2; TaHwdkA++){
            [&]() {
result.pointSizeRange[TaHwdkA]=deserialize_float(name["members"]["pointSizeRange"]["members"][TaHwdkA]);}();;
        }
        }();
[&]() {

        for (int nKiuDjL=0; nKiuDjL < 2; nKiuDjL++){
            [&]() {
result.lineWidthRange[nKiuDjL]=deserialize_float(name["members"]["lineWidthRange"]["members"][nKiuDjL]);}();;
        }
        }();
[&]() {
result.pointSizeGranularity=deserialize_float(name["members"]["pointSizeGranularity"]);}();
[&]() {
result.lineWidthGranularity=deserialize_float(name["members"]["lineWidthGranularity"]);}();
[&]() {
[&]() {
result.strictLines=deserialize_uint32_t(name["members"]["strictLines"]);}();}();
[&]() {
[&]() {
result.standardSampleLocations=deserialize_uint32_t(name["members"]["standardSampleLocations"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyOffsetAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.optimalBufferCopyRowPitchAlignment=deserialize_uint64_t(name["members"]["optimalBufferCopyRowPitchAlignment"]);}();}();
[&]() {
[&]() {
result.nonCoherentAtomSize=deserialize_uint64_t(name["members"]["nonCoherentAtomSize"]);}();}();
return result;}

    json serialize_VkSemaphoreCreateInfo(VkSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hKJWUVz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GaSEsrS=json({});
    
        if (name.pNext==NULL){
            return_GaSEsrS["null"]=true;
            return return_GaSEsrS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_AoFOaMX=json({});
    return serialize_VkSemaphoreCreateFlags(name.flags);}();
return result;}

    VkSemaphoreCreateInfo deserialize_VkSemaphoreCreateInfo(json name){
        auto result=VkSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VMPIYHx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VMPIYHx=NULL;
        }
    temp_VMPIYHx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VMPIYHx;}();
[&]() {
result.flags=deserialize_VkSemaphoreCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfo(VkQueryPoolCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_shFvcWF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_REuWmqT=json({});
    
        if (name.pNext==NULL){
            return_REuWmqT["null"]=true;
            return return_REuWmqT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_SqDSQvX=json({});
    return serialize_VkQueryPoolCreateFlags(name.flags);}();
result["members"]["queryType"]=[&]() {
    json return_ytFCHtM=json({});
    return serialize_VkQueryType(name.queryType);}();
result["members"]["queryCount"]=[&]() {
    json return_GslReAH=json({});
    return serialize_uint32_t(name.queryCount);}();
result["members"]["pipelineStatistics"]=[&]() {
    json return_TOGgkQs=json({});
    return serialize_VkQueryPipelineStatisticFlags(name.pipelineStatistics);}();
return result;}

    VkQueryPoolCreateInfo deserialize_VkQueryPoolCreateInfo(json name){
        auto result=VkQueryPoolCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yATKFdH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yATKFdH=NULL;
        }
    temp_yATKFdH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yATKFdH;}();
[&]() {
result.flags=deserialize_VkQueryPoolCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queryType=deserialize_VkQueryType(name["members"]["queryType"]);}();
[&]() {
result.queryCount=deserialize_uint32_t(name["members"]["queryCount"]);}();
[&]() {
result.pipelineStatistics=deserialize_VkQueryPipelineStatisticFlags(name["members"]["pipelineStatistics"]);}();
return result;}

    json serialize_VkFramebufferCreateInfo(VkFramebufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YVIHMUP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GYOUUCV=json({});
    
        if (name.pNext==NULL){
            return_GYOUUCV["null"]=true;
            return return_GYOUUCV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xMdCsds=json({});
    return serialize_VkFramebufferCreateFlags(name.flags);}();
result["members"]["renderPass"]=[&]() {
    json return_NVOUjZa=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["attachmentCount"]=[&]() {
    json return_xIpNlCP=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_kPsDgnu=json({});
    
        if (name.pAttachments==NULL){
            return_kPsDgnu["null"]=true;
            return return_kPsDgnu;
        }
        
        return_kPsDgnu["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_cjjdTpH=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_kPsDgnu["members"][std::to_string(i)].push_back(temp);
        }
        return return_kPsDgnu;
        }();
result["members"]["width"]=[&]() {
    json return_FGIajmh=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_NSfwWAK=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layers"]=[&]() {
    json return_HnEwtMn=json({});
    return serialize_uint32_t(name.layers);}();
return result;}

    VkFramebufferCreateInfo deserialize_VkFramebufferCreateInfo(json name){
        auto result=VkFramebufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sqFKKhe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sqFKKhe=NULL;
        }
    temp_sqFKKhe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sqFKKhe;}();
[&]() {
result.flags=deserialize_VkFramebufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_wQmVeyG;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_wQmVeyG=NULL;
        }
    temp_wQmVeyG=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int AeuOqAl=0; AeuOqAl < result.attachmentCount; AeuOqAl++){
            [&]() {
temp_wQmVeyG[AeuOqAl]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][AeuOqAl]);}();;
        }
        }();result.pAttachments=temp_wQmVeyG;}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layers=deserialize_uint32_t(name["members"]["layers"]);}();
return result;}

    json serialize_VkDrawIndirectCommand(VkDrawIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["vertexCount"]=[&]() {
    json return_FYJYtfZ=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_FuCfrVK=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstVertex"]=[&]() {
    json return_tfYJlMk=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["firstInstance"]=[&]() {
    json return_cgskCCO=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndirectCommand deserialize_VkDrawIndirectCommand(json name){
        auto result=VkDrawIndirectCommand();
    
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDrawIndexedIndirectCommand(VkDrawIndexedIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["indexCount"]=[&]() {
    json return_NXtqZIn=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["instanceCount"]=[&]() {
    json return_MPwGWPv=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["firstIndex"]=[&]() {
    json return_OFuiemX=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["vertexOffset"]=[&]() {
    json return_lPMopkN=json({});
    return serialize_int32_t(name.vertexOffset);}();
result["members"]["firstInstance"]=[&]() {
    json return_IOXHXRG=json({});
    return serialize_uint32_t(name.firstInstance);}();
return result;}

    VkDrawIndexedIndirectCommand deserialize_VkDrawIndexedIndirectCommand(json name){
        auto result=VkDrawIndexedIndirectCommand();
    
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
[&]() {
result.firstInstance=deserialize_uint32_t(name["members"]["firstInstance"]);}();
return result;}

    json serialize_VkDispatchIndirectCommand(VkDispatchIndirectCommand name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_lHRrMDb=json({});
    return serialize_uint32_t(name.x);}();
result["members"]["y"]=[&]() {
    json return_WBRAJqP=json({});
    return serialize_uint32_t(name.y);}();
result["members"]["z"]=[&]() {
    json return_WfXGeYC=json({});
    return serialize_uint32_t(name.z);}();
return result;}

    VkDispatchIndirectCommand deserialize_VkDispatchIndirectCommand(json name){
        auto result=VkDispatchIndirectCommand();
    
[&]() {
result.x=deserialize_uint32_t(name["members"]["x"]);}();
[&]() {
result.y=deserialize_uint32_t(name["members"]["y"]);}();
[&]() {
result.z=deserialize_uint32_t(name["members"]["z"]);}();
return result;}

    json serialize_VkMultiDrawInfoEXT(VkMultiDrawInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstVertex"]=[&]() {
    json return_kwKIMqJ=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["vertexCount"]=[&]() {
    json return_QaSgpVU=json({});
    return serialize_uint32_t(name.vertexCount);}();
return result;}

    VkMultiDrawInfoEXT deserialize_VkMultiDrawInfoEXT(json name){
        auto result=VkMultiDrawInfoEXT();
    
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
return result;}

    json serialize_VkMultiDrawIndexedInfoEXT(VkMultiDrawIndexedInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["firstIndex"]=[&]() {
    json return_ZeDXogp=json({});
    return serialize_uint32_t(name.firstIndex);}();
result["members"]["indexCount"]=[&]() {
    json return_CAHaeJL=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["vertexOffset"]=[&]() {
    json return_pRYvKui=json({});
    return serialize_int32_t(name.vertexOffset);}();
return result;}

    VkMultiDrawIndexedInfoEXT deserialize_VkMultiDrawIndexedInfoEXT(json name){
        auto result=VkMultiDrawIndexedInfoEXT();
    
[&]() {
result.firstIndex=deserialize_uint32_t(name["members"]["firstIndex"]);}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.vertexOffset=deserialize_int32_t(name["members"]["vertexOffset"]);}();
return result;}

    json serialize_VkSubmitInfo(VkSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tycMlen=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AmZYuWQ=json({});
    
        if (name.pNext==NULL){
            return_AmZYuWQ["null"]=true;
            return return_AmZYuWQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_FmoVqvy=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_SpfMnZE=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_SpfMnZE["null"]=true;
            return return_SpfMnZE;
        }
        
        return_SpfMnZE["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_NzfOAHf=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_SpfMnZE["members"][std::to_string(i)].push_back(temp);
        }
        return return_SpfMnZE;
        }();
result["members"]["pWaitDstStageMask"]=[&]() {
    json return_fgAoqQb=json({});
    
        if (name.pWaitDstStageMask==NULL){
            return_fgAoqQb["null"]=true;
            return return_fgAoqQb;
        }
        
        return_fgAoqQb["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_VCVmGeV=json({});
    return serialize_VkPipelineStageFlags(name.pWaitDstStageMask[i]);}();
            return_fgAoqQb["members"][std::to_string(i)].push_back(temp);
        }
        return return_fgAoqQb;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_jevMuQZ=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBuffers"]=[&]() {
    json return_iykzwHt=json({});
    
        if (name.pCommandBuffers==NULL){
            return_iykzwHt["null"]=true;
            return return_iykzwHt;
        }
        
        return_iykzwHt["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_OOnxasG=json({});
    return serialize_VkCommandBuffer(name.pCommandBuffers[i]);}();
            return_iykzwHt["members"][std::to_string(i)].push_back(temp);
        }
        return return_iykzwHt;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_LmsVDjK=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphores"]=[&]() {
    json return_SGRWxgq=json({});
    
        if (name.pSignalSemaphores==NULL){
            return_SGRWxgq["null"]=true;
            return return_SGRWxgq;
        }
        
        return_SGRWxgq["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_hVvaTur=json({});
    return serialize_VkSemaphore(name.pSignalSemaphores[i]);}();
            return_SGRWxgq["members"][std::to_string(i)].push_back(temp);
        }
        return return_SGRWxgq;
        }();
return result;}

    VkSubmitInfo deserialize_VkSubmitInfo(json name){
        auto result=VkSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EXRVBSg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EXRVBSg=NULL;
        }
    temp_EXRVBSg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EXRVBSg;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_zEuTOuX;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_zEuTOuX=NULL;
        }
    temp_zEuTOuX=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int FdGusyW=0; FdGusyW < result.waitSemaphoreCount; FdGusyW++){
            [&]() {
temp_zEuTOuX[FdGusyW]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][FdGusyW]);}();;
        }
        }();result.pWaitSemaphores=temp_zEuTOuX;}();
[&]() {
VkPipelineStageFlags* temp_PDAnYbk;[&]() {

        if (name["members"]["pWaitDstStageMask"].contains("null")){
        temp_PDAnYbk=NULL;
        }
    temp_PDAnYbk=(VkPipelineStageFlags*)malloc(result.waitSemaphoreCount*sizeof(VkPipelineStageFlags));
        for (int TkLEFgD=0; TkLEFgD < result.waitSemaphoreCount; TkLEFgD++){
            [&]() {
temp_PDAnYbk[TkLEFgD]=deserialize_VkPipelineStageFlags(name["members"]["pWaitDstStageMask"]["members"][TkLEFgD]);}();;
        }
        }();result.pWaitDstStageMask=temp_PDAnYbk;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
VkCommandBuffer* temp_tLfvVQn;[&]() {

        if (name["members"]["pCommandBuffers"].contains("null")){
        temp_tLfvVQn=NULL;
        }
    temp_tLfvVQn=(VkCommandBuffer*)malloc(result.commandBufferCount*sizeof(VkCommandBuffer));
        for (int oJOapdD=0; oJOapdD < result.commandBufferCount; oJOapdD++){
            [&]() {
temp_tLfvVQn[oJOapdD]=deserialize_VkCommandBuffer(name["members"]["pCommandBuffers"]["members"][oJOapdD]);}();;
        }
        }();result.pCommandBuffers=temp_tLfvVQn;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_BdMbOrP;[&]() {

        if (name["members"]["pSignalSemaphores"].contains("null")){
        temp_BdMbOrP=NULL;
        }
    temp_BdMbOrP=(VkSemaphore*)malloc(result.signalSemaphoreCount*sizeof(VkSemaphore));
        for (int CjIxCnS=0; CjIxCnS < result.signalSemaphoreCount; CjIxCnS++){
            [&]() {
temp_BdMbOrP[CjIxCnS]=deserialize_VkSemaphore(name["members"]["pSignalSemaphores"]["members"][CjIxCnS]);}();;
        }
        }();result.pSignalSemaphores=temp_BdMbOrP;}();
return result;}

    json serialize_VkDisplayPropertiesKHR(VkDisplayPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["display"]=[&]() {
    json return_DJmuvMG=json({});
    return serialize_VkDisplayKHR(name.display);}();
result["members"]["displayName"]=[&]() {
    json return_iGKxTJC=json({});
    
        if (name.displayName==NULL){
            return_iGKxTJC["null"]=true;
            return return_iGKxTJC;
        }
        return serialize_char_p(name.displayName);
}();
result["members"]["physicalDimensions"]=[&]() {
    json return_ynmPXug=json({});
    return serialize_VkExtent2D(name.physicalDimensions);}();
result["members"]["physicalResolution"]=[&]() {
    json return_tyAQdrJ=json({});
    return serialize_VkExtent2D(name.physicalResolution);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_pKzSEBw=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["planeReorderPossible"]=[&]() {
    json return_pAjwmPL=json({});
    return_pAjwmPL=[&]() {
    json return_mmJYykt=json({});
    return serialize_uint32_t(name.planeReorderPossible);}();return return_pAjwmPL;}();
result["members"]["persistentContent"]=[&]() {
    json return_bGXWEJa=json({});
    return_bGXWEJa=[&]() {
    json return_xOuXgiD=json({});
    return serialize_uint32_t(name.persistentContent);}();return return_bGXWEJa;}();
return result;}

    VkDisplayPropertiesKHR deserialize_VkDisplayPropertiesKHR(json name){
        auto result=VkDisplayPropertiesKHR();
    
[&]() {
result.display=deserialize_VkDisplayKHR(name["members"]["display"]);}();
[&]() {
char* temp_IPyrVYa;[&]() {

        if (name["members"]["displayName"].contains("null")){
        temp_IPyrVYa=NULL;
        }
    temp_IPyrVYa=deserialize_char_p(name["members"]["displayName"]);
}();result.displayName=temp_IPyrVYa;}();
[&]() {
result.physicalDimensions=deserialize_VkExtent2D(name["members"]["physicalDimensions"]);}();
[&]() {
result.physicalResolution=deserialize_VkExtent2D(name["members"]["physicalResolution"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
[&]() {
result.planeReorderPossible=deserialize_uint32_t(name["members"]["planeReorderPossible"]);}();}();
[&]() {
[&]() {
result.persistentContent=deserialize_uint32_t(name["members"]["persistentContent"]);}();}();
return result;}

    json serialize_VkDisplayPlanePropertiesKHR(VkDisplayPlanePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["currentDisplay"]=[&]() {
    json return_XKeKGYs=json({});
    return serialize_VkDisplayKHR(name.currentDisplay);}();
result["members"]["currentStackIndex"]=[&]() {
    json return_FzANnCG=json({});
    return serialize_uint32_t(name.currentStackIndex);}();
return result;}

    VkDisplayPlanePropertiesKHR deserialize_VkDisplayPlanePropertiesKHR(json name){
        auto result=VkDisplayPlanePropertiesKHR();
    
[&]() {
result.currentDisplay=deserialize_VkDisplayKHR(name["members"]["currentDisplay"]);}();
[&]() {
result.currentStackIndex=deserialize_uint32_t(name["members"]["currentStackIndex"]);}();
return result;}

    json serialize_VkDisplayModeParametersKHR(VkDisplayModeParametersKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["visibleRegion"]=[&]() {
    json return_NrLBoyk=json({});
    return serialize_VkExtent2D(name.visibleRegion);}();
result["members"]["refreshRate"]=[&]() {
    json return_jeLnAuc=json({});
    return serialize_uint32_t(name.refreshRate);}();
return result;}

    VkDisplayModeParametersKHR deserialize_VkDisplayModeParametersKHR(json name){
        auto result=VkDisplayModeParametersKHR();
    
[&]() {
result.visibleRegion=deserialize_VkExtent2D(name["members"]["visibleRegion"]);}();
[&]() {
result.refreshRate=deserialize_uint32_t(name["members"]["refreshRate"]);}();
return result;}

    json serialize_VkDisplayModePropertiesKHR(VkDisplayModePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["displayMode"]=[&]() {
    json return_UFKYebE=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["parameters"]=[&]() {
    json return_mKGbZIH=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModePropertiesKHR deserialize_VkDisplayModePropertiesKHR(json name){
        auto result=VkDisplayModePropertiesKHR();
    
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayModeCreateInfoKHR(VkDisplayModeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bHPyvyW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OeSIoYQ=json({});
    
        if (name.pNext==NULL){
            return_OeSIoYQ["null"]=true;
            return return_OeSIoYQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sGeFkpu=json({});
    return serialize_VkDisplayModeCreateFlagsKHR(name.flags);}();
result["members"]["parameters"]=[&]() {
    json return_WDhPijD=json({});
    return serialize_VkDisplayModeParametersKHR(name.parameters);}();
return result;}

    VkDisplayModeCreateInfoKHR deserialize_VkDisplayModeCreateInfoKHR(json name){
        auto result=VkDisplayModeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HZDWvFP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HZDWvFP=NULL;
        }
    temp_HZDWvFP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HZDWvFP;}();
[&]() {
result.flags=deserialize_VkDisplayModeCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.parameters=deserialize_VkDisplayModeParametersKHR(name["members"]["parameters"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilitiesKHR(VkDisplayPlaneCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["supportedAlpha"]=[&]() {
    json return_jkdVUlV=json({});
    return serialize_VkDisplayPlaneAlphaFlagsKHR(name.supportedAlpha);}();
result["members"]["minSrcPosition"]=[&]() {
    json return_ngqYfxC=json({});
    return serialize_VkOffset2D(name.minSrcPosition);}();
result["members"]["maxSrcPosition"]=[&]() {
    json return_GtgJgVW=json({});
    return serialize_VkOffset2D(name.maxSrcPosition);}();
result["members"]["minSrcExtent"]=[&]() {
    json return_ysUUHZl=json({});
    return serialize_VkExtent2D(name.minSrcExtent);}();
result["members"]["maxSrcExtent"]=[&]() {
    json return_bGvqNrG=json({});
    return serialize_VkExtent2D(name.maxSrcExtent);}();
result["members"]["minDstPosition"]=[&]() {
    json return_WsKFqPF=json({});
    return serialize_VkOffset2D(name.minDstPosition);}();
result["members"]["maxDstPosition"]=[&]() {
    json return_XabKVWy=json({});
    return serialize_VkOffset2D(name.maxDstPosition);}();
result["members"]["minDstExtent"]=[&]() {
    json return_PzOXppo=json({});
    return serialize_VkExtent2D(name.minDstExtent);}();
result["members"]["maxDstExtent"]=[&]() {
    json return_RECNNFx=json({});
    return serialize_VkExtent2D(name.maxDstExtent);}();
return result;}

    VkDisplayPlaneCapabilitiesKHR deserialize_VkDisplayPlaneCapabilitiesKHR(json name){
        auto result=VkDisplayPlaneCapabilitiesKHR();
    
[&]() {
result.supportedAlpha=deserialize_VkDisplayPlaneAlphaFlagsKHR(name["members"]["supportedAlpha"]);}();
[&]() {
result.minSrcPosition=deserialize_VkOffset2D(name["members"]["minSrcPosition"]);}();
[&]() {
result.maxSrcPosition=deserialize_VkOffset2D(name["members"]["maxSrcPosition"]);}();
[&]() {
result.minSrcExtent=deserialize_VkExtent2D(name["members"]["minSrcExtent"]);}();
[&]() {
result.maxSrcExtent=deserialize_VkExtent2D(name["members"]["maxSrcExtent"]);}();
[&]() {
result.minDstPosition=deserialize_VkOffset2D(name["members"]["minDstPosition"]);}();
[&]() {
result.maxDstPosition=deserialize_VkOffset2D(name["members"]["maxDstPosition"]);}();
[&]() {
result.minDstExtent=deserialize_VkExtent2D(name["members"]["minDstExtent"]);}();
[&]() {
result.maxDstExtent=deserialize_VkExtent2D(name["members"]["maxDstExtent"]);}();
return result;}

    json serialize_VkDisplaySurfaceCreateInfoKHR(VkDisplaySurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ttlncKd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TjdvuvQ=json({});
    
        if (name.pNext==NULL){
            return_TjdvuvQ["null"]=true;
            return return_TjdvuvQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LDvQZeo=json({});
    return serialize_VkDisplaySurfaceCreateFlagsKHR(name.flags);}();
result["members"]["displayMode"]=[&]() {
    json return_tarecft=json({});
    return serialize_VkDisplayModeKHR(name.displayMode);}();
result["members"]["planeIndex"]=[&]() {
    json return_fAvydTj=json({});
    return serialize_uint32_t(name.planeIndex);}();
result["members"]["planeStackIndex"]=[&]() {
    json return_pyrHFug=json({});
    return serialize_uint32_t(name.planeStackIndex);}();
result["members"]["transform"]=[&]() {
    json return_lCcXFNz=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["globalAlpha"]=[&]() {
    json return_iAtLeWD=json({});
    return serialize_float(name.globalAlpha);}();
result["members"]["alphaMode"]=[&]() {
    json return_HGyDZwK=json({});
    return serialize_VkDisplayPlaneAlphaFlagBitsKHR(name.alphaMode);}();
result["members"]["imageExtent"]=[&]() {
    json return_yyvstcL=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
return result;}

    VkDisplaySurfaceCreateInfoKHR deserialize_VkDisplaySurfaceCreateInfoKHR(json name){
        auto result=VkDisplaySurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eheDQdw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eheDQdw=NULL;
        }
    temp_eheDQdw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eheDQdw;}();
[&]() {
result.flags=deserialize_VkDisplaySurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.displayMode=deserialize_VkDisplayModeKHR(name["members"]["displayMode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
[&]() {
result.planeStackIndex=deserialize_uint32_t(name["members"]["planeStackIndex"]);}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.globalAlpha=deserialize_float(name["members"]["globalAlpha"]);}();
[&]() {
result.alphaMode=deserialize_VkDisplayPlaneAlphaFlagBitsKHR(name["members"]["alphaMode"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkDisplayPresentInfoKHR(VkDisplayPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XVeoUmf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IZZjXxP=json({});
    
        if (name.pNext==NULL){
            return_IZZjXxP["null"]=true;
            return return_IZZjXxP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcRect"]=[&]() {
    json return_kQeykcc=json({});
    return serialize_VkRect2D(name.srcRect);}();
result["members"]["dstRect"]=[&]() {
    json return_rhnapdp=json({});
    return serialize_VkRect2D(name.dstRect);}();
result["members"]["persistent"]=[&]() {
    json return_SFGHQaH=json({});
    return_SFGHQaH=[&]() {
    json return_thCPsBe=json({});
    return serialize_uint32_t(name.persistent);}();return return_SFGHQaH;}();
return result;}

    VkDisplayPresentInfoKHR deserialize_VkDisplayPresentInfoKHR(json name){
        auto result=VkDisplayPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eWwnXnE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eWwnXnE=NULL;
        }
    temp_eWwnXnE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eWwnXnE;}();
[&]() {
result.srcRect=deserialize_VkRect2D(name["members"]["srcRect"]);}();
[&]() {
result.dstRect=deserialize_VkRect2D(name["members"]["dstRect"]);}();
[&]() {
[&]() {
result.persistent=deserialize_uint32_t(name["members"]["persistent"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesKHR(VkSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minImageCount"]=[&]() {
    json return_uTCEffB=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_DLBpZww=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_VjZmzob=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_IUhCllN=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_CFSlRZT=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_DDiLkKU=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_NFZcvzm=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_GPYsyVR=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_paLXCmw=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_ePMYosl=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
return result;}

    VkSurfaceCapabilitiesKHR deserialize_VkSurfaceCapabilitiesKHR(json name){
        auto result=VkSurfaceCapabilitiesKHR();
    
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
return result;}

    json serialize_VkXlibSurfaceCreateInfoKHR(VkXlibSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NKkPnwv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XxbGaul=json({});
    
        if (name.pNext==NULL){
            return_XxbGaul["null"]=true;
            return return_XxbGaul;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LZKWbhD=json({});
    return serialize_VkXlibSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["dpy"]=[&]() {
    json return_vDFMxLU=json({});
    
        if (name.dpy==NULL){
            return_vDFMxLU["null"]=true;
            return return_vDFMxLU;
        }
        return serialize_Display_p(name.dpy);
}();
result["members"]["window"]=[&]() {
    json return_HWODeov=json({});
    return serialize_Window(name.window);
}();
return result;}

    VkXlibSurfaceCreateInfoKHR deserialize_VkXlibSurfaceCreateInfoKHR(json name){
        auto result=VkXlibSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SHEVFRn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SHEVFRn=NULL;
        }
    temp_SHEVFRn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SHEVFRn;}();
[&]() {
result.flags=deserialize_VkXlibSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["dpy"].contains("null")){
        result.dpy=NULL;
        }
    result.dpy=deserialize_Display_p(name["members"]["dpy"]);
}();
[&]() {
result.window=deserialize_Window(name["members"]["window"]);
}();
return result;}

    json serialize_VkXcbSurfaceCreateInfoKHR(VkXcbSurfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yxAgAxa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dohQEPw=json({});
    
        if (name.pNext==NULL){
            return_dohQEPw["null"]=true;
            return return_dohQEPw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_hoAmqcl=json({});
    return serialize_VkXcbSurfaceCreateFlagsKHR(name.flags);}();
result["members"]["connection"]=[&]() {
    json return_bVYMKcw=json({});
    
        if (name.connection==NULL){
            return_bVYMKcw["null"]=true;
            return return_bVYMKcw;
        }
        return serialize_xcb_connection_t_p(name.connection);
}();
result["members"]["window"]=[&]() {
    json return_qZhywzk=json({});
    return serialize_xcb_window_t(name.window);
}();
return result;}

    VkXcbSurfaceCreateInfoKHR deserialize_VkXcbSurfaceCreateInfoKHR(json name){
        auto result=VkXcbSurfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wNYPmxL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wNYPmxL=NULL;
        }
    temp_wNYPmxL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wNYPmxL;}();
[&]() {
result.flags=deserialize_VkXcbSurfaceCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {

        if (name["members"]["connection"].contains("null")){
        result.connection=NULL;
        }
    result.connection=deserialize_xcb_connection_t_p(name["members"]["connection"]);
}();
[&]() {
result.window=deserialize_xcb_window_t(name["members"]["window"]);
}();
return result;}

    json serialize_VkSurfaceFormatKHR(VkSurfaceFormatKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["format"]=[&]() {
    json return_QVtHZWb=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["colorSpace"]=[&]() {
    json return_ZCHIwKo=json({});
    return serialize_VkColorSpaceKHR(name.colorSpace);}();
return result;}

    VkSurfaceFormatKHR deserialize_VkSurfaceFormatKHR(json name){
        auto result=VkSurfaceFormatKHR();
    
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.colorSpace=deserialize_VkColorSpaceKHR(name["members"]["colorSpace"]);}();
return result;}

    json serialize_VkSwapchainCreateInfoKHR(VkSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BPLHBvv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DDuXOZA=json({});
    
        if (name.pNext==NULL){
            return_DDuXOZA["null"]=true;
            return return_DDuXOZA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_woJLTiO=json({});
    return serialize_VkSwapchainCreateFlagsKHR(name.flags);}();
result["members"]["surface"]=[&]() {
    json return_KrWONAG=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
result["members"]["minImageCount"]=[&]() {
    json return_NgZOrDa=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["imageFormat"]=[&]() {
    json return_gLgnroe=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["imageColorSpace"]=[&]() {
    json return_gMIydkm=json({});
    return serialize_VkColorSpaceKHR(name.imageColorSpace);}();
result["members"]["imageExtent"]=[&]() {
    json return_eLJdQhL=json({});
    return serialize_VkExtent2D(name.imageExtent);}();
result["members"]["imageArrayLayers"]=[&]() {
    json return_VOTFafH=json({});
    return serialize_uint32_t(name.imageArrayLayers);}();
result["members"]["imageUsage"]=[&]() {
    json return_CyYajtI=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
result["members"]["imageSharingMode"]=[&]() {
    json return_RTAfTxW=json({});
    return serialize_VkSharingMode(name.imageSharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_klSnyTD=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_pDdKDmL=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_pDdKDmL["null"]=true;
            return return_pDdKDmL;
        }
        
        return_pDdKDmL["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_rWxuXEk=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_pDdKDmL["members"][std::to_string(i)].push_back(temp);
        }
        return return_pDdKDmL;
        }();
result["members"]["preTransform"]=[&]() {
    json return_FkvzsyF=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.preTransform);}();
result["members"]["compositeAlpha"]=[&]() {
    json return_idMhRUH=json({});
    return serialize_VkCompositeAlphaFlagBitsKHR(name.compositeAlpha);}();
result["members"]["presentMode"]=[&]() {
    json return_PgNaPVJ=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
result["members"]["clipped"]=[&]() {
    json return_yKNNLqT=json({});
    return_yKNNLqT=[&]() {
    json return_oaHdGHS=json({});
    return serialize_uint32_t(name.clipped);}();return return_yKNNLqT;}();
result["members"]["oldSwapchain"]=[&]() {
    json return_aBttEbi=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
result["members"]["oldSwapchain"]=[&]() {
    json return_OPdIgYS=json({});
    return serialize_VkSwapchainKHR(name.oldSwapchain);}();
return result;}

    VkSwapchainCreateInfoKHR deserialize_VkSwapchainCreateInfoKHR(json name){
        auto result=VkSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cJVzDqj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cJVzDqj=NULL;
        }
    temp_cJVzDqj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cJVzDqj;}();
[&]() {
result.flags=deserialize_VkSwapchainCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.imageColorSpace=deserialize_VkColorSpaceKHR(name["members"]["imageColorSpace"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent2D(name["members"]["imageExtent"]);}();
[&]() {
result.imageArrayLayers=deserialize_uint32_t(name["members"]["imageArrayLayers"]);}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
[&]() {
result.imageSharingMode=deserialize_VkSharingMode(name["members"]["imageSharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_LvlXYtM;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_LvlXYtM=NULL;
        }
    temp_LvlXYtM=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int sEiWTwo=0; sEiWTwo < result.queueFamilyIndexCount; sEiWTwo++){
            [&]() {
temp_LvlXYtM[sEiWTwo]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][sEiWTwo]);}();;
        }
        }();result.pQueueFamilyIndices=temp_LvlXYtM;}();
[&]() {
result.preTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["preTransform"]);}();
[&]() {
result.compositeAlpha=deserialize_VkCompositeAlphaFlagBitsKHR(name["members"]["compositeAlpha"]);}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
[&]() {
[&]() {
result.clipped=deserialize_uint32_t(name["members"]["clipped"]);}();}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
[&]() {
result.oldSwapchain=deserialize_VkSwapchainKHR(name["members"]["oldSwapchain"]);}();
return result;}

    json serialize_VkPresentInfoKHR(VkPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GnCzKpi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FspMWAg=json({});
    
        if (name.pNext==NULL){
            return_FspMWAg["null"]=true;
            return return_FspMWAg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_NWdnWPx=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphores"]=[&]() {
    json return_VcWxLCI=json({});
    
        if (name.pWaitSemaphores==NULL){
            return_VcWxLCI["null"]=true;
            return return_VcWxLCI;
        }
        
        return_VcWxLCI["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_KfakABl=json({});
    return serialize_VkSemaphore(name.pWaitSemaphores[i]);}();
            return_VcWxLCI["members"][std::to_string(i)].push_back(temp);
        }
        return return_VcWxLCI;
        }();
result["members"]["swapchainCount"]=[&]() {
    json return_KWWzdKJ=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pSwapchains"]=[&]() {
    json return_sxgPUFV=json({});
    
        if (name.pSwapchains==NULL){
            return_sxgPUFV["null"]=true;
            return return_sxgPUFV;
        }
        
        return_sxgPUFV["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_WflqhZt=json({});
    return serialize_VkSwapchainKHR(name.pSwapchains[i]);}();
            return_sxgPUFV["members"][std::to_string(i)].push_back(temp);
        }
        return return_sxgPUFV;
        }();
result["members"]["pImageIndices"]=[&]() {
    json return_mkKUhFr=json({});
    
        if (name.pImageIndices==NULL){
            return_mkKUhFr["null"]=true;
            return return_mkKUhFr;
        }
        
        return_mkKUhFr["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_TiGUqPU=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_mkKUhFr["members"][std::to_string(i)].push_back(temp);
        }
        return return_mkKUhFr;
        }();
result["members"]["pResults"]=[&]() {
    json return_calkQsC=json({});
    
        if (name.pResults==NULL){
            return_calkQsC["null"]=true;
            return return_calkQsC;
        }
        
        return_calkQsC["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_lxjIBtK=json({});
    return serialize_VkResult(name.pResults[i]);}();
            return_calkQsC["members"][std::to_string(i)].push_back(temp);
        }
        return return_calkQsC;
        }();
return result;}

    VkPresentInfoKHR deserialize_VkPresentInfoKHR(json name){
        auto result=VkPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PwOSoUo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PwOSoUo=NULL;
        }
    temp_PwOSoUo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PwOSoUo;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
VkSemaphore* temp_EvlYxkF;[&]() {

        if (name["members"]["pWaitSemaphores"].contains("null")){
        temp_EvlYxkF=NULL;
        }
    temp_EvlYxkF=(VkSemaphore*)malloc(result.waitSemaphoreCount*sizeof(VkSemaphore));
        for (int lFEjSpJ=0; lFEjSpJ < result.waitSemaphoreCount; lFEjSpJ++){
            [&]() {
temp_EvlYxkF[lFEjSpJ]=deserialize_VkSemaphore(name["members"]["pWaitSemaphores"]["members"][lFEjSpJ]);}();;
        }
        }();result.pWaitSemaphores=temp_EvlYxkF;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkSwapchainKHR* temp_jaicuCX;[&]() {

        if (name["members"]["pSwapchains"].contains("null")){
        temp_jaicuCX=NULL;
        }
    temp_jaicuCX=(VkSwapchainKHR*)malloc(result.swapchainCount*sizeof(VkSwapchainKHR));
        for (int MmPMXdq=0; MmPMXdq < result.swapchainCount; MmPMXdq++){
            [&]() {
temp_jaicuCX[MmPMXdq]=deserialize_VkSwapchainKHR(name["members"]["pSwapchains"]["members"][MmPMXdq]);}();;
        }
        }();result.pSwapchains=temp_jaicuCX;}();
[&]() {
uint32_t* temp_RZGFbEu;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_RZGFbEu=NULL;
        }
    temp_RZGFbEu=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int pwJQPmG=0; pwJQPmG < result.swapchainCount; pwJQPmG++){
            [&]() {
temp_RZGFbEu[pwJQPmG]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][pwJQPmG]);}();;
        }
        }();result.pImageIndices=temp_RZGFbEu;}();
[&]() {

        if (name["members"]["pResults"].contains("null")){
        result.pResults=NULL;
        }
    result.pResults=(VkResult*)malloc(result.swapchainCount*sizeof(VkResult));
        for (int wMapjfw=0; wMapjfw < result.swapchainCount; wMapjfw++){
            [&]() {
result.pResults[wMapjfw]=deserialize_VkResult(name["members"]["pResults"]["members"][wMapjfw]);}();;
        }
        }();
return result;}

    json serialize_VkDebugReportCallbackCreateInfoEXT(VkDebugReportCallbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MKVvuLG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dqojZav=json({});
    
        if (name.pNext==NULL){
            return_dqojZav["null"]=true;
            return return_dqojZav;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WCVeFwz=json({});
    return serialize_VkDebugReportFlagsEXT(name.flags);}();
result["members"]["pfnCallback"]=[&]() {
    json return_almWhqg=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugReportCallbackEXT(name.pfnCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_KGbJcJM=json({});
    
        if (name.pUserData==NULL){
            return_KGbJcJM["null"]=true;
            return return_KGbJcJM;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugReportFlagsEXT_id;
uintptr_t PFN_vkDebugReportCallbackEXT_id;
void* pUserData;
} VkDebugReportCallbackCreateInfoEXT_struct;

    VkDebugReportCallbackCreateInfoEXT deserialize_VkDebugReportCallbackCreateInfoEXT(json name){
        auto result=VkDebugReportCallbackCreateInfoEXT();
    
auto _struct = new VkDebugReportCallbackCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aRfbFux;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aRfbFux=NULL;
        }
    temp_aRfbFux=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aRfbFux;}();
[&]() {
result.flags=deserialize_VkDebugReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnCallback=deserialize_PFN_vkDebugReportCallbackEXT(name["members"]["pfnCallback"]);
        #endif
        }();
_struct->PFN_vkDebugReportCallbackEXT_id=name["members"]["pfnCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkValidationFlagsEXT(VkValidationFlagsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DDBNfVQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Wreazcj=json({});
    
        if (name.pNext==NULL){
            return_Wreazcj["null"]=true;
            return return_Wreazcj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disabledValidationCheckCount"]=[&]() {
    json return_ehIJVPf=json({});
    return serialize_uint32_t(name.disabledValidationCheckCount);}();
result["members"]["pDisabledValidationChecks"]=[&]() {
    json return_YtmeUUg=json({});
    
        if (name.pDisabledValidationChecks==NULL){
            return_YtmeUUg["null"]=true;
            return return_YtmeUUg;
        }
        
        return_YtmeUUg["members"]={};
        for(int i=0; i < name.disabledValidationCheckCount; i++){
            json temp;
            temp=[&]() {
    json return_LyabFgB=json({});
    return serialize_VkValidationCheckEXT(name.pDisabledValidationChecks[i]);}();
            return_YtmeUUg["members"][std::to_string(i)].push_back(temp);
        }
        return return_YtmeUUg;
        }();
return result;}

    VkValidationFlagsEXT deserialize_VkValidationFlagsEXT(json name){
        auto result=VkValidationFlagsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FOjkTHY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FOjkTHY=NULL;
        }
    temp_FOjkTHY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FOjkTHY;}();
[&]() {
result.disabledValidationCheckCount=deserialize_uint32_t(name["members"]["disabledValidationCheckCount"]);}();
[&]() {
VkValidationCheckEXT* temp_HidNrCu;[&]() {

        if (name["members"]["pDisabledValidationChecks"].contains("null")){
        temp_HidNrCu=NULL;
        }
    temp_HidNrCu=(VkValidationCheckEXT*)malloc(result.disabledValidationCheckCount*sizeof(VkValidationCheckEXT));
        for (int WCNvhIW=0; WCNvhIW < result.disabledValidationCheckCount; WCNvhIW++){
            [&]() {
temp_HidNrCu[WCNvhIW]=deserialize_VkValidationCheckEXT(name["members"]["pDisabledValidationChecks"]["members"][WCNvhIW]);}();;
        }
        }();result.pDisabledValidationChecks=temp_HidNrCu;}();
return result;}

    json serialize_VkValidationFeaturesEXT(VkValidationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vxINJuG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HgWtjxQ=json({});
    
        if (name.pNext==NULL){
            return_HgWtjxQ["null"]=true;
            return return_HgWtjxQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enabledValidationFeatureCount"]=[&]() {
    json return_jmITKjv=json({});
    return serialize_uint32_t(name.enabledValidationFeatureCount);}();
result["members"]["pEnabledValidationFeatures"]=[&]() {
    json return_oTlYCLL=json({});
    
        if (name.pEnabledValidationFeatures==NULL){
            return_oTlYCLL["null"]=true;
            return return_oTlYCLL;
        }
        
        return_oTlYCLL["members"]={};
        for(int i=0; i < name.enabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_qKhgkVh=json({});
    return serialize_VkValidationFeatureEnableEXT(name.pEnabledValidationFeatures[i]);}();
            return_oTlYCLL["members"][std::to_string(i)].push_back(temp);
        }
        return return_oTlYCLL;
        }();
result["members"]["disabledValidationFeatureCount"]=[&]() {
    json return_Dufsuic=json({});
    return serialize_uint32_t(name.disabledValidationFeatureCount);}();
result["members"]["pDisabledValidationFeatures"]=[&]() {
    json return_XqmhLYp=json({});
    
        if (name.pDisabledValidationFeatures==NULL){
            return_XqmhLYp["null"]=true;
            return return_XqmhLYp;
        }
        
        return_XqmhLYp["members"]={};
        for(int i=0; i < name.disabledValidationFeatureCount; i++){
            json temp;
            temp=[&]() {
    json return_dxxshBO=json({});
    return serialize_VkValidationFeatureDisableEXT(name.pDisabledValidationFeatures[i]);}();
            return_XqmhLYp["members"][std::to_string(i)].push_back(temp);
        }
        return return_XqmhLYp;
        }();
return result;}

    VkValidationFeaturesEXT deserialize_VkValidationFeaturesEXT(json name){
        auto result=VkValidationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PCaJChg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PCaJChg=NULL;
        }
    temp_PCaJChg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PCaJChg;}();
[&]() {
result.enabledValidationFeatureCount=deserialize_uint32_t(name["members"]["enabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureEnableEXT* temp_AFVZaWK;[&]() {

        if (name["members"]["pEnabledValidationFeatures"].contains("null")){
        temp_AFVZaWK=NULL;
        }
    temp_AFVZaWK=(VkValidationFeatureEnableEXT*)malloc(result.enabledValidationFeatureCount*sizeof(VkValidationFeatureEnableEXT));
        for (int dsNlSMp=0; dsNlSMp < result.enabledValidationFeatureCount; dsNlSMp++){
            [&]() {
temp_AFVZaWK[dsNlSMp]=deserialize_VkValidationFeatureEnableEXT(name["members"]["pEnabledValidationFeatures"]["members"][dsNlSMp]);}();;
        }
        }();result.pEnabledValidationFeatures=temp_AFVZaWK;}();
[&]() {
result.disabledValidationFeatureCount=deserialize_uint32_t(name["members"]["disabledValidationFeatureCount"]);}();
[&]() {
VkValidationFeatureDisableEXT* temp_iRBCLsT;[&]() {

        if (name["members"]["pDisabledValidationFeatures"].contains("null")){
        temp_iRBCLsT=NULL;
        }
    temp_iRBCLsT=(VkValidationFeatureDisableEXT*)malloc(result.disabledValidationFeatureCount*sizeof(VkValidationFeatureDisableEXT));
        for (int lOoJDKS=0; lOoJDKS < result.disabledValidationFeatureCount; lOoJDKS++){
            [&]() {
temp_iRBCLsT[lOoJDKS]=deserialize_VkValidationFeatureDisableEXT(name["members"]["pDisabledValidationFeatures"]["members"][lOoJDKS]);}();;
        }
        }();result.pDisabledValidationFeatures=temp_iRBCLsT;}();
return result;}

    json serialize_VkPipelineRasterizationStateRasterizationOrderAMD(VkPipelineRasterizationStateRasterizationOrderAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VWtxpaa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XZoiuPb=json({});
    
        if (name.pNext==NULL){
            return_XZoiuPb["null"]=true;
            return return_XZoiuPb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrder"]=[&]() {
    json return_hNogLri=json({});
    return serialize_VkRasterizationOrderAMD(name.rasterizationOrder);}();
return result;}

    VkPipelineRasterizationStateRasterizationOrderAMD deserialize_VkPipelineRasterizationStateRasterizationOrderAMD(json name){
        auto result=VkPipelineRasterizationStateRasterizationOrderAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EPuNsdK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EPuNsdK=NULL;
        }
    temp_EPuNsdK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EPuNsdK;}();
[&]() {
result.rasterizationOrder=deserialize_VkRasterizationOrderAMD(name["members"]["rasterizationOrder"]);}();
return result;}

    json serialize_VkDebugMarkerObjectNameInfoEXT(VkDebugMarkerObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aWXSeEK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dxjecUD=json({});
    
        if (name.pNext==NULL){
            return_dxjecUD["null"]=true;
            return return_dxjecUD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_RGMCCxz=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_loPmdHv=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["pObjectName"]=[&]() {
    json return_ssgynRW=json({});
    
        if (name.pObjectName==NULL){
            return_ssgynRW["null"]=true;
            return return_ssgynRW;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugMarkerObjectNameInfoEXT deserialize_VkDebugMarkerObjectNameInfoEXT(json name){
        auto result=VkDebugMarkerObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hTvhYsa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hTvhYsa=NULL;
        }
    temp_hTvhYsa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hTvhYsa;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
char* temp_MYdLDyr;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_MYdLDyr=NULL;
        }
    temp_MYdLDyr=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_MYdLDyr;}();
return result;}

    json serialize_VkDebugMarkerObjectTagInfoEXT(VkDebugMarkerObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ROmkeCv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yTnvzag=json({});
    
        if (name.pNext==NULL){
            return_yTnvzag["null"]=true;
            return return_yTnvzag;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_EohBtJJ=json({});
    return serialize_VkDebugReportObjectTypeEXT(name.objectType);}();
result["members"]["object"]=[&]() {
    json return_vUJgnRb=json({});
    return serialize_uint64_t(name.object);}();
result["members"]["tagName"]=[&]() {
    json return_DjrmpRU=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_zbUnZlH=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_Kdttdgh=json({});
    
        if (name.pTag==NULL){
            return_Kdttdgh["null"]=true;
            return return_Kdttdgh;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugMarkerObjectTagInfoEXT deserialize_VkDebugMarkerObjectTagInfoEXT(json name){
        auto result=VkDebugMarkerObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IpmSsgX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IpmSsgX=NULL;
        }
    temp_IpmSsgX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IpmSsgX;}();
[&]() {
result.objectType=deserialize_VkDebugReportObjectTypeEXT(name["members"]["objectType"]);}();
[&]() {
result.object=deserialize_uint64_t(name["members"]["object"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_wNODzLn;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_wNODzLn=NULL;
        }
    temp_wNODzLn=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_wNODzLn;}();
return result;}

    json serialize_VkDebugMarkerMarkerInfoEXT(VkDebugMarkerMarkerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wnqUbBS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_miAdulZ=json({});
    
        if (name.pNext==NULL){
            return_miAdulZ["null"]=true;
            return return_miAdulZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pMarkerName"]=[&]() {
    json return_ASyXmGL=json({});
    
        if (name.pMarkerName==NULL){
            return_ASyXmGL["null"]=true;
            return return_ASyXmGL;
        }
        return serialize_char_p(name.pMarkerName);
}();
result["members"]["color"]=[&]() {
    json return_MgtphlE=json({});
    
        return_MgtphlE["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_RtciRik=json({});
    return serialize_float(name.color[i]);}();
            return_MgtphlE["members"][std::to_string(i)].push_back(temp);
        }
        return return_MgtphlE;
        }();
return result;}

    VkDebugMarkerMarkerInfoEXT deserialize_VkDebugMarkerMarkerInfoEXT(json name){
        auto result=VkDebugMarkerMarkerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jJaXeii;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jJaXeii=NULL;
        }
    temp_jJaXeii=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jJaXeii;}();
[&]() {
char* temp_KDmVaps;[&]() {

        if (name["members"]["pMarkerName"].contains("null")){
        temp_KDmVaps=NULL;
        }
    temp_KDmVaps=deserialize_char_p(name["members"]["pMarkerName"]);
}();result.pMarkerName=temp_KDmVaps;}();
[&]() {

        for (int pXAMvVr=0; pXAMvVr < 4; pXAMvVr++){
            [&]() {
result.color[pXAMvVr]=deserialize_float(name["members"]["color"]["members"][pXAMvVr]);}();;
        }
        }();
return result;}

    json serialize_VkDedicatedAllocationImageCreateInfoNV(VkDedicatedAllocationImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mQIqKJn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OIqUrZD=json({});
    
        if (name.pNext==NULL){
            return_OIqUrZD["null"]=true;
            return return_OIqUrZD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_pCLiKxG=json({});
    return_pCLiKxG=[&]() {
    json return_STiGblF=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_pCLiKxG;}();
return result;}

    VkDedicatedAllocationImageCreateInfoNV deserialize_VkDedicatedAllocationImageCreateInfoNV(json name){
        auto result=VkDedicatedAllocationImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BvxCjSv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BvxCjSv=NULL;
        }
    temp_BvxCjSv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BvxCjSv;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationBufferCreateInfoNV(VkDedicatedAllocationBufferCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pmTCToh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cLcrwsC=json({});
    
        if (name.pNext==NULL){
            return_cLcrwsC["null"]=true;
            return return_cLcrwsC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocation"]=[&]() {
    json return_MvWYMyT=json({});
    return_MvWYMyT=[&]() {
    json return_QHqYzXu=json({});
    return serialize_uint32_t(name.dedicatedAllocation);}();return return_MvWYMyT;}();
return result;}

    VkDedicatedAllocationBufferCreateInfoNV deserialize_VkDedicatedAllocationBufferCreateInfoNV(json name){
        auto result=VkDedicatedAllocationBufferCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vEDxHtO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vEDxHtO=NULL;
        }
    temp_vEDxHtO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vEDxHtO;}();
[&]() {
[&]() {
result.dedicatedAllocation=deserialize_uint32_t(name["members"]["dedicatedAllocation"]);}();}();
return result;}

    json serialize_VkDedicatedAllocationMemoryAllocateInfoNV(VkDedicatedAllocationMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ngTnQvD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NIVHTNI=json({});
    
        if (name.pNext==NULL){
            return_NIVHTNI["null"]=true;
            return return_NIVHTNI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_cFmwKaG=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_zuGxTTf=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDedicatedAllocationMemoryAllocateInfoNV deserialize_VkDedicatedAllocationMemoryAllocateInfoNV(json name){
        auto result=VkDedicatedAllocationMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VluKdWV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VluKdWV=NULL;
        }
    temp_VluKdWV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VluKdWV;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesNV(VkExternalImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["imageFormatProperties"]=[&]() {
    json return_BatqDFK=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_TOGirld=json({});
    return serialize_VkExternalMemoryFeatureFlagsNV(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_NagKhXr=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_WrKpGge=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.compatibleHandleTypes);}();
return result;}

    VkExternalImageFormatPropertiesNV deserialize_VkExternalImageFormatPropertiesNV(json name){
        auto result=VkExternalImageFormatPropertiesNV();
    
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlagsNV(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoNV(VkExternalMemoryImageCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QPsGHAm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wCSOxYj=json({});
    
        if (name.pNext==NULL){
            return_wCSOxYj["null"]=true;
            return return_wCSOxYj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_METhFad=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoNV deserialize_VkExternalMemoryImageCreateInfoNV(json name){
        auto result=VkExternalMemoryImageCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OIfYmyr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OIfYmyr=NULL;
        }
    temp_OIfYmyr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OIfYmyr;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoNV(VkExportMemoryAllocateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pimFtpA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nTkgCzt=json({});
    
        if (name.pNext==NULL){
            return_nTkgCzt["null"]=true;
            return return_nTkgCzt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_wtSBLyT=json({});
    return serialize_VkExternalMemoryHandleTypeFlagsNV(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoNV deserialize_VkExportMemoryAllocateInfoNV(json name){
        auto result=VkExportMemoryAllocateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NaeXaVl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NaeXaVl=NULL;
        }
    temp_NaeXaVl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NaeXaVl;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlagsNV(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WLJfRZz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EoihDpz=json({});
    
        if (name.pNext==NULL){
            return_EoihDpz["null"]=true;
            return return_EoihDpz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCommands"]=[&]() {
    json return_MgdDgpI=json({});
    return_MgdDgpI=[&]() {
    json return_sxaGvDs=json({});
    return serialize_uint32_t(name.deviceGeneratedCommands);}();return return_MgdDgpI;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCommands=deserialize_uint32_t(name["members"]["deviceGeneratedCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZSjumRv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UhdsTtW=json({});
    
        if (name.pNext==NULL){
            return_UhdsTtW["null"]=true;
            return return_UhdsTtW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceGeneratedCompute"]=[&]() {
    json return_FiUEQQu=json({});
    return_FiUEQQu=[&]() {
    json return_YAGUhkr=json({});
    return serialize_uint32_t(name.deviceGeneratedCompute);}();return return_FiUEQQu;}();
result["members"]["deviceGeneratedComputePipelines"]=[&]() {
    json return_tTyHqMK=json({});
    return_tTyHqMK=[&]() {
    json return_OspYjsG=json({});
    return serialize_uint32_t(name.deviceGeneratedComputePipelines);}();return return_tTyHqMK;}();
result["members"]["deviceGeneratedComputeCaptureReplay"]=[&]() {
    json return_hVZbGuj=json({});
    return_hVZbGuj=[&]() {
    json return_TihfYhl=json({});
    return serialize_uint32_t(name.deviceGeneratedComputeCaptureReplay);}();return return_hVZbGuj;}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceGeneratedCompute=deserialize_uint32_t(name["members"]["deviceGeneratedCompute"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputePipelines=deserialize_uint32_t(name["members"]["deviceGeneratedComputePipelines"]);}();}();
[&]() {
[&]() {
result.deviceGeneratedComputeCaptureReplay=deserialize_uint32_t(name["members"]["deviceGeneratedComputeCaptureReplay"]);}();}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfo(VkDevicePrivateDataCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PvYciwb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qcRFBDh=json({});
    
        if (name.pNext==NULL){
            return_qcRFBDh["null"]=true;
            return return_qcRFBDh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_GMMFuqY=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfo deserialize_VkDevicePrivateDataCreateInfo(json name){
        auto result=VkDevicePrivateDataCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oylsjsd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oylsjsd=NULL;
        }
    temp_oylsjsd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oylsjsd;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkDevicePrivateDataCreateInfoEXT(VkDevicePrivateDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FZHWtrw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SvPXqpm=json({});
    
        if (name.pNext==NULL){
            return_SvPXqpm["null"]=true;
            return return_SvPXqpm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateDataSlotRequestCount"]=[&]() {
    json return_JttAJvT=json({});
    return serialize_uint32_t(name.privateDataSlotRequestCount);}();
return result;}

    VkDevicePrivateDataCreateInfoEXT deserialize_VkDevicePrivateDataCreateInfoEXT(json name){
        auto result=VkDevicePrivateDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vorZMFo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vorZMFo=NULL;
        }
    temp_vorZMFo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vorZMFo;}();
[&]() {
result.privateDataSlotRequestCount=deserialize_uint32_t(name["members"]["privateDataSlotRequestCount"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfo(VkPrivateDataSlotCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IougMkw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KRgsnnb=json({});
    
        if (name.pNext==NULL){
            return_KRgsnnb["null"]=true;
            return return_KRgsnnb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_IbecBAZ=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfo deserialize_VkPrivateDataSlotCreateInfo(json name){
        auto result=VkPrivateDataSlotCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iFjspvQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iFjspvQ=NULL;
        }
    temp_iFjspvQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iFjspvQ;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPrivateDataSlotCreateInfoEXT(VkPrivateDataSlotCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_riMZrnW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zbvEVuk=json({});
    
        if (name.pNext==NULL){
            return_zbvEVuk["null"]=true;
            return return_zbvEVuk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mBfMnbz=json({});
    return serialize_VkPrivateDataSlotCreateFlags(name.flags);}();
return result;}

    VkPrivateDataSlotCreateInfoEXT deserialize_VkPrivateDataSlotCreateInfoEXT(json name){
        auto result=VkPrivateDataSlotCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BuXyqeT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BuXyqeT=NULL;
        }
    temp_BuXyqeT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BuXyqeT;}();
[&]() {
result.flags=deserialize_VkPrivateDataSlotCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeatures(VkPhysicalDevicePrivateDataFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lkcTmsn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Dvipsdy=json({});
    
        if (name.pNext==NULL){
            return_Dvipsdy["null"]=true;
            return return_Dvipsdy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_zShyHuO=json({});
    return_zShyHuO=[&]() {
    json return_VgrODBf=json({});
    return serialize_uint32_t(name.privateData);}();return return_zShyHuO;}();
return result;}

    VkPhysicalDevicePrivateDataFeatures deserialize_VkPhysicalDevicePrivateDataFeatures(json name){
        auto result=VkPhysicalDevicePrivateDataFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrivateDataFeaturesEXT(VkPhysicalDevicePrivateDataFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wvYHOip=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EmaPJAR=json({});
    
        if (name.pNext==NULL){
            return_EmaPJAR["null"]=true;
            return return_EmaPJAR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["privateData"]=[&]() {
    json return_BIbEuMQ=json({});
    return_BIbEuMQ=[&]() {
    json return_bqIJhHC=json({});
    return serialize_uint32_t(name.privateData);}();return return_BIbEuMQ;}();
return result;}

    VkPhysicalDevicePrivateDataFeaturesEXT deserialize_VkPhysicalDevicePrivateDataFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrivateDataFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TqbtvrL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HvfQxqS=json({});
    
        if (name.pNext==NULL){
            return_HvfQxqS["null"]=true;
            return return_HvfQxqS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGraphicsShaderGroupCount"]=[&]() {
    json return_xibDfhK=json({});
    return serialize_uint32_t(name.maxGraphicsShaderGroupCount);}();
result["members"]["maxIndirectSequenceCount"]=[&]() {
    json return_XKodTWk=json({});
    return serialize_uint32_t(name.maxIndirectSequenceCount);}();
result["members"]["maxIndirectCommandsTokenCount"]=[&]() {
    json return_eXhQAdN=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenCount);}();
result["members"]["maxIndirectCommandsStreamCount"]=[&]() {
    json return_EhDefFw=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamCount);}();
result["members"]["maxIndirectCommandsTokenOffset"]=[&]() {
    json return_pQMMrGQ=json({});
    return serialize_uint32_t(name.maxIndirectCommandsTokenOffset);}();
result["members"]["maxIndirectCommandsStreamStride"]=[&]() {
    json return_uKZNDAz=json({});
    return serialize_uint32_t(name.maxIndirectCommandsStreamStride);}();
result["members"]["minSequencesCountBufferOffsetAlignment"]=[&]() {
    json return_APWavMH=json({});
    return serialize_uint32_t(name.minSequencesCountBufferOffsetAlignment);}();
result["members"]["minSequencesIndexBufferOffsetAlignment"]=[&]() {
    json return_zHKrchU=json({});
    return serialize_uint32_t(name.minSequencesIndexBufferOffsetAlignment);}();
result["members"]["minIndirectCommandsBufferOffsetAlignment"]=[&]() {
    json return_lIDvEoc=json({});
    return serialize_uint32_t(name.minIndirectCommandsBufferOffsetAlignment);}();
return result;}

    VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV deserialize_VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV(json name){
        auto result=VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGraphicsShaderGroupCount=deserialize_uint32_t(name["members"]["maxGraphicsShaderGroupCount"]);}();
[&]() {
result.maxIndirectSequenceCount=deserialize_uint32_t(name["members"]["maxIndirectSequenceCount"]);}();
[&]() {
result.maxIndirectCommandsTokenCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenCount"]);}();
[&]() {
result.maxIndirectCommandsStreamCount=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamCount"]);}();
[&]() {
result.maxIndirectCommandsTokenOffset=deserialize_uint32_t(name["members"]["maxIndirectCommandsTokenOffset"]);}();
[&]() {
result.maxIndirectCommandsStreamStride=deserialize_uint32_t(name["members"]["maxIndirectCommandsStreamStride"]);}();
[&]() {
result.minSequencesCountBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesCountBufferOffsetAlignment"]);}();
[&]() {
result.minSequencesIndexBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minSequencesIndexBufferOffsetAlignment"]);}();
[&]() {
result.minIndirectCommandsBufferOffsetAlignment=deserialize_uint32_t(name["members"]["minIndirectCommandsBufferOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawPropertiesEXT(VkPhysicalDeviceMultiDrawPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fslymVv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AQLRLJP=json({});
    
        if (name.pNext==NULL){
            return_AQLRLJP["null"]=true;
            return return_AQLRLJP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiDrawCount"]=[&]() {
    json return_atYmhNe=json({});
    return serialize_uint32_t(name.maxMultiDrawCount);}();
return result;}

    VkPhysicalDeviceMultiDrawPropertiesEXT deserialize_VkPhysicalDeviceMultiDrawPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiDrawCount=deserialize_uint32_t(name["members"]["maxMultiDrawCount"]);}();
return result;}

    json serialize_VkGraphicsShaderGroupCreateInfoNV(VkGraphicsShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fMxtYyH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hHObUCH=json({});
    
        if (name.pNext==NULL){
            return_hHObUCH["null"]=true;
            return return_hHObUCH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stageCount"]=[&]() {
    json return_IhvYNvI=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_kRnhyHu=json({});
    
        if (name.pStages==NULL){
            return_kRnhyHu["null"]=true;
            return return_kRnhyHu;
        }
        
        return_kRnhyHu["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_FCPsgid=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_kRnhyHu["members"][std::to_string(i)].push_back(temp);
        }
        return return_kRnhyHu;
        }();
result["members"]["pVertexInputState"]=[&]() {
    json return_URZynJA=json({});
    
        if (name.pVertexInputState==NULL){
            return_URZynJA["null"]=true;
            return return_URZynJA;
        }
        return_URZynJA=[&]() {
    json return_mgkMzTo=json({});
    return serialize_VkPipelineVertexInputStateCreateInfo(*name.pVertexInputState);}();
return return_URZynJA;}();
result["members"]["pTessellationState"]=[&]() {
    json return_trQENjj=json({});
    
        if (name.pTessellationState==NULL){
            return_trQENjj["null"]=true;
            return return_trQENjj;
        }
        return_trQENjj=[&]() {
    json return_QiHdZRQ=json({});
    return serialize_VkPipelineTessellationStateCreateInfo(*name.pTessellationState);}();
return return_trQENjj;}();
return result;}

    VkGraphicsShaderGroupCreateInfoNV deserialize_VkGraphicsShaderGroupCreateInfoNV(json name){
        auto result=VkGraphicsShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XmwBbKi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XmwBbKi=NULL;
        }
    temp_XmwBbKi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XmwBbKi;}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_GOGZZkC;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_GOGZZkC=NULL;
        }
    temp_GOGZZkC=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int ABHbDhf=0; ABHbDhf < result.stageCount; ABHbDhf++){
            [&]() {
temp_GOGZZkC[ABHbDhf]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][ABHbDhf]);}();;
        }
        }();result.pStages=temp_GOGZZkC;}();
[&]() {
VkPipelineVertexInputStateCreateInfo* temp_vaugCOZ;[&]() {

        if (name["members"]["pVertexInputState"].contains("null")){
        temp_vaugCOZ=NULL;
        }
    [&]() {
*(temp_vaugCOZ)=deserialize_VkPipelineVertexInputStateCreateInfo(name["members"]["pVertexInputState"]);}();
}();result.pVertexInputState=temp_vaugCOZ;}();
[&]() {
VkPipelineTessellationStateCreateInfo* temp_iyCoXlb;[&]() {

        if (name["members"]["pTessellationState"].contains("null")){
        temp_iyCoXlb=NULL;
        }
    [&]() {
*(temp_iyCoXlb)=deserialize_VkPipelineTessellationStateCreateInfo(name["members"]["pTessellationState"]);}();
}();result.pTessellationState=temp_iyCoXlb;}();
return result;}

    json serialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(VkGraphicsPipelineShaderGroupsCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nZdVhbS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Iodrhfy=json({});
    
        if (name.pNext==NULL){
            return_Iodrhfy["null"]=true;
            return return_Iodrhfy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["groupCount"]=[&]() {
    json return_YvKMroH=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_PacBaRr=json({});
    
        if (name.pGroups==NULL){
            return_PacBaRr["null"]=true;
            return return_PacBaRr;
        }
        
        return_PacBaRr["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_TWxUyeb=json({});
    return serialize_VkGraphicsShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_PacBaRr["members"][std::to_string(i)].push_back(temp);
        }
        return return_PacBaRr;
        }();
result["members"]["pipelineCount"]=[&]() {
    json return_OjRubpC=json({});
    return serialize_uint32_t(name.pipelineCount);}();
result["members"]["pPipelines"]=[&]() {
    json return_jsIIiYQ=json({});
    
        if (name.pPipelines==NULL){
            return_jsIIiYQ["null"]=true;
            return return_jsIIiYQ;
        }
        
        return_jsIIiYQ["members"]={};
        for(int i=0; i < name.pipelineCount; i++){
            json temp;
            temp=[&]() {
    json return_sWzJJpb=json({});
    return serialize_VkPipeline(name.pPipelines[i]);}();
            return_jsIIiYQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_jsIIiYQ;
        }();
return result;}

    VkGraphicsPipelineShaderGroupsCreateInfoNV deserialize_VkGraphicsPipelineShaderGroupsCreateInfoNV(json name){
        auto result=VkGraphicsPipelineShaderGroupsCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NRXXsPo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NRXXsPo=NULL;
        }
    temp_NRXXsPo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NRXXsPo;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkGraphicsShaderGroupCreateInfoNV* temp_qwUfSNE;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_qwUfSNE=NULL;
        }
    temp_qwUfSNE=(VkGraphicsShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkGraphicsShaderGroupCreateInfoNV));
        for (int issMPTV=0; issMPTV < result.groupCount; issMPTV++){
            [&]() {
temp_qwUfSNE[issMPTV]=deserialize_VkGraphicsShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][issMPTV]);}();;
        }
        }();result.pGroups=temp_qwUfSNE;}();
[&]() {
result.pipelineCount=deserialize_uint32_t(name["members"]["pipelineCount"]);}();
[&]() {
VkPipeline* temp_KGBuDId;[&]() {

        if (name["members"]["pPipelines"].contains("null")){
        temp_KGBuDId=NULL;
        }
    temp_KGBuDId=(VkPipeline*)malloc(result.pipelineCount*sizeof(VkPipeline));
        for (int TNHWphn=0; TNHWphn < result.pipelineCount; TNHWphn++){
            [&]() {
temp_KGBuDId[TNHWphn]=deserialize_VkPipeline(name["members"]["pPipelines"]["members"][TNHWphn]);}();;
        }
        }();result.pPipelines=temp_KGBuDId;}();
return result;}

    json serialize_VkBindShaderGroupIndirectCommandNV(VkBindShaderGroupIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupIndex"]=[&]() {
    json return_hvKfEUR=json({});
    return serialize_uint32_t(name.groupIndex);}();
return result;}

    VkBindShaderGroupIndirectCommandNV deserialize_VkBindShaderGroupIndirectCommandNV(json name){
        auto result=VkBindShaderGroupIndirectCommandNV();
    
[&]() {
result.groupIndex=deserialize_uint32_t(name["members"]["groupIndex"]);}();
return result;}

    json serialize_VkBindIndexBufferIndirectCommandNV(VkBindIndexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_sDluqdx=json({});
    return_sDluqdx=[&]() {
    json return_KKIczkI=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_sDluqdx;}();
result["members"]["size"]=[&]() {
    json return_WTbsJrK=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["indexType"]=[&]() {
    json return_yKyrXJX=json({});
    return serialize_VkIndexType(name.indexType);}();
return result;}

    VkBindIndexBufferIndirectCommandNV deserialize_VkBindIndexBufferIndirectCommandNV(json name){
        auto result=VkBindIndexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
return result;}

    json serialize_VkBindVertexBufferIndirectCommandNV(VkBindVertexBufferIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["bufferAddress"]=[&]() {
    json return_YGnDyAd=json({});
    return_YGnDyAd=[&]() {
    json return_xBSKpkN=json({});
    return serialize_uint64_t(name.bufferAddress);}();return return_YGnDyAd;}();
result["members"]["size"]=[&]() {
    json return_tQqqjDM=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["stride"]=[&]() {
    json return_VokkURg=json({});
    return serialize_uint32_t(name.stride);}();
return result;}

    VkBindVertexBufferIndirectCommandNV deserialize_VkBindVertexBufferIndirectCommandNV(json name){
        auto result=VkBindVertexBufferIndirectCommandNV();
    
[&]() {
[&]() {
result.bufferAddress=deserialize_uint64_t(name["members"]["bufferAddress"]);}();}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkSetStateFlagsIndirectCommandNV(VkSetStateFlagsIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["data"]=[&]() {
    json return_HXPSjJQ=json({});
    return serialize_uint32_t(name.data);}();
return result;}

    VkSetStateFlagsIndirectCommandNV deserialize_VkSetStateFlagsIndirectCommandNV(json name){
        auto result=VkSetStateFlagsIndirectCommandNV();
    
[&]() {
result.data=deserialize_uint32_t(name["members"]["data"]);}();
return result;}

    json serialize_VkIndirectCommandsStreamNV(VkIndirectCommandsStreamNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["buffer"]=[&]() {
    json return_VdETIQI=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_alRdRdQ=json({});
    return_alRdRdQ=[&]() {
    json return_bkYrLws=json({});
    return serialize_uint64_t(name.offset);}();return return_alRdRdQ;}();
return result;}

    VkIndirectCommandsStreamNV deserialize_VkIndirectCommandsStreamNV(json name){
        auto result=VkIndirectCommandsStreamNV();
    
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkIndirectCommandsLayoutTokenNV(VkIndirectCommandsLayoutTokenNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zePXKfj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xFkcLWf=json({});
    
        if (name.pNext==NULL){
            return_xFkcLWf["null"]=true;
            return return_xFkcLWf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tokenType"]=[&]() {
    json return_uYtFxiI=json({});
    return serialize_VkIndirectCommandsTokenTypeNV(name.tokenType);}();
result["members"]["stream"]=[&]() {
    json return_NJqAMca=json({});
    return serialize_uint32_t(name.stream);}();
result["members"]["offset"]=[&]() {
    json return_skVkKJh=json({});
    return serialize_uint32_t(name.offset);}();
result["members"]["vertexBindingUnit"]=[&]() {
    json return_CqQLkXM=json({});
    return serialize_uint32_t(name.vertexBindingUnit);}();
result["members"]["vertexDynamicStride"]=[&]() {
    json return_gRMlsdt=json({});
    return_gRMlsdt=[&]() {
    json return_SnbiMZt=json({});
    return serialize_uint32_t(name.vertexDynamicStride);}();return return_gRMlsdt;}();
result["members"]["pushconstantPipelineLayout"]=[&]() {
    json return_VQLZqME=json({});
    return serialize_VkPipelineLayout(name.pushconstantPipelineLayout);}();
result["members"]["pushconstantShaderStageFlags"]=[&]() {
    json return_mhkXokq=json({});
    return serialize_VkShaderStageFlags(name.pushconstantShaderStageFlags);}();
result["members"]["pushconstantOffset"]=[&]() {
    json return_RvCkusa=json({});
    return serialize_uint32_t(name.pushconstantOffset);}();
result["members"]["pushconstantSize"]=[&]() {
    json return_oHxcQCv=json({});
    return serialize_uint32_t(name.pushconstantSize);}();
result["members"]["indirectStateFlags"]=[&]() {
    json return_gRNaDjG=json({});
    return serialize_VkIndirectStateFlagsNV(name.indirectStateFlags);}();
result["members"]["indexTypeCount"]=[&]() {
    json return_slcfBqE=json({});
    return serialize_uint32_t(name.indexTypeCount);}();
result["members"]["pIndexTypes"]=[&]() {
    json return_lhyXnnH=json({});
    
        if (name.pIndexTypes==NULL){
            return_lhyXnnH["null"]=true;
            return return_lhyXnnH;
        }
        
        return_lhyXnnH["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_vZijaau=json({});
    return serialize_VkIndexType(name.pIndexTypes[i]);}();
            return_lhyXnnH["members"][std::to_string(i)].push_back(temp);
        }
        return return_lhyXnnH;
        }();
result["members"]["pIndexTypeValues"]=[&]() {
    json return_OeLrdRC=json({});
    
        if (name.pIndexTypeValues==NULL){
            return_OeLrdRC["null"]=true;
            return return_OeLrdRC;
        }
        
        return_OeLrdRC["members"]={};
        for(int i=0; i < name.indexTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_SLtJbXN=json({});
    return serialize_uint32_t(name.pIndexTypeValues[i]);}();
            return_OeLrdRC["members"][std::to_string(i)].push_back(temp);
        }
        return return_OeLrdRC;
        }();
return result;}

    VkIndirectCommandsLayoutTokenNV deserialize_VkIndirectCommandsLayoutTokenNV(json name){
        auto result=VkIndirectCommandsLayoutTokenNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FXibBij;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FXibBij=NULL;
        }
    temp_FXibBij=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FXibBij;}();
[&]() {
result.tokenType=deserialize_VkIndirectCommandsTokenTypeNV(name["members"]["tokenType"]);}();
[&]() {
result.stream=deserialize_uint32_t(name["members"]["stream"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
[&]() {
result.vertexBindingUnit=deserialize_uint32_t(name["members"]["vertexBindingUnit"]);}();
[&]() {
[&]() {
result.vertexDynamicStride=deserialize_uint32_t(name["members"]["vertexDynamicStride"]);}();}();
[&]() {
result.pushconstantPipelineLayout=deserialize_VkPipelineLayout(name["members"]["pushconstantPipelineLayout"]);}();
[&]() {
result.pushconstantShaderStageFlags=deserialize_VkShaderStageFlags(name["members"]["pushconstantShaderStageFlags"]);}();
[&]() {
result.pushconstantOffset=deserialize_uint32_t(name["members"]["pushconstantOffset"]);}();
[&]() {
result.pushconstantSize=deserialize_uint32_t(name["members"]["pushconstantSize"]);}();
[&]() {
result.indirectStateFlags=deserialize_VkIndirectStateFlagsNV(name["members"]["indirectStateFlags"]);}();
[&]() {
result.indexTypeCount=deserialize_uint32_t(name["members"]["indexTypeCount"]);}();
[&]() {
VkIndexType* temp_TSkOkIJ;[&]() {

        if (name["members"]["pIndexTypes"].contains("null")){
        temp_TSkOkIJ=NULL;
        }
    temp_TSkOkIJ=(VkIndexType*)malloc(result.indexTypeCount*sizeof(VkIndexType));
        for (int nqzQdIE=0; nqzQdIE < result.indexTypeCount; nqzQdIE++){
            [&]() {
temp_TSkOkIJ[nqzQdIE]=deserialize_VkIndexType(name["members"]["pIndexTypes"]["members"][nqzQdIE]);}();;
        }
        }();result.pIndexTypes=temp_TSkOkIJ;}();
[&]() {
uint32_t* temp_UwqVZfv;[&]() {

        if (name["members"]["pIndexTypeValues"].contains("null")){
        temp_UwqVZfv=NULL;
        }
    temp_UwqVZfv=(uint32_t*)malloc(result.indexTypeCount*sizeof(uint32_t));
        for (int VxQwXYQ=0; VxQwXYQ < result.indexTypeCount; VxQwXYQ++){
            [&]() {
temp_UwqVZfv[VxQwXYQ]=deserialize_uint32_t(name["members"]["pIndexTypeValues"]["members"][VxQwXYQ]);}();;
        }
        }();result.pIndexTypeValues=temp_UwqVZfv;}();
return result;}

    json serialize_VkIndirectCommandsLayoutCreateInfoNV(VkIndirectCommandsLayoutCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VDWagZy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WsFJstG=json({});
    
        if (name.pNext==NULL){
            return_WsFJstG["null"]=true;
            return return_WsFJstG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YUhBcFr=json({});
    return serialize_VkIndirectCommandsLayoutUsageFlagsNV(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_brAACNb=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["tokenCount"]=[&]() {
    json return_SUoJnou=json({});
    return serialize_uint32_t(name.tokenCount);}();
result["members"]["pTokens"]=[&]() {
    json return_krxqAAg=json({});
    
        if (name.pTokens==NULL){
            return_krxqAAg["null"]=true;
            return return_krxqAAg;
        }
        
        return_krxqAAg["members"]={};
        for(int i=0; i < name.tokenCount; i++){
            json temp;
            temp=[&]() {
    json return_yuYKbPl=json({});
    return serialize_VkIndirectCommandsLayoutTokenNV(name.pTokens[i]);}();
            return_krxqAAg["members"][std::to_string(i)].push_back(temp);
        }
        return return_krxqAAg;
        }();
result["members"]["streamCount"]=[&]() {
    json return_eFUrmBz=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreamStrides"]=[&]() {
    json return_oZffOen=json({});
    
        if (name.pStreamStrides==NULL){
            return_oZffOen["null"]=true;
            return return_oZffOen;
        }
        
        return_oZffOen["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_cuWoxbT=json({});
    return serialize_uint32_t(name.pStreamStrides[i]);}();
            return_oZffOen["members"][std::to_string(i)].push_back(temp);
        }
        return return_oZffOen;
        }();
return result;}

    VkIndirectCommandsLayoutCreateInfoNV deserialize_VkIndirectCommandsLayoutCreateInfoNV(json name){
        auto result=VkIndirectCommandsLayoutCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TbHNMSQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TbHNMSQ=NULL;
        }
    temp_TbHNMSQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TbHNMSQ;}();
[&]() {
result.flags=deserialize_VkIndirectCommandsLayoutUsageFlagsNV(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.tokenCount=deserialize_uint32_t(name["members"]["tokenCount"]);}();
[&]() {
VkIndirectCommandsLayoutTokenNV* temp_UzWLJMr;[&]() {

        if (name["members"]["pTokens"].contains("null")){
        temp_UzWLJMr=NULL;
        }
    temp_UzWLJMr=(VkIndirectCommandsLayoutTokenNV*)malloc(result.tokenCount*sizeof(VkIndirectCommandsLayoutTokenNV));
        for (int Ejfazay=0; Ejfazay < result.tokenCount; Ejfazay++){
            [&]() {
temp_UzWLJMr[Ejfazay]=deserialize_VkIndirectCommandsLayoutTokenNV(name["members"]["pTokens"]["members"][Ejfazay]);}();;
        }
        }();result.pTokens=temp_UzWLJMr;}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
uint32_t* temp_kQjJGSs;[&]() {

        if (name["members"]["pStreamStrides"].contains("null")){
        temp_kQjJGSs=NULL;
        }
    temp_kQjJGSs=(uint32_t*)malloc(result.streamCount*sizeof(uint32_t));
        for (int UfzaVTM=0; UfzaVTM < result.streamCount; UfzaVTM++){
            [&]() {
temp_kQjJGSs[UfzaVTM]=deserialize_uint32_t(name["members"]["pStreamStrides"]["members"][UfzaVTM]);}();;
        }
        }();result.pStreamStrides=temp_kQjJGSs;}();
return result;}

    json serialize_VkGeneratedCommandsInfoNV(VkGeneratedCommandsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zjBSGVd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qLnLewP=json({});
    
        if (name.pNext==NULL){
            return_qLnLewP["null"]=true;
            return return_qLnLewP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_ervuQIb=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_yKYBiqX=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_pwPxSyc=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["streamCount"]=[&]() {
    json return_bNOBQVz=json({});
    return serialize_uint32_t(name.streamCount);}();
result["members"]["pStreams"]=[&]() {
    json return_xDYuyJJ=json({});
    
        if (name.pStreams==NULL){
            return_xDYuyJJ["null"]=true;
            return return_xDYuyJJ;
        }
        
        return_xDYuyJJ["members"]={};
        for(int i=0; i < name.streamCount; i++){
            json temp;
            temp=[&]() {
    json return_QzTfJRH=json({});
    return serialize_VkIndirectCommandsStreamNV(name.pStreams[i]);}();
            return_xDYuyJJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_xDYuyJJ;
        }();
result["members"]["sequencesCount"]=[&]() {
    json return_BjmISkE=json({});
    return serialize_uint32_t(name.sequencesCount);}();
result["members"]["preprocessBuffer"]=[&]() {
    json return_LPPnjzt=json({});
    return serialize_VkBuffer(name.preprocessBuffer);}();
result["members"]["preprocessOffset"]=[&]() {
    json return_tJltcTK=json({});
    return_tJltcTK=[&]() {
    json return_CNFSvKB=json({});
    return serialize_uint64_t(name.preprocessOffset);}();return return_tJltcTK;}();
result["members"]["preprocessSize"]=[&]() {
    json return_QabzXdN=json({});
    return_QabzXdN=[&]() {
    json return_KsRGouG=json({});
    return serialize_uint64_t(name.preprocessSize);}();return return_QabzXdN;}();
result["members"]["sequencesCountBuffer"]=[&]() {
    json return_fOpIvyc=json({});
    return serialize_VkBuffer(name.sequencesCountBuffer);}();
result["members"]["sequencesCountOffset"]=[&]() {
    json return_xHsMSxZ=json({});
    return_xHsMSxZ=[&]() {
    json return_LMPfvpY=json({});
    return serialize_uint64_t(name.sequencesCountOffset);}();return return_xHsMSxZ;}();
result["members"]["sequencesIndexBuffer"]=[&]() {
    json return_dKjojBp=json({});
    return serialize_VkBuffer(name.sequencesIndexBuffer);}();
result["members"]["sequencesIndexOffset"]=[&]() {
    json return_GdACtoT=json({});
    return_GdACtoT=[&]() {
    json return_beCdmBy=json({});
    return serialize_uint64_t(name.sequencesIndexOffset);}();return return_GdACtoT;}();
return result;}

    VkGeneratedCommandsInfoNV deserialize_VkGeneratedCommandsInfoNV(json name){
        auto result=VkGeneratedCommandsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bfOHliN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bfOHliN=NULL;
        }
    temp_bfOHliN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bfOHliN;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.streamCount=deserialize_uint32_t(name["members"]["streamCount"]);}();
[&]() {
VkIndirectCommandsStreamNV* temp_ozBJfkx;[&]() {

        if (name["members"]["pStreams"].contains("null")){
        temp_ozBJfkx=NULL;
        }
    temp_ozBJfkx=(VkIndirectCommandsStreamNV*)malloc(result.streamCount*sizeof(VkIndirectCommandsStreamNV));
        for (int EPRlajp=0; EPRlajp < result.streamCount; EPRlajp++){
            [&]() {
temp_ozBJfkx[EPRlajp]=deserialize_VkIndirectCommandsStreamNV(name["members"]["pStreams"]["members"][EPRlajp]);}();;
        }
        }();result.pStreams=temp_ozBJfkx;}();
[&]() {
result.sequencesCount=deserialize_uint32_t(name["members"]["sequencesCount"]);}();
[&]() {
result.preprocessBuffer=deserialize_VkBuffer(name["members"]["preprocessBuffer"]);}();
[&]() {
[&]() {
result.preprocessOffset=deserialize_uint64_t(name["members"]["preprocessOffset"]);}();}();
[&]() {
[&]() {
result.preprocessSize=deserialize_uint64_t(name["members"]["preprocessSize"]);}();}();
[&]() {
result.sequencesCountBuffer=deserialize_VkBuffer(name["members"]["sequencesCountBuffer"]);}();
[&]() {
[&]() {
result.sequencesCountOffset=deserialize_uint64_t(name["members"]["sequencesCountOffset"]);}();}();
[&]() {
result.sequencesIndexBuffer=deserialize_VkBuffer(name["members"]["sequencesIndexBuffer"]);}();
[&]() {
[&]() {
result.sequencesIndexOffset=deserialize_uint64_t(name["members"]["sequencesIndexOffset"]);}();}();
return result;}

    json serialize_VkGeneratedCommandsMemoryRequirementsInfoNV(VkGeneratedCommandsMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fYdehsh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MrIjWQR=json({});
    
        if (name.pNext==NULL){
            return_MrIjWQR["null"]=true;
            return return_MrIjWQR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_PWZWvNT=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_GeGuvMu=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["indirectCommandsLayout"]=[&]() {
    json return_iVbVOdF=json({});
    return serialize_VkIndirectCommandsLayoutNV(name.indirectCommandsLayout);}();
result["members"]["maxSequencesCount"]=[&]() {
    json return_JgqufdC=json({});
    return serialize_uint32_t(name.maxSequencesCount);}();
return result;}

    VkGeneratedCommandsMemoryRequirementsInfoNV deserialize_VkGeneratedCommandsMemoryRequirementsInfoNV(json name){
        auto result=VkGeneratedCommandsMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qRoTssF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qRoTssF=NULL;
        }
    temp_qRoTssF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qRoTssF;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.indirectCommandsLayout=deserialize_VkIndirectCommandsLayoutNV(name["members"]["indirectCommandsLayout"]);}();
[&]() {
result.maxSequencesCount=deserialize_uint32_t(name["members"]["maxSequencesCount"]);}();
return result;}

    json serialize_VkPipelineIndirectDeviceAddressInfoNV(VkPipelineIndirectDeviceAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_akBinou=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IEEFxUB=json({});
    
        if (name.pNext==NULL){
            return_IEEFxUB["null"]=true;
            return return_IEEFxUB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_TYMgLOq=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipeline"]=[&]() {
    json return_vuRESRl=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineIndirectDeviceAddressInfoNV deserialize_VkPipelineIndirectDeviceAddressInfoNV(json name){
        auto result=VkPipelineIndirectDeviceAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IKidsZR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IKidsZR=NULL;
        }
    temp_IKidsZR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IKidsZR;}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkBindPipelineIndirectCommandNV(VkBindPipelineIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pipelineAddress"]=[&]() {
    json return_eiRgEWj=json({});
    return_eiRgEWj=[&]() {
    json return_rvIHtwM=json({});
    return serialize_uint64_t(name.pipelineAddress);}();return return_eiRgEWj;}();
return result;}

    VkBindPipelineIndirectCommandNV deserialize_VkBindPipelineIndirectCommandNV(json name){
        auto result=VkBindPipelineIndirectCommandNV();
    
[&]() {
[&]() {
result.pipelineAddress=deserialize_uint64_t(name["members"]["pipelineAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2(VkPhysicalDeviceFeatures2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_atLqxci=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IyEwwpe=json({});
    
        if (name.pNext==NULL){
            return_IyEwwpe["null"]=true;
            return return_IyEwwpe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_qWWvzFo=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2 deserialize_VkPhysicalDeviceFeatures2(json name){
        auto result=VkPhysicalDeviceFeatures2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceFeatures2KHR(VkPhysicalDeviceFeatures2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PPjzXbU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PfIDUcR=json({});
    
        if (name.pNext==NULL){
            return_PfIDUcR["null"]=true;
            return return_PfIDUcR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["features"]=[&]() {
    json return_ntgGdbj=json({});
    return serialize_VkPhysicalDeviceFeatures(name.features);}();
return result;}

    VkPhysicalDeviceFeatures2KHR deserialize_VkPhysicalDeviceFeatures2KHR(json name){
        auto result=VkPhysicalDeviceFeatures2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.features=deserialize_VkPhysicalDeviceFeatures(name["members"]["features"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2(VkPhysicalDeviceProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_njfkYGs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rqRlrWN=json({});
    
        if (name.pNext==NULL){
            return_rqRlrWN["null"]=true;
            return return_rqRlrWN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_EnskGAM=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2 deserialize_VkPhysicalDeviceProperties2(json name){
        auto result=VkPhysicalDeviceProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceProperties2KHR(VkPhysicalDeviceProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aOOVtlu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UBiMqIg=json({});
    
        if (name.pNext==NULL){
            return_UBiMqIg["null"]=true;
            return return_UBiMqIg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_HfqSzkf=json({});
    return serialize_VkPhysicalDeviceProperties(name.properties);}();
return result;}

    VkPhysicalDeviceProperties2KHR deserialize_VkPhysicalDeviceProperties2KHR(json name){
        auto result=VkPhysicalDeviceProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkPhysicalDeviceProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkFormatProperties2(VkFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PjffQmX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZOhlQYL=json({});
    
        if (name.pNext==NULL){
            return_ZOhlQYL["null"]=true;
            return return_ZOhlQYL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_qfBhmGG=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2 deserialize_VkFormatProperties2(json name){
        auto result=VkFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkFormatProperties2KHR(VkFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_roVJhmO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MyWWhuS=json({});
    
        if (name.pNext==NULL){
            return_MyWWhuS["null"]=true;
            return return_MyWWhuS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatProperties"]=[&]() {
    json return_nwksyhF=json({});
    return serialize_VkFormatProperties(name.formatProperties);}();
return result;}

    VkFormatProperties2KHR deserialize_VkFormatProperties2KHR(json name){
        auto result=VkFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.formatProperties=deserialize_VkFormatProperties(name["members"]["formatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2(VkImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZnTNmKu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jcUuZgg=json({});
    
        if (name.pNext==NULL){
            return_jcUuZgg["null"]=true;
            return return_jcUuZgg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_FJXFLiV=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2 deserialize_VkImageFormatProperties2(json name){
        auto result=VkImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkImageFormatProperties2KHR(VkImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZMRhaOl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fTVfRNU=json({});
    
        if (name.pNext==NULL){
            return_fTVfRNU["null"]=true;
            return return_fTVfRNU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFormatProperties"]=[&]() {
    json return_IyiUbqM=json({});
    return serialize_VkImageFormatProperties(name.imageFormatProperties);}();
return result;}

    VkImageFormatProperties2KHR deserialize_VkImageFormatProperties2KHR(json name){
        auto result=VkImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageFormatProperties=deserialize_VkImageFormatProperties(name["members"]["imageFormatProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2(VkPhysicalDeviceImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OeSwyFW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ohAAUDJ=json({});
    
        if (name.pNext==NULL){
            return_ohAAUDJ["null"]=true;
            return return_ohAAUDJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_wAvbuqC=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_dtENikw=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_vUsIqyi=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_hQrafHf=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_JWwaNpp=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2 deserialize_VkPhysicalDeviceImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BxmvNew;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BxmvNew=NULL;
        }
    temp_BxmvNew=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BxmvNew;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageFormatInfo2KHR(VkPhysicalDeviceImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zWsBJHi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_awkqGEw=json({});
    
        if (name.pNext==NULL){
            return_awkqGEw["null"]=true;
            return return_awkqGEw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_mlioeGc=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_KSxHDCX=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["tiling"]=[&]() {
    json return_GYvlslE=json({});
    return serialize_VkImageTiling(name.tiling);}();
result["members"]["usage"]=[&]() {
    json return_motIgBl=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["flags"]=[&]() {
    json return_gfyCrIs=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
return result;}

    VkPhysicalDeviceImageFormatInfo2KHR deserialize_VkPhysicalDeviceImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RKDctkD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RKDctkD=NULL;
        }
    temp_RKDctkD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RKDctkD;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2(VkQueueFamilyProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hheiRMl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LRQheXf=json({});
    
        if (name.pNext==NULL){
            return_LRQheXf["null"]=true;
            return return_LRQheXf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_rJMtYsq=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2 deserialize_VkQueueFamilyProperties2(json name){
        auto result=VkQueueFamilyProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkQueueFamilyProperties2KHR(VkQueueFamilyProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fFpqiSX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PbUEYkG=json({});
    
        if (name.pNext==NULL){
            return_PbUEYkG["null"]=true;
            return return_PbUEYkG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyProperties"]=[&]() {
    json return_MStAErK=json({});
    return serialize_VkQueueFamilyProperties(name.queueFamilyProperties);}();
return result;}

    VkQueueFamilyProperties2KHR deserialize_VkQueueFamilyProperties2KHR(json name){
        auto result=VkQueueFamilyProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.queueFamilyProperties=deserialize_VkQueueFamilyProperties(name["members"]["queueFamilyProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2(VkPhysicalDeviceMemoryProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bWJZLJY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_faLdTUK=json({});
    
        if (name.pNext==NULL){
            return_faLdTUK["null"]=true;
            return return_faLdTUK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_CvYakzC=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2 deserialize_VkPhysicalDeviceMemoryProperties2(json name){
        auto result=VkPhysicalDeviceMemoryProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryProperties2KHR(VkPhysicalDeviceMemoryProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BtAzzuu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iMYFFCd=json({});
    
        if (name.pNext==NULL){
            return_iMYFFCd["null"]=true;
            return return_iMYFFCd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryProperties"]=[&]() {
    json return_tnuDZSJ=json({});
    return serialize_VkPhysicalDeviceMemoryProperties(name.memoryProperties);}();
return result;}

    VkPhysicalDeviceMemoryProperties2KHR deserialize_VkPhysicalDeviceMemoryProperties2KHR(json name){
        auto result=VkPhysicalDeviceMemoryProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryProperties=deserialize_VkPhysicalDeviceMemoryProperties(name["members"]["memoryProperties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2(VkSparseImageFormatProperties2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zByiyPj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hxHDhdB=json({});
    
        if (name.pNext==NULL){
            return_hxHDhdB["null"]=true;
            return return_hxHDhdB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_fVQFmMX=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2 deserialize_VkSparseImageFormatProperties2(json name){
        auto result=VkSparseImageFormatProperties2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkSparseImageFormatProperties2KHR(VkSparseImageFormatProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pSbPHfm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hoFhxRc=json({});
    
        if (name.pNext==NULL){
            return_hoFhxRc["null"]=true;
            return return_hoFhxRc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["properties"]=[&]() {
    json return_pptlMXy=json({});
    return serialize_VkSparseImageFormatProperties(name.properties);}();
return result;}

    VkSparseImageFormatProperties2KHR deserialize_VkSparseImageFormatProperties2KHR(json name){
        auto result=VkSparseImageFormatProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.properties=deserialize_VkSparseImageFormatProperties(name["members"]["properties"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2(VkPhysicalDeviceSparseImageFormatInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_btYQdFK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CVhoBkP=json({});
    
        if (name.pNext==NULL){
            return_CVhoBkP["null"]=true;
            return return_CVhoBkP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_XNWOcVs=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_fywZlAU=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_PqVsnxH=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_VsSuWoT=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_FgWANPZ=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2 deserialize_VkPhysicalDeviceSparseImageFormatInfo2(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DlZXOMx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DlZXOMx=NULL;
        }
    temp_DlZXOMx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DlZXOMx;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(VkPhysicalDeviceSparseImageFormatInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vMelCzK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UorEEuM=json({});
    
        if (name.pNext==NULL){
            return_UorEEuM["null"]=true;
            return return_UorEEuM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_BlPwWTg=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["type"]=[&]() {
    json return_McTQLQF=json({});
    return serialize_VkImageType(name.type);}();
result["members"]["samples"]=[&]() {
    json return_OHRlNQv=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["usage"]=[&]() {
    json return_aYJeHok=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["tiling"]=[&]() {
    json return_MHoZgti=json({});
    return serialize_VkImageTiling(name.tiling);}();
return result;}

    VkPhysicalDeviceSparseImageFormatInfo2KHR deserialize_VkPhysicalDeviceSparseImageFormatInfo2KHR(json name){
        auto result=VkPhysicalDeviceSparseImageFormatInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fUFMDgS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fUFMDgS=NULL;
        }
    temp_fUFMDgS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fUFMDgS;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.type=deserialize_VkImageType(name["members"]["type"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.tiling=deserialize_VkImageTiling(name["members"]["tiling"]);}();
return result;}

    json serialize_VkPhysicalDevicePushDescriptorPropertiesKHR(VkPhysicalDevicePushDescriptorPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_frrjeab=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BIzcRSv=json({});
    
        if (name.pNext==NULL){
            return_BIzcRSv["null"]=true;
            return return_BIzcRSv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPushDescriptors"]=[&]() {
    json return_sfuneWn=json({});
    return serialize_uint32_t(name.maxPushDescriptors);}();
return result;}

    VkPhysicalDevicePushDescriptorPropertiesKHR deserialize_VkPhysicalDevicePushDescriptorPropertiesKHR(json name){
        auto result=VkPhysicalDevicePushDescriptorPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPushDescriptors=deserialize_uint32_t(name["members"]["maxPushDescriptors"]);}();
return result;}

    json serialize_VkConformanceVersion(VkConformanceVersion name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_XPckEcd=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_mGrVKtn=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_dojppye=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_FTyGUmz=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersion deserialize_VkConformanceVersion(json name){
        auto result=VkConformanceVersion();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkConformanceVersionKHR(VkConformanceVersionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["major"]=[&]() {
    json return_cweQGlc=json({});
    return serialize_uint8_t(name.major);}();
result["members"]["minor"]=[&]() {
    json return_xIXADwd=json({});
    return serialize_uint8_t(name.minor);}();
result["members"]["subminor"]=[&]() {
    json return_VqmdhvT=json({});
    return serialize_uint8_t(name.subminor);}();
result["members"]["patch"]=[&]() {
    json return_fTNASot=json({});
    return serialize_uint8_t(name.patch);}();
return result;}

    VkConformanceVersionKHR deserialize_VkConformanceVersionKHR(json name){
        auto result=VkConformanceVersionKHR();
    
[&]() {
result.major=deserialize_uint8_t(name["members"]["major"]);}();
[&]() {
result.minor=deserialize_uint8_t(name["members"]["minor"]);}();
[&]() {
result.subminor=deserialize_uint8_t(name["members"]["subminor"]);}();
[&]() {
result.patch=deserialize_uint8_t(name["members"]["patch"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverProperties(VkPhysicalDeviceDriverProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nahZJPZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LiIDolB=json({});
    
        if (name.pNext==NULL){
            return_LiIDolB["null"]=true;
            return return_LiIDolB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_pXdXaxT=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_rRfXcdl=json({});
    
        return_rRfXcdl["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_zYAUFiG=json({});
    return serialize_char(name.driverName[i]);}();
            return_rRfXcdl["members"][std::to_string(i)].push_back(temp);
        }
        return return_rRfXcdl;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_RiBYEDH=json({});
    
        return_RiBYEDH["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_pwbCxwX=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_RiBYEDH["members"][std::to_string(i)].push_back(temp);
        }
        return return_RiBYEDH;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_ZTImiuE=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverProperties deserialize_VkPhysicalDeviceDriverProperties(json name){
        auto result=VkPhysicalDeviceDriverProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int nNvcEGr=0; nNvcEGr < VK_MAX_DRIVER_NAME_SIZE; nNvcEGr++){
            [&]() {
result.driverName[nNvcEGr]=deserialize_char(name["members"]["driverName"]["members"][nNvcEGr]);}();;
        }
        }();
[&]() {

        for (int GNrvYvR=0; GNrvYvR < VK_MAX_DRIVER_INFO_SIZE; GNrvYvR++){
            [&]() {
result.driverInfo[GNrvYvR]=deserialize_char(name["members"]["driverInfo"]["members"][GNrvYvR]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPhysicalDeviceDriverPropertiesKHR(VkPhysicalDeviceDriverPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FDoMWVN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BNyrbFv=json({});
    
        if (name.pNext==NULL){
            return_BNyrbFv["null"]=true;
            return return_BNyrbFv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_LBBimpn=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_rBXcDkI=json({});
    
        return_rBXcDkI["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_kAVexbL=json({});
    return serialize_char(name.driverName[i]);}();
            return_rBXcDkI["members"][std::to_string(i)].push_back(temp);
        }
        return return_rBXcDkI;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_hpugtBa=json({});
    
        return_hpugtBa["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_mZtJuHZ=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_hpugtBa["members"][std::to_string(i)].push_back(temp);
        }
        return return_hpugtBa;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_ZoQbOSs=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
return result;}

    VkPhysicalDeviceDriverPropertiesKHR deserialize_VkPhysicalDeviceDriverPropertiesKHR(json name){
        auto result=VkPhysicalDeviceDriverPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int yofoQVB=0; yofoQVB < VK_MAX_DRIVER_NAME_SIZE; yofoQVB++){
            [&]() {
result.driverName[yofoQVB]=deserialize_char(name["members"]["driverName"]["members"][yofoQVB]);}();;
        }
        }();
[&]() {

        for (int RYMtrpt=0; RYMtrpt < VK_MAX_DRIVER_INFO_SIZE; RYMtrpt++){
            [&]() {
result.driverInfo[RYMtrpt]=deserialize_char(name["members"]["driverInfo"]["members"][RYMtrpt]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
return result;}

    json serialize_VkPresentRegionsKHR(VkPresentRegionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_isjWnKw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pcvenAO=json({});
    
        if (name.pNext==NULL){
            return_pcvenAO["null"]=true;
            return return_pcvenAO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_gJrFoMk=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pRegions"]=[&]() {
    json return_dpIyOhQ=json({});
    
        if (name.pRegions==NULL){
            return_dpIyOhQ["null"]=true;
            return return_dpIyOhQ;
        }
        
        return_dpIyOhQ["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_gZewYRL=json({});
    return serialize_VkPresentRegionKHR(name.pRegions[i]);}();
            return_dpIyOhQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_dpIyOhQ;
        }();
return result;}

    VkPresentRegionsKHR deserialize_VkPresentRegionsKHR(json name){
        auto result=VkPresentRegionsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HRdAWnx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HRdAWnx=NULL;
        }
    temp_HRdAWnx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HRdAWnx;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentRegionKHR* temp_SSMAJfu;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_SSMAJfu=NULL;
        }
    temp_SSMAJfu=(VkPresentRegionKHR*)malloc(result.swapchainCount*sizeof(VkPresentRegionKHR));
        for (int PIhUMeE=0; PIhUMeE < result.swapchainCount; PIhUMeE++){
            [&]() {
temp_SSMAJfu[PIhUMeE]=deserialize_VkPresentRegionKHR(name["members"]["pRegions"]["members"][PIhUMeE]);}();;
        }
        }();result.pRegions=temp_SSMAJfu;}();
return result;}

    json serialize_VkPresentRegionKHR(VkPresentRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["rectangleCount"]=[&]() {
    json return_fjxZIRo=json({});
    return serialize_uint32_t(name.rectangleCount);}();
result["members"]["pRectangles"]=[&]() {
    json return_CDmugfQ=json({});
    
        if (name.pRectangles==NULL){
            return_CDmugfQ["null"]=true;
            return return_CDmugfQ;
        }
        
        return_CDmugfQ["members"]={};
        for(int i=0; i < name.rectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_TBIxHiG=json({});
    return serialize_VkRectLayerKHR(name.pRectangles[i]);}();
            return_CDmugfQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_CDmugfQ;
        }();
return result;}

    VkPresentRegionKHR deserialize_VkPresentRegionKHR(json name){
        auto result=VkPresentRegionKHR();
    
[&]() {
result.rectangleCount=deserialize_uint32_t(name["members"]["rectangleCount"]);}();
[&]() {
VkRectLayerKHR* temp_puIzHRO;[&]() {

        if (name["members"]["pRectangles"].contains("null")){
        temp_puIzHRO=NULL;
        }
    temp_puIzHRO=(VkRectLayerKHR*)malloc(result.rectangleCount*sizeof(VkRectLayerKHR));
        for (int XlBGkhf=0; XlBGkhf < result.rectangleCount; XlBGkhf++){
            [&]() {
temp_puIzHRO[XlBGkhf]=deserialize_VkRectLayerKHR(name["members"]["pRectangles"]["members"][XlBGkhf]);}();;
        }
        }();result.pRectangles=temp_puIzHRO;}();
return result;}

    json serialize_VkRectLayerKHR(VkRectLayerKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["offset"]=[&]() {
    json return_TFkddPh=json({});
    return serialize_VkOffset2D(name.offset);}();
result["members"]["extent"]=[&]() {
    json return_vOcIWzG=json({});
    return serialize_VkExtent2D(name.extent);}();
result["members"]["layer"]=[&]() {
    json return_PIlvRFy=json({});
    return serialize_uint32_t(name.layer);}();
return result;}

    VkRectLayerKHR deserialize_VkRectLayerKHR(json name){
        auto result=VkRectLayerKHR();
    
[&]() {
result.offset=deserialize_VkOffset2D(name["members"]["offset"]);}();
[&]() {
result.extent=deserialize_VkExtent2D(name["members"]["extent"]);}();
[&]() {
result.layer=deserialize_uint32_t(name["members"]["layer"]);}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeatures(VkPhysicalDeviceVariablePointersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cihxajZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HLVYTps=json({});
    
        if (name.pNext==NULL){
            return_HLVYTps["null"]=true;
            return return_HLVYTps;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_wQJqeUR=json({});
    return_wQJqeUR=[&]() {
    json return_IlyTCAl=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_wQJqeUR;}();
result["members"]["variablePointers"]=[&]() {
    json return_ujsWmMI=json({});
    return_ujsWmMI=[&]() {
    json return_uvdBcZg=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_ujsWmMI;}();
return result;}

    VkPhysicalDeviceVariablePointersFeatures deserialize_VkPhysicalDeviceVariablePointersFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointersFeaturesKHR(VkPhysicalDeviceVariablePointersFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TOAvCtW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZmciBlm=json({});
    
        if (name.pNext==NULL){
            return_ZmciBlm["null"]=true;
            return return_ZmciBlm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_IXcwIms=json({});
    return_IXcwIms=[&]() {
    json return_iCdyZuM=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_IXcwIms;}();
result["members"]["variablePointers"]=[&]() {
    json return_RUyupbT=json({});
    return_RUyupbT=[&]() {
    json return_ddQHySp=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_RUyupbT;}();
return result;}

    VkPhysicalDeviceVariablePointersFeaturesKHR deserialize_VkPhysicalDeviceVariablePointersFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointersFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeaturesKHR(VkPhysicalDeviceVariablePointerFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BxBvXaK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xHuclPH=json({});
    
        if (name.pNext==NULL){
            return_xHuclPH["null"]=true;
            return return_xHuclPH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_sIeBBJN=json({});
    return_sIeBBJN=[&]() {
    json return_MUrJGWN=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_sIeBBJN;}();
result["members"]["variablePointers"]=[&]() {
    json return_gxcUogu=json({});
    return_gxcUogu=[&]() {
    json return_yypxycg=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_gxcUogu;}();
return result;}

    VkPhysicalDeviceVariablePointerFeaturesKHR deserialize_VkPhysicalDeviceVariablePointerFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVariablePointerFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVariablePointerFeatures(VkPhysicalDeviceVariablePointerFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KVKbzIA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HefThGb=json({});
    
        if (name.pNext==NULL){
            return_HefThGb["null"]=true;
            return return_HefThGb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_WzxzVlF=json({});
    return_WzxzVlF=[&]() {
    json return_nzeNVFl=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_WzxzVlF;}();
result["members"]["variablePointers"]=[&]() {
    json return_wxPmygI=json({});
    return_wxPmygI=[&]() {
    json return_HUijKMl=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_wxPmygI;}();
return result;}

    VkPhysicalDeviceVariablePointerFeatures deserialize_VkPhysicalDeviceVariablePointerFeatures(json name){
        auto result=VkPhysicalDeviceVariablePointerFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
return result;}

    json serialize_VkExternalMemoryProperties(VkExternalMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_YMGzZDM=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_TvPTnoT=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_WTaYbCe=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryProperties deserialize_VkExternalMemoryProperties(json name){
        auto result=VkExternalMemoryProperties();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryPropertiesKHR(VkExternalMemoryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["externalMemoryFeatures"]=[&]() {
    json return_ExkEUTS=json({});
    return serialize_VkExternalMemoryFeatureFlags(name.externalMemoryFeatures);}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_gPkphGv=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_SmvACMJ=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.compatibleHandleTypes);}();
return result;}

    VkExternalMemoryPropertiesKHR deserialize_VkExternalMemoryPropertiesKHR(json name){
        auto result=VkExternalMemoryPropertiesKHR();
    
[&]() {
result.externalMemoryFeatures=deserialize_VkExternalMemoryFeatureFlags(name["members"]["externalMemoryFeatures"]);}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfo(VkPhysicalDeviceExternalImageFormatInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AzutODA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zSYUdEC=json({});
    
        if (name.pNext==NULL){
            return_zSYUdEC["null"]=true;
            return return_zSYUdEC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_tjhgLFe=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfo deserialize_VkPhysicalDeviceExternalImageFormatInfo(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VhSQrsc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VhSQrsc=NULL;
        }
    temp_VhSQrsc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VhSQrsc;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalImageFormatInfoKHR(VkPhysicalDeviceExternalImageFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LLXjKuS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GHKiBoI=json({});
    
        if (name.pNext==NULL){
            return_GHKiBoI["null"]=true;
            return return_GHKiBoI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_bPhaNPb=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalImageFormatInfoKHR deserialize_VkPhysicalDeviceExternalImageFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalImageFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yZkYPRp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yZkYPRp=NULL;
        }
    temp_yZkYPRp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yZkYPRp;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalImageFormatProperties(VkExternalImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_icoOBLb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XNeQctB=json({});
    
        if (name.pNext==NULL){
            return_XNeQctB["null"]=true;
            return return_XNeQctB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_ORkXTPj=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatProperties deserialize_VkExternalImageFormatProperties(json name){
        auto result=VkExternalImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalImageFormatPropertiesKHR(VkExternalImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WNxxihH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_INrcOuy=json({});
    
        if (name.pNext==NULL){
            return_INrcOuy["null"]=true;
            return return_INrcOuy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_vobrXRT=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalImageFormatPropertiesKHR deserialize_VkExternalImageFormatPropertiesKHR(json name){
        auto result=VkExternalImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfo(VkPhysicalDeviceExternalBufferInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lINhHHh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_niISCpI=json({});
    
        if (name.pNext==NULL){
            return_niISCpI["null"]=true;
            return return_niISCpI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_DwQYBMC=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_UOFXDlZ=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_zfFYEjT=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfo deserialize_VkPhysicalDeviceExternalBufferInfo(json name){
        auto result=VkPhysicalDeviceExternalBufferInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VVuBuAz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VVuBuAz=NULL;
        }
    temp_VVuBuAz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VVuBuAz;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalBufferInfoKHR(VkPhysicalDeviceExternalBufferInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_khVYfPz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MHOiciN=json({});
    
        if (name.pNext==NULL){
            return_MHOiciN["null"]=true;
            return return_MHOiciN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FaHKPnQ=json({});
    return serialize_VkBufferCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_VpSrnkS=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
result["members"]["handleType"]=[&]() {
    json return_LuHkKBM=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalBufferInfoKHR deserialize_VkPhysicalDeviceExternalBufferInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalBufferInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cFhIxNP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cFhIxNP=NULL;
        }
    temp_cFhIxNP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cFhIxNP;}();
[&]() {
result.flags=deserialize_VkBufferCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalBufferProperties(VkExternalBufferProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jCrsjuF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QmVkmSO=json({});
    
        if (name.pNext==NULL){
            return_QmVkmSO["null"]=true;
            return return_QmVkmSO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_XLNAwJL=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferProperties deserialize_VkExternalBufferProperties(json name){
        auto result=VkExternalBufferProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkExternalBufferPropertiesKHR(VkExternalBufferPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mvHAIoM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RdPzmhK=json({});
    
        if (name.pNext==NULL){
            return_RdPzmhK["null"]=true;
            return return_RdPzmhK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryProperties"]=[&]() {
    json return_ShcPRkV=json({});
    return serialize_VkExternalMemoryProperties(name.externalMemoryProperties);}();
return result;}

    VkExternalBufferPropertiesKHR deserialize_VkExternalBufferPropertiesKHR(json name){
        auto result=VkExternalBufferPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.externalMemoryProperties=deserialize_VkExternalMemoryProperties(name["members"]["externalMemoryProperties"]);}();
return result;}

    json serialize_VkPhysicalDeviceIDProperties(VkPhysicalDeviceIDProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jxcTwQY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FYGgdcD=json({});
    
        if (name.pNext==NULL){
            return_FYGgdcD["null"]=true;
            return return_FYGgdcD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_PDQcHHM=json({});
    
        return_PDQcHHM["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_Nyeexqy=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_PDQcHHM["members"][std::to_string(i)].push_back(temp);
        }
        return return_PDQcHHM;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_jpnUqgG=json({});
    
        return_jpnUqgG["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_LeEIaVy=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_jpnUqgG["members"][std::to_string(i)].push_back(temp);
        }
        return return_jpnUqgG;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_wTZJhBb=json({});
    
        return_wTZJhBb["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_sjPaUxj=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_wTZJhBb["members"][std::to_string(i)].push_back(temp);
        }
        return return_wTZJhBb;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_EbwatgA=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_iqAzhgf=json({});
    return_iqAzhgf=[&]() {
    json return_AHnGhVL=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_iqAzhgf;}();
return result;}

    VkPhysicalDeviceIDProperties deserialize_VkPhysicalDeviceIDProperties(json name){
        auto result=VkPhysicalDeviceIDProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int nsFzZGQ=0; nsFzZGQ < VK_UUID_SIZE; nsFzZGQ++){
            [&]() {
result.deviceUUID[nsFzZGQ]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][nsFzZGQ]);}();;
        }
        }();
[&]() {

        for (int RtOSBKB=0; RtOSBKB < VK_UUID_SIZE; RtOSBKB++){
            [&]() {
result.driverUUID[RtOSBKB]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][RtOSBKB]);}();;
        }
        }();
[&]() {

        for (int ZgMfwwj=0; ZgMfwwj < VK_LUID_SIZE; ZgMfwwj++){
            [&]() {
result.deviceLUID[ZgMfwwj]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][ZgMfwwj]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIDPropertiesKHR(VkPhysicalDeviceIDPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bYOFIxv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iMYkIRR=json({});
    
        if (name.pNext==NULL){
            return_iMYkIRR["null"]=true;
            return return_iMYkIRR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_dyineco=json({});
    
        return_dyineco["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_FnubiqK=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_dyineco["members"][std::to_string(i)].push_back(temp);
        }
        return return_dyineco;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_bRcrMYh=json({});
    
        return_bRcrMYh["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_SZxQkir=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_bRcrMYh["members"][std::to_string(i)].push_back(temp);
        }
        return return_bRcrMYh;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_PbrGzYd=json({});
    
        return_PbrGzYd["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_hcvdSYy=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_PbrGzYd["members"][std::to_string(i)].push_back(temp);
        }
        return return_PbrGzYd;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_zJVVVxh=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_tUFyTPP=json({});
    return_tUFyTPP=[&]() {
    json return_KsxrAaJ=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_tUFyTPP;}();
return result;}

    VkPhysicalDeviceIDPropertiesKHR deserialize_VkPhysicalDeviceIDPropertiesKHR(json name){
        auto result=VkPhysicalDeviceIDPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int zuWVDrg=0; zuWVDrg < VK_UUID_SIZE; zuWVDrg++){
            [&]() {
result.deviceUUID[zuWVDrg]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][zuWVDrg]);}();;
        }
        }();
[&]() {

        for (int KyrLsuS=0; KyrLsuS < VK_UUID_SIZE; KyrLsuS++){
            [&]() {
result.driverUUID[KyrLsuS]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][KyrLsuS]);}();;
        }
        }();
[&]() {

        for (int IXaNIPk=0; IXaNIPk < VK_LUID_SIZE; IXaNIPk++){
            [&]() {
result.deviceLUID[IXaNIPk]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][IXaNIPk]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfo(VkExternalMemoryImageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IOBhgMP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LKAUOrT=json({});
    
        if (name.pNext==NULL){
            return_LKAUOrT["null"]=true;
            return return_LKAUOrT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_tJqAkSW=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfo deserialize_VkExternalMemoryImageCreateInfo(json name){
        auto result=VkExternalMemoryImageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eGRgzQC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eGRgzQC=NULL;
        }
    temp_eGRgzQC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eGRgzQC;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryImageCreateInfoKHR(VkExternalMemoryImageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_caOiGHS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wKYlyPi=json({});
    
        if (name.pNext==NULL){
            return_wKYlyPi["null"]=true;
            return return_wKYlyPi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_HflglPf=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryImageCreateInfoKHR deserialize_VkExternalMemoryImageCreateInfoKHR(json name){
        auto result=VkExternalMemoryImageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TYSPHiy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TYSPHiy=NULL;
        }
    temp_TYSPHiy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TYSPHiy;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfo(VkExternalMemoryBufferCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GccAyhp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KKpoqZp=json({});
    
        if (name.pNext==NULL){
            return_KKpoqZp["null"]=true;
            return return_KKpoqZp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_xNGpoYE=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfo deserialize_VkExternalMemoryBufferCreateInfo(json name){
        auto result=VkExternalMemoryBufferCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QMHShdO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QMHShdO=NULL;
        }
    temp_QMHShdO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QMHShdO;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExternalMemoryBufferCreateInfoKHR(VkExternalMemoryBufferCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_swRQLUE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WoPcIEC=json({});
    
        if (name.pNext==NULL){
            return_WoPcIEC["null"]=true;
            return return_WoPcIEC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_hKKBmOG=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExternalMemoryBufferCreateInfoKHR deserialize_VkExternalMemoryBufferCreateInfoKHR(json name){
        auto result=VkExternalMemoryBufferCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pOcbCeK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pOcbCeK=NULL;
        }
    temp_pOcbCeK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pOcbCeK;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfo(VkExportMemoryAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hVrzHrG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bQeIvfg=json({});
    
        if (name.pNext==NULL){
            return_bQeIvfg["null"]=true;
            return return_bQeIvfg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_EbHAWlg=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfo deserialize_VkExportMemoryAllocateInfo(json name){
        auto result=VkExportMemoryAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QJYKzdU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QJYKzdU=NULL;
        }
    temp_QJYKzdU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QJYKzdU;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportMemoryAllocateInfoKHR(VkExportMemoryAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RZPSFUD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DbovYPn=json({});
    
        if (name.pNext==NULL){
            return_DbovYPn["null"]=true;
            return return_DbovYPn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_cZusiOg=json({});
    return serialize_VkExternalMemoryHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportMemoryAllocateInfoKHR deserialize_VkExportMemoryAllocateInfoKHR(json name){
        auto result=VkExportMemoryAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_amgAHsT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_amgAHsT=NULL;
        }
    temp_amgAHsT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_amgAHsT;}();
[&]() {
result.handleTypes=deserialize_VkExternalMemoryHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportMemoryFdInfoKHR(VkImportMemoryFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bpHNpVG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OHGDUFH=json({});
    
        if (name.pNext==NULL){
            return_OHGDUFH["null"]=true;
            return return_OHGDUFH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_MvLhcIC=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_KcSFDkr=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportMemoryFdInfoKHR deserialize_VkImportMemoryFdInfoKHR(json name){
        auto result=VkImportMemoryFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EZnmWPn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EZnmWPn=NULL;
        }
    temp_EZnmWPn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EZnmWPn;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkMemoryFdPropertiesKHR(VkMemoryFdPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gVdsbuK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vtLQwNk=json({});
    
        if (name.pNext==NULL){
            return_vtLQwNk["null"]=true;
            return return_vtLQwNk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_HRlJevX=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryFdPropertiesKHR deserialize_VkMemoryFdPropertiesKHR(json name){
        auto result=VkMemoryFdPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkMemoryGetFdInfoKHR(VkMemoryGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XhyVPFd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IjsoqjJ=json({});
    
        if (name.pNext==NULL){
            return_IjsoqjJ["null"]=true;
            return return_IjsoqjJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_RSBTRXh=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_QGsOtgD=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetFdInfoKHR deserialize_VkMemoryGetFdInfoKHR(json name){
        auto result=VkMemoryGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xNZIdCM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xNZIdCM=NULL;
        }
    temp_xNZIdCM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xNZIdCM;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfo(VkPhysicalDeviceExternalSemaphoreInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oeDZsHF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lqwCkeC=json({});
    
        if (name.pNext==NULL){
            return_lqwCkeC["null"]=true;
            return return_lqwCkeC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_AdDxeyY=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfo deserialize_VkPhysicalDeviceExternalSemaphoreInfo(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rDbRvPz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rDbRvPz=NULL;
        }
    temp_rDbRvPz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rDbRvPz;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(VkPhysicalDeviceExternalSemaphoreInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kUTyybg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zTTVFHs=json({});
    
        if (name.pNext==NULL){
            return_zTTVFHs["null"]=true;
            return return_zTTVFHs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_CpvveDM=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalSemaphoreInfoKHR deserialize_VkPhysicalDeviceExternalSemaphoreInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalSemaphoreInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tIcXqVK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tIcXqVK=NULL;
        }
    temp_tIcXqVK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tIcXqVK;}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalSemaphoreProperties(VkExternalSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oJcEedp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bHusSJP=json({});
    
        if (name.pNext==NULL){
            return_bHusSJP["null"]=true;
            return return_bHusSJP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_sCJsiwv=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_WJNzkZb=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_tUoyahD=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphoreProperties deserialize_VkExternalSemaphoreProperties(json name){
        auto result=VkExternalSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExternalSemaphorePropertiesKHR(VkExternalSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YGyjkMI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aGPRsDh=json({});
    
        if (name.pNext==NULL){
            return_aGPRsDh["null"]=true;
            return return_aGPRsDh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_oEvoQZt=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_geqAbyV=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalSemaphoreFeatures"]=[&]() {
    json return_TdGRJmf=json({});
    return serialize_VkExternalSemaphoreFeatureFlags(name.externalSemaphoreFeatures);}();
return result;}

    VkExternalSemaphorePropertiesKHR deserialize_VkExternalSemaphorePropertiesKHR(json name){
        auto result=VkExternalSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalSemaphoreFeatures=deserialize_VkExternalSemaphoreFeatureFlags(name["members"]["externalSemaphoreFeatures"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfo(VkExportSemaphoreCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nKOWFhQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cxQRuJM=json({});
    
        if (name.pNext==NULL){
            return_cxQRuJM["null"]=true;
            return return_cxQRuJM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_llvjhfq=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfo deserialize_VkExportSemaphoreCreateInfo(json name){
        auto result=VkExportSemaphoreCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_imMmXwl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_imMmXwl=NULL;
        }
    temp_imMmXwl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_imMmXwl;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportSemaphoreCreateInfoKHR(VkExportSemaphoreCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iVLapTB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mRjyART=json({});
    
        if (name.pNext==NULL){
            return_mRjyART["null"]=true;
            return return_mRjyART;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_bvXeivk=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportSemaphoreCreateInfoKHR deserialize_VkExportSemaphoreCreateInfoKHR(json name){
        auto result=VkExportSemaphoreCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tgvsIqy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tgvsIqy=NULL;
        }
    temp_tgvsIqy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tgvsIqy;}();
[&]() {
result.handleTypes=deserialize_VkExternalSemaphoreHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportSemaphoreFdInfoKHR(VkImportSemaphoreFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mIoMpDr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IUxCZpm=json({});
    
        if (name.pNext==NULL){
            return_IUxCZpm["null"]=true;
            return return_IUxCZpm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_fkaimXs=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["flags"]=[&]() {
    json return_qpZhmnV=json({});
    return serialize_VkSemaphoreImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_RpcASXR=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_YUQUerp=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportSemaphoreFdInfoKHR deserialize_VkImportSemaphoreFdInfoKHR(json name){
        auto result=VkImportSemaphoreFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qbKDyWc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qbKDyWc=NULL;
        }
    temp_qbKDyWc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qbKDyWc;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.flags=deserialize_VkSemaphoreImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkSemaphoreGetFdInfoKHR(VkSemaphoreGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pDPntME=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uLWChDG=json({});
    
        if (name.pNext==NULL){
            return_uLWChDG["null"]=true;
            return return_uLWChDG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_KvUPymJ=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["handleType"]=[&]() {
    json return_oEZFtpc=json({});
    return serialize_VkExternalSemaphoreHandleTypeFlagBits(name.handleType);}();
return result;}

    VkSemaphoreGetFdInfoKHR deserialize_VkSemaphoreGetFdInfoKHR(json name){
        auto result=VkSemaphoreGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FVSpUXN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FVSpUXN=NULL;
        }
    temp_FVSpUXN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FVSpUXN;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.handleType=deserialize_VkExternalSemaphoreHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfo(VkPhysicalDeviceExternalFenceInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tGIuLVC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ureyoXS=json({});
    
        if (name.pNext==NULL){
            return_ureyoXS["null"]=true;
            return return_ureyoXS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_UiOjZtV=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfo deserialize_VkPhysicalDeviceExternalFenceInfo(json name){
        auto result=VkPhysicalDeviceExternalFenceInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CIluOvM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CIluOvM=NULL;
        }
    temp_CIluOvM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CIluOvM;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalFenceInfoKHR(VkPhysicalDeviceExternalFenceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qieaVDi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PUWbObc=json({});
    
        if (name.pNext==NULL){
            return_PUWbObc["null"]=true;
            return return_PUWbObc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_mlqKgQn=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkPhysicalDeviceExternalFenceInfoKHR deserialize_VkPhysicalDeviceExternalFenceInfoKHR(json name){
        auto result=VkPhysicalDeviceExternalFenceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ieGVdin;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ieGVdin=NULL;
        }
    temp_ieGVdin=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ieGVdin;}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkExternalFenceProperties(VkExternalFenceProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ifuUTRv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LRMqXRD=json({});
    
        if (name.pNext==NULL){
            return_LRMqXRD["null"]=true;
            return return_LRMqXRD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_EZdKzIj=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_ZEkrXNp=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_yMPFFIS=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFenceProperties deserialize_VkExternalFenceProperties(json name){
        auto result=VkExternalFenceProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExternalFencePropertiesKHR(VkExternalFencePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lzTlevi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QFKAIuZ=json({});
    
        if (name.pNext==NULL){
            return_QFKAIuZ["null"]=true;
            return return_QFKAIuZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exportFromImportedHandleTypes"]=[&]() {
    json return_dCMZRdD=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.exportFromImportedHandleTypes);}();
result["members"]["compatibleHandleTypes"]=[&]() {
    json return_LprmUgA=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.compatibleHandleTypes);}();
result["members"]["externalFenceFeatures"]=[&]() {
    json return_OxEYLcb=json({});
    return serialize_VkExternalFenceFeatureFlags(name.externalFenceFeatures);}();
return result;}

    VkExternalFencePropertiesKHR deserialize_VkExternalFencePropertiesKHR(json name){
        auto result=VkExternalFencePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.exportFromImportedHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["exportFromImportedHandleTypes"]);}();
[&]() {
result.compatibleHandleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["compatibleHandleTypes"]);}();
[&]() {
result.externalFenceFeatures=deserialize_VkExternalFenceFeatureFlags(name["members"]["externalFenceFeatures"]);}();
return result;}

    json serialize_VkExportFenceCreateInfo(VkExportFenceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eLGvbET=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JaRVOgw=json({});
    
        if (name.pNext==NULL){
            return_JaRVOgw["null"]=true;
            return return_JaRVOgw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_kLuBVeW=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfo deserialize_VkExportFenceCreateInfo(json name){
        auto result=VkExportFenceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CJIyWJk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CJIyWJk=NULL;
        }
    temp_CJIyWJk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CJIyWJk;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkExportFenceCreateInfoKHR(VkExportFenceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DkgkFAV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SiFQWOr=json({});
    
        if (name.pNext==NULL){
            return_SiFQWOr["null"]=true;
            return return_SiFQWOr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleTypes"]=[&]() {
    json return_LyFrZXn=json({});
    return serialize_VkExternalFenceHandleTypeFlags(name.handleTypes);}();
return result;}

    VkExportFenceCreateInfoKHR deserialize_VkExportFenceCreateInfoKHR(json name){
        auto result=VkExportFenceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EjsRmOM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EjsRmOM=NULL;
        }
    temp_EjsRmOM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EjsRmOM;}();
[&]() {
result.handleTypes=deserialize_VkExternalFenceHandleTypeFlags(name["members"]["handleTypes"]);}();
return result;}

    json serialize_VkImportFenceFdInfoKHR(VkImportFenceFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dOqdaBt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NRlQOtM=json({});
    
        if (name.pNext==NULL){
            return_NRlQOtM["null"]=true;
            return return_NRlQOtM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_HyiwMVL=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["flags"]=[&]() {
    json return_GbQqQdq=json({});
    return serialize_VkFenceImportFlags(name.flags);}();
result["members"]["handleType"]=[&]() {
    json return_RTBCKOM=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
result["members"]["fd"]=[&]() {
    json return_UZKXxHP=json({});
    return serialize_int(name.fd);}();
return result;}

    VkImportFenceFdInfoKHR deserialize_VkImportFenceFdInfoKHR(json name){
        auto result=VkImportFenceFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VMigTzw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VMigTzw=NULL;
        }
    temp_VMigTzw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VMigTzw;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.flags=deserialize_VkFenceImportFlags(name["members"]["flags"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {
result.fd=deserialize_int(name["members"]["fd"]);}();
return result;}

    json serialize_VkFenceGetFdInfoKHR(VkFenceGetFdInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iwvyIbP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yFpWgyF=json({});
    
        if (name.pNext==NULL){
            return_yFpWgyF["null"]=true;
            return return_yFpWgyF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fence"]=[&]() {
    json return_MIdEXHU=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["handleType"]=[&]() {
    json return_iKdSXdb=json({});
    return serialize_VkExternalFenceHandleTypeFlagBits(name.handleType);}();
return result;}

    VkFenceGetFdInfoKHR deserialize_VkFenceGetFdInfoKHR(json name){
        auto result=VkFenceGetFdInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SzlTzWW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SzlTzWW=NULL;
        }
    temp_SzlTzWW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SzlTzWW;}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.handleType=deserialize_VkExternalFenceHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeatures(VkPhysicalDeviceMultiviewFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OavNLZX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YzzuntE=json({});
    
        if (name.pNext==NULL){
            return_YzzuntE["null"]=true;
            return return_YzzuntE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_vNSZCEH=json({});
    return_vNSZCEH=[&]() {
    json return_Irxmieo=json({});
    return serialize_uint32_t(name.multiview);}();return return_vNSZCEH;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_eKxLFbl=json({});
    return_eKxLFbl=[&]() {
    json return_STFzxCT=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_eKxLFbl;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_DaotwfJ=json({});
    return_DaotwfJ=[&]() {
    json return_WQwkisJ=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_DaotwfJ;}();
return result;}

    VkPhysicalDeviceMultiviewFeatures deserialize_VkPhysicalDeviceMultiviewFeatures(json name){
        auto result=VkPhysicalDeviceMultiviewFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewFeaturesKHR(VkPhysicalDeviceMultiviewFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vSiRowZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pLbAxeq=json({});
    
        if (name.pNext==NULL){
            return_pLbAxeq["null"]=true;
            return return_pLbAxeq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiview"]=[&]() {
    json return_WQqDFlg=json({});
    return_WQqDFlg=[&]() {
    json return_adhCaXT=json({});
    return serialize_uint32_t(name.multiview);}();return return_WQqDFlg;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_EfuaQjX=json({});
    return_EfuaQjX=[&]() {
    json return_OfaqoSc=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_EfuaQjX;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_EhpvONH=json({});
    return_EhpvONH=[&]() {
    json return_SDrlYYm=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_EhpvONH;}();
return result;}

    VkPhysicalDeviceMultiviewFeaturesKHR deserialize_VkPhysicalDeviceMultiviewFeaturesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewProperties(VkPhysicalDeviceMultiviewProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SkQJchs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ewvSvfC=json({});
    
        if (name.pNext==NULL){
            return_ewvSvfC["null"]=true;
            return return_ewvSvfC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_kLjCDzF=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_RjlKRBi=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewProperties deserialize_VkPhysicalDeviceMultiviewProperties(json name){
        auto result=VkPhysicalDeviceMultiviewProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPropertiesKHR(VkPhysicalDeviceMultiviewPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jPHVbwQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_spUbftP=json({});
    
        if (name.pNext==NULL){
            return_spUbftP["null"]=true;
            return return_spUbftP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_vOCYrkI=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_uHRMixs=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
return result;}

    VkPhysicalDeviceMultiviewPropertiesKHR deserialize_VkPhysicalDeviceMultiviewPropertiesKHR(json name){
        auto result=VkPhysicalDeviceMultiviewPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfo(VkRenderPassMultiviewCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tFwssZL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IONOEiW=json({});
    
        if (name.pNext==NULL){
            return_IONOEiW["null"]=true;
            return return_IONOEiW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_pVESClr=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_mqDJcEL=json({});
    
        if (name.pViewMasks==NULL){
            return_mqDJcEL["null"]=true;
            return return_mqDJcEL;
        }
        
        return_mqDJcEL["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_tWKHkAg=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_mqDJcEL["members"][std::to_string(i)].push_back(temp);
        }
        return return_mqDJcEL;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_cTFzLwm=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_rbtZGrY=json({});
    
        if (name.pViewOffsets==NULL){
            return_rbtZGrY["null"]=true;
            return return_rbtZGrY;
        }
        
        return_rbtZGrY["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_ACiuABM=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_rbtZGrY["members"][std::to_string(i)].push_back(temp);
        }
        return return_rbtZGrY;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_BEiLiXA=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_qMSPgXW=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_qMSPgXW["null"]=true;
            return return_qMSPgXW;
        }
        
        return_qMSPgXW["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_mxxjkMQ=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_qMSPgXW["members"][std::to_string(i)].push_back(temp);
        }
        return return_qMSPgXW;
        }();
return result;}

    VkRenderPassMultiviewCreateInfo deserialize_VkRenderPassMultiviewCreateInfo(json name){
        auto result=VkRenderPassMultiviewCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kNFmwVZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kNFmwVZ=NULL;
        }
    temp_kNFmwVZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kNFmwVZ;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_bbXIgwC;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_bbXIgwC=NULL;
        }
    temp_bbXIgwC=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int MvtqdIx=0; MvtqdIx < result.subpassCount; MvtqdIx++){
            [&]() {
temp_bbXIgwC[MvtqdIx]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][MvtqdIx]);}();;
        }
        }();result.pViewMasks=temp_bbXIgwC;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_LUkORfW;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_LUkORfW=NULL;
        }
    temp_LUkORfW=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int wqUJMdK=0; wqUJMdK < result.dependencyCount; wqUJMdK++){
            [&]() {
temp_LUkORfW[wqUJMdK]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][wqUJMdK]);}();;
        }
        }();result.pViewOffsets=temp_LUkORfW;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_iCGohjz;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_iCGohjz=NULL;
        }
    temp_iCGohjz=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int gYFgiPE=0; gYFgiPE < result.correlationMaskCount; gYFgiPE++){
            [&]() {
temp_iCGohjz[gYFgiPE]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][gYFgiPE]);}();;
        }
        }();result.pCorrelationMasks=temp_iCGohjz;}();
return result;}

    json serialize_VkRenderPassMultiviewCreateInfoKHR(VkRenderPassMultiviewCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZUTNYXk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SORvHjZ=json({});
    
        if (name.pNext==NULL){
            return_SORvHjZ["null"]=true;
            return return_SORvHjZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassCount"]=[&]() {
    json return_cXSrASj=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pViewMasks"]=[&]() {
    json return_YEAkyuq=json({});
    
        if (name.pViewMasks==NULL){
            return_YEAkyuq["null"]=true;
            return return_YEAkyuq;
        }
        
        return_YEAkyuq["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_dfTZIzX=json({});
    return serialize_uint32_t(name.pViewMasks[i]);}();
            return_YEAkyuq["members"][std::to_string(i)].push_back(temp);
        }
        return return_YEAkyuq;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_sxsntzh=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pViewOffsets"]=[&]() {
    json return_IOWOUKA=json({});
    
        if (name.pViewOffsets==NULL){
            return_IOWOUKA["null"]=true;
            return return_IOWOUKA;
        }
        
        return_IOWOUKA["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_ikXuaDa=json({});
    return serialize_int32_t(name.pViewOffsets[i]);}();
            return_IOWOUKA["members"][std::to_string(i)].push_back(temp);
        }
        return return_IOWOUKA;
        }();
result["members"]["correlationMaskCount"]=[&]() {
    json return_RcgDhkb=json({});
    return serialize_uint32_t(name.correlationMaskCount);}();
result["members"]["pCorrelationMasks"]=[&]() {
    json return_QEOXkiF=json({});
    
        if (name.pCorrelationMasks==NULL){
            return_QEOXkiF["null"]=true;
            return return_QEOXkiF;
        }
        
        return_QEOXkiF["members"]={};
        for(int i=0; i < name.correlationMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_frEaoud=json({});
    return serialize_uint32_t(name.pCorrelationMasks[i]);}();
            return_QEOXkiF["members"][std::to_string(i)].push_back(temp);
        }
        return return_QEOXkiF;
        }();
return result;}

    VkRenderPassMultiviewCreateInfoKHR deserialize_VkRenderPassMultiviewCreateInfoKHR(json name){
        auto result=VkRenderPassMultiviewCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kcQRDcu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kcQRDcu=NULL;
        }
    temp_kcQRDcu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kcQRDcu;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
uint32_t* temp_tHPBxMO;[&]() {

        if (name["members"]["pViewMasks"].contains("null")){
        temp_tHPBxMO=NULL;
        }
    temp_tHPBxMO=(uint32_t*)malloc(result.subpassCount*sizeof(uint32_t));
        for (int hQiuNvu=0; hQiuNvu < result.subpassCount; hQiuNvu++){
            [&]() {
temp_tHPBxMO[hQiuNvu]=deserialize_uint32_t(name["members"]["pViewMasks"]["members"][hQiuNvu]);}();;
        }
        }();result.pViewMasks=temp_tHPBxMO;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
int32_t* temp_fTzNmRA;[&]() {

        if (name["members"]["pViewOffsets"].contains("null")){
        temp_fTzNmRA=NULL;
        }
    temp_fTzNmRA=(int32_t*)malloc(result.dependencyCount*sizeof(int32_t));
        for (int rQfiLIp=0; rQfiLIp < result.dependencyCount; rQfiLIp++){
            [&]() {
temp_fTzNmRA[rQfiLIp]=deserialize_int32_t(name["members"]["pViewOffsets"]["members"][rQfiLIp]);}();;
        }
        }();result.pViewOffsets=temp_fTzNmRA;}();
[&]() {
result.correlationMaskCount=deserialize_uint32_t(name["members"]["correlationMaskCount"]);}();
[&]() {
uint32_t* temp_pKUktDF;[&]() {

        if (name["members"]["pCorrelationMasks"].contains("null")){
        temp_pKUktDF=NULL;
        }
    temp_pKUktDF=(uint32_t*)malloc(result.correlationMaskCount*sizeof(uint32_t));
        for (int idgynMe=0; idgynMe < result.correlationMaskCount; idgynMe++){
            [&]() {
temp_pKUktDF[idgynMe]=deserialize_uint32_t(name["members"]["pCorrelationMasks"]["members"][idgynMe]);}();;
        }
        }();result.pCorrelationMasks=temp_pKUktDF;}();
return result;}

    json serialize_VkSurfaceCapabilities2EXT(VkSurfaceCapabilities2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MImdvqW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ILjGmTa=json({});
    
        if (name.pNext==NULL){
            return_ILjGmTa["null"]=true;
            return return_ILjGmTa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImageCount"]=[&]() {
    json return_ycaAvvk=json({});
    return serialize_uint32_t(name.minImageCount);}();
result["members"]["maxImageCount"]=[&]() {
    json return_xnUevKY=json({});
    return serialize_uint32_t(name.maxImageCount);}();
result["members"]["currentExtent"]=[&]() {
    json return_CrdWfde=json({});
    return serialize_VkExtent2D(name.currentExtent);}();
result["members"]["minImageExtent"]=[&]() {
    json return_DdrTPBT=json({});
    return serialize_VkExtent2D(name.minImageExtent);}();
result["members"]["maxImageExtent"]=[&]() {
    json return_NSSghCy=json({});
    return serialize_VkExtent2D(name.maxImageExtent);}();
result["members"]["maxImageArrayLayers"]=[&]() {
    json return_aLXdVWs=json({});
    return serialize_uint32_t(name.maxImageArrayLayers);}();
result["members"]["supportedTransforms"]=[&]() {
    json return_PFMyjJa=json({});
    return serialize_VkSurfaceTransformFlagsKHR(name.supportedTransforms);}();
result["members"]["currentTransform"]=[&]() {
    json return_KbghGcE=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.currentTransform);}();
result["members"]["supportedCompositeAlpha"]=[&]() {
    json return_WMfUqyu=json({});
    return serialize_VkCompositeAlphaFlagsKHR(name.supportedCompositeAlpha);}();
result["members"]["supportedUsageFlags"]=[&]() {
    json return_MEgGdBU=json({});
    return serialize_VkImageUsageFlags(name.supportedUsageFlags);}();
result["members"]["supportedSurfaceCounters"]=[&]() {
    json return_IIVhccd=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.supportedSurfaceCounters);}();
return result;}

    VkSurfaceCapabilities2EXT deserialize_VkSurfaceCapabilities2EXT(json name){
        auto result=VkSurfaceCapabilities2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minImageCount=deserialize_uint32_t(name["members"]["minImageCount"]);}();
[&]() {
result.maxImageCount=deserialize_uint32_t(name["members"]["maxImageCount"]);}();
[&]() {
result.currentExtent=deserialize_VkExtent2D(name["members"]["currentExtent"]);}();
[&]() {
result.minImageExtent=deserialize_VkExtent2D(name["members"]["minImageExtent"]);}();
[&]() {
result.maxImageExtent=deserialize_VkExtent2D(name["members"]["maxImageExtent"]);}();
[&]() {
result.maxImageArrayLayers=deserialize_uint32_t(name["members"]["maxImageArrayLayers"]);}();
[&]() {
result.supportedTransforms=deserialize_VkSurfaceTransformFlagsKHR(name["members"]["supportedTransforms"]);}();
[&]() {
result.currentTransform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["currentTransform"]);}();
[&]() {
result.supportedCompositeAlpha=deserialize_VkCompositeAlphaFlagsKHR(name["members"]["supportedCompositeAlpha"]);}();
[&]() {
result.supportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["supportedUsageFlags"]);}();
[&]() {
result.supportedSurfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["supportedSurfaceCounters"]);}();
return result;}

    json serialize_VkDisplayPowerInfoEXT(VkDisplayPowerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VBYyxSJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CqGwkHN=json({});
    
        if (name.pNext==NULL){
            return_CqGwkHN["null"]=true;
            return return_CqGwkHN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["powerState"]=[&]() {
    json return_wuigTNF=json({});
    return serialize_VkDisplayPowerStateEXT(name.powerState);}();
return result;}

    VkDisplayPowerInfoEXT deserialize_VkDisplayPowerInfoEXT(json name){
        auto result=VkDisplayPowerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pyCwWqy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pyCwWqy=NULL;
        }
    temp_pyCwWqy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pyCwWqy;}();
[&]() {
result.powerState=deserialize_VkDisplayPowerStateEXT(name["members"]["powerState"]);}();
return result;}

    json serialize_VkDeviceEventInfoEXT(VkDeviceEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LGjqByb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DOZpSOT=json({});
    
        if (name.pNext==NULL){
            return_DOZpSOT["null"]=true;
            return return_DOZpSOT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceEvent"]=[&]() {
    json return_TZcayqV=json({});
    return serialize_VkDeviceEventTypeEXT(name.deviceEvent);}();
return result;}

    VkDeviceEventInfoEXT deserialize_VkDeviceEventInfoEXT(json name){
        auto result=VkDeviceEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AVRtQtu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AVRtQtu=NULL;
        }
    temp_AVRtQtu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AVRtQtu;}();
[&]() {
result.deviceEvent=deserialize_VkDeviceEventTypeEXT(name["members"]["deviceEvent"]);}();
return result;}

    json serialize_VkDisplayEventInfoEXT(VkDisplayEventInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_btgplrf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sWXAMhT=json({});
    
        if (name.pNext==NULL){
            return_sWXAMhT["null"]=true;
            return return_sWXAMhT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayEvent"]=[&]() {
    json return_jRjOWKL=json({});
    return serialize_VkDisplayEventTypeEXT(name.displayEvent);}();
return result;}

    VkDisplayEventInfoEXT deserialize_VkDisplayEventInfoEXT(json name){
        auto result=VkDisplayEventInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wRshQhZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wRshQhZ=NULL;
        }
    temp_wRshQhZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wRshQhZ;}();
[&]() {
result.displayEvent=deserialize_VkDisplayEventTypeEXT(name["members"]["displayEvent"]);}();
return result;}

    json serialize_VkSwapchainCounterCreateInfoEXT(VkSwapchainCounterCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xUAZSzV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hSOUwSY=json({});
    
        if (name.pNext==NULL){
            return_hSOUwSY["null"]=true;
            return return_hSOUwSY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCounters"]=[&]() {
    json return_NqSzQKX=json({});
    return serialize_VkSurfaceCounterFlagsEXT(name.surfaceCounters);}();
return result;}

    VkSwapchainCounterCreateInfoEXT deserialize_VkSwapchainCounterCreateInfoEXT(json name){
        auto result=VkSwapchainCounterCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IVANRgX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IVANRgX=NULL;
        }
    temp_IVANRgX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IVANRgX;}();
[&]() {
result.surfaceCounters=deserialize_VkSurfaceCounterFlagsEXT(name["members"]["surfaceCounters"]);}();
return result;}

    json serialize_VkPhysicalDeviceGroupProperties(VkPhysicalDeviceGroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JwOKoHy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VCMrmUK=json({});
    
        if (name.pNext==NULL){
            return_VCMrmUK["null"]=true;
            return return_VCMrmUK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_clOPLXC=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_UoDwgfP=json({});
    
        return_UoDwgfP["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_rBCrreo=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_UoDwgfP["members"][std::to_string(i)].push_back(temp);
        }
        return return_UoDwgfP;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_CPZftKT=json({});
    return_CPZftKT=[&]() {
    json return_vuqErSq=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_CPZftKT;}();
return result;}

    VkPhysicalDeviceGroupProperties deserialize_VkPhysicalDeviceGroupProperties(json name){
        auto result=VkPhysicalDeviceGroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int BWxkmMl=0; BWxkmMl < VK_MAX_DEVICE_GROUP_SIZE; BWxkmMl++){
            [&]() {
result.physicalDevices[BWxkmMl]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][BWxkmMl]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGroupPropertiesKHR(VkPhysicalDeviceGroupPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TYxAAiW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_abFBbsT=json({});
    
        if (name.pNext==NULL){
            return_abFBbsT["null"]=true;
            return return_abFBbsT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_bZwXNcT=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["physicalDevices"]=[&]() {
    json return_EYomSwv=json({});
    
        return_EYomSwv["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_QDMrTHK=json({});
    return serialize_VkPhysicalDevice(name.physicalDevices[i]);}();
            return_EYomSwv["members"][std::to_string(i)].push_back(temp);
        }
        return return_EYomSwv;
        }();
result["members"]["subsetAllocation"]=[&]() {
    json return_XNgAiFJ=json({});
    return_XNgAiFJ=[&]() {
    json return_NcSUYHn=json({});
    return serialize_uint32_t(name.subsetAllocation);}();return return_XNgAiFJ;}();
return result;}

    VkPhysicalDeviceGroupPropertiesKHR deserialize_VkPhysicalDeviceGroupPropertiesKHR(json name){
        auto result=VkPhysicalDeviceGroupPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {

        for (int KWdSpxk=0; KWdSpxk < VK_MAX_DEVICE_GROUP_SIZE; KWdSpxk++){
            [&]() {
result.physicalDevices[KWdSpxk]=deserialize_VkPhysicalDevice(name["members"]["physicalDevices"]["members"][KWdSpxk]);}();;
        }
        }();
[&]() {
[&]() {
result.subsetAllocation=deserialize_uint32_t(name["members"]["subsetAllocation"]);}();}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfo(VkMemoryAllocateFlagsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EFYZgmx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IGfZmqA=json({});
    
        if (name.pNext==NULL){
            return_IGfZmqA["null"]=true;
            return return_IGfZmqA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qYADQiE=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_nRhNFhT=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfo deserialize_VkMemoryAllocateFlagsInfo(json name){
        auto result=VkMemoryAllocateFlagsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QxEkyCc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QxEkyCc=NULL;
        }
    temp_QxEkyCc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QxEkyCc;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkMemoryAllocateFlagsInfoKHR(VkMemoryAllocateFlagsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RBVYkYs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_biwxHwo=json({});
    
        if (name.pNext==NULL){
            return_biwxHwo["null"]=true;
            return return_biwxHwo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_otuvOqA=json({});
    return serialize_VkMemoryAllocateFlags(name.flags);}();
result["members"]["deviceMask"]=[&]() {
    json return_tfGboZM=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkMemoryAllocateFlagsInfoKHR deserialize_VkMemoryAllocateFlagsInfoKHR(json name){
        auto result=VkMemoryAllocateFlagsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bFYCyhI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bFYCyhI=NULL;
        }
    temp_bFYCyhI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bFYCyhI;}();
[&]() {
result.flags=deserialize_VkMemoryAllocateFlags(name["members"]["flags"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkBindBufferMemoryInfo(VkBindBufferMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EPjOiDy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XPyYefr=json({});
    
        if (name.pNext==NULL){
            return_XPyYefr["null"]=true;
            return return_XPyYefr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_KLdrglZ=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_ziZCDYp=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_AvsaVIT=json({});
    return_AvsaVIT=[&]() {
    json return_JlVipPV=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_AvsaVIT;}();
return result;}

    VkBindBufferMemoryInfo deserialize_VkBindBufferMemoryInfo(json name){
        auto result=VkBindBufferMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kZllssn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kZllssn=NULL;
        }
    temp_kZllssn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kZllssn;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryInfoKHR(VkBindBufferMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sGYZYsg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rRhqdRK=json({});
    
        if (name.pNext==NULL){
            return_rRhqdRK["null"]=true;
            return return_rRhqdRK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_TCvCpGg=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["memory"]=[&]() {
    json return_MgzQiHK=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_rhJmTOP=json({});
    return_rhJmTOP=[&]() {
    json return_eRCvnzM=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_rhJmTOP;}();
return result;}

    VkBindBufferMemoryInfoKHR deserialize_VkBindBufferMemoryInfoKHR(json name){
        auto result=VkBindBufferMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RhONwNr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RhONwNr=NULL;
        }
    temp_RhONwNr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RhONwNr;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfo(VkBindBufferMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MAwwoBl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FGPbHvb=json({});
    
        if (name.pNext==NULL){
            return_FGPbHvb["null"]=true;
            return return_FGPbHvb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_qRCwiYm=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_ELEllof=json({});
    
        if (name.pDeviceIndices==NULL){
            return_ELEllof["null"]=true;
            return return_ELEllof;
        }
        
        return_ELEllof["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_ICsIhhr=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_ELEllof["members"][std::to_string(i)].push_back(temp);
        }
        return return_ELEllof;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfo deserialize_VkBindBufferMemoryDeviceGroupInfo(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bpiEDbn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bpiEDbn=NULL;
        }
    temp_bpiEDbn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bpiEDbn;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_yUXgwxh;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_yUXgwxh=NULL;
        }
    temp_yUXgwxh=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int ncaOuyI=0; ncaOuyI < result.deviceIndexCount; ncaOuyI++){
            [&]() {
temp_yUXgwxh[ncaOuyI]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][ncaOuyI]);}();;
        }
        }();result.pDeviceIndices=temp_yUXgwxh;}();
return result;}

    json serialize_VkBindBufferMemoryDeviceGroupInfoKHR(VkBindBufferMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AYJHEdP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YtyCYsq=json({});
    
        if (name.pNext==NULL){
            return_YtyCYsq["null"]=true;
            return return_YtyCYsq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_MPERWtU=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_ZSuuuNH=json({});
    
        if (name.pDeviceIndices==NULL){
            return_ZSuuuNH["null"]=true;
            return return_ZSuuuNH;
        }
        
        return_ZSuuuNH["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_kSxqybq=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_ZSuuuNH["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZSuuuNH;
        }();
return result;}

    VkBindBufferMemoryDeviceGroupInfoKHR deserialize_VkBindBufferMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindBufferMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kKPmtJR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kKPmtJR=NULL;
        }
    temp_kKPmtJR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kKPmtJR;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_DYhYTXZ;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_DYhYTXZ=NULL;
        }
    temp_DYhYTXZ=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int HLyJgSR=0; HLyJgSR < result.deviceIndexCount; HLyJgSR++){
            [&]() {
temp_DYhYTXZ[HLyJgSR]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][HLyJgSR]);}();;
        }
        }();result.pDeviceIndices=temp_DYhYTXZ;}();
return result;}

    json serialize_VkBindImageMemoryInfo(VkBindImageMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yUpwJdu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EtAPOxx=json({});
    
        if (name.pNext==NULL){
            return_EtAPOxx["null"]=true;
            return return_EtAPOxx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_aUxjZJV=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_UDAMbQc=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_pCcPoKi=json({});
    return_pCcPoKi=[&]() {
    json return_KahFZdh=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_pCcPoKi;}();
return result;}

    VkBindImageMemoryInfo deserialize_VkBindImageMemoryInfo(json name){
        auto result=VkBindImageMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uvsimCy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uvsimCy=NULL;
        }
    temp_uvsimCy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uvsimCy;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryInfoKHR(VkBindImageMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mAsGtaD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zQSfnoB=json({});
    
        if (name.pNext==NULL){
            return_zQSfnoB["null"]=true;
            return return_zQSfnoB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_mRWnSwT=json({});
    return serialize_VkImage(name.image);}();
result["members"]["memory"]=[&]() {
    json return_hdnAOCg=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_xZzIeTN=json({});
    return_xZzIeTN=[&]() {
    json return_SgjrBfw=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_xZzIeTN;}();
return result;}

    VkBindImageMemoryInfoKHR deserialize_VkBindImageMemoryInfoKHR(json name){
        auto result=VkBindImageMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uKQjfFv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uKQjfFv=NULL;
        }
    temp_uKQjfFv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uKQjfFv;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfo(VkBindImageMemoryDeviceGroupInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BVuKlYC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XshJqoc=json({});
    
        if (name.pNext==NULL){
            return_XshJqoc["null"]=true;
            return return_XshJqoc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_LgaXxAl=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_xkGKMJA=json({});
    
        if (name.pDeviceIndices==NULL){
            return_xkGKMJA["null"]=true;
            return return_xkGKMJA;
        }
        
        return_xkGKMJA["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_bPCaoRA=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_xkGKMJA["members"][std::to_string(i)].push_back(temp);
        }
        return return_xkGKMJA;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_EXWjPOV=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_iictnQE=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_iictnQE["null"]=true;
            return return_iictnQE;
        }
        
        return_iictnQE["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_CiwArGj=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_iictnQE["members"][std::to_string(i)].push_back(temp);
        }
        return return_iictnQE;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfo deserialize_VkBindImageMemoryDeviceGroupInfo(json name){
        auto result=VkBindImageMemoryDeviceGroupInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SfQeDmG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SfQeDmG=NULL;
        }
    temp_SfQeDmG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SfQeDmG;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_KBtLeIS;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_KBtLeIS=NULL;
        }
    temp_KBtLeIS=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int svvgjjT=0; svvgjjT < result.deviceIndexCount; svvgjjT++){
            [&]() {
temp_KBtLeIS[svvgjjT]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][svvgjjT]);}();;
        }
        }();result.pDeviceIndices=temp_KBtLeIS;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_IzDYCdl;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_IzDYCdl=NULL;
        }
    temp_IzDYCdl=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int oUpJjDS=0; oUpJjDS < result.splitInstanceBindRegionCount; oUpJjDS++){
            [&]() {
temp_IzDYCdl[oUpJjDS]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][oUpJjDS]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_IzDYCdl;}();
return result;}

    json serialize_VkBindImageMemoryDeviceGroupInfoKHR(VkBindImageMemoryDeviceGroupInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tphQQjC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hSwfCFw=json({});
    
        if (name.pNext==NULL){
            return_hSwfCFw["null"]=true;
            return return_hSwfCFw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_vLdIBDQ=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_uDLTzcp=json({});
    
        if (name.pDeviceIndices==NULL){
            return_uDLTzcp["null"]=true;
            return return_uDLTzcp;
        }
        
        return_uDLTzcp["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_vJvhORa=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_uDLTzcp["members"][std::to_string(i)].push_back(temp);
        }
        return return_uDLTzcp;
        }();
result["members"]["splitInstanceBindRegionCount"]=[&]() {
    json return_eXOfslU=json({});
    return serialize_uint32_t(name.splitInstanceBindRegionCount);}();
result["members"]["pSplitInstanceBindRegions"]=[&]() {
    json return_aeAWtfx=json({});
    
        if (name.pSplitInstanceBindRegions==NULL){
            return_aeAWtfx["null"]=true;
            return return_aeAWtfx;
        }
        
        return_aeAWtfx["members"]={};
        for(int i=0; i < name.splitInstanceBindRegionCount; i++){
            json temp;
            temp=[&]() {
    json return_ErUbZgw=json({});
    return serialize_VkRect2D(name.pSplitInstanceBindRegions[i]);}();
            return_aeAWtfx["members"][std::to_string(i)].push_back(temp);
        }
        return return_aeAWtfx;
        }();
return result;}

    VkBindImageMemoryDeviceGroupInfoKHR deserialize_VkBindImageMemoryDeviceGroupInfoKHR(json name){
        auto result=VkBindImageMemoryDeviceGroupInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XpiBZwf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XpiBZwf=NULL;
        }
    temp_XpiBZwf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XpiBZwf;}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_CeTPUjT;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_CeTPUjT=NULL;
        }
    temp_CeTPUjT=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int HKjOmLz=0; HKjOmLz < result.deviceIndexCount; HKjOmLz++){
            [&]() {
temp_CeTPUjT[HKjOmLz]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][HKjOmLz]);}();;
        }
        }();result.pDeviceIndices=temp_CeTPUjT;}();
[&]() {
result.splitInstanceBindRegionCount=deserialize_uint32_t(name["members"]["splitInstanceBindRegionCount"]);}();
[&]() {
VkRect2D* temp_KviIDzD;[&]() {

        if (name["members"]["pSplitInstanceBindRegions"].contains("null")){
        temp_KviIDzD=NULL;
        }
    temp_KviIDzD=(VkRect2D*)malloc(result.splitInstanceBindRegionCount*sizeof(VkRect2D));
        for (int mNZNtaM=0; mNZNtaM < result.splitInstanceBindRegionCount; mNZNtaM++){
            [&]() {
temp_KviIDzD[mNZNtaM]=deserialize_VkRect2D(name["members"]["pSplitInstanceBindRegions"]["members"][mNZNtaM]);}();;
        }
        }();result.pSplitInstanceBindRegions=temp_KviIDzD;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfo(VkDeviceGroupRenderPassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WvWRVzw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RIJtMFW=json({});
    
        if (name.pNext==NULL){
            return_RIJtMFW["null"]=true;
            return return_RIJtMFW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_MRTRtUn=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_elgDjtw=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_kfBHhWI=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_kfBHhWI["null"]=true;
            return return_kfBHhWI;
        }
        
        return_kfBHhWI["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_YCfaoUQ=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_kfBHhWI["members"][std::to_string(i)].push_back(temp);
        }
        return return_kfBHhWI;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfo deserialize_VkDeviceGroupRenderPassBeginInfo(json name){
        auto result=VkDeviceGroupRenderPassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FDnHKkE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FDnHKkE=NULL;
        }
    temp_FDnHKkE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FDnHKkE;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_WNEfvMl;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_WNEfvMl=NULL;
        }
    temp_WNEfvMl=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int gVJwwTJ=0; gVJwwTJ < result.deviceRenderAreaCount; gVJwwTJ++){
            [&]() {
temp_WNEfvMl[gVJwwTJ]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][gVJwwTJ]);}();;
        }
        }();result.pDeviceRenderAreas=temp_WNEfvMl;}();
return result;}

    json serialize_VkDeviceGroupRenderPassBeginInfoKHR(VkDeviceGroupRenderPassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KJSUQal=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wOZhTgS=json({});
    
        if (name.pNext==NULL){
            return_wOZhTgS["null"]=true;
            return return_wOZhTgS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_RiiPmEK=json({});
    return serialize_uint32_t(name.deviceMask);}();
result["members"]["deviceRenderAreaCount"]=[&]() {
    json return_JHAtyIH=json({});
    return serialize_uint32_t(name.deviceRenderAreaCount);}();
result["members"]["pDeviceRenderAreas"]=[&]() {
    json return_nabGZzF=json({});
    
        if (name.pDeviceRenderAreas==NULL){
            return_nabGZzF["null"]=true;
            return return_nabGZzF;
        }
        
        return_nabGZzF["members"]={};
        for(int i=0; i < name.deviceRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_JRpOGpS=json({});
    return serialize_VkRect2D(name.pDeviceRenderAreas[i]);}();
            return_nabGZzF["members"][std::to_string(i)].push_back(temp);
        }
        return return_nabGZzF;
        }();
return result;}

    VkDeviceGroupRenderPassBeginInfoKHR deserialize_VkDeviceGroupRenderPassBeginInfoKHR(json name){
        auto result=VkDeviceGroupRenderPassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tQVUvNo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tQVUvNo=NULL;
        }
    temp_tQVUvNo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tQVUvNo;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
[&]() {
result.deviceRenderAreaCount=deserialize_uint32_t(name["members"]["deviceRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_jjEFObJ;[&]() {

        if (name["members"]["pDeviceRenderAreas"].contains("null")){
        temp_jjEFObJ=NULL;
        }
    temp_jjEFObJ=(VkRect2D*)malloc(result.deviceRenderAreaCount*sizeof(VkRect2D));
        for (int jsGvBwp=0; jsGvBwp < result.deviceRenderAreaCount; jsGvBwp++){
            [&]() {
temp_jjEFObJ[jsGvBwp]=deserialize_VkRect2D(name["members"]["pDeviceRenderAreas"]["members"][jsGvBwp]);}();;
        }
        }();result.pDeviceRenderAreas=temp_jjEFObJ;}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfo(VkDeviceGroupCommandBufferBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dDQQvYH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KHPdCaE=json({});
    
        if (name.pNext==NULL){
            return_KHPdCaE["null"]=true;
            return return_KHPdCaE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_RfWkHYR=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfo deserialize_VkDeviceGroupCommandBufferBeginInfo(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zlIMBYD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zlIMBYD=NULL;
        }
    temp_zlIMBYD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zlIMBYD;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupCommandBufferBeginInfoKHR(VkDeviceGroupCommandBufferBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vaBiLPl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zIukqrj=json({});
    
        if (name.pNext==NULL){
            return_zIukqrj["null"]=true;
            return return_zIukqrj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMask"]=[&]() {
    json return_VXAUSjv=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkDeviceGroupCommandBufferBeginInfoKHR deserialize_VkDeviceGroupCommandBufferBeginInfoKHR(json name){
        auto result=VkDeviceGroupCommandBufferBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EUNUVwd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EUNUVwd=NULL;
        }
    temp_EUNUVwd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EUNUVwd;}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupSubmitInfo(VkDeviceGroupSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uvHNTFU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xwNMVaO=json({});
    
        if (name.pNext==NULL){
            return_xwNMVaO["null"]=true;
            return return_xwNMVaO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_ypkZfnr=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_fYXiYFh=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_fYXiYFh["null"]=true;
            return return_fYXiYFh;
        }
        
        return_fYXiYFh["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_ewizvqm=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_fYXiYFh["members"][std::to_string(i)].push_back(temp);
        }
        return return_fYXiYFh;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_VLSijzA=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_JmVsMqj=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_JmVsMqj["null"]=true;
            return return_JmVsMqj;
        }
        
        return_JmVsMqj["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_yMSNnoe=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_JmVsMqj["members"][std::to_string(i)].push_back(temp);
        }
        return return_JmVsMqj;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_YMwQuWR=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_XYdxqXf=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_XYdxqXf["null"]=true;
            return return_XYdxqXf;
        }
        
        return_XYdxqXf["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_wGcgVUs=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_XYdxqXf["members"][std::to_string(i)].push_back(temp);
        }
        return return_XYdxqXf;
        }();
return result;}

    VkDeviceGroupSubmitInfo deserialize_VkDeviceGroupSubmitInfo(json name){
        auto result=VkDeviceGroupSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QXPezoy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QXPezoy=NULL;
        }
    temp_QXPezoy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QXPezoy;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_HZYKOhp;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_HZYKOhp=NULL;
        }
    temp_HZYKOhp=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int KzKYyeK=0; KzKYyeK < result.waitSemaphoreCount; KzKYyeK++){
            [&]() {
temp_HZYKOhp[KzKYyeK]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][KzKYyeK]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_HZYKOhp;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_WmzHLJr;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_WmzHLJr=NULL;
        }
    temp_WmzHLJr=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int YSUAqpF=0; YSUAqpF < result.commandBufferCount; YSUAqpF++){
            [&]() {
temp_WmzHLJr[YSUAqpF]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][YSUAqpF]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_WmzHLJr;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_SKIMbOd;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_SKIMbOd=NULL;
        }
    temp_SKIMbOd=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int pCstycK=0; pCstycK < result.signalSemaphoreCount; pCstycK++){
            [&]() {
temp_SKIMbOd[pCstycK]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][pCstycK]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_SKIMbOd;}();
return result;}

    json serialize_VkDeviceGroupSubmitInfoKHR(VkDeviceGroupSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GyszWnv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oRaKkty=json({});
    
        if (name.pNext==NULL){
            return_oRaKkty["null"]=true;
            return return_oRaKkty;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreCount"]=[&]() {
    json return_uMKMceP=json({});
    return serialize_uint32_t(name.waitSemaphoreCount);}();
result["members"]["pWaitSemaphoreDeviceIndices"]=[&]() {
    json return_auFphXy=json({});
    
        if (name.pWaitSemaphoreDeviceIndices==NULL){
            return_auFphXy["null"]=true;
            return return_auFphXy;
        }
        
        return_auFphXy["members"]={};
        for(int i=0; i < name.waitSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_xrreIxQ=json({});
    return serialize_uint32_t(name.pWaitSemaphoreDeviceIndices[i]);}();
            return_auFphXy["members"][std::to_string(i)].push_back(temp);
        }
        return return_auFphXy;
        }();
result["members"]["commandBufferCount"]=[&]() {
    json return_xnTuRDY=json({});
    return serialize_uint32_t(name.commandBufferCount);}();
result["members"]["pCommandBufferDeviceMasks"]=[&]() {
    json return_XSYwIDL=json({});
    
        if (name.pCommandBufferDeviceMasks==NULL){
            return_XSYwIDL["null"]=true;
            return return_XSYwIDL;
        }
        
        return_XSYwIDL["members"]={};
        for(int i=0; i < name.commandBufferCount; i++){
            json temp;
            temp=[&]() {
    json return_baevRSu=json({});
    return serialize_uint32_t(name.pCommandBufferDeviceMasks[i]);}();
            return_XSYwIDL["members"][std::to_string(i)].push_back(temp);
        }
        return return_XSYwIDL;
        }();
result["members"]["signalSemaphoreCount"]=[&]() {
    json return_PpqtiwI=json({});
    return serialize_uint32_t(name.signalSemaphoreCount);}();
result["members"]["pSignalSemaphoreDeviceIndices"]=[&]() {
    json return_DZdFMyo=json({});
    
        if (name.pSignalSemaphoreDeviceIndices==NULL){
            return_DZdFMyo["null"]=true;
            return return_DZdFMyo;
        }
        
        return_DZdFMyo["members"]={};
        for(int i=0; i < name.signalSemaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_ddTBhbW=json({});
    return serialize_uint32_t(name.pSignalSemaphoreDeviceIndices[i]);}();
            return_DZdFMyo["members"][std::to_string(i)].push_back(temp);
        }
        return return_DZdFMyo;
        }();
return result;}

    VkDeviceGroupSubmitInfoKHR deserialize_VkDeviceGroupSubmitInfoKHR(json name){
        auto result=VkDeviceGroupSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lErcRZb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lErcRZb=NULL;
        }
    temp_lErcRZb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lErcRZb;}();
[&]() {
result.waitSemaphoreCount=deserialize_uint32_t(name["members"]["waitSemaphoreCount"]);}();
[&]() {
uint32_t* temp_ycUVeYM;[&]() {

        if (name["members"]["pWaitSemaphoreDeviceIndices"].contains("null")){
        temp_ycUVeYM=NULL;
        }
    temp_ycUVeYM=(uint32_t*)malloc(result.waitSemaphoreCount*sizeof(uint32_t));
        for (int GluumrJ=0; GluumrJ < result.waitSemaphoreCount; GluumrJ++){
            [&]() {
temp_ycUVeYM[GluumrJ]=deserialize_uint32_t(name["members"]["pWaitSemaphoreDeviceIndices"]["members"][GluumrJ]);}();;
        }
        }();result.pWaitSemaphoreDeviceIndices=temp_ycUVeYM;}();
[&]() {
result.commandBufferCount=deserialize_uint32_t(name["members"]["commandBufferCount"]);}();
[&]() {
uint32_t* temp_fyOiWEF;[&]() {

        if (name["members"]["pCommandBufferDeviceMasks"].contains("null")){
        temp_fyOiWEF=NULL;
        }
    temp_fyOiWEF=(uint32_t*)malloc(result.commandBufferCount*sizeof(uint32_t));
        for (int cOxhuwt=0; cOxhuwt < result.commandBufferCount; cOxhuwt++){
            [&]() {
temp_fyOiWEF[cOxhuwt]=deserialize_uint32_t(name["members"]["pCommandBufferDeviceMasks"]["members"][cOxhuwt]);}();;
        }
        }();result.pCommandBufferDeviceMasks=temp_fyOiWEF;}();
[&]() {
result.signalSemaphoreCount=deserialize_uint32_t(name["members"]["signalSemaphoreCount"]);}();
[&]() {
uint32_t* temp_aGnysWh;[&]() {

        if (name["members"]["pSignalSemaphoreDeviceIndices"].contains("null")){
        temp_aGnysWh=NULL;
        }
    temp_aGnysWh=(uint32_t*)malloc(result.signalSemaphoreCount*sizeof(uint32_t));
        for (int yVgxpOb=0; yVgxpOb < result.signalSemaphoreCount; yVgxpOb++){
            [&]() {
temp_aGnysWh[yVgxpOb]=deserialize_uint32_t(name["members"]["pSignalSemaphoreDeviceIndices"]["members"][yVgxpOb]);}();;
        }
        }();result.pSignalSemaphoreDeviceIndices=temp_aGnysWh;}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfo(VkDeviceGroupBindSparseInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IAKifbl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BaCADAA=json({});
    
        if (name.pNext==NULL){
            return_BaCADAA["null"]=true;
            return return_BaCADAA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_pkDLfJV=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_ZmbzKcy=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfo deserialize_VkDeviceGroupBindSparseInfo(json name){
        auto result=VkDeviceGroupBindSparseInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uwalUCO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uwalUCO=NULL;
        }
    temp_uwalUCO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uwalUCO;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupBindSparseInfoKHR(VkDeviceGroupBindSparseInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gLEpvMS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zGQxPCU=json({});
    
        if (name.pNext==NULL){
            return_zGQxPCU["null"]=true;
            return return_zGQxPCU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["resourceDeviceIndex"]=[&]() {
    json return_FzVGaXo=json({});
    return serialize_uint32_t(name.resourceDeviceIndex);}();
result["members"]["memoryDeviceIndex"]=[&]() {
    json return_lJsVwsh=json({});
    return serialize_uint32_t(name.memoryDeviceIndex);}();
return result;}

    VkDeviceGroupBindSparseInfoKHR deserialize_VkDeviceGroupBindSparseInfoKHR(json name){
        auto result=VkDeviceGroupBindSparseInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zCcIOLB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zCcIOLB=NULL;
        }
    temp_zCcIOLB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zCcIOLB;}();
[&]() {
result.resourceDeviceIndex=deserialize_uint32_t(name["members"]["resourceDeviceIndex"]);}();
[&]() {
result.memoryDeviceIndex=deserialize_uint32_t(name["members"]["memoryDeviceIndex"]);}();
return result;}

    json serialize_VkDeviceGroupPresentCapabilitiesKHR(VkDeviceGroupPresentCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KrOZPEO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ECYxLib=json({});
    
        if (name.pNext==NULL){
            return_ECYxLib["null"]=true;
            return return_ECYxLib;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMask"]=[&]() {
    json return_laJBaxw=json({});
    
        return_laJBaxw["members"]={};
        for(int i=0; i < VK_MAX_DEVICE_GROUP_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_kggHXya=json({});
    return serialize_uint32_t(name.presentMask[i]);}();
            return_laJBaxw["members"][std::to_string(i)].push_back(temp);
        }
        return return_laJBaxw;
        }();
result["members"]["modes"]=[&]() {
    json return_EMwsiqY=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupPresentCapabilitiesKHR deserialize_VkDeviceGroupPresentCapabilitiesKHR(json name){
        auto result=VkDeviceGroupPresentCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int WKawbhe=0; WKawbhe < VK_MAX_DEVICE_GROUP_SIZE; WKawbhe++){
            [&]() {
result.presentMask[WKawbhe]=deserialize_uint32_t(name["members"]["presentMask"]["members"][WKawbhe]);}();;
        }
        }();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkImageSwapchainCreateInfoKHR(VkImageSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bVjjowW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zSKWsns=json({});
    
        if (name.pNext==NULL){
            return_zSKWsns["null"]=true;
            return return_zSKWsns;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_lkyRQJh=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
return result;}

    VkImageSwapchainCreateInfoKHR deserialize_VkImageSwapchainCreateInfoKHR(json name){
        auto result=VkImageSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QKCOzAY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QKCOzAY=NULL;
        }
    temp_QKCOzAY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QKCOzAY;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
return result;}

    json serialize_VkBindImageMemorySwapchainInfoKHR(VkBindImageMemorySwapchainInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xUJpckm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bSIWjeQ=json({});
    
        if (name.pNext==NULL){
            return_bSIWjeQ["null"]=true;
            return return_bSIWjeQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_iIkNaVx=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndex"]=[&]() {
    json return_dirOkjG=json({});
    return serialize_uint32_t(name.imageIndex);}();
return result;}

    VkBindImageMemorySwapchainInfoKHR deserialize_VkBindImageMemorySwapchainInfoKHR(json name){
        auto result=VkBindImageMemorySwapchainInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ENCqEAU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ENCqEAU=NULL;
        }
    temp_ENCqEAU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ENCqEAU;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndex=deserialize_uint32_t(name["members"]["imageIndex"]);}();
return result;}

    json serialize_VkAcquireNextImageInfoKHR(VkAcquireNextImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qLunKHF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IRGjVJd=json({});
    
        if (name.pNext==NULL){
            return_IRGjVJd["null"]=true;
            return return_IRGjVJd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_rrBDsOx=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["timeout"]=[&]() {
    json return_GPPbmkg=json({});
    return serialize_uint64_t(name.timeout);}();
result["members"]["semaphore"]=[&]() {
    json return_KfUUuEt=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["fence"]=[&]() {
    json return_mQNWEZf=json({});
    return serialize_VkFence(name.fence);}();
result["members"]["deviceMask"]=[&]() {
    json return_DFkcCKX=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkAcquireNextImageInfoKHR deserialize_VkAcquireNextImageInfoKHR(json name){
        auto result=VkAcquireNextImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vslZoUs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vslZoUs=NULL;
        }
    temp_vslZoUs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vslZoUs;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.fence=deserialize_VkFence(name["members"]["fence"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkDeviceGroupPresentInfoKHR(VkDeviceGroupPresentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JowAMcq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pYFUGXG=json({});
    
        if (name.pNext==NULL){
            return_pYFUGXG["null"]=true;
            return return_pYFUGXG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_IOLCweC=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pDeviceMasks"]=[&]() {
    json return_lpyYvQy=json({});
    
        if (name.pDeviceMasks==NULL){
            return_lpyYvQy["null"]=true;
            return return_lpyYvQy;
        }
        
        return_lpyYvQy["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_osXxnQz=json({});
    return serialize_uint32_t(name.pDeviceMasks[i]);}();
            return_lpyYvQy["members"][std::to_string(i)].push_back(temp);
        }
        return return_lpyYvQy;
        }();
result["members"]["mode"]=[&]() {
    json return_bZlPzvi=json({});
    return serialize_VkDeviceGroupPresentModeFlagBitsKHR(name.mode);}();
return result;}

    VkDeviceGroupPresentInfoKHR deserialize_VkDeviceGroupPresentInfoKHR(json name){
        auto result=VkDeviceGroupPresentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OSoCGpb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OSoCGpb=NULL;
        }
    temp_OSoCGpb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OSoCGpb;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint32_t* temp_SGxYUij;[&]() {

        if (name["members"]["pDeviceMasks"].contains("null")){
        temp_SGxYUij=NULL;
        }
    temp_SGxYUij=(uint32_t*)malloc(result.swapchainCount*sizeof(uint32_t));
        for (int mzkIcmZ=0; mzkIcmZ < result.swapchainCount; mzkIcmZ++){
            [&]() {
temp_SGxYUij[mzkIcmZ]=deserialize_uint32_t(name["members"]["pDeviceMasks"]["members"][mzkIcmZ]);}();;
        }
        }();result.pDeviceMasks=temp_SGxYUij;}();
[&]() {
result.mode=deserialize_VkDeviceGroupPresentModeFlagBitsKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfo(VkDeviceGroupDeviceCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VSPPGhK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GlFxxlg=json({});
    
        if (name.pNext==NULL){
            return_GlFxxlg["null"]=true;
            return return_GlFxxlg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_FtKsjNc=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_ZNMjrCp=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_ZNMjrCp["null"]=true;
            return return_ZNMjrCp;
        }
        
        return_ZNMjrCp["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_nhMtcNo=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_ZNMjrCp["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZNMjrCp;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfo deserialize_VkDeviceGroupDeviceCreateInfo(json name){
        auto result=VkDeviceGroupDeviceCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gHIdezU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gHIdezU=NULL;
        }
    temp_gHIdezU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gHIdezU;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_SffLAZR;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_SffLAZR=NULL;
        }
    temp_SffLAZR=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int PkfudzA=0; PkfudzA < result.physicalDeviceCount; PkfudzA++){
            [&]() {
temp_SffLAZR[PkfudzA]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][PkfudzA]);}();;
        }
        }();result.pPhysicalDevices=temp_SffLAZR;}();
return result;}

    json serialize_VkDeviceGroupDeviceCreateInfoKHR(VkDeviceGroupDeviceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rYYuPQr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uCBaCgA=json({});
    
        if (name.pNext==NULL){
            return_uCBaCgA["null"]=true;
            return return_uCBaCgA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["physicalDeviceCount"]=[&]() {
    json return_pWmQVpi=json({});
    return serialize_uint32_t(name.physicalDeviceCount);}();
result["members"]["pPhysicalDevices"]=[&]() {
    json return_MEpagKx=json({});
    
        if (name.pPhysicalDevices==NULL){
            return_MEpagKx["null"]=true;
            return return_MEpagKx;
        }
        
        return_MEpagKx["members"]={};
        for(int i=0; i < name.physicalDeviceCount; i++){
            json temp;
            temp=[&]() {
    json return_epAeglb=json({});
    return serialize_VkPhysicalDevice(name.pPhysicalDevices[i]);}();
            return_MEpagKx["members"][std::to_string(i)].push_back(temp);
        }
        return return_MEpagKx;
        }();
return result;}

    VkDeviceGroupDeviceCreateInfoKHR deserialize_VkDeviceGroupDeviceCreateInfoKHR(json name){
        auto result=VkDeviceGroupDeviceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yDhooto;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yDhooto=NULL;
        }
    temp_yDhooto=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yDhooto;}();
[&]() {
result.physicalDeviceCount=deserialize_uint32_t(name["members"]["physicalDeviceCount"]);}();
[&]() {
VkPhysicalDevice* temp_leCiCrJ;[&]() {

        if (name["members"]["pPhysicalDevices"].contains("null")){
        temp_leCiCrJ=NULL;
        }
    temp_leCiCrJ=(VkPhysicalDevice*)malloc(result.physicalDeviceCount*sizeof(VkPhysicalDevice));
        for (int kPJRZPk=0; kPJRZPk < result.physicalDeviceCount; kPJRZPk++){
            [&]() {
temp_leCiCrJ[kPJRZPk]=deserialize_VkPhysicalDevice(name["members"]["pPhysicalDevices"]["members"][kPJRZPk]);}();;
        }
        }();result.pPhysicalDevices=temp_leCiCrJ;}();
return result;}

    json serialize_VkDeviceGroupSwapchainCreateInfoKHR(VkDeviceGroupSwapchainCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ffPrhcx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QSgvReB=json({});
    
        if (name.pNext==NULL){
            return_QSgvReB["null"]=true;
            return return_QSgvReB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["modes"]=[&]() {
    json return_EFKweIY=json({});
    return serialize_VkDeviceGroupPresentModeFlagsKHR(name.modes);}();
return result;}

    VkDeviceGroupSwapchainCreateInfoKHR deserialize_VkDeviceGroupSwapchainCreateInfoKHR(json name){
        auto result=VkDeviceGroupSwapchainCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_frFsJGv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_frFsJGv=NULL;
        }
    temp_frFsJGv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_frFsJGv;}();
[&]() {
result.modes=deserialize_VkDeviceGroupPresentModeFlagsKHR(name["members"]["modes"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntry(VkDescriptorUpdateTemplateEntry name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_RkKVRYs=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_zZKaWwe=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_KkMehJN=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_CEOMhCK=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_zKgtjZN=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_jltOpfN=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntry deserialize_VkDescriptorUpdateTemplateEntry(json name){
        auto result=VkDescriptorUpdateTemplateEntry();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateEntryKHR(VkDescriptorUpdateTemplateEntryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dstBinding"]=[&]() {
    json return_YxPKbzZ=json({});
    return serialize_uint32_t(name.dstBinding);}();
result["members"]["dstArrayElement"]=[&]() {
    json return_PDnwrAt=json({});
    return serialize_uint32_t(name.dstArrayElement);}();
result["members"]["descriptorCount"]=[&]() {
    json return_qyMeAym=json({});
    return serialize_uint32_t(name.descriptorCount);}();
result["members"]["descriptorType"]=[&]() {
    json return_wlPUmOg=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["offset"]=[&]() {
    json return_ABbOBYb=json({});
    return serialize_size_t(name.offset);}();
result["members"]["stride"]=[&]() {
    json return_hVvgefz=json({});
    return serialize_size_t(name.stride);}();
return result;}

    VkDescriptorUpdateTemplateEntryKHR deserialize_VkDescriptorUpdateTemplateEntryKHR(json name){
        auto result=VkDescriptorUpdateTemplateEntryKHR();
    
[&]() {
result.dstBinding=deserialize_uint32_t(name["members"]["dstBinding"]);}();
[&]() {
result.dstArrayElement=deserialize_uint32_t(name["members"]["dstArrayElement"]);}();
[&]() {
result.descriptorCount=deserialize_uint32_t(name["members"]["descriptorCount"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.offset=deserialize_size_t(name["members"]["offset"]);}();
[&]() {
result.stride=deserialize_size_t(name["members"]["stride"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfo(VkDescriptorUpdateTemplateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fZGRttc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cviDtwK=json({});
    
        if (name.pNext==NULL){
            return_cviDtwK["null"]=true;
            return return_cviDtwK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_MOkVugt=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_AuTdIbS=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_TrIazit=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_TrIazit["null"]=true;
            return return_TrIazit;
        }
        
        return_TrIazit["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_WliFWMd=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_TrIazit["members"][std::to_string(i)].push_back(temp);
        }
        return return_TrIazit;
        }();
result["members"]["templateType"]=[&]() {
    json return_vHMBKud=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_KxvPeUB=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_lnsFeRX=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_fYZpnKs=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_BGztxXm=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfo deserialize_VkDescriptorUpdateTemplateCreateInfo(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yaWZIvY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yaWZIvY=NULL;
        }
    temp_yaWZIvY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yaWZIvY;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_XzWEHQS;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_XzWEHQS=NULL;
        }
    temp_XzWEHQS=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int OwszYbB=0; OwszYbB < result.descriptorUpdateEntryCount; OwszYbB++){
            [&]() {
temp_XzWEHQS[OwszYbB]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][OwszYbB]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_XzWEHQS;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkDescriptorUpdateTemplateCreateInfoKHR(VkDescriptorUpdateTemplateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lBVjBZL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_picEwYi=json({});
    
        if (name.pNext==NULL){
            return_picEwYi["null"]=true;
            return return_picEwYi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mhaFKCd=json({});
    return serialize_VkDescriptorUpdateTemplateCreateFlags(name.flags);}();
result["members"]["descriptorUpdateEntryCount"]=[&]() {
    json return_IiZxwcd=json({});
    return serialize_uint32_t(name.descriptorUpdateEntryCount);}();
result["members"]["pDescriptorUpdateEntries"]=[&]() {
    json return_mJlTgos=json({});
    
        if (name.pDescriptorUpdateEntries==NULL){
            return_mJlTgos["null"]=true;
            return return_mJlTgos;
        }
        
        return_mJlTgos["members"]={};
        for(int i=0; i < name.descriptorUpdateEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_okEUtDk=json({});
    return serialize_VkDescriptorUpdateTemplateEntry(name.pDescriptorUpdateEntries[i]);}();
            return_mJlTgos["members"][std::to_string(i)].push_back(temp);
        }
        return return_mJlTgos;
        }();
result["members"]["templateType"]=[&]() {
    json return_PpiYCfV=json({});
    return serialize_VkDescriptorUpdateTemplateType(name.templateType);}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_CgVSRuQ=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_EhHGOuA=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["pipelineLayout"]=[&]() {
    json return_pLLMnAK=json({});
    return serialize_VkPipelineLayout(name.pipelineLayout);}();
result["members"]["set"]=[&]() {
    json return_ryKABSq=json({});
    return serialize_uint32_t(name.set);}();
return result;}

    VkDescriptorUpdateTemplateCreateInfoKHR deserialize_VkDescriptorUpdateTemplateCreateInfoKHR(json name){
        auto result=VkDescriptorUpdateTemplateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VMnAdZk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VMnAdZk=NULL;
        }
    temp_VMnAdZk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VMnAdZk;}();
[&]() {
result.flags=deserialize_VkDescriptorUpdateTemplateCreateFlags(name["members"]["flags"]);}();
[&]() {
result.descriptorUpdateEntryCount=deserialize_uint32_t(name["members"]["descriptorUpdateEntryCount"]);}();
[&]() {
VkDescriptorUpdateTemplateEntry* temp_DwcaRog;[&]() {

        if (name["members"]["pDescriptorUpdateEntries"].contains("null")){
        temp_DwcaRog=NULL;
        }
    temp_DwcaRog=(VkDescriptorUpdateTemplateEntry*)malloc(result.descriptorUpdateEntryCount*sizeof(VkDescriptorUpdateTemplateEntry));
        for (int GdQEULO=0; GdQEULO < result.descriptorUpdateEntryCount; GdQEULO++){
            [&]() {
temp_DwcaRog[GdQEULO]=deserialize_VkDescriptorUpdateTemplateEntry(name["members"]["pDescriptorUpdateEntries"]["members"][GdQEULO]);}();;
        }
        }();result.pDescriptorUpdateEntries=temp_DwcaRog;}();
[&]() {
result.templateType=deserialize_VkDescriptorUpdateTemplateType(name["members"]["templateType"]);}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.pipelineLayout=deserialize_VkPipelineLayout(name["members"]["pipelineLayout"]);}();
[&]() {
result.set=deserialize_uint32_t(name["members"]["set"]);}();
return result;}

    json serialize_VkXYColorEXT(VkXYColorEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_nnkbjbK=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_KDDwDnt=json({});
    return serialize_float(name.y);}();
return result;}

    VkXYColorEXT deserialize_VkXYColorEXT(json name){
        auto result=VkXYColorEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkPhysicalDevicePresentIdFeaturesKHR(VkPhysicalDevicePresentIdFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ROXbKco=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kDwKRpj=json({});
    
        if (name.pNext==NULL){
            return_kDwKRpj["null"]=true;
            return return_kDwKRpj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentId"]=[&]() {
    json return_lQHTMPq=json({});
    return_lQHTMPq=[&]() {
    json return_sTAEXNa=json({});
    return serialize_uint32_t(name.presentId);}();return return_lQHTMPq;}();
return result;}

    VkPhysicalDevicePresentIdFeaturesKHR deserialize_VkPhysicalDevicePresentIdFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentIdFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentId=deserialize_uint32_t(name["members"]["presentId"]);}();}();
return result;}

    json serialize_VkPresentIdKHR(VkPresentIdKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wMOdyMN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yoMsrqk=json({});
    
        if (name.pNext==NULL){
            return_yoMsrqk["null"]=true;
            return return_yoMsrqk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_BwQqzYe=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentIds"]=[&]() {
    json return_hCQdNIK=json({});
    
        if (name.pPresentIds==NULL){
            return_hCQdNIK["null"]=true;
            return return_hCQdNIK;
        }
        
        return_hCQdNIK["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_cuEyaZh=json({});
    return serialize_uint64_t(name.pPresentIds[i]);}();
            return_hCQdNIK["members"][std::to_string(i)].push_back(temp);
        }
        return return_hCQdNIK;
        }();
return result;}

    VkPresentIdKHR deserialize_VkPresentIdKHR(json name){
        auto result=VkPresentIdKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NATUBab;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NATUBab=NULL;
        }
    temp_NATUBab=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NATUBab;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
uint64_t* temp_oDROEvr;[&]() {

        if (name["members"]["pPresentIds"].contains("null")){
        temp_oDROEvr=NULL;
        }
    temp_oDROEvr=(uint64_t*)malloc(result.swapchainCount*sizeof(uint64_t));
        for (int izLsvAE=0; izLsvAE < result.swapchainCount; izLsvAE++){
            [&]() {
temp_oDROEvr[izLsvAE]=deserialize_uint64_t(name["members"]["pPresentIds"]["members"][izLsvAE]);}();;
        }
        }();result.pPresentIds=temp_oDROEvr;}();
return result;}

    json serialize_VkPhysicalDevicePresentWaitFeaturesKHR(VkPhysicalDevicePresentWaitFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mzllaBd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oUhAzJX=json({});
    
        if (name.pNext==NULL){
            return_oUhAzJX["null"]=true;
            return return_oUhAzJX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentWait"]=[&]() {
    json return_FETtzgJ=json({});
    return_FETtzgJ=[&]() {
    json return_qWuEsAN=json({});
    return serialize_uint32_t(name.presentWait);}();return return_FETtzgJ;}();
return result;}

    VkPhysicalDevicePresentWaitFeaturesKHR deserialize_VkPhysicalDevicePresentWaitFeaturesKHR(json name){
        auto result=VkPhysicalDevicePresentWaitFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentWait=deserialize_uint32_t(name["members"]["presentWait"]);}();}();
return result;}

    json serialize_VkHdrMetadataEXT(VkHdrMetadataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_elOnkmb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WSNXTnT=json({});
    
        if (name.pNext==NULL){
            return_WSNXTnT["null"]=true;
            return return_WSNXTnT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPrimaryRed"]=[&]() {
    json return_rUhVldn=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryRed);}();
result["members"]["displayPrimaryGreen"]=[&]() {
    json return_dZOyrkf=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryGreen);}();
result["members"]["displayPrimaryBlue"]=[&]() {
    json return_VBXwqIA=json({});
    return serialize_VkXYColorEXT(name.displayPrimaryBlue);}();
result["members"]["whitePoint"]=[&]() {
    json return_DXgnMig=json({});
    return serialize_VkXYColorEXT(name.whitePoint);}();
result["members"]["maxLuminance"]=[&]() {
    json return_UAIrTYo=json({});
    return serialize_float(name.maxLuminance);}();
result["members"]["minLuminance"]=[&]() {
    json return_aJFtGkh=json({});
    return serialize_float(name.minLuminance);}();
result["members"]["maxContentLightLevel"]=[&]() {
    json return_nZMmgtb=json({});
    return serialize_float(name.maxContentLightLevel);}();
result["members"]["maxFrameAverageLightLevel"]=[&]() {
    json return_apSgzXh=json({});
    return serialize_float(name.maxFrameAverageLightLevel);}();
return result;}

    VkHdrMetadataEXT deserialize_VkHdrMetadataEXT(json name){
        auto result=VkHdrMetadataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SBOQaYj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SBOQaYj=NULL;
        }
    temp_SBOQaYj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SBOQaYj;}();
[&]() {
result.displayPrimaryRed=deserialize_VkXYColorEXT(name["members"]["displayPrimaryRed"]);}();
[&]() {
result.displayPrimaryGreen=deserialize_VkXYColorEXT(name["members"]["displayPrimaryGreen"]);}();
[&]() {
result.displayPrimaryBlue=deserialize_VkXYColorEXT(name["members"]["displayPrimaryBlue"]);}();
[&]() {
result.whitePoint=deserialize_VkXYColorEXT(name["members"]["whitePoint"]);}();
[&]() {
result.maxLuminance=deserialize_float(name["members"]["maxLuminance"]);}();
[&]() {
result.minLuminance=deserialize_float(name["members"]["minLuminance"]);}();
[&]() {
result.maxContentLightLevel=deserialize_float(name["members"]["maxContentLightLevel"]);}();
[&]() {
result.maxFrameAverageLightLevel=deserialize_float(name["members"]["maxFrameAverageLightLevel"]);}();
return result;}

    json serialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(VkDisplayNativeHdrSurfaceCapabilitiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AZosWut=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EZLhMYq=json({});
    
        if (name.pNext==NULL){
            return_EZLhMYq["null"]=true;
            return return_EZLhMYq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingSupport"]=[&]() {
    json return_PYnHqhj=json({});
    return_PYnHqhj=[&]() {
    json return_rOqktxQ=json({});
    return serialize_uint32_t(name.localDimmingSupport);}();return return_PYnHqhj;}();
return result;}

    VkDisplayNativeHdrSurfaceCapabilitiesAMD deserialize_VkDisplayNativeHdrSurfaceCapabilitiesAMD(json name){
        auto result=VkDisplayNativeHdrSurfaceCapabilitiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.localDimmingSupport=deserialize_uint32_t(name["members"]["localDimmingSupport"]);}();}();
return result;}

    json serialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(VkSwapchainDisplayNativeHdrCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eGPOgtP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FSdEZHs=json({});
    
        if (name.pNext==NULL){
            return_FSdEZHs["null"]=true;
            return return_FSdEZHs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["localDimmingEnable"]=[&]() {
    json return_MwEMdZc=json({});
    return_MwEMdZc=[&]() {
    json return_FLeaVWE=json({});
    return serialize_uint32_t(name.localDimmingEnable);}();return return_MwEMdZc;}();
return result;}

    VkSwapchainDisplayNativeHdrCreateInfoAMD deserialize_VkSwapchainDisplayNativeHdrCreateInfoAMD(json name){
        auto result=VkSwapchainDisplayNativeHdrCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mOmGtJk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mOmGtJk=NULL;
        }
    temp_mOmGtJk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mOmGtJk;}();
[&]() {
[&]() {
result.localDimmingEnable=deserialize_uint32_t(name["members"]["localDimmingEnable"]);}();}();
return result;}

    json serialize_VkRefreshCycleDurationGOOGLE(VkRefreshCycleDurationGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["refreshDuration"]=[&]() {
    json return_kFmnIcu=json({});
    return serialize_uint64_t(name.refreshDuration);}();
return result;}

    VkRefreshCycleDurationGOOGLE deserialize_VkRefreshCycleDurationGOOGLE(json name){
        auto result=VkRefreshCycleDurationGOOGLE();
    
[&]() {
result.refreshDuration=deserialize_uint64_t(name["members"]["refreshDuration"]);}();
return result;}

    json serialize_VkPastPresentationTimingGOOGLE(VkPastPresentationTimingGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_irrzDfY=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_csWggOc=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
result["members"]["actualPresentTime"]=[&]() {
    json return_bmCZswf=json({});
    return serialize_uint64_t(name.actualPresentTime);}();
result["members"]["earliestPresentTime"]=[&]() {
    json return_PoPJReb=json({});
    return serialize_uint64_t(name.earliestPresentTime);}();
result["members"]["presentMargin"]=[&]() {
    json return_GlCkHwN=json({});
    return serialize_uint64_t(name.presentMargin);}();
return result;}

    VkPastPresentationTimingGOOGLE deserialize_VkPastPresentationTimingGOOGLE(json name){
        auto result=VkPastPresentationTimingGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
[&]() {
result.actualPresentTime=deserialize_uint64_t(name["members"]["actualPresentTime"]);}();
[&]() {
result.earliestPresentTime=deserialize_uint64_t(name["members"]["earliestPresentTime"]);}();
[&]() {
result.presentMargin=deserialize_uint64_t(name["members"]["presentMargin"]);}();
return result;}

    json serialize_VkPresentTimesInfoGOOGLE(VkPresentTimesInfoGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_unGNFBV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gWgfXTz=json({});
    
        if (name.pNext==NULL){
            return_gWgfXTz["null"]=true;
            return return_gWgfXTz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_REnrJrs=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pTimes"]=[&]() {
    json return_iybzOiD=json({});
    
        if (name.pTimes==NULL){
            return_iybzOiD["null"]=true;
            return return_iybzOiD;
        }
        
        return_iybzOiD["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_jBulvTG=json({});
    return serialize_VkPresentTimeGOOGLE(name.pTimes[i]);}();
            return_iybzOiD["members"][std::to_string(i)].push_back(temp);
        }
        return return_iybzOiD;
        }();
return result;}

    VkPresentTimesInfoGOOGLE deserialize_VkPresentTimesInfoGOOGLE(json name){
        auto result=VkPresentTimesInfoGOOGLE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sFtZEJV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sFtZEJV=NULL;
        }
    temp_sFtZEJV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sFtZEJV;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentTimeGOOGLE* temp_kqoPhOf;[&]() {

        if (name["members"]["pTimes"].contains("null")){
        temp_kqoPhOf=NULL;
        }
    temp_kqoPhOf=(VkPresentTimeGOOGLE*)malloc(result.swapchainCount*sizeof(VkPresentTimeGOOGLE));
        for (int QGbxhJd=0; QGbxhJd < result.swapchainCount; QGbxhJd++){
            [&]() {
temp_kqoPhOf[QGbxhJd]=deserialize_VkPresentTimeGOOGLE(name["members"]["pTimes"]["members"][QGbxhJd]);}();;
        }
        }();result.pTimes=temp_kqoPhOf;}();
return result;}

    json serialize_VkPresentTimeGOOGLE(VkPresentTimeGOOGLE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["presentID"]=[&]() {
    json return_beTzKCe=json({});
    return serialize_uint32_t(name.presentID);}();
result["members"]["desiredPresentTime"]=[&]() {
    json return_JvLNjHO=json({});
    return serialize_uint64_t(name.desiredPresentTime);}();
return result;}

    VkPresentTimeGOOGLE deserialize_VkPresentTimeGOOGLE(json name){
        auto result=VkPresentTimeGOOGLE();
    
[&]() {
result.presentID=deserialize_uint32_t(name["members"]["presentID"]);}();
[&]() {
result.desiredPresentTime=deserialize_uint64_t(name["members"]["desiredPresentTime"]);}();
return result;}

    json serialize_VkViewportWScalingNV(VkViewportWScalingNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["xcoeff"]=[&]() {
    json return_jzJzudv=json({});
    return serialize_float(name.xcoeff);}();
result["members"]["ycoeff"]=[&]() {
    json return_FTqLxRf=json({});
    return serialize_float(name.ycoeff);}();
return result;}

    VkViewportWScalingNV deserialize_VkViewportWScalingNV(json name){
        auto result=VkViewportWScalingNV();
    
[&]() {
result.xcoeff=deserialize_float(name["members"]["xcoeff"]);}();
[&]() {
result.ycoeff=deserialize_float(name["members"]["ycoeff"]);}();
return result;}

    json serialize_VkPipelineViewportWScalingStateCreateInfoNV(VkPipelineViewportWScalingStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_thfWFRe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vmMVSIr=json({});
    
        if (name.pNext==NULL){
            return_vmMVSIr["null"]=true;
            return return_vmMVSIr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportWScalingEnable"]=[&]() {
    json return_oTaZnyJ=json({});
    return_oTaZnyJ=[&]() {
    json return_SRYoufD=json({});
    return serialize_uint32_t(name.viewportWScalingEnable);}();return return_oTaZnyJ;}();
result["members"]["viewportCount"]=[&]() {
    json return_EsskedW=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportWScalings"]=[&]() {
    json return_iLyODzW=json({});
    
        if (name.pViewportWScalings==NULL){
            return_iLyODzW["null"]=true;
            return return_iLyODzW;
        }
        
        return_iLyODzW["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_DtcChhB=json({});
    return serialize_VkViewportWScalingNV(name.pViewportWScalings[i]);}();
            return_iLyODzW["members"][std::to_string(i)].push_back(temp);
        }
        return return_iLyODzW;
        }();
return result;}

    VkPipelineViewportWScalingStateCreateInfoNV deserialize_VkPipelineViewportWScalingStateCreateInfoNV(json name){
        auto result=VkPipelineViewportWScalingStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kwnzIPo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kwnzIPo=NULL;
        }
    temp_kwnzIPo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kwnzIPo;}();
[&]() {
[&]() {
result.viewportWScalingEnable=deserialize_uint32_t(name["members"]["viewportWScalingEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportWScalingNV* temp_sslFdxx;[&]() {

        if (name["members"]["pViewportWScalings"].contains("null")){
        temp_sslFdxx=NULL;
        }
    temp_sslFdxx=(VkViewportWScalingNV*)malloc(result.viewportCount*sizeof(VkViewportWScalingNV));
        for (int FTegGEn=0; FTegGEn < result.viewportCount; FTegGEn++){
            [&]() {
temp_sslFdxx[FTegGEn]=deserialize_VkViewportWScalingNV(name["members"]["pViewportWScalings"]["members"][FTegGEn]);}();;
        }
        }();result.pViewportWScalings=temp_sslFdxx;}();
return result;}

    json serialize_VkViewportSwizzleNV(VkViewportSwizzleNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_Ldoelxd=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.x);}();
result["members"]["y"]=[&]() {
    json return_tFytmws=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.y);}();
result["members"]["z"]=[&]() {
    json return_RCpnobX=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.z);}();
result["members"]["w"]=[&]() {
    json return_UKWuqNo=json({});
    return serialize_VkViewportCoordinateSwizzleNV(name.w);}();
return result;}

    VkViewportSwizzleNV deserialize_VkViewportSwizzleNV(json name){
        auto result=VkViewportSwizzleNV();
    
[&]() {
result.x=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["x"]);}();
[&]() {
result.y=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["y"]);}();
[&]() {
result.z=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["z"]);}();
[&]() {
result.w=deserialize_VkViewportCoordinateSwizzleNV(name["members"]["w"]);}();
return result;}

    json serialize_VkPipelineViewportSwizzleStateCreateInfoNV(VkPipelineViewportSwizzleStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BQsSxcR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yWoVoeM=json({});
    
        if (name.pNext==NULL){
            return_yWoVoeM["null"]=true;
            return return_yWoVoeM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LQRYKyX=json({});
    return serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name.flags);}();
result["members"]["viewportCount"]=[&]() {
    json return_xCmDQFO=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pViewportSwizzles"]=[&]() {
    json return_CTFNMUo=json({});
    
        if (name.pViewportSwizzles==NULL){
            return_CTFNMUo["null"]=true;
            return return_CTFNMUo;
        }
        
        return_CTFNMUo["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_JNckzCy=json({});
    return serialize_VkViewportSwizzleNV(name.pViewportSwizzles[i]);}();
            return_CTFNMUo["members"][std::to_string(i)].push_back(temp);
        }
        return return_CTFNMUo;
        }();
return result;}

    VkPipelineViewportSwizzleStateCreateInfoNV deserialize_VkPipelineViewportSwizzleStateCreateInfoNV(json name){
        auto result=VkPipelineViewportSwizzleStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JOLFZsc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JOLFZsc=NULL;
        }
    temp_JOLFZsc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JOLFZsc;}();
[&]() {
result.flags=deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkViewportSwizzleNV* temp_FukIkpa;[&]() {

        if (name["members"]["pViewportSwizzles"].contains("null")){
        temp_FukIkpa=NULL;
        }
    temp_FukIkpa=(VkViewportSwizzleNV*)malloc(result.viewportCount*sizeof(VkViewportSwizzleNV));
        for (int qJKaOei=0; qJKaOei < result.viewportCount; qJKaOei++){
            [&]() {
temp_FukIkpa[qJKaOei]=deserialize_VkViewportSwizzleNV(name["members"]["pViewportSwizzles"]["members"][qJKaOei]);}();;
        }
        }();result.pViewportSwizzles=temp_FukIkpa;}();
return result;}

    json serialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(VkPhysicalDeviceDiscardRectanglePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EaufjJg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UTMtTlD=json({});
    
        if (name.pNext==NULL){
            return_UTMtTlD["null"]=true;
            return return_UTMtTlD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDiscardRectangles"]=[&]() {
    json return_LnplHbR=json({});
    return serialize_uint32_t(name.maxDiscardRectangles);}();
return result;}

    VkPhysicalDeviceDiscardRectanglePropertiesEXT deserialize_VkPhysicalDeviceDiscardRectanglePropertiesEXT(json name){
        auto result=VkPhysicalDeviceDiscardRectanglePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDiscardRectangles=deserialize_uint32_t(name["members"]["maxDiscardRectangles"]);}();
return result;}

    json serialize_VkPipelineDiscardRectangleStateCreateInfoEXT(VkPipelineDiscardRectangleStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lkRamCM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AkyAjpQ=json({});
    
        if (name.pNext==NULL){
            return_AkyAjpQ["null"]=true;
            return return_AkyAjpQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gQaonEC=json({});
    return serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name.flags);}();
result["members"]["discardRectangleMode"]=[&]() {
    json return_IGZcXjl=json({});
    return serialize_VkDiscardRectangleModeEXT(name.discardRectangleMode);}();
result["members"]["discardRectangleCount"]=[&]() {
    json return_knoPqOT=json({});
    return serialize_uint32_t(name.discardRectangleCount);}();
result["members"]["pDiscardRectangles"]=[&]() {
    json return_cRzkScY=json({});
    
        if (name.pDiscardRectangles==NULL){
            return_cRzkScY["null"]=true;
            return return_cRzkScY;
        }
        
        return_cRzkScY["members"]={};
        for(int i=0; i < name.discardRectangleCount; i++){
            json temp;
            temp=[&]() {
    json return_FcAvDMK=json({});
    return serialize_VkRect2D(name.pDiscardRectangles[i]);}();
            return_cRzkScY["members"][std::to_string(i)].push_back(temp);
        }
        return return_cRzkScY;
        }();
return result;}

    VkPipelineDiscardRectangleStateCreateInfoEXT deserialize_VkPipelineDiscardRectangleStateCreateInfoEXT(json name){
        auto result=VkPipelineDiscardRectangleStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bDJjJXA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bDJjJXA=NULL;
        }
    temp_bDJjJXA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bDJjJXA;}();
[&]() {
result.flags=deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.discardRectangleMode=deserialize_VkDiscardRectangleModeEXT(name["members"]["discardRectangleMode"]);}();
[&]() {
result.discardRectangleCount=deserialize_uint32_t(name["members"]["discardRectangleCount"]);}();
[&]() {
VkRect2D* temp_ZKYacgp;[&]() {

        if (name["members"]["pDiscardRectangles"].contains("null")){
        temp_ZKYacgp=NULL;
        }
    temp_ZKYacgp=(VkRect2D*)malloc(result.discardRectangleCount*sizeof(VkRect2D));
        for (int ARTZPwA=0; ARTZPwA < result.discardRectangleCount; ARTZPwA++){
            [&]() {
temp_ZKYacgp[ARTZPwA]=deserialize_VkRect2D(name["members"]["pDiscardRectangles"]["members"][ARTZPwA]);}();;
        }
        }();result.pDiscardRectangles=temp_ZKYacgp;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eiDxeFk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eCQiTSp=json({});
    
        if (name.pNext==NULL){
            return_eCQiTSp["null"]=true;
            return return_eCQiTSp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewPositionAllComponents"]=[&]() {
    json return_ejZosFj=json({});
    return_ejZosFj=[&]() {
    json return_KouQLyG=json({});
    return serialize_uint32_t(name.perViewPositionAllComponents);}();return return_ejZosFj;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX deserialize_VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.perViewPositionAllComponents=deserialize_uint32_t(name["members"]["perViewPositionAllComponents"]);}();}();
return result;}

    json serialize_VkInputAttachmentAspectReference(VkInputAttachmentAspectReference name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_gOHCCWg=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_IjtTdMz=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_jAvCCfo=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReference deserialize_VkInputAttachmentAspectReference(json name){
        auto result=VkInputAttachmentAspectReference();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkInputAttachmentAspectReferenceKHR(VkInputAttachmentAspectReferenceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpass"]=[&]() {
    json return_UCdYiSI=json({});
    return serialize_uint32_t(name.subpass);}();
result["members"]["inputAttachmentIndex"]=[&]() {
    json return_SiDostj=json({});
    return serialize_uint32_t(name.inputAttachmentIndex);}();
result["members"]["aspectMask"]=[&]() {
    json return_YidxwAn=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkInputAttachmentAspectReferenceKHR deserialize_VkInputAttachmentAspectReferenceKHR(json name){
        auto result=VkInputAttachmentAspectReferenceKHR();
    
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
[&]() {
result.inputAttachmentIndex=deserialize_uint32_t(name["members"]["inputAttachmentIndex"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfo(VkRenderPassInputAttachmentAspectCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NGSivTn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vWDdGRg=json({});
    
        if (name.pNext==NULL){
            return_vWDdGRg["null"]=true;
            return return_vWDdGRg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_iqjGPMj=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_kHwWhMR=json({});
    
        if (name.pAspectReferences==NULL){
            return_kHwWhMR["null"]=true;
            return return_kHwWhMR;
        }
        
        return_kHwWhMR["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_XIWMTKQ=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_kHwWhMR["members"][std::to_string(i)].push_back(temp);
        }
        return return_kHwWhMR;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfo deserialize_VkRenderPassInputAttachmentAspectCreateInfo(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ASPqLDI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ASPqLDI=NULL;
        }
    temp_ASPqLDI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ASPqLDI;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_nkSqgrB;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_nkSqgrB=NULL;
        }
    temp_nkSqgrB=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int yFfcwMn=0; yFfcwMn < result.aspectReferenceCount; yFfcwMn++){
            [&]() {
temp_nkSqgrB[yFfcwMn]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][yFfcwMn]);}();;
        }
        }();result.pAspectReferences=temp_nkSqgrB;}();
return result;}

    json serialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(VkRenderPassInputAttachmentAspectCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fUjTJQG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HCedwDp=json({});
    
        if (name.pNext==NULL){
            return_HCedwDp["null"]=true;
            return return_HCedwDp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aspectReferenceCount"]=[&]() {
    json return_IGCgFRa=json({});
    return serialize_uint32_t(name.aspectReferenceCount);}();
result["members"]["pAspectReferences"]=[&]() {
    json return_YbNRpwz=json({});
    
        if (name.pAspectReferences==NULL){
            return_YbNRpwz["null"]=true;
            return return_YbNRpwz;
        }
        
        return_YbNRpwz["members"]={};
        for(int i=0; i < name.aspectReferenceCount; i++){
            json temp;
            temp=[&]() {
    json return_EXYWQzv=json({});
    return serialize_VkInputAttachmentAspectReference(name.pAspectReferences[i]);}();
            return_YbNRpwz["members"][std::to_string(i)].push_back(temp);
        }
        return return_YbNRpwz;
        }();
return result;}

    VkRenderPassInputAttachmentAspectCreateInfoKHR deserialize_VkRenderPassInputAttachmentAspectCreateInfoKHR(json name){
        auto result=VkRenderPassInputAttachmentAspectCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FcpTBLp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FcpTBLp=NULL;
        }
    temp_FcpTBLp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FcpTBLp;}();
[&]() {
result.aspectReferenceCount=deserialize_uint32_t(name["members"]["aspectReferenceCount"]);}();
[&]() {
VkInputAttachmentAspectReference* temp_pYZDRzk;[&]() {

        if (name["members"]["pAspectReferences"].contains("null")){
        temp_pYZDRzk=NULL;
        }
    temp_pYZDRzk=(VkInputAttachmentAspectReference*)malloc(result.aspectReferenceCount*sizeof(VkInputAttachmentAspectReference));
        for (int PuhhYWC=0; PuhhYWC < result.aspectReferenceCount; PuhhYWC++){
            [&]() {
temp_pYZDRzk[PuhhYWC]=deserialize_VkInputAttachmentAspectReference(name["members"]["pAspectReferences"]["members"][PuhhYWC]);}();;
        }
        }();result.pAspectReferences=temp_pYZDRzk;}();
return result;}

    json serialize_VkPhysicalDeviceSurfaceInfo2KHR(VkPhysicalDeviceSurfaceInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TIIYBfF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jbmPDQd=json({});
    
        if (name.pNext==NULL){
            return_jbmPDQd["null"]=true;
            return return_jbmPDQd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surface"]=[&]() {
    json return_ihIzLFz=json({});
    return serialize_VkSurfaceKHR(name.surface);}();
return result;}

    VkPhysicalDeviceSurfaceInfo2KHR deserialize_VkPhysicalDeviceSurfaceInfo2KHR(json name){
        auto result=VkPhysicalDeviceSurfaceInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pLoxEkP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pLoxEkP=NULL;
        }
    temp_pLoxEkP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pLoxEkP;}();
[&]() {
result.surface=deserialize_VkSurfaceKHR(name["members"]["surface"]);}();
return result;}

    json serialize_VkSurfaceCapabilities2KHR(VkSurfaceCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pSwoVZi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wqXKSrF=json({});
    
        if (name.pNext==NULL){
            return_wqXKSrF["null"]=true;
            return return_wqXKSrF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceCapabilities"]=[&]() {
    json return_PfhGOyL=json({});
    return serialize_VkSurfaceCapabilitiesKHR(name.surfaceCapabilities);}();
return result;}

    VkSurfaceCapabilities2KHR deserialize_VkSurfaceCapabilities2KHR(json name){
        auto result=VkSurfaceCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceCapabilities=deserialize_VkSurfaceCapabilitiesKHR(name["members"]["surfaceCapabilities"]);}();
return result;}

    json serialize_VkSurfaceFormat2KHR(VkSurfaceFormat2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YiSxIjM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WhWHaiJ=json({});
    
        if (name.pNext==NULL){
            return_WhWHaiJ["null"]=true;
            return return_WhWHaiJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["surfaceFormat"]=[&]() {
    json return_iWcsHZy=json({});
    return serialize_VkSurfaceFormatKHR(name.surfaceFormat);}();
return result;}

    VkSurfaceFormat2KHR deserialize_VkSurfaceFormat2KHR(json name){
        auto result=VkSurfaceFormat2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.surfaceFormat=deserialize_VkSurfaceFormatKHR(name["members"]["surfaceFormat"]);}();
return result;}

    json serialize_VkDisplayProperties2KHR(VkDisplayProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KEbOhBa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ORIRibq=json({});
    
        if (name.pNext==NULL){
            return_ORIRibq["null"]=true;
            return return_ORIRibq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayProperties"]=[&]() {
    json return_HRBbqmz=json({});
    return serialize_VkDisplayPropertiesKHR(name.displayProperties);}();
return result;}

    VkDisplayProperties2KHR deserialize_VkDisplayProperties2KHR(json name){
        auto result=VkDisplayProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayProperties=deserialize_VkDisplayPropertiesKHR(name["members"]["displayProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneProperties2KHR(VkDisplayPlaneProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ksqJBFo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PtqYHxh=json({});
    
        if (name.pNext==NULL){
            return_PtqYHxh["null"]=true;
            return return_PtqYHxh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayPlaneProperties"]=[&]() {
    json return_xTKiUoD=json({});
    return serialize_VkDisplayPlanePropertiesKHR(name.displayPlaneProperties);}();
return result;}

    VkDisplayPlaneProperties2KHR deserialize_VkDisplayPlaneProperties2KHR(json name){
        auto result=VkDisplayPlaneProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayPlaneProperties=deserialize_VkDisplayPlanePropertiesKHR(name["members"]["displayPlaneProperties"]);}();
return result;}

    json serialize_VkDisplayModeProperties2KHR(VkDisplayModeProperties2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FFGxxic=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xKtslgn=json({});
    
        if (name.pNext==NULL){
            return_xKtslgn["null"]=true;
            return return_xKtslgn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["displayModeProperties"]=[&]() {
    json return_nqqRIFv=json({});
    return serialize_VkDisplayModePropertiesKHR(name.displayModeProperties);}();
return result;}

    VkDisplayModeProperties2KHR deserialize_VkDisplayModeProperties2KHR(json name){
        auto result=VkDisplayModeProperties2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.displayModeProperties=deserialize_VkDisplayModePropertiesKHR(name["members"]["displayModeProperties"]);}();
return result;}

    json serialize_VkDisplayPlaneInfo2KHR(VkDisplayPlaneInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TwztVqL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KcbzVsa=json({});
    
        if (name.pNext==NULL){
            return_KcbzVsa["null"]=true;
            return return_KcbzVsa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_GfLiGYU=json({});
    return serialize_VkDisplayModeKHR(name.mode);}();
result["members"]["planeIndex"]=[&]() {
    json return_dvDoiaF=json({});
    return serialize_uint32_t(name.planeIndex);}();
return result;}

    VkDisplayPlaneInfo2KHR deserialize_VkDisplayPlaneInfo2KHR(json name){
        auto result=VkDisplayPlaneInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rgsASfJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rgsASfJ=NULL;
        }
    temp_rgsASfJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rgsASfJ;}();
[&]() {
result.mode=deserialize_VkDisplayModeKHR(name["members"]["mode"]);}();
[&]() {
result.planeIndex=deserialize_uint32_t(name["members"]["planeIndex"]);}();
return result;}

    json serialize_VkDisplayPlaneCapabilities2KHR(VkDisplayPlaneCapabilities2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KkquiQg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XiSjvQr=json({});
    
        if (name.pNext==NULL){
            return_XiSjvQr["null"]=true;
            return return_XiSjvQr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["capabilities"]=[&]() {
    json return_urqgSZh=json({});
    return serialize_VkDisplayPlaneCapabilitiesKHR(name.capabilities);}();
return result;}

    VkDisplayPlaneCapabilities2KHR deserialize_VkDisplayPlaneCapabilities2KHR(json name){
        auto result=VkDisplayPlaneCapabilities2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.capabilities=deserialize_VkDisplayPlaneCapabilitiesKHR(name["members"]["capabilities"]);}();
return result;}

    json serialize_VkSharedPresentSurfaceCapabilitiesKHR(VkSharedPresentSurfaceCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FcajprE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zsNBTpV=json({});
    
        if (name.pNext==NULL){
            return_zsNBTpV["null"]=true;
            return return_zsNBTpV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sharedPresentSupportedUsageFlags"]=[&]() {
    json return_SaGGKJO=json({});
    return serialize_VkImageUsageFlags(name.sharedPresentSupportedUsageFlags);}();
return result;}

    VkSharedPresentSurfaceCapabilitiesKHR deserialize_VkSharedPresentSurfaceCapabilitiesKHR(json name){
        auto result=VkSharedPresentSurfaceCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sharedPresentSupportedUsageFlags=deserialize_VkImageUsageFlags(name["members"]["sharedPresentSupportedUsageFlags"]);}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeatures(VkPhysicalDevice16BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SfvzGoO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PAjVoym=json({});
    
        if (name.pNext==NULL){
            return_PAjVoym["null"]=true;
            return return_PAjVoym;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_jdNguAL=json({});
    return_jdNguAL=[&]() {
    json return_fhmoIbl=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_jdNguAL;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_JnpDMBC=json({});
    return_JnpDMBC=[&]() {
    json return_zRBBPMh=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_JnpDMBC;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_FgDIGwa=json({});
    return_FgDIGwa=[&]() {
    json return_EusRpBr=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_FgDIGwa;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_hztsqxw=json({});
    return_hztsqxw=[&]() {
    json return_jJctgmY=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_hztsqxw;}();
return result;}

    VkPhysicalDevice16BitStorageFeatures deserialize_VkPhysicalDevice16BitStorageFeatures(json name){
        auto result=VkPhysicalDevice16BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDevice16BitStorageFeaturesKHR(VkPhysicalDevice16BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zcovVWp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NobYjMo=json({});
    
        if (name.pNext==NULL){
            return_NobYjMo["null"]=true;
            return return_NobYjMo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_aJMAdmi=json({});
    return_aJMAdmi=[&]() {
    json return_KHYyrOu=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_aJMAdmi;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_WLKKCnE=json({});
    return_WLKKCnE=[&]() {
    json return_vXzgQZB=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_WLKKCnE;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_PdriMil=json({});
    return_PdriMil=[&]() {
    json return_MLlaQPy=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_PdriMil;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_bahjvET=json({});
    return_bahjvET=[&]() {
    json return_apjbEqA=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_bahjvET;}();
return result;}

    VkPhysicalDevice16BitStorageFeaturesKHR deserialize_VkPhysicalDevice16BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice16BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupProperties(VkPhysicalDeviceSubgroupProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oIgkXRR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zdSZQiK=json({});
    
        if (name.pNext==NULL){
            return_zdSZQiK["null"]=true;
            return return_zdSZQiK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSize"]=[&]() {
    json return_PJFTHLe=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["supportedStages"]=[&]() {
    json return_rgQhHKR=json({});
    return serialize_VkShaderStageFlags(name.supportedStages);}();
result["members"]["supportedOperations"]=[&]() {
    json return_uHiHfbR=json({});
    return serialize_VkSubgroupFeatureFlags(name.supportedOperations);}();
result["members"]["quadOperationsInAllStages"]=[&]() {
    json return_moZyxGa=json({});
    return_moZyxGa=[&]() {
    json return_BdjNvcm=json({});
    return serialize_uint32_t(name.quadOperationsInAllStages);}();return return_moZyxGa;}();
return result;}

    VkPhysicalDeviceSubgroupProperties deserialize_VkPhysicalDeviceSubgroupProperties(json name){
        auto result=VkPhysicalDeviceSubgroupProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.supportedStages=deserialize_VkShaderStageFlags(name["members"]["supportedStages"]);}();
[&]() {
result.supportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["supportedOperations"]);}();
[&]() {
[&]() {
result.quadOperationsInAllStages=deserialize_uint32_t(name["members"]["quadOperationsInAllStages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zwIUrjn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WkvMumC=json({});
    
        if (name.pNext==NULL){
            return_WkvMumC["null"]=true;
            return return_WkvMumC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_LFpWcWl=json({});
    return_LFpWcWl=[&]() {
    json return_oHxWrKf=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_LFpWcWl;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qFjZmQB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HgmMJpY=json({});
    
        if (name.pNext==NULL){
            return_HgmMJpY["null"]=true;
            return return_HgmMJpY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_XfUhFkX=json({});
    return_XfUhFkX=[&]() {
    json return_LgDxVKB=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_XfUhFkX;}();
return result;}

    VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2(VkBufferMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RmPlUrS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZKtbdQu=json({});
    
        if (name.pNext==NULL){
            return_ZKtbdQu["null"]=true;
            return return_ZKtbdQu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_YdasVMz=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2 deserialize_VkBufferMemoryRequirementsInfo2(json name){
        auto result=VkBufferMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TsrCGHN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TsrCGHN=NULL;
        }
    temp_TsrCGHN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TsrCGHN;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferMemoryRequirementsInfo2KHR(VkBufferMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uTjcyPc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RxQTcwP=json({});
    
        if (name.pNext==NULL){
            return_RxQTcwP["null"]=true;
            return return_RxQTcwP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_oCrqzZu=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferMemoryRequirementsInfo2KHR deserialize_VkBufferMemoryRequirementsInfo2KHR(json name){
        auto result=VkBufferMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rUCUYUc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rUCUYUc=NULL;
        }
    temp_rUCUYUc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rUCUYUc;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirements(VkDeviceBufferMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XETDbAC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kKqjyXI=json({});
    
        if (name.pNext==NULL){
            return_kKqjyXI["null"]=true;
            return return_kKqjyXI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_AUobfMm=json({});
    
        if (name.pCreateInfo==NULL){
            return_AUobfMm["null"]=true;
            return return_AUobfMm;
        }
        return_AUobfMm=[&]() {
    json return_aZOuXfG=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_AUobfMm;}();
return result;}

    VkDeviceBufferMemoryRequirements deserialize_VkDeviceBufferMemoryRequirements(json name){
        auto result=VkDeviceBufferMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZfvPmqn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZfvPmqn=NULL;
        }
    temp_ZfvPmqn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZfvPmqn;}();
[&]() {
VkBufferCreateInfo* temp_KgWAZym;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_KgWAZym=NULL;
        }
    [&]() {
*(temp_KgWAZym)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_KgWAZym;}();
return result;}

    json serialize_VkDeviceBufferMemoryRequirementsKHR(VkDeviceBufferMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UIIRPXo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JMxYnzG=json({});
    
        if (name.pNext==NULL){
            return_JMxYnzG["null"]=true;
            return return_JMxYnzG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_asWaXQd=json({});
    
        if (name.pCreateInfo==NULL){
            return_asWaXQd["null"]=true;
            return return_asWaXQd;
        }
        return_asWaXQd=[&]() {
    json return_gmnqMWH=json({});
    return serialize_VkBufferCreateInfo(*name.pCreateInfo);}();
return return_asWaXQd;}();
return result;}

    VkDeviceBufferMemoryRequirementsKHR deserialize_VkDeviceBufferMemoryRequirementsKHR(json name){
        auto result=VkDeviceBufferMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ePUpGAY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ePUpGAY=NULL;
        }
    temp_ePUpGAY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ePUpGAY;}();
[&]() {
VkBufferCreateInfo* temp_cCGWgcZ;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_cCGWgcZ=NULL;
        }
    [&]() {
*(temp_cCGWgcZ)=deserialize_VkBufferCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_cCGWgcZ;}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2(VkImageMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xaLfqcw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RXmIHBa=json({});
    
        if (name.pNext==NULL){
            return_RXmIHBa["null"]=true;
            return return_RXmIHBa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_GDrBAmd=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2 deserialize_VkImageMemoryRequirementsInfo2(json name){
        auto result=VkImageMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_okzYTZw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_okzYTZw=NULL;
        }
    temp_okzYTZw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_okzYTZw;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageMemoryRequirementsInfo2KHR(VkImageMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YIflOCq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LrxQvkL=json({});
    
        if (name.pNext==NULL){
            return_LrxQvkL["null"]=true;
            return return_LrxQvkL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_wNlCIEw=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageMemoryRequirementsInfo2KHR deserialize_VkImageMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_muCSsaK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_muCSsaK=NULL;
        }
    temp_muCSsaK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_muCSsaK;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2(VkImageSparseMemoryRequirementsInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qeUeoNK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RdVnvqk=json({});
    
        if (name.pNext==NULL){
            return_RdVnvqk["null"]=true;
            return return_RdVnvqk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_JEZDbjK=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2 deserialize_VkImageSparseMemoryRequirementsInfo2(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_oSbMIKX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_oSbMIKX=NULL;
        }
    temp_oSbMIKX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_oSbMIKX;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageSparseMemoryRequirementsInfo2KHR(VkImageSparseMemoryRequirementsInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NHadqqu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wuKFjsw=json({});
    
        if (name.pNext==NULL){
            return_wuKFjsw["null"]=true;
            return return_wuKFjsw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_QHxaNIC=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageSparseMemoryRequirementsInfo2KHR deserialize_VkImageSparseMemoryRequirementsInfo2KHR(json name){
        auto result=VkImageSparseMemoryRequirementsInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MLYXinX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MLYXinX=NULL;
        }
    temp_MLYXinX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MLYXinX;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirements(VkDeviceImageMemoryRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EiBzAsZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KziphCh=json({});
    
        if (name.pNext==NULL){
            return_KziphCh["null"]=true;
            return return_KziphCh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_jqvXfQI=json({});
    
        if (name.pCreateInfo==NULL){
            return_jqvXfQI["null"]=true;
            return return_jqvXfQI;
        }
        return_jqvXfQI=[&]() {
    json return_JuZiSpN=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_jqvXfQI;}();
result["members"]["planeAspect"]=[&]() {
    json return_lnHZQtj=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirements deserialize_VkDeviceImageMemoryRequirements(json name){
        auto result=VkDeviceImageMemoryRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zfnTOlP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zfnTOlP=NULL;
        }
    temp_zfnTOlP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zfnTOlP;}();
[&]() {
VkImageCreateInfo* temp_JJEaAVr;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_JJEaAVr=NULL;
        }
    [&]() {
*(temp_JJEaAVr)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_JJEaAVr;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkDeviceImageMemoryRequirementsKHR(VkDeviceImageMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qdwqnaG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jlzLkVw=json({});
    
        if (name.pNext==NULL){
            return_jlzLkVw["null"]=true;
            return return_jlzLkVw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_iRCjOfr=json({});
    
        if (name.pCreateInfo==NULL){
            return_iRCjOfr["null"]=true;
            return return_iRCjOfr;
        }
        return_iRCjOfr=[&]() {
    json return_UNcidUK=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_iRCjOfr;}();
result["members"]["planeAspect"]=[&]() {
    json return_SqMVGMJ=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkDeviceImageMemoryRequirementsKHR deserialize_VkDeviceImageMemoryRequirementsKHR(json name){
        auto result=VkDeviceImageMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QPfkNpz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QPfkNpz=NULL;
        }
    temp_QPfkNpz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QPfkNpz;}();
[&]() {
VkImageCreateInfo* temp_zSYTeDN;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_zSYTeDN=NULL;
        }
    [&]() {
*(temp_zSYTeDN)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_zSYTeDN;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkMemoryRequirements2(VkMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bynMwXw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PEBbhwZ=json({});
    
        if (name.pNext==NULL){
            return_PEBbhwZ["null"]=true;
            return return_PEBbhwZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_EclBFNs=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2 deserialize_VkMemoryRequirements2(json name){
        auto result=VkMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkMemoryRequirements2KHR(VkMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dkJfJhZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bzfdSyL=json({});
    
        if (name.pNext==NULL){
            return_bzfdSyL["null"]=true;
            return return_bzfdSyL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_bHikQTF=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkMemoryRequirements2KHR deserialize_VkMemoryRequirements2KHR(json name){
        auto result=VkMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2(VkSparseImageMemoryRequirements2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VYzAaFM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ALPMrbu=json({});
    
        if (name.pNext==NULL){
            return_ALPMrbu["null"]=true;
            return return_ALPMrbu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_laPqLbM=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2 deserialize_VkSparseImageMemoryRequirements2(json name){
        auto result=VkSparseImageMemoryRequirements2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkSparseImageMemoryRequirements2KHR(VkSparseImageMemoryRequirements2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZTtXmCG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ooSUMQb=json({});
    
        if (name.pNext==NULL){
            return_ooSUMQb["null"]=true;
            return return_ooSUMQb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryRequirements"]=[&]() {
    json return_XTGCmHA=json({});
    return serialize_VkSparseImageMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkSparseImageMemoryRequirements2KHR deserialize_VkSparseImageMemoryRequirements2KHR(json name){
        auto result=VkSparseImageMemoryRequirements2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryRequirements=deserialize_VkSparseImageMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingProperties(VkPhysicalDevicePointClippingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ynyRTDw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dznDMkG=json({});
    
        if (name.pNext==NULL){
            return_dznDMkG["null"]=true;
            return return_dznDMkG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_PNFeRFH=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingProperties deserialize_VkPhysicalDevicePointClippingProperties(json name){
        auto result=VkPhysicalDevicePointClippingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkPhysicalDevicePointClippingPropertiesKHR(VkPhysicalDevicePointClippingPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xDqmKvi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jOFBctQ=json({});
    
        if (name.pNext==NULL){
            return_jOFBctQ["null"]=true;
            return return_jOFBctQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_naMUprh=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
return result;}

    VkPhysicalDevicePointClippingPropertiesKHR deserialize_VkPhysicalDevicePointClippingPropertiesKHR(json name){
        auto result=VkPhysicalDevicePointClippingPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
return result;}

    json serialize_VkMemoryDedicatedRequirements(VkMemoryDedicatedRequirements name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DDjPWtQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oadIOyw=json({});
    
        if (name.pNext==NULL){
            return_oadIOyw["null"]=true;
            return return_oadIOyw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_YuoCAwx=json({});
    return_YuoCAwx=[&]() {
    json return_bUPJUPC=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_YuoCAwx;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_BXOImIc=json({});
    return_BXOImIc=[&]() {
    json return_COsWjRZ=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_BXOImIc;}();
return result;}

    VkMemoryDedicatedRequirements deserialize_VkMemoryDedicatedRequirements(json name){
        auto result=VkMemoryDedicatedRequirements();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedRequirementsKHR(VkMemoryDedicatedRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tktjSBc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HNymare=json({});
    
        if (name.pNext==NULL){
            return_HNymare["null"]=true;
            return return_HNymare;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["prefersDedicatedAllocation"]=[&]() {
    json return_owRpswC=json({});
    return_owRpswC=[&]() {
    json return_WcbNYlz=json({});
    return serialize_uint32_t(name.prefersDedicatedAllocation);}();return return_owRpswC;}();
result["members"]["requiresDedicatedAllocation"]=[&]() {
    json return_BVYyQhg=json({});
    return_BVYyQhg=[&]() {
    json return_WDHFZie=json({});
    return serialize_uint32_t(name.requiresDedicatedAllocation);}();return return_BVYyQhg;}();
return result;}

    VkMemoryDedicatedRequirementsKHR deserialize_VkMemoryDedicatedRequirementsKHR(json name){
        auto result=VkMemoryDedicatedRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.prefersDedicatedAllocation=deserialize_uint32_t(name["members"]["prefersDedicatedAllocation"]);}();}();
[&]() {
[&]() {
result.requiresDedicatedAllocation=deserialize_uint32_t(name["members"]["requiresDedicatedAllocation"]);}();}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfo(VkMemoryDedicatedAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xxxGEIC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_voUfoEu=json({});
    
        if (name.pNext==NULL){
            return_voUfoEu["null"]=true;
            return return_voUfoEu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_wHzkYDc=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_gAUwHSR=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfo deserialize_VkMemoryDedicatedAllocateInfo(json name){
        auto result=VkMemoryDedicatedAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AZGvcpg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AZGvcpg=NULL;
        }
    temp_AZGvcpg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AZGvcpg;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkMemoryDedicatedAllocateInfoKHR(VkMemoryDedicatedAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UnOGfpd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nJavpKI=json({});
    
        if (name.pNext==NULL){
            return_nJavpKI["null"]=true;
            return return_nJavpKI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_SCTalji=json({});
    return serialize_VkImage(name.image);}();
result["members"]["buffer"]=[&]() {
    json return_RfNEDof=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkMemoryDedicatedAllocateInfoKHR deserialize_VkMemoryDedicatedAllocateInfoKHR(json name){
        auto result=VkMemoryDedicatedAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PkZOTEL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PkZOTEL=NULL;
        }
    temp_PkZOTEL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PkZOTEL;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfo(VkImageViewUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KLqywUH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mRXHGEb=json({});
    
        if (name.pNext==NULL){
            return_mRXHGEb["null"]=true;
            return return_mRXHGEb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_pMYWQOv=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfo deserialize_VkImageViewUsageCreateInfo(json name){
        auto result=VkImageViewUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dLAEiGL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dLAEiGL=NULL;
        }
    temp_dLAEiGL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dLAEiGL;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkImageViewSlicedCreateInfoEXT(VkImageViewSlicedCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JDAYurm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cKQjrwn=json({});
    
        if (name.pNext==NULL){
            return_cKQjrwn["null"]=true;
            return return_cKQjrwn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sliceOffset"]=[&]() {
    json return_ugDUsSh=json({});
    return serialize_uint32_t(name.sliceOffset);}();
result["members"]["sliceCount"]=[&]() {
    json return_mrCxRIY=json({});
    return serialize_uint32_t(name.sliceCount);}();
return result;}

    VkImageViewSlicedCreateInfoEXT deserialize_VkImageViewSlicedCreateInfoEXT(json name){
        auto result=VkImageViewSlicedCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HqNvibX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HqNvibX=NULL;
        }
    temp_HqNvibX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HqNvibX;}();
[&]() {
result.sliceOffset=deserialize_uint32_t(name["members"]["sliceOffset"]);}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
return result;}

    json serialize_VkImageViewUsageCreateInfoKHR(VkImageViewUsageCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_InlKDsP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nzyzjyc=json({});
    
        if (name.pNext==NULL){
            return_nzyzjyc["null"]=true;
            return return_nzyzjyc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_FiTwbpY=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
return result;}

    VkImageViewUsageCreateInfoKHR deserialize_VkImageViewUsageCreateInfoKHR(json name){
        auto result=VkImageViewUsageCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ldypGNv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ldypGNv=NULL;
        }
    temp_ldypGNv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ldypGNv;}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfo(VkPipelineTessellationDomainOriginStateCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sQBxxxY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BZccGPZ=json({});
    
        if (name.pNext==NULL){
            return_BZccGPZ["null"]=true;
            return return_BZccGPZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_JPxFrqY=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfo deserialize_VkPipelineTessellationDomainOriginStateCreateInfo(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YLxIUqW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YLxIUqW=NULL;
        }
    temp_YLxIUqW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YLxIUqW;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(VkPipelineTessellationDomainOriginStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_abiZhFn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aznxdwZ=json({});
    
        if (name.pNext==NULL){
            return_aznxdwZ["null"]=true;
            return return_aznxdwZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["domainOrigin"]=[&]() {
    json return_EcyfYDH=json({});
    return serialize_VkTessellationDomainOrigin(name.domainOrigin);}();
return result;}

    VkPipelineTessellationDomainOriginStateCreateInfoKHR deserialize_VkPipelineTessellationDomainOriginStateCreateInfoKHR(json name){
        auto result=VkPipelineTessellationDomainOriginStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ptTjAFM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ptTjAFM=NULL;
        }
    temp_ptTjAFM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ptTjAFM;}();
[&]() {
result.domainOrigin=deserialize_VkTessellationDomainOrigin(name["members"]["domainOrigin"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfo(VkSamplerYcbcrConversionInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eAeSBcq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iQOCnbj=json({});
    
        if (name.pNext==NULL){
            return_iQOCnbj["null"]=true;
            return return_iQOCnbj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_RKptgIs=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfo deserialize_VkSamplerYcbcrConversionInfo(json name){
        auto result=VkSamplerYcbcrConversionInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UEvCFFw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UEvCFFw=NULL;
        }
    temp_UEvCFFw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UEvCFFw;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionInfoKHR(VkSamplerYcbcrConversionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AweJuie=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SCrFnYy=json({});
    
        if (name.pNext==NULL){
            return_SCrFnYy["null"]=true;
            return return_SCrFnYy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conversion"]=[&]() {
    json return_ZPRqKvL=json({});
    return serialize_VkSamplerYcbcrConversion(name.conversion);}();
return result;}

    VkSamplerYcbcrConversionInfoKHR deserialize_VkSamplerYcbcrConversionInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mPdAiao;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mPdAiao=NULL;
        }
    temp_mPdAiao=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mPdAiao;}();
[&]() {
result.conversion=deserialize_VkSamplerYcbcrConversion(name["members"]["conversion"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfo(VkSamplerYcbcrConversionCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lEbFTYT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JVdyugZ=json({});
    
        if (name.pNext==NULL){
            return_JVdyugZ["null"]=true;
            return return_JVdyugZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_wnzbufK=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_YwYqXci=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_RmbAehN=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_iNWwCfv=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_RBvAhso=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_uyKkVIw=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_bChUXdt=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_iBcKEWV=json({});
    return_iBcKEWV=[&]() {
    json return_qXJLtYb=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_iBcKEWV;}();
return result;}

    VkSamplerYcbcrConversionCreateInfo deserialize_VkSamplerYcbcrConversionCreateInfo(json name){
        auto result=VkSamplerYcbcrConversionCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HjDePeX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HjDePeX=NULL;
        }
    temp_HjDePeX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HjDePeX;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionCreateInfoKHR(VkSamplerYcbcrConversionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZBsaDlr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yFVIRCr=json({});
    
        if (name.pNext==NULL){
            return_yFVIRCr["null"]=true;
            return return_yFVIRCr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_fpHyWDl=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["ycbcrModel"]=[&]() {
    json return_RCMvBLn=json({});
    return serialize_VkSamplerYcbcrModelConversion(name.ycbcrModel);}();
result["members"]["ycbcrRange"]=[&]() {
    json return_ocPKHjT=json({});
    return serialize_VkSamplerYcbcrRange(name.ycbcrRange);}();
result["members"]["components"]=[&]() {
    json return_kkCygMa=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["xChromaOffset"]=[&]() {
    json return_FoPBYFj=json({});
    return serialize_VkChromaLocation(name.xChromaOffset);}();
result["members"]["yChromaOffset"]=[&]() {
    json return_PSvSAGf=json({});
    return serialize_VkChromaLocation(name.yChromaOffset);}();
result["members"]["chromaFilter"]=[&]() {
    json return_aYGMjzA=json({});
    return serialize_VkFilter(name.chromaFilter);}();
result["members"]["forceExplicitReconstruction"]=[&]() {
    json return_BEzdpXn=json({});
    return_BEzdpXn=[&]() {
    json return_SiSrhXx=json({});
    return serialize_uint32_t(name.forceExplicitReconstruction);}();return return_BEzdpXn;}();
return result;}

    VkSamplerYcbcrConversionCreateInfoKHR deserialize_VkSamplerYcbcrConversionCreateInfoKHR(json name){
        auto result=VkSamplerYcbcrConversionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AHdBdPR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AHdBdPR=NULL;
        }
    temp_AHdBdPR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AHdBdPR;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.ycbcrModel=deserialize_VkSamplerYcbcrModelConversion(name["members"]["ycbcrModel"]);}();
[&]() {
result.ycbcrRange=deserialize_VkSamplerYcbcrRange(name["members"]["ycbcrRange"]);}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
result.xChromaOffset=deserialize_VkChromaLocation(name["members"]["xChromaOffset"]);}();
[&]() {
result.yChromaOffset=deserialize_VkChromaLocation(name["members"]["yChromaOffset"]);}();
[&]() {
result.chromaFilter=deserialize_VkFilter(name["members"]["chromaFilter"]);}();
[&]() {
[&]() {
result.forceExplicitReconstruction=deserialize_uint32_t(name["members"]["forceExplicitReconstruction"]);}();}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfo(VkBindImagePlaneMemoryInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MDoGjRZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WvYKVyD=json({});
    
        if (name.pNext==NULL){
            return_WvYKVyD["null"]=true;
            return return_WvYKVyD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_dAGJBxB=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfo deserialize_VkBindImagePlaneMemoryInfo(json name){
        auto result=VkBindImagePlaneMemoryInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jIZnWrT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jIZnWrT=NULL;
        }
    temp_jIZnWrT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jIZnWrT;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkBindImagePlaneMemoryInfoKHR(VkBindImagePlaneMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_agiSLFl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ftVSavq=json({});
    
        if (name.pNext==NULL){
            return_ftVSavq["null"]=true;
            return return_ftVSavq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_kYznzjd=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkBindImagePlaneMemoryInfoKHR deserialize_VkBindImagePlaneMemoryInfoKHR(json name){
        auto result=VkBindImagePlaneMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VcpaMeS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VcpaMeS=NULL;
        }
    temp_VcpaMeS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VcpaMeS;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfo(VkImagePlaneMemoryRequirementsInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DsgdymN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VvDisek=json({});
    
        if (name.pNext==NULL){
            return_VvDisek["null"]=true;
            return return_VvDisek;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_NlaqwKB=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfo deserialize_VkImagePlaneMemoryRequirementsInfo(json name){
        auto result=VkImagePlaneMemoryRequirementsInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xFbEjZF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xFbEjZF=NULL;
        }
    temp_xFbEjZF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xFbEjZF;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkImagePlaneMemoryRequirementsInfoKHR(VkImagePlaneMemoryRequirementsInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SXYfGHN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hKERhGG=json({});
    
        if (name.pNext==NULL){
            return_hKERhGG["null"]=true;
            return return_hKERhGG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["planeAspect"]=[&]() {
    json return_UVANult=json({});
    return serialize_VkImageAspectFlagBits(name.planeAspect);}();
return result;}

    VkImagePlaneMemoryRequirementsInfoKHR deserialize_VkImagePlaneMemoryRequirementsInfoKHR(json name){
        auto result=VkImagePlaneMemoryRequirementsInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yjoLPtw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yjoLPtw=NULL;
        }
    temp_yjoLPtw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yjoLPtw;}();
[&]() {
result.planeAspect=deserialize_VkImageAspectFlagBits(name["members"]["planeAspect"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(VkPhysicalDeviceSamplerYcbcrConversionFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VYPUkvX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pJoGjrC=json({});
    
        if (name.pNext==NULL){
            return_pJoGjrC["null"]=true;
            return return_pJoGjrC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_hcFiLNS=json({});
    return_hcFiLNS=[&]() {
    json return_cbcRTcD=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_hcFiLNS;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeatures deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeatures(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bmdXPbI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tNfJHsV=json({});
    
        if (name.pNext==NULL){
            return_tNfJHsV["null"]=true;
            return return_tNfJHsV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_CEecrDv=json({});
    return_CEecrDv=[&]() {
    json return_ektSrNi=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_CEecrDv;}();
return result;}

    VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR deserialize_VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatProperties(VkSamplerYcbcrConversionImageFormatProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KVMvOcw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qrGoYVP=json({});
    
        if (name.pNext==NULL){
            return_qrGoYVP["null"]=true;
            return return_qrGoYVP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_PqHroKh=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatProperties deserialize_VkSamplerYcbcrConversionImageFormatProperties(json name){
        auto result=VkSamplerYcbcrConversionImageFormatProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(VkSamplerYcbcrConversionImageFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jLzkTCU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WpZgtHx=json({});
    
        if (name.pNext==NULL){
            return_WpZgtHx["null"]=true;
            return return_WpZgtHx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorCount"]=[&]() {
    json return_vMaeuYx=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorCount);}();
return result;}

    VkSamplerYcbcrConversionImageFormatPropertiesKHR deserialize_VkSamplerYcbcrConversionImageFormatPropertiesKHR(json name){
        auto result=VkSamplerYcbcrConversionImageFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDescriptorCount=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorCount"]);}();
return result;}

    json serialize_VkTextureLODGatherFormatPropertiesAMD(VkTextureLODGatherFormatPropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iujQDag=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FSgzwMh=json({});
    
        if (name.pNext==NULL){
            return_FSgzwMh["null"]=true;
            return return_FSgzwMh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsTextureGatherLODBiasAMD"]=[&]() {
    json return_tYjLeKH=json({});
    return_tYjLeKH=[&]() {
    json return_fGyazjN=json({});
    return serialize_uint32_t(name.supportsTextureGatherLODBiasAMD);}();return return_tYjLeKH;}();
return result;}

    VkTextureLODGatherFormatPropertiesAMD deserialize_VkTextureLODGatherFormatPropertiesAMD(json name){
        auto result=VkTextureLODGatherFormatPropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supportsTextureGatherLODBiasAMD=deserialize_uint32_t(name["members"]["supportsTextureGatherLODBiasAMD"]);}();}();
return result;}

    json serialize_VkConditionalRenderingBeginInfoEXT(VkConditionalRenderingBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JxYWPxi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NBHpokm=json({});
    
        if (name.pNext==NULL){
            return_NBHpokm["null"]=true;
            return return_NBHpokm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_Wjnqgpm=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_oIPSJUk=json({});
    return_oIPSJUk=[&]() {
    json return_ypcLWrx=json({});
    return serialize_uint64_t(name.offset);}();return return_oIPSJUk;}();
result["members"]["flags"]=[&]() {
    json return_CFbBDKU=json({});
    return serialize_VkConditionalRenderingFlagsEXT(name.flags);}();
return result;}

    VkConditionalRenderingBeginInfoEXT deserialize_VkConditionalRenderingBeginInfoEXT(json name){
        auto result=VkConditionalRenderingBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yckRLdr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yckRLdr=NULL;
        }
    temp_yckRLdr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yckRLdr;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
result.flags=deserialize_VkConditionalRenderingFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkProtectedSubmitInfo(VkProtectedSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OpzqEkT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OQXYQAF=json({});
    
        if (name.pNext==NULL){
            return_OQXYQAF["null"]=true;
            return return_OQXYQAF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedSubmit"]=[&]() {
    json return_KEzvJTx=json({});
    return_KEzvJTx=[&]() {
    json return_KzRmscA=json({});
    return serialize_uint32_t(name.protectedSubmit);}();return return_KEzvJTx;}();
return result;}

    VkProtectedSubmitInfo deserialize_VkProtectedSubmitInfo(json name){
        auto result=VkProtectedSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rguUJFn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rguUJFn=NULL;
        }
    temp_rguUJFn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rguUJFn;}();
[&]() {
[&]() {
result.protectedSubmit=deserialize_uint32_t(name["members"]["protectedSubmit"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryFeatures(VkPhysicalDeviceProtectedMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_opTQmpD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GKuQGMz=json({});
    
        if (name.pNext==NULL){
            return_GKuQGMz["null"]=true;
            return return_GKuQGMz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedMemory"]=[&]() {
    json return_wcuuLcu=json({});
    return_wcuuLcu=[&]() {
    json return_IkUTFpO=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_wcuuLcu;}();
return result;}

    VkPhysicalDeviceProtectedMemoryFeatures deserialize_VkPhysicalDeviceProtectedMemoryFeatures(json name){
        auto result=VkPhysicalDeviceProtectedMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProtectedMemoryProperties(VkPhysicalDeviceProtectedMemoryProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qBlEWXT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LQbbKbS=json({});
    
        if (name.pNext==NULL){
            return_LQbbKbS["null"]=true;
            return return_LQbbKbS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["protectedNoFault"]=[&]() {
    json return_JoavoTR=json({});
    return_JoavoTR=[&]() {
    json return_pnRnYbo=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_JoavoTR;}();
return result;}

    VkPhysicalDeviceProtectedMemoryProperties deserialize_VkPhysicalDeviceProtectedMemoryProperties(json name){
        auto result=VkPhysicalDeviceProtectedMemoryProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
return result;}

    json serialize_VkDeviceQueueInfo2(VkDeviceQueueInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IuSkDJI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vHGuzpC=json({});
    
        if (name.pNext==NULL){
            return_vHGuzpC["null"]=true;
            return return_vHGuzpC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_YhQXoVl=json({});
    return serialize_VkDeviceQueueCreateFlags(name.flags);}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_piuslHO=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["queueIndex"]=[&]() {
    json return_qJOhspU=json({});
    return serialize_uint32_t(name.queueIndex);}();
return result;}

    VkDeviceQueueInfo2 deserialize_VkDeviceQueueInfo2(json name){
        auto result=VkDeviceQueueInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pzHRryQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pzHRryQ=NULL;
        }
    temp_pzHRryQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pzHRryQ;}();
[&]() {
result.flags=deserialize_VkDeviceQueueCreateFlags(name["members"]["flags"]);}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.queueIndex=deserialize_uint32_t(name["members"]["queueIndex"]);}();
return result;}

    json serialize_VkPipelineCoverageToColorStateCreateInfoNV(VkPipelineCoverageToColorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lTBaodv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dIRtAIk=json({});
    
        if (name.pNext==NULL){
            return_dIRtAIk["null"]=true;
            return return_dIRtAIk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wrxkDWT=json({});
    return serialize_VkPipelineCoverageToColorStateCreateFlagsNV(name.flags);}();
result["members"]["coverageToColorEnable"]=[&]() {
    json return_MoiQLdk=json({});
    return_MoiQLdk=[&]() {
    json return_JLRikCN=json({});
    return serialize_uint32_t(name.coverageToColorEnable);}();return return_MoiQLdk;}();
result["members"]["coverageToColorLocation"]=[&]() {
    json return_cChMYsv=json({});
    return serialize_uint32_t(name.coverageToColorLocation);}();
return result;}

    VkPipelineCoverageToColorStateCreateInfoNV deserialize_VkPipelineCoverageToColorStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageToColorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FHZwhFO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FHZwhFO=NULL;
        }
    temp_FHZwhFO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FHZwhFO;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
[&]() {
result.coverageToColorEnable=deserialize_uint32_t(name["members"]["coverageToColorEnable"]);}();}();
[&]() {
result.coverageToColorLocation=deserialize_uint32_t(name["members"]["coverageToColorLocation"]);}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(VkPhysicalDeviceSamplerFilterMinmaxProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TtUMkwQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xkriYeB=json({});
    
        if (name.pNext==NULL){
            return_xkriYeB["null"]=true;
            return return_xkriYeB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_alWzyJs=json({});
    return_alWzyJs=[&]() {
    json return_cxLOGjp=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_alWzyJs;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_qfnRgeV=json({});
    return_qfnRgeV=[&]() {
    json return_qufYiPs=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_qfnRgeV;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxProperties deserialize_VkPhysicalDeviceSamplerFilterMinmaxProperties(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CLnQhbX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vGuBAKt=json({});
    
        if (name.pNext==NULL){
            return_vGuBAKt["null"]=true;
            return return_vGuBAKt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_prYZFZy=json({});
    return_prYZFZy=[&]() {
    json return_keNuFpx=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_prYZFZy;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_bjTaYyS=json({});
    return_bjTaYyS=[&]() {
    json return_xfCeHeP=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_bjTaYyS;}();
return result;}

    VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT deserialize_VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
return result;}

    json serialize_VkSampleLocationEXT(VkSampleLocationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["x"]=[&]() {
    json return_muHheZw=json({});
    return serialize_float(name.x);}();
result["members"]["y"]=[&]() {
    json return_BaKAxMX=json({});
    return serialize_float(name.y);}();
return result;}

    VkSampleLocationEXT deserialize_VkSampleLocationEXT(json name){
        auto result=VkSampleLocationEXT();
    
[&]() {
result.x=deserialize_float(name["members"]["x"]);}();
[&]() {
result.y=deserialize_float(name["members"]["y"]);}();
return result;}

    json serialize_VkSampleLocationsInfoEXT(VkSampleLocationsInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KKtSfYJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CcIBxbJ=json({});
    
        if (name.pNext==NULL){
            return_CcIBxbJ["null"]=true;
            return return_CcIBxbJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsPerPixel"]=[&]() {
    json return_jObtvaT=json({});
    return serialize_VkSampleCountFlagBits(name.sampleLocationsPerPixel);}();
result["members"]["sampleLocationGridSize"]=[&]() {
    json return_lBVcuyS=json({});
    return serialize_VkExtent2D(name.sampleLocationGridSize);}();
result["members"]["sampleLocationsCount"]=[&]() {
    json return_PZsvWRj=json({});
    return serialize_uint32_t(name.sampleLocationsCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_OmBboaQ=json({});
    
        if (name.pSampleLocations==NULL){
            return_OmBboaQ["null"]=true;
            return return_OmBboaQ;
        }
        
        return_OmBboaQ["members"]={};
        for(int i=0; i < name.sampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_DDapuPU=json({});
    return serialize_VkSampleLocationEXT(name.pSampleLocations[i]);}();
            return_OmBboaQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_OmBboaQ;
        }();
return result;}

    VkSampleLocationsInfoEXT deserialize_VkSampleLocationsInfoEXT(json name){
        auto result=VkSampleLocationsInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MLHVjfu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MLHVjfu=NULL;
        }
    temp_MLHVjfu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MLHVjfu;}();
[&]() {
result.sampleLocationsPerPixel=deserialize_VkSampleCountFlagBits(name["members"]["sampleLocationsPerPixel"]);}();
[&]() {
result.sampleLocationGridSize=deserialize_VkExtent2D(name["members"]["sampleLocationGridSize"]);}();
[&]() {
result.sampleLocationsCount=deserialize_uint32_t(name["members"]["sampleLocationsCount"]);}();
[&]() {
VkSampleLocationEXT* temp_WsePeJt;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_WsePeJt=NULL;
        }
    temp_WsePeJt=(VkSampleLocationEXT*)malloc(result.sampleLocationsCount*sizeof(VkSampleLocationEXT));
        for (int SHsQPOD=0; SHsQPOD < result.sampleLocationsCount; SHsQPOD++){
            [&]() {
temp_WsePeJt[SHsQPOD]=deserialize_VkSampleLocationEXT(name["members"]["pSampleLocations"]["members"][SHsQPOD]);}();;
        }
        }();result.pSampleLocations=temp_WsePeJt;}();
return result;}

    json serialize_VkAttachmentSampleLocationsEXT(VkAttachmentSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["attachmentIndex"]=[&]() {
    json return_nRpTaqp=json({});
    return serialize_uint32_t(name.attachmentIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_lhVtDiq=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkAttachmentSampleLocationsEXT deserialize_VkAttachmentSampleLocationsEXT(json name){
        auto result=VkAttachmentSampleLocationsEXT();
    
[&]() {
result.attachmentIndex=deserialize_uint32_t(name["members"]["attachmentIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkSubpassSampleLocationsEXT(VkSubpassSampleLocationsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassIndex"]=[&]() {
    json return_XUQwKzU=json({});
    return serialize_uint32_t(name.subpassIndex);}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_mpfEmrF=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkSubpassSampleLocationsEXT deserialize_VkSubpassSampleLocationsEXT(json name){
        auto result=VkSubpassSampleLocationsEXT();
    
[&]() {
result.subpassIndex=deserialize_uint32_t(name["members"]["subpassIndex"]);}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkRenderPassSampleLocationsBeginInfoEXT(VkRenderPassSampleLocationsBeginInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lawtiKs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KXwfumC=json({});
    
        if (name.pNext==NULL){
            return_KXwfumC["null"]=true;
            return return_KXwfumC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentInitialSampleLocationsCount"]=[&]() {
    json return_ziKvxKo=json({});
    return serialize_uint32_t(name.attachmentInitialSampleLocationsCount);}();
result["members"]["pAttachmentInitialSampleLocations"]=[&]() {
    json return_hebjxJO=json({});
    
        if (name.pAttachmentInitialSampleLocations==NULL){
            return_hebjxJO["null"]=true;
            return return_hebjxJO;
        }
        
        return_hebjxJO["members"]={};
        for(int i=0; i < name.attachmentInitialSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_kMFNLnP=json({});
    return serialize_VkAttachmentSampleLocationsEXT(name.pAttachmentInitialSampleLocations[i]);}();
            return_hebjxJO["members"][std::to_string(i)].push_back(temp);
        }
        return return_hebjxJO;
        }();
result["members"]["postSubpassSampleLocationsCount"]=[&]() {
    json return_ODoEfml=json({});
    return serialize_uint32_t(name.postSubpassSampleLocationsCount);}();
result["members"]["pPostSubpassSampleLocations"]=[&]() {
    json return_oAdKKTA=json({});
    
        if (name.pPostSubpassSampleLocations==NULL){
            return_oAdKKTA["null"]=true;
            return return_oAdKKTA;
        }
        
        return_oAdKKTA["members"]={};
        for(int i=0; i < name.postSubpassSampleLocationsCount; i++){
            json temp;
            temp=[&]() {
    json return_KUireym=json({});
    return serialize_VkSubpassSampleLocationsEXT(name.pPostSubpassSampleLocations[i]);}();
            return_oAdKKTA["members"][std::to_string(i)].push_back(temp);
        }
        return return_oAdKKTA;
        }();
return result;}

    VkRenderPassSampleLocationsBeginInfoEXT deserialize_VkRenderPassSampleLocationsBeginInfoEXT(json name){
        auto result=VkRenderPassSampleLocationsBeginInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PbzJpTQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PbzJpTQ=NULL;
        }
    temp_PbzJpTQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PbzJpTQ;}();
[&]() {
result.attachmentInitialSampleLocationsCount=deserialize_uint32_t(name["members"]["attachmentInitialSampleLocationsCount"]);}();
[&]() {
VkAttachmentSampleLocationsEXT* temp_gxWPMjg;[&]() {

        if (name["members"]["pAttachmentInitialSampleLocations"].contains("null")){
        temp_gxWPMjg=NULL;
        }
    temp_gxWPMjg=(VkAttachmentSampleLocationsEXT*)malloc(result.attachmentInitialSampleLocationsCount*sizeof(VkAttachmentSampleLocationsEXT));
        for (int nXVFhcz=0; nXVFhcz < result.attachmentInitialSampleLocationsCount; nXVFhcz++){
            [&]() {
temp_gxWPMjg[nXVFhcz]=deserialize_VkAttachmentSampleLocationsEXT(name["members"]["pAttachmentInitialSampleLocations"]["members"][nXVFhcz]);}();;
        }
        }();result.pAttachmentInitialSampleLocations=temp_gxWPMjg;}();
[&]() {
result.postSubpassSampleLocationsCount=deserialize_uint32_t(name["members"]["postSubpassSampleLocationsCount"]);}();
[&]() {
VkSubpassSampleLocationsEXT* temp_iaPnEIN;[&]() {

        if (name["members"]["pPostSubpassSampleLocations"].contains("null")){
        temp_iaPnEIN=NULL;
        }
    temp_iaPnEIN=(VkSubpassSampleLocationsEXT*)malloc(result.postSubpassSampleLocationsCount*sizeof(VkSubpassSampleLocationsEXT));
        for (int oynQdHh=0; oynQdHh < result.postSubpassSampleLocationsCount; oynQdHh++){
            [&]() {
temp_iaPnEIN[oynQdHh]=deserialize_VkSubpassSampleLocationsEXT(name["members"]["pPostSubpassSampleLocations"]["members"][oynQdHh]);}();;
        }
        }();result.pPostSubpassSampleLocations=temp_iaPnEIN;}();
return result;}

    json serialize_VkPipelineSampleLocationsStateCreateInfoEXT(VkPipelineSampleLocationsStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FhAYBxx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WyPcmkb=json({});
    
        if (name.pNext==NULL){
            return_WyPcmkb["null"]=true;
            return return_WyPcmkb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationsEnable"]=[&]() {
    json return_DyUBIlF=json({});
    return_DyUBIlF=[&]() {
    json return_xeDOPax=json({});
    return serialize_uint32_t(name.sampleLocationsEnable);}();return return_DyUBIlF;}();
result["members"]["sampleLocationsInfo"]=[&]() {
    json return_ahxAqMq=json({});
    return serialize_VkSampleLocationsInfoEXT(name.sampleLocationsInfo);}();
return result;}

    VkPipelineSampleLocationsStateCreateInfoEXT deserialize_VkPipelineSampleLocationsStateCreateInfoEXT(json name){
        auto result=VkPipelineSampleLocationsStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QanhtQU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QanhtQU=NULL;
        }
    temp_QanhtQU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QanhtQU;}();
[&]() {
[&]() {
result.sampleLocationsEnable=deserialize_uint32_t(name["members"]["sampleLocationsEnable"]);}();}();
[&]() {
result.sampleLocationsInfo=deserialize_VkSampleLocationsInfoEXT(name["members"]["sampleLocationsInfo"]);}();
return result;}

    json serialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(VkPhysicalDeviceSampleLocationsPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zkNyNUZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ICNXiuL=json({});
    
        if (name.pNext==NULL){
            return_ICNXiuL["null"]=true;
            return return_ICNXiuL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleLocationSampleCounts"]=[&]() {
    json return_umCjHqr=json({});
    return serialize_VkSampleCountFlags(name.sampleLocationSampleCounts);}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_EICONhE=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
result["members"]["sampleLocationCoordinateRange"]=[&]() {
    json return_HXsUHbR=json({});
    
        return_HXsUHbR["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_hXlwfLU=json({});
    return serialize_float(name.sampleLocationCoordinateRange[i]);}();
            return_HXsUHbR["members"][std::to_string(i)].push_back(temp);
        }
        return return_HXsUHbR;
        }();
result["members"]["sampleLocationSubPixelBits"]=[&]() {
    json return_bNjkuCm=json({});
    return serialize_uint32_t(name.sampleLocationSubPixelBits);}();
result["members"]["variableSampleLocations"]=[&]() {
    json return_xSretWp=json({});
    return_xSretWp=[&]() {
    json return_YZlzPWS=json({});
    return serialize_uint32_t(name.variableSampleLocations);}();return return_xSretWp;}();
return result;}

    VkPhysicalDeviceSampleLocationsPropertiesEXT deserialize_VkPhysicalDeviceSampleLocationsPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSampleLocationsPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleLocationSampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleLocationSampleCounts"]);}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
[&]() {

        for (int CeSPLWW=0; CeSPLWW < 2; CeSPLWW++){
            [&]() {
result.sampleLocationCoordinateRange[CeSPLWW]=deserialize_float(name["members"]["sampleLocationCoordinateRange"]["members"][CeSPLWW]);}();;
        }
        }();
[&]() {
result.sampleLocationSubPixelBits=deserialize_uint32_t(name["members"]["sampleLocationSubPixelBits"]);}();
[&]() {
[&]() {
result.variableSampleLocations=deserialize_uint32_t(name["members"]["variableSampleLocations"]);}();}();
return result;}

    json serialize_VkMultisamplePropertiesEXT(VkMultisamplePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nUFCSRM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AuTJHyz=json({});
    
        if (name.pNext==NULL){
            return_AuTJHyz["null"]=true;
            return return_AuTJHyz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSampleLocationGridSize"]=[&]() {
    json return_cdbuxuK=json({});
    return serialize_VkExtent2D(name.maxSampleLocationGridSize);}();
return result;}

    VkMultisamplePropertiesEXT deserialize_VkMultisamplePropertiesEXT(json name){
        auto result=VkMultisamplePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSampleLocationGridSize=deserialize_VkExtent2D(name["members"]["maxSampleLocationGridSize"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfo(VkSamplerReductionModeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pkNrBIv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uxRptRe=json({});
    
        if (name.pNext==NULL){
            return_uxRptRe["null"]=true;
            return return_uxRptRe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_PaTzUEW=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfo deserialize_VkSamplerReductionModeCreateInfo(json name){
        auto result=VkSamplerReductionModeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aObZYEz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aObZYEz=NULL;
        }
    temp_aObZYEz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aObZYEz;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkSamplerReductionModeCreateInfoEXT(VkSamplerReductionModeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xUPTeLH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CvLveJa=json({});
    
        if (name.pNext==NULL){
            return_CvLveJa["null"]=true;
            return return_CvLveJa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reductionMode"]=[&]() {
    json return_FBrWrHt=json({});
    return serialize_VkSamplerReductionMode(name.reductionMode);}();
return result;}

    VkSamplerReductionModeCreateInfoEXT deserialize_VkSamplerReductionModeCreateInfoEXT(json name){
        auto result=VkSamplerReductionModeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WrfCamP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WrfCamP=NULL;
        }
    temp_WrfCamP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WrfCamP;}();
[&]() {
result.reductionMode=deserialize_VkSamplerReductionMode(name["members"]["reductionMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oYexSFQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BppalRD=json({});
    
        if (name.pNext==NULL){
            return_BppalRD["null"]=true;
            return return_BppalRD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendCoherentOperations"]=[&]() {
    json return_MlYfmkC=json({});
    return_MlYfmkC=[&]() {
    json return_oylmjME=json({});
    return serialize_uint32_t(name.advancedBlendCoherentOperations);}();return return_MlYfmkC;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.advancedBlendCoherentOperations=deserialize_uint32_t(name["members"]["advancedBlendCoherentOperations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultiDrawFeaturesEXT(VkPhysicalDeviceMultiDrawFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_whHDLTw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FPdWDet=json({});
    
        if (name.pNext==NULL){
            return_FPdWDet["null"]=true;
            return return_FPdWDet;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiDraw"]=[&]() {
    json return_aWeKnAA=json({});
    return_aWeKnAA=[&]() {
    json return_PjLfdBF=json({});
    return serialize_uint32_t(name.multiDraw);}();return return_aWeKnAA;}();
return result;}

    VkPhysicalDeviceMultiDrawFeaturesEXT deserialize_VkPhysicalDeviceMultiDrawFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultiDrawFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiDraw=deserialize_uint32_t(name["members"]["multiDraw"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DeDFStm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DnwekAU=json({});
    
        if (name.pNext==NULL){
            return_DnwekAU["null"]=true;
            return return_DnwekAU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["advancedBlendMaxColorAttachments"]=[&]() {
    json return_DDQIIob=json({});
    return serialize_uint32_t(name.advancedBlendMaxColorAttachments);}();
result["members"]["advancedBlendIndependentBlend"]=[&]() {
    json return_eZtMZao=json({});
    return_eZtMZao=[&]() {
    json return_NlzrPVC=json({});
    return serialize_uint32_t(name.advancedBlendIndependentBlend);}();return return_eZtMZao;}();
result["members"]["advancedBlendNonPremultipliedSrcColor"]=[&]() {
    json return_JvvgvRg=json({});
    return_JvvgvRg=[&]() {
    json return_QoyNqMH=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedSrcColor);}();return return_JvvgvRg;}();
result["members"]["advancedBlendNonPremultipliedDstColor"]=[&]() {
    json return_omiMTMl=json({});
    return_omiMTMl=[&]() {
    json return_drJuxRj=json({});
    return serialize_uint32_t(name.advancedBlendNonPremultipliedDstColor);}();return return_omiMTMl;}();
result["members"]["advancedBlendCorrelatedOverlap"]=[&]() {
    json return_tQFcTmt=json({});
    return_tQFcTmt=[&]() {
    json return_iWCuYnT=json({});
    return serialize_uint32_t(name.advancedBlendCorrelatedOverlap);}();return return_tQFcTmt;}();
result["members"]["advancedBlendAllOperations"]=[&]() {
    json return_WjaoTlY=json({});
    return_WjaoTlY=[&]() {
    json return_rWLJflw=json({});
    return serialize_uint32_t(name.advancedBlendAllOperations);}();return return_WjaoTlY;}();
return result;}

    VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT deserialize_VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT(json name){
        auto result=VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.advancedBlendMaxColorAttachments=deserialize_uint32_t(name["members"]["advancedBlendMaxColorAttachments"]);}();
[&]() {
[&]() {
result.advancedBlendIndependentBlend=deserialize_uint32_t(name["members"]["advancedBlendIndependentBlend"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedSrcColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedSrcColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendNonPremultipliedDstColor=deserialize_uint32_t(name["members"]["advancedBlendNonPremultipliedDstColor"]);}();}();
[&]() {
[&]() {
result.advancedBlendCorrelatedOverlap=deserialize_uint32_t(name["members"]["advancedBlendCorrelatedOverlap"]);}();}();
[&]() {
[&]() {
result.advancedBlendAllOperations=deserialize_uint32_t(name["members"]["advancedBlendAllOperations"]);}();}();
return result;}

    json serialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(VkPipelineColorBlendAdvancedStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DLjXhWs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TCHZpoA=json({});
    
        if (name.pNext==NULL){
            return_TCHZpoA["null"]=true;
            return return_TCHZpoA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_FBQNXkw=json({});
    return_FBQNXkw=[&]() {
    json return_bKGcmsH=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_FBQNXkw;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_dvvKhvt=json({});
    return_dvvKhvt=[&]() {
    json return_DoPucyV=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_dvvKhvt;}();
result["members"]["blendOverlap"]=[&]() {
    json return_kuBrFcI=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
return result;}

    VkPipelineColorBlendAdvancedStateCreateInfoEXT deserialize_VkPipelineColorBlendAdvancedStateCreateInfoEXT(json name){
        auto result=VkPipelineColorBlendAdvancedStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mRLqfEh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mRLqfEh=NULL;
        }
    temp_mRLqfEh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mRLqfEh;}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeatures(VkPhysicalDeviceInlineUniformBlockFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dfxfqLZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DirbqDN=json({});
    
        if (name.pNext==NULL){
            return_DirbqDN["null"]=true;
            return return_DirbqDN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_gRTWmOe=json({});
    return_gRTWmOe=[&]() {
    json return_kXkSpBc=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_gRTWmOe;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_rEEWfAn=json({});
    return_rEEWfAn=[&]() {
    json return_bDvrlwj=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_rEEWfAn;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeatures deserialize_VkPhysicalDeviceInlineUniformBlockFeatures(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(VkPhysicalDeviceInlineUniformBlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tNBFhBs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RUpgyRs=json({});
    
        if (name.pNext==NULL){
            return_RUpgyRs["null"]=true;
            return return_RUpgyRs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_rpqMVOn=json({});
    return_rpqMVOn=[&]() {
    json return_YmyWWfW=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_rpqMVOn;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_nxfmmnf=json({});
    return_nxfmmnf=[&]() {
    json return_hdvoYfh=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_nxfmmnf;}();
return result;}

    VkPhysicalDeviceInlineUniformBlockFeaturesEXT deserialize_VkPhysicalDeviceInlineUniformBlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockProperties(VkPhysicalDeviceInlineUniformBlockProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YtFYwKJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZCjNgWJ=json({});
    
        if (name.pNext==NULL){
            return_ZCjNgWJ["null"]=true;
            return return_ZCjNgWJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_DXUGhXS=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_GizSkzm=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_XnHwlXg=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_veTpzKg=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_hUxUFrE=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockProperties deserialize_VkPhysicalDeviceInlineUniformBlockProperties(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(VkPhysicalDeviceInlineUniformBlockPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RbwZYJJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qonPGhe=json({});
    
        if (name.pNext==NULL){
            return_qonPGhe["null"]=true;
            return return_qonPGhe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_aTRBAzF=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_RtNYsPt=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_sSsdoeM=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_vLzGjmR=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_JNYecjB=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
return result;}

    VkPhysicalDeviceInlineUniformBlockPropertiesEXT deserialize_VkPhysicalDeviceInlineUniformBlockPropertiesEXT(json name){
        auto result=VkPhysicalDeviceInlineUniformBlockPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlock(VkWriteDescriptorSetInlineUniformBlock name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xEzsqWl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nNNQFuT=json({});
    
        if (name.pNext==NULL){
            return_nNNQFuT["null"]=true;
            return return_nNNQFuT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_sFzIWuI=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_CtRNeqy=json({});
    
        if (name.pData==NULL){
            return_CtRNeqy["null"]=true;
            return return_CtRNeqy;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlock deserialize_VkWriteDescriptorSetInlineUniformBlock(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlock();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rZNNekK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rZNNekK=NULL;
        }
    temp_rZNNekK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rZNNekK;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_QOGmpof;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_QOGmpof=NULL;
        }
    temp_QOGmpof=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_QOGmpof;}();
return result;}

    json serialize_VkWriteDescriptorSetInlineUniformBlockEXT(VkWriteDescriptorSetInlineUniformBlockEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bgCBhpO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HCqXHMq=json({});
    
        if (name.pNext==NULL){
            return_HCqXHMq["null"]=true;
            return return_HCqXHMq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_nipDStO=json({});
    return serialize_uint32_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_RbiIQIm=json({});
    
        if (name.pData==NULL){
            return_RbiIQIm["null"]=true;
            return return_RbiIQIm;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkWriteDescriptorSetInlineUniformBlockEXT deserialize_VkWriteDescriptorSetInlineUniformBlockEXT(json name){
        auto result=VkWriteDescriptorSetInlineUniformBlockEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_InhuOkz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_InhuOkz=NULL;
        }
    temp_InhuOkz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_InhuOkz;}();
[&]() {
result.dataSize=deserialize_uint32_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_aObICWR;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_aObICWR=NULL;
        }
    temp_aObICWR=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_aObICWR;}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfo(VkDescriptorPoolInlineUniformBlockCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wRGlMjF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TBXDbLR=json({});
    
        if (name.pNext==NULL){
            return_TBXDbLR["null"]=true;
            return return_TBXDbLR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_LzQXtai=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfo deserialize_VkDescriptorPoolInlineUniformBlockCreateInfo(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PVhObFY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PVhObFY=NULL;
        }
    temp_PVhObFY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PVhObFY;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(VkDescriptorPoolInlineUniformBlockCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HEKQneH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sidSwwp=json({});
    
        if (name.pNext==NULL){
            return_sidSwwp["null"]=true;
            return return_sidSwwp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInlineUniformBlockBindings"]=[&]() {
    json return_vlIeTMr=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockBindings);}();
return result;}

    VkDescriptorPoolInlineUniformBlockCreateInfoEXT deserialize_VkDescriptorPoolInlineUniformBlockCreateInfoEXT(json name){
        auto result=VkDescriptorPoolInlineUniformBlockCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yLQNrUM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yLQNrUM=NULL;
        }
    temp_yLQNrUM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yLQNrUM;}();
[&]() {
result.maxInlineUniformBlockBindings=deserialize_uint32_t(name["members"]["maxInlineUniformBlockBindings"]);}();
return result;}

    json serialize_VkPipelineCoverageModulationStateCreateInfoNV(VkPipelineCoverageModulationStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HJUFgdC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lAhoKqQ=json({});
    
        if (name.pNext==NULL){
            return_lAhoKqQ["null"]=true;
            return return_lAhoKqQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_CtNDJiq=json({});
    return serialize_VkPipelineCoverageModulationStateCreateFlagsNV(name.flags);}();
result["members"]["coverageModulationMode"]=[&]() {
    json return_aQfeTOn=json({});
    return serialize_VkCoverageModulationModeNV(name.coverageModulationMode);}();
result["members"]["coverageModulationTableEnable"]=[&]() {
    json return_qxmAMYs=json({});
    return_qxmAMYs=[&]() {
    json return_jGGWyDl=json({});
    return serialize_uint32_t(name.coverageModulationTableEnable);}();return return_qxmAMYs;}();
result["members"]["coverageModulationTableCount"]=[&]() {
    json return_CFVHUYZ=json({});
    return serialize_uint32_t(name.coverageModulationTableCount);}();
result["members"]["pCoverageModulationTable"]=[&]() {
    json return_eayOrXV=json({});
    
        if (name.pCoverageModulationTable==NULL){
            return_eayOrXV["null"]=true;
            return return_eayOrXV;
        }
        
        return_eayOrXV["members"]={};
        for(int i=0; i < name.coverageModulationTableCount; i++){
            json temp;
            temp=[&]() {
    json return_SpfRPRs=json({});
    return serialize_float(name.pCoverageModulationTable[i]);}();
            return_eayOrXV["members"][std::to_string(i)].push_back(temp);
        }
        return return_eayOrXV;
        }();
return result;}

    VkPipelineCoverageModulationStateCreateInfoNV deserialize_VkPipelineCoverageModulationStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageModulationStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JVjeQGk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JVjeQGk=NULL;
        }
    temp_JVjeQGk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JVjeQGk;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageModulationMode=deserialize_VkCoverageModulationModeNV(name["members"]["coverageModulationMode"]);}();
[&]() {
[&]() {
result.coverageModulationTableEnable=deserialize_uint32_t(name["members"]["coverageModulationTableEnable"]);}();}();
[&]() {
result.coverageModulationTableCount=deserialize_uint32_t(name["members"]["coverageModulationTableCount"]);}();
[&]() {
float* temp_HcxrPzX;[&]() {

        if (name["members"]["pCoverageModulationTable"].contains("null")){
        temp_HcxrPzX=NULL;
        }
    temp_HcxrPzX=(float*)malloc(result.coverageModulationTableCount*sizeof(float));
        for (int LnuhGSy=0; LnuhGSy < result.coverageModulationTableCount; LnuhGSy++){
            [&]() {
temp_HcxrPzX[LnuhGSy]=deserialize_float(name["members"]["pCoverageModulationTable"]["members"][LnuhGSy]);}();;
        }
        }();result.pCoverageModulationTable=temp_HcxrPzX;}();
return result;}

    json serialize_VkImageFormatListCreateInfo(VkImageFormatListCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LWJERHt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Bmvzmwe=json({});
    
        if (name.pNext==NULL){
            return_Bmvzmwe["null"]=true;
            return return_Bmvzmwe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_KCKyoNQ=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_LgXgvIY=json({});
    
        if (name.pViewFormats==NULL){
            return_LgXgvIY["null"]=true;
            return return_LgXgvIY;
        }
        
        return_LgXgvIY["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_ETDmOnb=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_LgXgvIY["members"][std::to_string(i)].push_back(temp);
        }
        return return_LgXgvIY;
        }();
return result;}

    VkImageFormatListCreateInfo deserialize_VkImageFormatListCreateInfo(json name){
        auto result=VkImageFormatListCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DVyArPX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DVyArPX=NULL;
        }
    temp_DVyArPX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DVyArPX;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_dBEbWbm;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_dBEbWbm=NULL;
        }
    temp_dBEbWbm=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int VeyQGiL=0; VeyQGiL < result.viewFormatCount; VeyQGiL++){
            [&]() {
temp_dBEbWbm[VeyQGiL]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][VeyQGiL]);}();;
        }
        }();result.pViewFormats=temp_dBEbWbm;}();
return result;}

    json serialize_VkImageFormatListCreateInfoKHR(VkImageFormatListCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ntofJhe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tezGWen=json({});
    
        if (name.pNext==NULL){
            return_tezGWen["null"]=true;
            return return_tezGWen;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewFormatCount"]=[&]() {
    json return_BBKsPlS=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_tYlWEhr=json({});
    
        if (name.pViewFormats==NULL){
            return_tYlWEhr["null"]=true;
            return return_tYlWEhr;
        }
        
        return_tYlWEhr["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_CFuRXqk=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_tYlWEhr["members"][std::to_string(i)].push_back(temp);
        }
        return return_tYlWEhr;
        }();
return result;}

    VkImageFormatListCreateInfoKHR deserialize_VkImageFormatListCreateInfoKHR(json name){
        auto result=VkImageFormatListCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jirVABR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jirVABR=NULL;
        }
    temp_jirVABR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jirVABR;}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_wqngnpG;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_wqngnpG=NULL;
        }
    temp_wqngnpG=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int hwoLoCS=0; hwoLoCS < result.viewFormatCount; hwoLoCS++){
            [&]() {
temp_wqngnpG[hwoLoCS]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][hwoLoCS]);}();;
        }
        }();result.pViewFormats=temp_wqngnpG;}();
return result;}

    json serialize_VkValidationCacheCreateInfoEXT(VkValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UZUwwxO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_foGARNJ=json({});
    
        if (name.pNext==NULL){
            return_foGARNJ["null"]=true;
            return return_foGARNJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gVWAcHO=json({});
    return serialize_VkValidationCacheCreateFlagsEXT(name.flags);}();
result["members"]["initialDataSize"]=[&]() {
    json return_oDmbcbU=json({});
    return serialize_size_t(name.initialDataSize);}();
result["members"]["pInitialData"]=[&]() {
    json return_KfbteOh=json({});
    
        if (name.pInitialData==NULL){
            return_KfbteOh["null"]=true;
            return return_KfbteOh;
        }
        return serialize_void_p(name.pInitialData);
}();
return result;}

    VkValidationCacheCreateInfoEXT deserialize_VkValidationCacheCreateInfoEXT(json name){
        auto result=VkValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LvbCBfI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LvbCBfI=NULL;
        }
    temp_LvbCBfI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LvbCBfI;}();
[&]() {
result.flags=deserialize_VkValidationCacheCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.initialDataSize=deserialize_size_t(name["members"]["initialDataSize"]);}();
[&]() {
void* temp_qSnZmtA;[&]() {

        if (name["members"]["pInitialData"].contains("null")){
        temp_qSnZmtA=NULL;
        }
    temp_qSnZmtA=deserialize_void_p(name["members"]["pInitialData"]);
}();result.pInitialData=temp_qSnZmtA;}();
return result;}

    json serialize_VkShaderModuleValidationCacheCreateInfoEXT(VkShaderModuleValidationCacheCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nPTJFKn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VAubkUO=json({});
    
        if (name.pNext==NULL){
            return_VAubkUO["null"]=true;
            return return_VAubkUO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["validationCache"]=[&]() {
    json return_onmbWQl=json({});
    return serialize_VkValidationCacheEXT(name.validationCache);}();
return result;}

    VkShaderModuleValidationCacheCreateInfoEXT deserialize_VkShaderModuleValidationCacheCreateInfoEXT(json name){
        auto result=VkShaderModuleValidationCacheCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WVBIFmL;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WVBIFmL=NULL;
        }
    temp_WVBIFmL=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WVBIFmL;}();
[&]() {
result.validationCache=deserialize_VkValidationCacheEXT(name["members"]["validationCache"]);}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3Properties(VkPhysicalDeviceMaintenance3Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_enxuRvA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TanHLBj=json({});
    
        if (name.pNext==NULL){
            return_TanHLBj["null"]=true;
            return return_TanHLBj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_kFbRmNy=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_PLenRJd=json({});
    return_PLenRJd=[&]() {
    json return_JaGnGba=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_PLenRJd;}();
return result;}

    VkPhysicalDeviceMaintenance3Properties deserialize_VkPhysicalDeviceMaintenance3Properties(json name){
        auto result=VkPhysicalDeviceMaintenance3Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance3PropertiesKHR(VkPhysicalDeviceMaintenance3PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HpHtIYG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YaCSxrr=json({});
    
        if (name.pNext==NULL){
            return_YaCSxrr["null"]=true;
            return return_YaCSxrr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_pCkzWKb=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_KaKUsMp=json({});
    return_KaKUsMp=[&]() {
    json return_hUxqmjj=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_KaKUsMp;}();
return result;}

    VkPhysicalDeviceMaintenance3PropertiesKHR deserialize_VkPhysicalDeviceMaintenance3PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance3PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Features(VkPhysicalDeviceMaintenance4Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NoCKkMK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gnbFaSt=json({});
    
        if (name.pNext==NULL){
            return_gnbFaSt["null"]=true;
            return return_gnbFaSt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_EDIBZXG=json({});
    return_EDIBZXG=[&]() {
    json return_wtCmMgh=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_EDIBZXG;}();
return result;}

    VkPhysicalDeviceMaintenance4Features deserialize_VkPhysicalDeviceMaintenance4Features(json name){
        auto result=VkPhysicalDeviceMaintenance4Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4FeaturesKHR(VkPhysicalDeviceMaintenance4FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CzbJTQz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AuHrWyf=json({});
    
        if (name.pNext==NULL){
            return_AuHrWyf["null"]=true;
            return return_AuHrWyf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance4"]=[&]() {
    json return_aSpIIOS=json({});
    return_aSpIIOS=[&]() {
    json return_hacNxML=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_aSpIIOS;}();
return result;}

    VkPhysicalDeviceMaintenance4FeaturesKHR deserialize_VkPhysicalDeviceMaintenance4FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4Properties(VkPhysicalDeviceMaintenance4Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tNdFAJS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WZaCgia=json({});
    
        if (name.pNext==NULL){
            return_WZaCgia["null"]=true;
            return return_WZaCgia;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_PUcKUNW=json({});
    return_PUcKUNW=[&]() {
    json return_IoyYGgp=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_PUcKUNW;}();
return result;}

    VkPhysicalDeviceMaintenance4Properties deserialize_VkPhysicalDeviceMaintenance4Properties(json name){
        auto result=VkPhysicalDeviceMaintenance4Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance4PropertiesKHR(VkPhysicalDeviceMaintenance4PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sibZNJU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ugQtyKb=json({});
    
        if (name.pNext==NULL){
            return_ugQtyKb["null"]=true;
            return return_ugQtyKb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBufferSize"]=[&]() {
    json return_eUpLZTg=json({});
    return_eUpLZTg=[&]() {
    json return_qZFiTgQ=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_eUpLZTg;}();
return result;}

    VkPhysicalDeviceMaintenance4PropertiesKHR deserialize_VkPhysicalDeviceMaintenance4PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance4PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5FeaturesKHR(VkPhysicalDeviceMaintenance5FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ihlIpDv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QffyQtK=json({});
    
        if (name.pNext==NULL){
            return_QffyQtK["null"]=true;
            return return_QffyQtK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maintenance5"]=[&]() {
    json return_sDlFGJv=json({});
    return_sDlFGJv=[&]() {
    json return_FkgTjFk=json({});
    return serialize_uint32_t(name.maintenance5);}();return return_sDlFGJv;}();
return result;}

    VkPhysicalDeviceMaintenance5FeaturesKHR deserialize_VkPhysicalDeviceMaintenance5FeaturesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.maintenance5=deserialize_uint32_t(name["members"]["maintenance5"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMaintenance5PropertiesKHR(VkPhysicalDeviceMaintenance5PropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jzDfUbW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lLjmaVr=json({});
    
        if (name.pNext==NULL){
            return_lLjmaVr["null"]=true;
            return return_lLjmaVr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]=[&]() {
    json return_rRJcgXa=json({});
    return_rRJcgXa=[&]() {
    json return_UiHVItH=json({});
    return serialize_uint32_t(name.earlyFragmentMultisampleCoverageAfterSampleCounting);}();return return_rRJcgXa;}();
result["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]=[&]() {
    json return_APiVzEQ=json({});
    return_APiVzEQ=[&]() {
    json return_fQLUTcs=json({});
    return serialize_uint32_t(name.earlyFragmentSampleMaskTestBeforeSampleCounting);}();return return_APiVzEQ;}();
result["members"]["depthStencilSwizzleOneSupport"]=[&]() {
    json return_xeHklJV=json({});
    return_xeHklJV=[&]() {
    json return_IsyCULk=json({});
    return serialize_uint32_t(name.depthStencilSwizzleOneSupport);}();return return_xeHklJV;}();
result["members"]["polygonModePointSize"]=[&]() {
    json return_OQCacCL=json({});
    return_OQCacCL=[&]() {
    json return_bBAwbSP=json({});
    return serialize_uint32_t(name.polygonModePointSize);}();return return_OQCacCL;}();
result["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]=[&]() {
    json return_ibHsEzX=json({});
    return_ibHsEzX=[&]() {
    json return_ezjHJsx=json({});
    return serialize_uint32_t(name.nonStrictSinglePixelWideLinesUseParallelogram);}();return return_ibHsEzX;}();
result["members"]["nonStrictWideLinesUseParallelogram"]=[&]() {
    json return_OxIlSki=json({});
    return_OxIlSki=[&]() {
    json return_WiSedfT=json({});
    return serialize_uint32_t(name.nonStrictWideLinesUseParallelogram);}();return return_OxIlSki;}();
return result;}

    VkPhysicalDeviceMaintenance5PropertiesKHR deserialize_VkPhysicalDeviceMaintenance5PropertiesKHR(json name){
        auto result=VkPhysicalDeviceMaintenance5PropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.earlyFragmentMultisampleCoverageAfterSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentMultisampleCoverageAfterSampleCounting"]);}();}();
[&]() {
[&]() {
result.earlyFragmentSampleMaskTestBeforeSampleCounting=deserialize_uint32_t(name["members"]["earlyFragmentSampleMaskTestBeforeSampleCounting"]);}();}();
[&]() {
[&]() {
result.depthStencilSwizzleOneSupport=deserialize_uint32_t(name["members"]["depthStencilSwizzleOneSupport"]);}();}();
[&]() {
[&]() {
result.polygonModePointSize=deserialize_uint32_t(name["members"]["polygonModePointSize"]);}();}();
[&]() {
[&]() {
result.nonStrictSinglePixelWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictSinglePixelWideLinesUseParallelogram"]);}();}();
[&]() {
[&]() {
result.nonStrictWideLinesUseParallelogram=deserialize_uint32_t(name["members"]["nonStrictWideLinesUseParallelogram"]);}();}();
return result;}

    json serialize_VkRenderingAreaInfoKHR(VkRenderingAreaInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BQsHVcf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xyyWyHs=json({});
    
        if (name.pNext==NULL){
            return_xyyWyHs["null"]=true;
            return return_xyyWyHs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_AQtxqze=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_EvSLSYl=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_iIqEHvi=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_iIqEHvi["null"]=true;
            return return_iIqEHvi;
        }
        
        return_iIqEHvi["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_RvyQeFn=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_iIqEHvi["members"][std::to_string(i)].push_back(temp);
        }
        return return_iIqEHvi;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_HrqQeUC=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_OpmmTWX=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkRenderingAreaInfoKHR deserialize_VkRenderingAreaInfoKHR(json name){
        auto result=VkRenderingAreaInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zkykKXB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zkykKXB=NULL;
        }
    temp_zkykKXB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zkykKXB;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_gLtnUav;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_gLtnUav=NULL;
        }
    temp_gLtnUav=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int bJnRibD=0; bJnRibD < result.colorAttachmentCount; bJnRibD++){
            [&]() {
temp_gLtnUav[bJnRibD]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][bJnRibD]);}();;
        }
        }();result.pColorAttachmentFormats=temp_gLtnUav;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutSupport(VkDescriptorSetLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QGtARNC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZOdFslw=json({});
    
        if (name.pNext==NULL){
            return_ZOdFslw["null"]=true;
            return return_ZOdFslw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_XkYcsQR=json({});
    return_XkYcsQR=[&]() {
    json return_uVpQGbf=json({});
    return serialize_uint32_t(name.supported);}();return return_XkYcsQR;}();
return result;}

    VkDescriptorSetLayoutSupport deserialize_VkDescriptorSetLayoutSupport(json name){
        auto result=VkDescriptorSetLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkDescriptorSetLayoutSupportKHR(VkDescriptorSetLayoutSupportKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PYYQHEr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WzIfCSs=json({});
    
        if (name.pNext==NULL){
            return_WzIfCSs["null"]=true;
            return return_WzIfCSs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supported"]=[&]() {
    json return_aOQjyCU=json({});
    return_aOQjyCU=[&]() {
    json return_SAVThAn=json({});
    return serialize_uint32_t(name.supported);}();return return_aOQjyCU;}();
return result;}

    VkDescriptorSetLayoutSupportKHR deserialize_VkDescriptorSetLayoutSupportKHR(json name){
        auto result=VkDescriptorSetLayoutSupportKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.supported=deserialize_uint32_t(name["members"]["supported"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParametersFeatures(VkPhysicalDeviceShaderDrawParametersFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WgcXmCB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bDHoWfj=json({});
    
        if (name.pNext==NULL){
            return_bDHoWfj["null"]=true;
            return return_bDHoWfj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_EflfCyl=json({});
    return_EflfCyl=[&]() {
    json return_YsJWxhP=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_EflfCyl;}();
return result;}

    VkPhysicalDeviceShaderDrawParametersFeatures deserialize_VkPhysicalDeviceShaderDrawParametersFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParametersFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDrawParameterFeatures(VkPhysicalDeviceShaderDrawParameterFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DQDqRHA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KwxotxB=json({});
    
        if (name.pNext==NULL){
            return_KwxotxB["null"]=true;
            return return_KwxotxB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_QdFYxnE=json({});
    return_QdFYxnE=[&]() {
    json return_HKbSWoM=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_QdFYxnE;}();
return result;}

    VkPhysicalDeviceShaderDrawParameterFeatures deserialize_VkPhysicalDeviceShaderDrawParameterFeatures(json name){
        auto result=VkPhysicalDeviceShaderDrawParameterFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8Features(VkPhysicalDeviceShaderFloat16Int8Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GWSRiVe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lwlPMsH=json({});
    
        if (name.pNext==NULL){
            return_lwlPMsH["null"]=true;
            return return_lwlPMsH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_GpCxEkO=json({});
    return_GpCxEkO=[&]() {
    json return_TMivIAk=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_GpCxEkO;}();
result["members"]["shaderInt8"]=[&]() {
    json return_acoaBlv=json({});
    return_acoaBlv=[&]() {
    json return_NcbkEeD=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_acoaBlv;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8Features deserialize_VkPhysicalDeviceShaderFloat16Int8Features(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(VkPhysicalDeviceShaderFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JKbqJty=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FDlmquX=json({});
    
        if (name.pNext==NULL){
            return_FDlmquX["null"]=true;
            return return_FDlmquX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_dhQVmeW=json({});
    return_dhQVmeW=[&]() {
    json return_LxoucTO=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_dhQVmeW;}();
result["members"]["shaderInt8"]=[&]() {
    json return_ZLdhPOU=json({});
    return_ZLdhPOU=[&]() {
    json return_tViZVMr=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_ZLdhPOU;}();
return result;}

    VkPhysicalDeviceShaderFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceShaderFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(VkPhysicalDeviceFloat16Int8FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wTOYpAC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rcBwszo=json({});
    
        if (name.pNext==NULL){
            return_rcBwszo["null"]=true;
            return return_rcBwszo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderFloat16"]=[&]() {
    json return_DsnGyig=json({});
    return_DsnGyig=[&]() {
    json return_KETcTnP=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_DsnGyig;}();
result["members"]["shaderInt8"]=[&]() {
    json return_XSvnbbJ=json({});
    return_XSvnbbJ=[&]() {
    json return_rSJUBdw=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_XSvnbbJ;}();
return result;}

    VkPhysicalDeviceFloat16Int8FeaturesKHR deserialize_VkPhysicalDeviceFloat16Int8FeaturesKHR(json name){
        auto result=VkPhysicalDeviceFloat16Int8FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsProperties(VkPhysicalDeviceFloatControlsProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rWPuXvJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_goDwwLl=json({});
    
        if (name.pNext==NULL){
            return_goDwwLl["null"]=true;
            return return_goDwwLl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_nyPIdeV=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_gDKikfa=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_iiIQWiL=json({});
    return_iiIQWiL=[&]() {
    json return_NilqLbA=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_iiIQWiL;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_QzfafuI=json({});
    return_QzfafuI=[&]() {
    json return_JbWruGN=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_QzfafuI;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_jVLUeAc=json({});
    return_jVLUeAc=[&]() {
    json return_cWwDGSR=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_jVLUeAc;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_wWgESbj=json({});
    return_wWgESbj=[&]() {
    json return_yrHgeex=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_wWgESbj;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_zIHbhwb=json({});
    return_zIHbhwb=[&]() {
    json return_WnvXOWG=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_zIHbhwb;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_TDOipAV=json({});
    return_TDOipAV=[&]() {
    json return_moZXLBN=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_TDOipAV;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_LJhWDBC=json({});
    return_LJhWDBC=[&]() {
    json return_NaFnUiE=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_LJhWDBC;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_sXEiBVP=json({});
    return_sXEiBVP=[&]() {
    json return_Otvnafc=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_sXEiBVP;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_jwfdEXK=json({});
    return_jwfdEXK=[&]() {
    json return_sDSjkQl=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_jwfdEXK;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_qHftNDS=json({});
    return_qHftNDS=[&]() {
    json return_CEbcHYI=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_qHftNDS;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_Yypxmfs=json({});
    return_Yypxmfs=[&]() {
    json return_jtnwYjA=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_Yypxmfs;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_caAdBeq=json({});
    return_caAdBeq=[&]() {
    json return_sYsZRld=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_caAdBeq;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_hVCIlfT=json({});
    return_hVCIlfT=[&]() {
    json return_UUdRwaB=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_hVCIlfT;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_WqotuQa=json({});
    return_WqotuQa=[&]() {
    json return_nSpoDMi=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_WqotuQa;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_iqaHmpN=json({});
    return_iqaHmpN=[&]() {
    json return_habhUNO=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_iqaHmpN;}();
return result;}

    VkPhysicalDeviceFloatControlsProperties deserialize_VkPhysicalDeviceFloatControlsProperties(json name){
        auto result=VkPhysicalDeviceFloatControlsProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFloatControlsPropertiesKHR(VkPhysicalDeviceFloatControlsPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YHrixES=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hdwmGqw=json({});
    
        if (name.pNext==NULL){
            return_hdwmGqw["null"]=true;
            return return_hdwmGqw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_JvvWcNP=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_jenraeL=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_OtlmnCw=json({});
    return_OtlmnCw=[&]() {
    json return_FEAhbLL=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_OtlmnCw;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_dcPhSan=json({});
    return_dcPhSan=[&]() {
    json return_wALRCOI=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_dcPhSan;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_tKaHzar=json({});
    return_tKaHzar=[&]() {
    json return_nyzUXtl=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_tKaHzar;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_PoItygx=json({});
    return_PoItygx=[&]() {
    json return_SJqcOCM=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_PoItygx;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_QEWimCV=json({});
    return_QEWimCV=[&]() {
    json return_aFtrtoU=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_QEWimCV;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_VVHNYmx=json({});
    return_VVHNYmx=[&]() {
    json return_VkvXqta=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_VVHNYmx;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_XINTzSv=json({});
    return_XINTzSv=[&]() {
    json return_sgJzhrV=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_XINTzSv;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_jWZVswN=json({});
    return_jWZVswN=[&]() {
    json return_OXOLZOy=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_jWZVswN;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_vQCRKXN=json({});
    return_vQCRKXN=[&]() {
    json return_VgLtYKq=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_vQCRKXN;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_qoZkchs=json({});
    return_qoZkchs=[&]() {
    json return_wxintTr=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_qoZkchs;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_kBHOKFm=json({});
    return_kBHOKFm=[&]() {
    json return_zAFZrdb=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_kBHOKFm;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_sLCAKmo=json({});
    return_sLCAKmo=[&]() {
    json return_WXaZrxI=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_sLCAKmo;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_HlFevws=json({});
    return_HlFevws=[&]() {
    json return_PbITJca=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_HlFevws;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_PBVBYtG=json({});
    return_PBVBYtG=[&]() {
    json return_ajvdDVp=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_PBVBYtG;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_PbhcUFH=json({});
    return_PbhcUFH=[&]() {
    json return_ItiKlGQ=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_PbhcUFH;}();
return result;}

    VkPhysicalDeviceFloatControlsPropertiesKHR deserialize_VkPhysicalDeviceFloatControlsPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFloatControlsPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeatures(VkPhysicalDeviceHostQueryResetFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MBYIYXj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EGtnrSL=json({});
    
        if (name.pNext==NULL){
            return_EGtnrSL["null"]=true;
            return return_EGtnrSL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_UCbCKZj=json({});
    return_UCbCKZj=[&]() {
    json return_bbcTIXT=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_UCbCKZj;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeatures deserialize_VkPhysicalDeviceHostQueryResetFeatures(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(VkPhysicalDeviceHostQueryResetFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sGSGojo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QQDoMVB=json({});
    
        if (name.pNext==NULL){
            return_QQDoMVB["null"]=true;
            return return_QQDoMVB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostQueryReset"]=[&]() {
    json return_iNWcdmJ=json({});
    return_iNWcdmJ=[&]() {
    json return_JnxcudD=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_iNWcdmJ;}();
return result;}

    VkPhysicalDeviceHostQueryResetFeaturesEXT deserialize_VkPhysicalDeviceHostQueryResetFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostQueryResetFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
return result;}

    json serialize_VkShaderResourceUsageAMD(VkShaderResourceUsageAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["numUsedVgprs"]=[&]() {
    json return_BPViKhD=json({});
    return serialize_uint32_t(name.numUsedVgprs);}();
result["members"]["numUsedSgprs"]=[&]() {
    json return_soiSooe=json({});
    return serialize_uint32_t(name.numUsedSgprs);}();
result["members"]["ldsSizePerLocalWorkGroup"]=[&]() {
    json return_GIEGdzz=json({});
    return serialize_uint32_t(name.ldsSizePerLocalWorkGroup);}();
result["members"]["ldsUsageSizeInBytes"]=[&]() {
    json return_maYdTGM=json({});
    return serialize_size_t(name.ldsUsageSizeInBytes);}();
result["members"]["scratchMemUsageInBytes"]=[&]() {
    json return_AIQFpya=json({});
    return serialize_size_t(name.scratchMemUsageInBytes);}();
return result;}

    VkShaderResourceUsageAMD deserialize_VkShaderResourceUsageAMD(json name){
        auto result=VkShaderResourceUsageAMD();
    
[&]() {
result.numUsedVgprs=deserialize_uint32_t(name["members"]["numUsedVgprs"]);}();
[&]() {
result.numUsedSgprs=deserialize_uint32_t(name["members"]["numUsedSgprs"]);}();
[&]() {
result.ldsSizePerLocalWorkGroup=deserialize_uint32_t(name["members"]["ldsSizePerLocalWorkGroup"]);}();
[&]() {
result.ldsUsageSizeInBytes=deserialize_size_t(name["members"]["ldsUsageSizeInBytes"]);}();
[&]() {
result.scratchMemUsageInBytes=deserialize_size_t(name["members"]["scratchMemUsageInBytes"]);}();
return result;}

    json serialize_VkShaderStatisticsInfoAMD(VkShaderStatisticsInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shaderStageMask"]=[&]() {
    json return_OEYetZH=json({});
    return serialize_VkShaderStageFlags(name.shaderStageMask);}();
result["members"]["resourceUsage"]=[&]() {
    json return_XqEOvOB=json({});
    return serialize_VkShaderResourceUsageAMD(name.resourceUsage);}();
result["members"]["numPhysicalVgprs"]=[&]() {
    json return_YHmoLwY=json({});
    return serialize_uint32_t(name.numPhysicalVgprs);}();
result["members"]["numPhysicalSgprs"]=[&]() {
    json return_nsVlqsh=json({});
    return serialize_uint32_t(name.numPhysicalSgprs);}();
result["members"]["numAvailableVgprs"]=[&]() {
    json return_dwQiAFP=json({});
    return serialize_uint32_t(name.numAvailableVgprs);}();
result["members"]["numAvailableSgprs"]=[&]() {
    json return_raymhNs=json({});
    return serialize_uint32_t(name.numAvailableSgprs);}();
result["members"]["computeWorkGroupSize"]=[&]() {
    json return_MDJRedR=json({});
    
        return_MDJRedR["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_cGTiBMA=json({});
    return serialize_uint32_t(name.computeWorkGroupSize[i]);}();
            return_MDJRedR["members"][std::to_string(i)].push_back(temp);
        }
        return return_MDJRedR;
        }();
return result;}

    VkShaderStatisticsInfoAMD deserialize_VkShaderStatisticsInfoAMD(json name){
        auto result=VkShaderStatisticsInfoAMD();
    
[&]() {
result.shaderStageMask=deserialize_VkShaderStageFlags(name["members"]["shaderStageMask"]);}();
[&]() {
result.resourceUsage=deserialize_VkShaderResourceUsageAMD(name["members"]["resourceUsage"]);}();
[&]() {
result.numPhysicalVgprs=deserialize_uint32_t(name["members"]["numPhysicalVgprs"]);}();
[&]() {
result.numPhysicalSgprs=deserialize_uint32_t(name["members"]["numPhysicalSgprs"]);}();
[&]() {
result.numAvailableVgprs=deserialize_uint32_t(name["members"]["numAvailableVgprs"]);}();
[&]() {
result.numAvailableSgprs=deserialize_uint32_t(name["members"]["numAvailableSgprs"]);}();
[&]() {

        for (int PMkPAkE=0; PMkPAkE < 3; PMkPAkE++){
            [&]() {
result.computeWorkGroupSize[PMkPAkE]=deserialize_uint32_t(name["members"]["computeWorkGroupSize"]["members"][PMkPAkE]);}();;
        }
        }();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(VkDeviceQueueGlobalPriorityCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qsVUtYt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iLGQlUF=json({});
    
        if (name.pNext==NULL){
            return_iLGQlUF["null"]=true;
            return return_iLGQlUF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_VlaVwBe=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoKHR deserialize_VkDeviceQueueGlobalPriorityCreateInfoKHR(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JhwLYiU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JhwLYiU=NULL;
        }
    temp_JhwLYiU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JhwLYiU;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(VkDeviceQueueGlobalPriorityCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LTCcDHa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RSstwJY=json({});
    
        if (name.pNext==NULL){
            return_RSstwJY["null"]=true;
            return return_RSstwJY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriority"]=[&]() {
    json return_TgYqEhf=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.globalPriority);}();
return result;}

    VkDeviceQueueGlobalPriorityCreateInfoEXT deserialize_VkDeviceQueueGlobalPriorityCreateInfoEXT(json name){
        auto result=VkDeviceQueueGlobalPriorityCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vVxXfDT;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vVxXfDT=NULL;
        }
    temp_vVxXfDT=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vVxXfDT;}();
[&]() {
result.globalPriority=deserialize_VkQueueGlobalPriorityKHR(name["members"]["globalPriority"]);}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pNQdiky=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_huKBKMy=json({});
    
        if (name.pNext==NULL){
            return_huKBKMy["null"]=true;
            return return_huKBKMy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_DlRAXxR=json({});
    return_DlRAXxR=[&]() {
    json return_xmIbbzU=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_DlRAXxR;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MWlRyRr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tBxqFED=json({});
    
        if (name.pNext==NULL){
            return_tBxqFED["null"]=true;
            return return_tBxqFED;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["globalPriorityQuery"]=[&]() {
    json return_AnoBjcs=json({});
    return_AnoBjcs=[&]() {
    json return_XfliIFF=json({});
    return serialize_uint32_t(name.globalPriorityQuery);}();return return_AnoBjcs;}();
return result;}

    VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT deserialize_VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.globalPriorityQuery=deserialize_uint32_t(name["members"]["globalPriorityQuery"]);}();}();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesKHR(VkQueueFamilyGlobalPriorityPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_npuuHMb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xWUKUPS=json({});
    
        if (name.pNext==NULL){
            return_xWUKUPS["null"]=true;
            return return_xWUKUPS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_pdeHgHc=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_VyHoBmt=json({});
    
        return_VyHoBmt["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_EdJcvdM=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_VyHoBmt["members"][std::to_string(i)].push_back(temp);
        }
        return return_VyHoBmt;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesKHR deserialize_VkQueueFamilyGlobalPriorityPropertiesKHR(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int pLlLgTn=0; pLlLgTn < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; pLlLgTn++){
            [&]() {
result.priorities[pLlLgTn]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][pLlLgTn]);}();;
        }
        }();
return result;}

    json serialize_VkQueueFamilyGlobalPriorityPropertiesEXT(VkQueueFamilyGlobalPriorityPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oVXgQLF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_crmqdTs=json({});
    
        if (name.pNext==NULL){
            return_crmqdTs["null"]=true;
            return return_crmqdTs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priorityCount"]=[&]() {
    json return_nOSXWpG=json({});
    return serialize_uint32_t(name.priorityCount);}();
result["members"]["priorities"]=[&]() {
    json return_ljodQJo=json({});
    
        return_ljodQJo["members"]={};
        for(int i=0; i < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; i++){
            json temp;
            temp=[&]() {
    json return_NoAyygG=json({});
    return serialize_VkQueueGlobalPriorityKHR(name.priorities[i]);}();
            return_ljodQJo["members"][std::to_string(i)].push_back(temp);
        }
        return return_ljodQJo;
        }();
return result;}

    VkQueueFamilyGlobalPriorityPropertiesEXT deserialize_VkQueueFamilyGlobalPriorityPropertiesEXT(json name){
        auto result=VkQueueFamilyGlobalPriorityPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.priorityCount=deserialize_uint32_t(name["members"]["priorityCount"]);}();
[&]() {

        for (int bbgcmtv=0; bbgcmtv < VK_MAX_GLOBAL_PRIORITY_SIZE_KHR; bbgcmtv++){
            [&]() {
result.priorities[bbgcmtv]=deserialize_VkQueueGlobalPriorityKHR(name["members"]["priorities"]["members"][bbgcmtv]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsObjectNameInfoEXT(VkDebugUtilsObjectNameInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xqFcWFP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YPweGrd=json({});
    
        if (name.pNext==NULL){
            return_YPweGrd["null"]=true;
            return return_YPweGrd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_iBLCIVg=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_XxByeSC=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["pObjectName"]=[&]() {
    json return_UkMQJbx=json({});
    
        if (name.pObjectName==NULL){
            return_UkMQJbx["null"]=true;
            return return_UkMQJbx;
        }
        return serialize_char_p(name.pObjectName);
}();
return result;}

    VkDebugUtilsObjectNameInfoEXT deserialize_VkDebugUtilsObjectNameInfoEXT(json name){
        auto result=VkDebugUtilsObjectNameInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RQBcKYG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RQBcKYG=NULL;
        }
    temp_RQBcKYG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RQBcKYG;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
char* temp_esTobbf;[&]() {

        if (name["members"]["pObjectName"].contains("null")){
        temp_esTobbf=NULL;
        }
    temp_esTobbf=deserialize_char_p(name["members"]["pObjectName"]);
}();result.pObjectName=temp_esTobbf;}();
return result;}

    json serialize_VkDebugUtilsObjectTagInfoEXT(VkDebugUtilsObjectTagInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HjCONVk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RTCCNKU=json({});
    
        if (name.pNext==NULL){
            return_RTCCNKU["null"]=true;
            return return_RTCCNKU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["objectType"]=[&]() {
    json return_eWNSfQw=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_GNcMWYG=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["tagName"]=[&]() {
    json return_UdoxCqL=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_VkIZUOO=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_uRSBaAW=json({});
    
        if (name.pTag==NULL){
            return_uRSBaAW["null"]=true;
            return return_uRSBaAW;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkDebugUtilsObjectTagInfoEXT deserialize_VkDebugUtilsObjectTagInfoEXT(json name){
        auto result=VkDebugUtilsObjectTagInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_esqEbuW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_esqEbuW=NULL;
        }
    temp_esqEbuW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_esqEbuW;}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_hMWZGhD;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_hMWZGhD=NULL;
        }
    temp_hMWZGhD=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_hMWZGhD;}();
return result;}

    json serialize_VkDebugUtilsLabelEXT(VkDebugUtilsLabelEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rFrrchz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KYSmaXZ=json({});
    
        if (name.pNext==NULL){
            return_KYSmaXZ["null"]=true;
            return return_KYSmaXZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pLabelName"]=[&]() {
    json return_YAoRUMg=json({});
    
        if (name.pLabelName==NULL){
            return_YAoRUMg["null"]=true;
            return return_YAoRUMg;
        }
        return serialize_char_p(name.pLabelName);
}();
result["members"]["color"]=[&]() {
    json return_EFmhIWY=json({});
    
        return_EFmhIWY["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_ijAMEBR=json({});
    return serialize_float(name.color[i]);}();
            return_EFmhIWY["members"][std::to_string(i)].push_back(temp);
        }
        return return_EFmhIWY;
        }();
return result;}

    VkDebugUtilsLabelEXT deserialize_VkDebugUtilsLabelEXT(json name){
        auto result=VkDebugUtilsLabelEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ykwKdAK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ykwKdAK=NULL;
        }
    temp_ykwKdAK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ykwKdAK;}();
[&]() {
char* temp_gNVTonE;[&]() {

        if (name["members"]["pLabelName"].contains("null")){
        temp_gNVTonE=NULL;
        }
    temp_gNVTonE=deserialize_char_p(name["members"]["pLabelName"]);
}();result.pLabelName=temp_gNVTonE;}();
[&]() {

        for (int nEqcHRc=0; nEqcHRc < 4; nEqcHRc++){
            [&]() {
result.color[nEqcHRc]=deserialize_float(name["members"]["color"]["members"][nEqcHRc]);}();;
        }
        }();
return result;}

    json serialize_VkDebugUtilsMessengerCreateInfoEXT(VkDebugUtilsMessengerCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZEvGbmG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lgyXNsY=json({});
    
        if (name.pNext==NULL){
            return_lgyXNsY["null"]=true;
            return return_lgyXNsY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_lkvnTlm=json({});
    return serialize_VkDebugUtilsMessengerCreateFlagsEXT(name.flags);}();
result["members"]["messageSeverity"]=[&]() {
    json return_VFSVrtD=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagsEXT(name.messageSeverity);}();
result["members"]["messageType"]=[&]() {
    json return_sKfPIDM=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(name.messageType);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_pDsfEll=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDebugUtilsMessengerCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_sslnGOS=json({});
    
        if (name.pUserData==NULL){
            return_sslnGOS["null"]=true;
            return return_sslnGOS;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDebugUtilsMessengerCreateFlagsEXT_id;
uintptr_t VkDebugUtilsMessageSeverityFlagsEXT_id;
uintptr_t VkDebugUtilsMessageTypeFlagsEXT_id;
uintptr_t PFN_vkDebugUtilsMessengerCallbackEXT_id;
void* pUserData;
} VkDebugUtilsMessengerCreateInfoEXT_struct;

    VkDebugUtilsMessengerCreateInfoEXT deserialize_VkDebugUtilsMessengerCreateInfoEXT(json name){
        auto result=VkDebugUtilsMessengerCreateInfoEXT();
    
auto _struct = new VkDebugUtilsMessengerCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_upyvCGv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_upyvCGv=NULL;
        }
    temp_upyvCGv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_upyvCGv;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagsEXT(name["members"]["messageSeverity"]);}();
[&]() {
result.messageType=deserialize_VkDebugUtilsMessageTypeFlagsEXT(name["members"]["messageType"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDebugUtilsMessengerCallbackDataEXT(VkDebugUtilsMessengerCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wTZdAeA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HsZidSM=json({});
    
        if (name.pNext==NULL){
            return_HsZidSM["null"]=true;
            return return_HsZidSM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_gVxffku=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name.flags);}();
result["members"]["pMessageIdName"]=[&]() {
    json return_TpYIgFx=json({});
    
        if (name.pMessageIdName==NULL){
            return_TpYIgFx["null"]=true;
            return return_TpYIgFx;
        }
        return serialize_char_p(name.pMessageIdName);
}();
result["members"]["messageIdNumber"]=[&]() {
    json return_jRhHNrq=json({});
    return serialize_int32_t(name.messageIdNumber);}();
result["members"]["pMessage"]=[&]() {
    json return_jNCbpFL=json({});
    
        if (name.pMessage==NULL){
            return_jNCbpFL["null"]=true;
            return return_jNCbpFL;
        }
        return serialize_char_p(name.pMessage);
}();
result["members"]["queueLabelCount"]=[&]() {
    json return_sQSJPQI=json({});
    return serialize_uint32_t(name.queueLabelCount);}();
result["members"]["pQueueLabels"]=[&]() {
    json return_BADuKqO=json({});
    
        if (name.pQueueLabels==NULL){
            return_BADuKqO["null"]=true;
            return return_BADuKqO;
        }
        
        return_BADuKqO["members"]={};
        for(int i=0; i < name.queueLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_SVNEzpW=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pQueueLabels[i]);}();
            return_BADuKqO["members"][std::to_string(i)].push_back(temp);
        }
        return return_BADuKqO;
        }();
result["members"]["cmdBufLabelCount"]=[&]() {
    json return_mBsUWQw=json({});
    return serialize_uint32_t(name.cmdBufLabelCount);}();
result["members"]["pCmdBufLabels"]=[&]() {
    json return_iYTwCkD=json({});
    
        if (name.pCmdBufLabels==NULL){
            return_iYTwCkD["null"]=true;
            return return_iYTwCkD;
        }
        
        return_iYTwCkD["members"]={};
        for(int i=0; i < name.cmdBufLabelCount; i++){
            json temp;
            temp=[&]() {
    json return_UwbWuKP=json({});
    return serialize_VkDebugUtilsLabelEXT(name.pCmdBufLabels[i]);}();
            return_iYTwCkD["members"][std::to_string(i)].push_back(temp);
        }
        return return_iYTwCkD;
        }();
result["members"]["objectCount"]=[&]() {
    json return_nfVJYlR=json({});
    return serialize_uint32_t(name.objectCount);}();
result["members"]["pObjects"]=[&]() {
    json return_maESbJW=json({});
    
        if (name.pObjects==NULL){
            return_maESbJW["null"]=true;
            return return_maESbJW;
        }
        
        return_maESbJW["members"]={};
        for(int i=0; i < name.objectCount; i++){
            json temp;
            temp=[&]() {
    json return_aRfvuSS=json({});
    return serialize_VkDebugUtilsObjectNameInfoEXT(name.pObjects[i]);}();
            return_maESbJW["members"][std::to_string(i)].push_back(temp);
        }
        return return_maESbJW;
        }();
return result;}

    VkDebugUtilsMessengerCallbackDataEXT deserialize_VkDebugUtilsMessengerCallbackDataEXT(json name){
        auto result=VkDebugUtilsMessengerCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fLwFElw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fLwFElw=NULL;
        }
    temp_fLwFElw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fLwFElw;}();
[&]() {
result.flags=deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(name["members"]["flags"]);}();
[&]() {
char* temp_kzyRiPQ;[&]() {

        if (name["members"]["pMessageIdName"].contains("null")){
        temp_kzyRiPQ=NULL;
        }
    temp_kzyRiPQ=deserialize_char_p(name["members"]["pMessageIdName"]);
}();result.pMessageIdName=temp_kzyRiPQ;}();
[&]() {
result.messageIdNumber=deserialize_int32_t(name["members"]["messageIdNumber"]);}();
[&]() {
char* temp_agyMqsV;[&]() {

        if (name["members"]["pMessage"].contains("null")){
        temp_agyMqsV=NULL;
        }
    temp_agyMqsV=deserialize_char_p(name["members"]["pMessage"]);
}();result.pMessage=temp_agyMqsV;}();
[&]() {
result.queueLabelCount=deserialize_uint32_t(name["members"]["queueLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_dZdUTtP;[&]() {

        if (name["members"]["pQueueLabels"].contains("null")){
        temp_dZdUTtP=NULL;
        }
    temp_dZdUTtP=(VkDebugUtilsLabelEXT*)malloc(result.queueLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int JyvwJqr=0; JyvwJqr < result.queueLabelCount; JyvwJqr++){
            [&]() {
temp_dZdUTtP[JyvwJqr]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pQueueLabels"]["members"][JyvwJqr]);}();;
        }
        }();result.pQueueLabels=temp_dZdUTtP;}();
[&]() {
result.cmdBufLabelCount=deserialize_uint32_t(name["members"]["cmdBufLabelCount"]);}();
[&]() {
VkDebugUtilsLabelEXT* temp_eZSxSrE;[&]() {

        if (name["members"]["pCmdBufLabels"].contains("null")){
        temp_eZSxSrE=NULL;
        }
    temp_eZSxSrE=(VkDebugUtilsLabelEXT*)malloc(result.cmdBufLabelCount*sizeof(VkDebugUtilsLabelEXT));
        for (int vSNNEtC=0; vSNNEtC < result.cmdBufLabelCount; vSNNEtC++){
            [&]() {
temp_eZSxSrE[vSNNEtC]=deserialize_VkDebugUtilsLabelEXT(name["members"]["pCmdBufLabels"]["members"][vSNNEtC]);}();;
        }
        }();result.pCmdBufLabels=temp_eZSxSrE;}();
[&]() {
result.objectCount=deserialize_uint32_t(name["members"]["objectCount"]);}();
[&]() {
VkDebugUtilsObjectNameInfoEXT* temp_QGbvzIn;[&]() {

        if (name["members"]["pObjects"].contains("null")){
        temp_QGbvzIn=NULL;
        }
    temp_QGbvzIn=(VkDebugUtilsObjectNameInfoEXT*)malloc(result.objectCount*sizeof(VkDebugUtilsObjectNameInfoEXT));
        for (int vvpjtoM=0; vvpjtoM < result.objectCount; vvpjtoM++){
            [&]() {
temp_QGbvzIn[vvpjtoM]=deserialize_VkDebugUtilsObjectNameInfoEXT(name["members"]["pObjects"]["members"][vvpjtoM]);}();;
        }
        }();result.pObjects=temp_QGbvzIn;}();
return result;}

    json serialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(VkPhysicalDeviceDeviceMemoryReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rjDIVnb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IQsTsxh=json({});
    
        if (name.pNext==NULL){
            return_IQsTsxh["null"]=true;
            return return_IQsTsxh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceMemoryReport"]=[&]() {
    json return_pHKQSdl=json({});
    return_pHKQSdl=[&]() {
    json return_EZluxFx=json({});
    return serialize_uint32_t(name.deviceMemoryReport);}();return return_pHKQSdl;}();
return result;}

    VkPhysicalDeviceDeviceMemoryReportFeaturesEXT deserialize_VkPhysicalDeviceDeviceMemoryReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDeviceMemoryReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceMemoryReport=deserialize_uint32_t(name["members"]["deviceMemoryReport"]);}();}();
return result;}

    json serialize_VkDeviceDeviceMemoryReportCreateInfoEXT(VkDeviceDeviceMemoryReportCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vLwhHIY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GNOUvZc=json({});
    
        if (name.pNext==NULL){
            return_GNOUvZc["null"]=true;
            return return_GNOUvZc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GNoWdbs=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["pfnUserCallback"]=[&]() {
    json return_lEFbBtF=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkDeviceMemoryReportCallbackEXT(name.pfnUserCallback);
        #endif
        }();
result["members"]["pUserData"]=[&]() {
    json return_zdGZGhX=json({});
    
        if (name.pUserData==NULL){
            return_zdGZGhX["null"]=true;
            return return_zdGZGhX;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}
typedef struct {
uintptr_t VkStructureType_id;
uintptr_t void_id;
uintptr_t VkDeviceMemoryReportFlagsEXT_id;
uintptr_t PFN_vkDeviceMemoryReportCallbackEXT_id;
void* pUserData;
} VkDeviceDeviceMemoryReportCreateInfoEXT_struct;

    VkDeviceDeviceMemoryReportCreateInfoEXT deserialize_VkDeviceDeviceMemoryReportCreateInfoEXT(json name){
        auto result=VkDeviceDeviceMemoryReportCreateInfoEXT();
    
auto _struct = new VkDeviceDeviceMemoryReportCreateInfoEXT_struct;
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aqQYkbI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aqQYkbI=NULL;
        }
    temp_aqQYkbI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aqQYkbI;}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnUserCallback=deserialize_PFN_vkDeviceMemoryReportCallbackEXT(name["members"]["pfnUserCallback"]);
        #endif
        }();
_struct->PFN_vkDeviceMemoryReportCallbackEXT_id=name["members"]["pfnUserCallback"]["id"];
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
_struct->pUserData=result.pUserData;
        result.pUserData=(void*)_struct;
        
return result;}

    json serialize_VkDeviceMemoryReportCallbackDataEXT(VkDeviceMemoryReportCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mntCCHk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mlWesHJ=json({});
    
        if (name.pNext==NULL){
            return_mlWesHJ["null"]=true;
            return return_mlWesHJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_WILSQxv=json({});
    return serialize_VkDeviceMemoryReportFlagsEXT(name.flags);}();
result["members"]["type"]=[&]() {
    json return_sLwePXg=json({});
    return serialize_VkDeviceMemoryReportEventTypeEXT(name.type);}();
result["members"]["memoryObjectId"]=[&]() {
    json return_tmkIhVe=json({});
    return serialize_uint64_t(name.memoryObjectId);}();
result["members"]["size"]=[&]() {
    json return_YtUXGqU=json({});
    return_YtUXGqU=[&]() {
    json return_IVEfnbn=json({});
    return serialize_uint64_t(name.size);}();return return_YtUXGqU;}();
result["members"]["objectType"]=[&]() {
    json return_hAuUdok=json({});
    return serialize_VkObjectType(name.objectType);}();
result["members"]["objectHandle"]=[&]() {
    json return_DTOXTJo=json({});
    return serialize_uint64_t(name.objectHandle);}();
result["members"]["heapIndex"]=[&]() {
    json return_HSGyEHw=json({});
    return serialize_uint32_t(name.heapIndex);}();
return result;}

    VkDeviceMemoryReportCallbackDataEXT deserialize_VkDeviceMemoryReportCallbackDataEXT(json name){
        auto result=VkDeviceMemoryReportCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceMemoryReportFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.type=deserialize_VkDeviceMemoryReportEventTypeEXT(name["members"]["type"]);}();
[&]() {
result.memoryObjectId=deserialize_uint64_t(name["members"]["memoryObjectId"]);}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.objectType=deserialize_VkObjectType(name["members"]["objectType"]);}();
[&]() {
result.objectHandle=deserialize_uint64_t(name["members"]["objectHandle"]);}();
[&]() {
result.heapIndex=deserialize_uint32_t(name["members"]["heapIndex"]);}();
return result;}

    json serialize_VkImportMemoryHostPointerInfoEXT(VkImportMemoryHostPointerInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TumkmRQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XYSgmJL=json({});
    
        if (name.pNext==NULL){
            return_XYSgmJL["null"]=true;
            return return_XYSgmJL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["handleType"]=[&]() {
    json return_nDlgHoy=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
result["members"]["pHostPointer"]=[&]() {
    json return_FiRMbTC=json({});
    
        if (name.pHostPointer==NULL){
            return_FiRMbTC["null"]=true;
            return return_FiRMbTC;
        }
        return serialize_void_p(name.pHostPointer);
}();
return result;}

    VkImportMemoryHostPointerInfoEXT deserialize_VkImportMemoryHostPointerInfoEXT(json name){
        auto result=VkImportMemoryHostPointerInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PulGhJb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PulGhJb=NULL;
        }
    temp_PulGhJb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PulGhJb;}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
return result;}

    json serialize_VkMemoryHostPointerPropertiesEXT(VkMemoryHostPointerPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wnNeCpT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AiRazdw=json({});
    
        if (name.pNext==NULL){
            return_AiRazdw["null"]=true;
            return return_AiRazdw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryTypeBits"]=[&]() {
    json return_MLUQORA=json({});
    return serialize_uint32_t(name.memoryTypeBits);}();
return result;}

    VkMemoryHostPointerPropertiesEXT deserialize_VkMemoryHostPointerPropertiesEXT(json name){
        auto result=VkMemoryHostPointerPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryTypeBits=deserialize_uint32_t(name["members"]["memoryTypeBits"]);}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(VkPhysicalDeviceExternalMemoryHostPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RyFAybN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WLYmcBR=json({});
    
        if (name.pNext==NULL){
            return_WLYmcBR["null"]=true;
            return return_WLYmcBR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minImportedHostPointerAlignment"]=[&]() {
    json return_RBETgii=json({});
    return_RBETgii=[&]() {
    json return_cXSWhWR=json({});
    return serialize_uint64_t(name.minImportedHostPointerAlignment);}();return return_RBETgii;}();
return result;}

    VkPhysicalDeviceExternalMemoryHostPropertiesEXT deserialize_VkPhysicalDeviceExternalMemoryHostPropertiesEXT(json name){
        auto result=VkPhysicalDeviceExternalMemoryHostPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minImportedHostPointerAlignment=deserialize_uint64_t(name["members"]["minImportedHostPointerAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(VkPhysicalDeviceConservativeRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RwVisvs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mZCCksC=json({});
    
        if (name.pNext==NULL){
            return_mZCCksC["null"]=true;
            return return_mZCCksC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveOverestimationSize"]=[&]() {
    json return_FiQVCVu=json({});
    return serialize_float(name.primitiveOverestimationSize);}();
result["members"]["maxExtraPrimitiveOverestimationSize"]=[&]() {
    json return_ejmWODM=json({});
    return serialize_float(name.maxExtraPrimitiveOverestimationSize);}();
result["members"]["extraPrimitiveOverestimationSizeGranularity"]=[&]() {
    json return_PPKfUAf=json({});
    return serialize_float(name.extraPrimitiveOverestimationSizeGranularity);}();
result["members"]["primitiveUnderestimation"]=[&]() {
    json return_xsLHZWW=json({});
    return_xsLHZWW=[&]() {
    json return_JnvwpGX=json({});
    return serialize_uint32_t(name.primitiveUnderestimation);}();return return_xsLHZWW;}();
result["members"]["conservativePointAndLineRasterization"]=[&]() {
    json return_fnrBYjN=json({});
    return_fnrBYjN=[&]() {
    json return_KJOPvSN=json({});
    return serialize_uint32_t(name.conservativePointAndLineRasterization);}();return return_fnrBYjN;}();
result["members"]["degenerateTrianglesRasterized"]=[&]() {
    json return_slxybCb=json({});
    return_slxybCb=[&]() {
    json return_jfsfsSL=json({});
    return serialize_uint32_t(name.degenerateTrianglesRasterized);}();return return_slxybCb;}();
result["members"]["degenerateLinesRasterized"]=[&]() {
    json return_MBEpiOq=json({});
    return_MBEpiOq=[&]() {
    json return_EdxrzpK=json({});
    return serialize_uint32_t(name.degenerateLinesRasterized);}();return return_MBEpiOq;}();
result["members"]["fullyCoveredFragmentShaderInputVariable"]=[&]() {
    json return_Dzjiyzb=json({});
    return_Dzjiyzb=[&]() {
    json return_OejjJkR=json({});
    return serialize_uint32_t(name.fullyCoveredFragmentShaderInputVariable);}();return return_Dzjiyzb;}();
result["members"]["conservativeRasterizationPostDepthCoverage"]=[&]() {
    json return_ZVsazxT=json({});
    return_ZVsazxT=[&]() {
    json return_gfsgEBL=json({});
    return serialize_uint32_t(name.conservativeRasterizationPostDepthCoverage);}();return return_ZVsazxT;}();
return result;}

    VkPhysicalDeviceConservativeRasterizationPropertiesEXT deserialize_VkPhysicalDeviceConservativeRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceConservativeRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.primitiveOverestimationSize=deserialize_float(name["members"]["primitiveOverestimationSize"]);}();
[&]() {
result.maxExtraPrimitiveOverestimationSize=deserialize_float(name["members"]["maxExtraPrimitiveOverestimationSize"]);}();
[&]() {
result.extraPrimitiveOverestimationSizeGranularity=deserialize_float(name["members"]["extraPrimitiveOverestimationSizeGranularity"]);}();
[&]() {
[&]() {
result.primitiveUnderestimation=deserialize_uint32_t(name["members"]["primitiveUnderestimation"]);}();}();
[&]() {
[&]() {
result.conservativePointAndLineRasterization=deserialize_uint32_t(name["members"]["conservativePointAndLineRasterization"]);}();}();
[&]() {
[&]() {
result.degenerateTrianglesRasterized=deserialize_uint32_t(name["members"]["degenerateTrianglesRasterized"]);}();}();
[&]() {
[&]() {
result.degenerateLinesRasterized=deserialize_uint32_t(name["members"]["degenerateLinesRasterized"]);}();}();
[&]() {
[&]() {
result.fullyCoveredFragmentShaderInputVariable=deserialize_uint32_t(name["members"]["fullyCoveredFragmentShaderInputVariable"]);}();}();
[&]() {
[&]() {
result.conservativeRasterizationPostDepthCoverage=deserialize_uint32_t(name["members"]["conservativeRasterizationPostDepthCoverage"]);}();}();
return result;}

    json serialize_VkCalibratedTimestampInfoEXT(VkCalibratedTimestampInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DsDYyPE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zeEZKNq=json({});
    
        if (name.pNext==NULL){
            return_zeEZKNq["null"]=true;
            return return_zeEZKNq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timeDomain"]=[&]() {
    json return_LjnlHtO=json({});
    return serialize_VkTimeDomainEXT(name.timeDomain);}();
return result;}

    VkCalibratedTimestampInfoEXT deserialize_VkCalibratedTimestampInfoEXT(json name){
        auto result=VkCalibratedTimestampInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BqBpzBp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BqBpzBp=NULL;
        }
    temp_BqBpzBp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BqBpzBp;}();
[&]() {
result.timeDomain=deserialize_VkTimeDomainEXT(name["members"]["timeDomain"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesAMD(VkPhysicalDeviceShaderCorePropertiesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VtKEGyI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LuwDvfT=json({});
    
        if (name.pNext==NULL){
            return_LuwDvfT["null"]=true;
            return return_LuwDvfT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEngineCount"]=[&]() {
    json return_CfDNfkN=json({});
    return serialize_uint32_t(name.shaderEngineCount);}();
result["members"]["shaderArraysPerEngineCount"]=[&]() {
    json return_OhsoeBU=json({});
    return serialize_uint32_t(name.shaderArraysPerEngineCount);}();
result["members"]["computeUnitsPerShaderArray"]=[&]() {
    json return_nDSFjhP=json({});
    return serialize_uint32_t(name.computeUnitsPerShaderArray);}();
result["members"]["simdPerComputeUnit"]=[&]() {
    json return_jdPIsPb=json({});
    return serialize_uint32_t(name.simdPerComputeUnit);}();
result["members"]["wavefrontsPerSimd"]=[&]() {
    json return_IJEZijE=json({});
    return serialize_uint32_t(name.wavefrontsPerSimd);}();
result["members"]["wavefrontSize"]=[&]() {
    json return_lqIHKhE=json({});
    return serialize_uint32_t(name.wavefrontSize);}();
result["members"]["sgprsPerSimd"]=[&]() {
    json return_AkVuyIC=json({});
    return serialize_uint32_t(name.sgprsPerSimd);}();
result["members"]["minSgprAllocation"]=[&]() {
    json return_xGPAlOH=json({});
    return serialize_uint32_t(name.minSgprAllocation);}();
result["members"]["maxSgprAllocation"]=[&]() {
    json return_fIHtBFd=json({});
    return serialize_uint32_t(name.maxSgprAllocation);}();
result["members"]["sgprAllocationGranularity"]=[&]() {
    json return_BXxMYSf=json({});
    return serialize_uint32_t(name.sgprAllocationGranularity);}();
result["members"]["vgprsPerSimd"]=[&]() {
    json return_tfOCeMN=json({});
    return serialize_uint32_t(name.vgprsPerSimd);}();
result["members"]["minVgprAllocation"]=[&]() {
    json return_zNvqtgC=json({});
    return serialize_uint32_t(name.minVgprAllocation);}();
result["members"]["maxVgprAllocation"]=[&]() {
    json return_TCvHJmC=json({});
    return serialize_uint32_t(name.maxVgprAllocation);}();
result["members"]["vgprAllocationGranularity"]=[&]() {
    json return_DsDatNy=json({});
    return serialize_uint32_t(name.vgprAllocationGranularity);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesAMD deserialize_VkPhysicalDeviceShaderCorePropertiesAMD(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderEngineCount=deserialize_uint32_t(name["members"]["shaderEngineCount"]);}();
[&]() {
result.shaderArraysPerEngineCount=deserialize_uint32_t(name["members"]["shaderArraysPerEngineCount"]);}();
[&]() {
result.computeUnitsPerShaderArray=deserialize_uint32_t(name["members"]["computeUnitsPerShaderArray"]);}();
[&]() {
result.simdPerComputeUnit=deserialize_uint32_t(name["members"]["simdPerComputeUnit"]);}();
[&]() {
result.wavefrontsPerSimd=deserialize_uint32_t(name["members"]["wavefrontsPerSimd"]);}();
[&]() {
result.wavefrontSize=deserialize_uint32_t(name["members"]["wavefrontSize"]);}();
[&]() {
result.sgprsPerSimd=deserialize_uint32_t(name["members"]["sgprsPerSimd"]);}();
[&]() {
result.minSgprAllocation=deserialize_uint32_t(name["members"]["minSgprAllocation"]);}();
[&]() {
result.maxSgprAllocation=deserialize_uint32_t(name["members"]["maxSgprAllocation"]);}();
[&]() {
result.sgprAllocationGranularity=deserialize_uint32_t(name["members"]["sgprAllocationGranularity"]);}();
[&]() {
result.vgprsPerSimd=deserialize_uint32_t(name["members"]["vgprsPerSimd"]);}();
[&]() {
result.minVgprAllocation=deserialize_uint32_t(name["members"]["minVgprAllocation"]);}();
[&]() {
result.maxVgprAllocation=deserialize_uint32_t(name["members"]["maxVgprAllocation"]);}();
[&]() {
result.vgprAllocationGranularity=deserialize_uint32_t(name["members"]["vgprAllocationGranularity"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreProperties2AMD(VkPhysicalDeviceShaderCoreProperties2AMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FwlcPKm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cZZqybu=json({});
    
        if (name.pNext==NULL){
            return_cZZqybu["null"]=true;
            return return_cZZqybu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreFeatures"]=[&]() {
    json return_AVCOEZs=json({});
    return serialize_VkShaderCorePropertiesFlagsAMD(name.shaderCoreFeatures);}();
result["members"]["activeComputeUnitCount"]=[&]() {
    json return_hKBssBr=json({});
    return serialize_uint32_t(name.activeComputeUnitCount);}();
return result;}

    VkPhysicalDeviceShaderCoreProperties2AMD deserialize_VkPhysicalDeviceShaderCoreProperties2AMD(json name){
        auto result=VkPhysicalDeviceShaderCoreProperties2AMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreFeatures=deserialize_VkShaderCorePropertiesFlagsAMD(name["members"]["shaderCoreFeatures"]);}();
[&]() {
result.activeComputeUnitCount=deserialize_uint32_t(name["members"]["activeComputeUnitCount"]);}();
return result;}

    json serialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(VkPipelineRasterizationConservativeStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gZeOfCB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HuRzgsY=json({});
    
        if (name.pNext==NULL){
            return_HuRzgsY["null"]=true;
            return return_HuRzgsY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_jsagArK=json({});
    return serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name.flags);}();
result["members"]["conservativeRasterizationMode"]=[&]() {
    json return_kyxktta=json({});
    return serialize_VkConservativeRasterizationModeEXT(name.conservativeRasterizationMode);}();
result["members"]["extraPrimitiveOverestimationSize"]=[&]() {
    json return_jhymRip=json({});
    return serialize_float(name.extraPrimitiveOverestimationSize);}();
return result;}

    VkPipelineRasterizationConservativeStateCreateInfoEXT deserialize_VkPipelineRasterizationConservativeStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationConservativeStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KJTRoYy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KJTRoYy=NULL;
        }
    temp_KJTRoYy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KJTRoYy;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.conservativeRasterizationMode=deserialize_VkConservativeRasterizationModeEXT(name["members"]["conservativeRasterizationMode"]);}();
[&]() {
result.extraPrimitiveOverestimationSize=deserialize_float(name["members"]["extraPrimitiveOverestimationSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeatures(VkPhysicalDeviceDescriptorIndexingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HjUwgpd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IGBxMQL=json({});
    
        if (name.pNext==NULL){
            return_IGBxMQL["null"]=true;
            return return_IGBxMQL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_MEttBCd=json({});
    return_MEttBCd=[&]() {
    json return_vLskfLm=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_MEttBCd;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_GXoSMxq=json({});
    return_GXoSMxq=[&]() {
    json return_rkXWQEl=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_GXoSMxq;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_KWpHayW=json({});
    return_KWpHayW=[&]() {
    json return_VELUSaC=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_KWpHayW;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_zNhoBNi=json({});
    return_zNhoBNi=[&]() {
    json return_vakyAqM=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_zNhoBNi;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_PbeDVFV=json({});
    return_PbeDVFV=[&]() {
    json return_TAaLucl=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_PbeDVFV;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_jLyLEMY=json({});
    return_jLyLEMY=[&]() {
    json return_EwxMNbd=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_jLyLEMY;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_VTUBufq=json({});
    return_VTUBufq=[&]() {
    json return_uCZaAeA=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_VTUBufq;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_JuVENtL=json({});
    return_JuVENtL=[&]() {
    json return_stFuUbR=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_JuVENtL;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_zHALrEK=json({});
    return_zHALrEK=[&]() {
    json return_CgdTyam=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_zHALrEK;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_IlFlOPR=json({});
    return_IlFlOPR=[&]() {
    json return_cwBTAOS=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_IlFlOPR;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_kMfhaok=json({});
    return_kMfhaok=[&]() {
    json return_ivijVlK=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_kMfhaok;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_uTQqcat=json({});
    return_uTQqcat=[&]() {
    json return_mniYUGq=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_uTQqcat;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_CjbVLcg=json({});
    return_CjbVLcg=[&]() {
    json return_LlLmBtp=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_CjbVLcg;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_xAqXHSv=json({});
    return_xAqXHSv=[&]() {
    json return_sAMxRzz=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_xAqXHSv;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_nNLjBbm=json({});
    return_nNLjBbm=[&]() {
    json return_ezVBEVM=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_nNLjBbm;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_CTgzUCv=json({});
    return_CTgzUCv=[&]() {
    json return_wmkjqfA=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_CTgzUCv;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_kBHSTVU=json({});
    return_kBHSTVU=[&]() {
    json return_nxDIKHO=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_kBHSTVU;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_nfiLiyQ=json({});
    return_nfiLiyQ=[&]() {
    json return_kWKuSCl=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_nfiLiyQ;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_ldzlEgA=json({});
    return_ldzlEgA=[&]() {
    json return_BbMoOMi=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_ldzlEgA;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_gPzbSko=json({});
    return_gPzbSko=[&]() {
    json return_otlBDOo=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_gPzbSko;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeatures deserialize_VkPhysicalDeviceDescriptorIndexingFeatures(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(VkPhysicalDeviceDescriptorIndexingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sxeNUHt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wrbWsbW=json({});
    
        if (name.pNext==NULL){
            return_wrbWsbW["null"]=true;
            return return_wrbWsbW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_GVIFXDW=json({});
    return_GVIFXDW=[&]() {
    json return_pLQmEbG=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_GVIFXDW;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_YGZatlO=json({});
    return_YGZatlO=[&]() {
    json return_WzzBCUP=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_YGZatlO;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_xefbDQr=json({});
    return_xefbDQr=[&]() {
    json return_BuIGlBT=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_xefbDQr;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_PiacGRb=json({});
    return_PiacGRb=[&]() {
    json return_NKLixUC=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_PiacGRb;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_uekBWHS=json({});
    return_uekBWHS=[&]() {
    json return_gJHhNFY=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_uekBWHS;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_zxUAaub=json({});
    return_zxUAaub=[&]() {
    json return_JZOAtlG=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_zxUAaub;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_LfXXPBi=json({});
    return_LfXXPBi=[&]() {
    json return_AgTTcBS=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_LfXXPBi;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_yxwQQhF=json({});
    return_yxwQQhF=[&]() {
    json return_XDpAYSv=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_yxwQQhF;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_opDOegq=json({});
    return_opDOegq=[&]() {
    json return_OBuoOxM=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_opDOegq;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_HSUaPrs=json({});
    return_HSUaPrs=[&]() {
    json return_PIzOAnU=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_HSUaPrs;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_LOVYURt=json({});
    return_LOVYURt=[&]() {
    json return_bqVJAKc=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_LOVYURt;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_tUoNcaO=json({});
    return_tUoNcaO=[&]() {
    json return_iJccCnZ=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_tUoNcaO;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_JeGqjmc=json({});
    return_JeGqjmc=[&]() {
    json return_XZFhayn=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_JeGqjmc;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_EHAZJwN=json({});
    return_EHAZJwN=[&]() {
    json return_jSJwMoN=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_EHAZJwN;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_jyzPoah=json({});
    return_jyzPoah=[&]() {
    json return_pRzJZPe=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_jyzPoah;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_kCzBejd=json({});
    return_kCzBejd=[&]() {
    json return_MiqLTPn=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_kCzBejd;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_nMVAGWv=json({});
    return_nMVAGWv=[&]() {
    json return_zDapMQT=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_nMVAGWv;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_SLrURXM=json({});
    return_SLrURXM=[&]() {
    json return_lzYVpfI=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_SLrURXM;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_qwyGTNC=json({});
    return_qwyGTNC=[&]() {
    json return_KeLXrTq=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_qwyGTNC;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_VPKukbp=json({});
    return_VPKukbp=[&]() {
    json return_dJUnUHI=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_VPKukbp;}();
return result;}

    VkPhysicalDeviceDescriptorIndexingFeaturesEXT deserialize_VkPhysicalDeviceDescriptorIndexingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingProperties(VkPhysicalDeviceDescriptorIndexingProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KglzXwZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IdYkTaH=json({});
    
        if (name.pNext==NULL){
            return_IdYkTaH["null"]=true;
            return return_IdYkTaH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_zCJIXxo=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_HQeGVvW=json({});
    return_HQeGVvW=[&]() {
    json return_hjSSDaZ=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_HQeGVvW;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_iIAikdO=json({});
    return_iIAikdO=[&]() {
    json return_PBKhFzv=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_iIAikdO;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_ZrIIMtp=json({});
    return_ZrIIMtp=[&]() {
    json return_WDXpwfk=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_ZrIIMtp;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_fEIiOLd=json({});
    return_fEIiOLd=[&]() {
    json return_cjjjlAu=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_fEIiOLd;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_hfCOvhK=json({});
    return_hfCOvhK=[&]() {
    json return_RZyMDUb=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_hfCOvhK;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_LoLUsaS=json({});
    return_LoLUsaS=[&]() {
    json return_oYYwmrn=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_LoLUsaS;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_rswmLlZ=json({});
    return_rswmLlZ=[&]() {
    json return_kPjtGmG=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_rswmLlZ;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_YzhDVUJ=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_DISfQMG=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_fnVbUyu=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_wpMSglZ=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_yPSMpsD=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_xQrdlKL=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_hAYEszG=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_sPrGIRl=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_mpsCEMq=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_fsNuRYP=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_wbjEbxw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_KZTiMnb=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_BejqFSw=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_oXDpNOY=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_OIAtUbo=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingProperties deserialize_VkPhysicalDeviceDescriptorIndexingProperties(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(VkPhysicalDeviceDescriptorIndexingPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EpKowEV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oyBnKmq=json({});
    
        if (name.pNext==NULL){
            return_oyBnKmq["null"]=true;
            return return_oyBnKmq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_DtdeaPb=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_PwMGhak=json({});
    return_PwMGhak=[&]() {
    json return_biDSsDu=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_PwMGhak;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_RhveDfv=json({});
    return_RhveDfv=[&]() {
    json return_UkltkEn=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_RhveDfv;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_NxgQSXJ=json({});
    return_NxgQSXJ=[&]() {
    json return_EzlaTus=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_NxgQSXJ;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_oTJCyLa=json({});
    return_oTJCyLa=[&]() {
    json return_fMTKyGw=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_oTJCyLa;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_IsiqqTZ=json({});
    return_IsiqqTZ=[&]() {
    json return_rCzFfEu=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_IsiqqTZ;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_pekINho=json({});
    return_pekINho=[&]() {
    json return_rHMBGNn=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_pekINho;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_xCZxUcl=json({});
    return_xCZxUcl=[&]() {
    json return_unCWtWx=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_xCZxUcl;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_LZrMRxe=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_JsMSnOg=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_ciQTkvv=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_RZauxIN=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_deBlrdR=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_fSTdOpB=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_bOcjpEn=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_fmVAgJl=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_IaygDrY=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_tAsTZif=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_hoXTgCZ=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_JCDjubr=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_DDyUyAa=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_gZAgmMm=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_IluPZVn=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
return result;}

    VkPhysicalDeviceDescriptorIndexingPropertiesEXT deserialize_VkPhysicalDeviceDescriptorIndexingPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorIndexingPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(VkDescriptorSetLayoutBindingFlagsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WCchrsu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BqZYPuy=json({});
    
        if (name.pNext==NULL){
            return_BqZYPuy["null"]=true;
            return return_BqZYPuy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_CJFZhsT=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_bSbZRbh=json({});
    
        if (name.pBindingFlags==NULL){
            return_bSbZRbh["null"]=true;
            return return_bSbZRbh;
        }
        
        return_bSbZRbh["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_vSdwahz=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_bSbZRbh["members"][std::to_string(i)].push_back(temp);
        }
        return return_bSbZRbh;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfo deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfo(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YpvvynH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YpvvynH=NULL;
        }
    temp_YpvvynH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YpvvynH;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_KUeybDB;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_KUeybDB=NULL;
        }
    temp_KUeybDB=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int YhHjfZo=0; YhHjfZo < result.bindingCount; YhHjfZo++){
            [&]() {
temp_KUeybDB[YhHjfZo]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][YhHjfZo]);}();;
        }
        }();result.pBindingFlags=temp_KUeybDB;}();
return result;}

    json serialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(VkDescriptorSetLayoutBindingFlagsCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bVWWBFw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FiMRmps=json({});
    
        if (name.pNext==NULL){
            return_FiMRmps["null"]=true;
            return return_FiMRmps;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bindingCount"]=[&]() {
    json return_kXLCFTH=json({});
    return serialize_uint32_t(name.bindingCount);}();
result["members"]["pBindingFlags"]=[&]() {
    json return_caLmzjC=json({});
    
        if (name.pBindingFlags==NULL){
            return_caLmzjC["null"]=true;
            return return_caLmzjC;
        }
        
        return_caLmzjC["members"]={};
        for(int i=0; i < name.bindingCount; i++){
            json temp;
            temp=[&]() {
    json return_frselos=json({});
    return serialize_VkDescriptorBindingFlags(name.pBindingFlags[i]);}();
            return_caLmzjC["members"][std::to_string(i)].push_back(temp);
        }
        return return_caLmzjC;
        }();
return result;}

    VkDescriptorSetLayoutBindingFlagsCreateInfoEXT deserialize_VkDescriptorSetLayoutBindingFlagsCreateInfoEXT(json name){
        auto result=VkDescriptorSetLayoutBindingFlagsCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VjUvZKl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VjUvZKl=NULL;
        }
    temp_VjUvZKl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VjUvZKl;}();
[&]() {
result.bindingCount=deserialize_uint32_t(name["members"]["bindingCount"]);}();
[&]() {
VkDescriptorBindingFlags* temp_BSsTUJj;[&]() {

        if (name["members"]["pBindingFlags"].contains("null")){
        temp_BSsTUJj=NULL;
        }
    temp_BSsTUJj=(VkDescriptorBindingFlags*)malloc(result.bindingCount*sizeof(VkDescriptorBindingFlags));
        for (int TbJsvFo=0; TbJsvFo < result.bindingCount; TbJsvFo++){
            [&]() {
temp_BSsTUJj[TbJsvFo]=deserialize_VkDescriptorBindingFlags(name["members"]["pBindingFlags"]["members"][TbJsvFo]);}();;
        }
        }();result.pBindingFlags=temp_BSsTUJj;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(VkDescriptorSetVariableDescriptorCountAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PyciaYH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gDaWkFi=json({});
    
        if (name.pNext==NULL){
            return_gDaWkFi["null"]=true;
            return return_gDaWkFi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_RSqcikf=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_hiKoRrP=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_hiKoRrP["null"]=true;
            return return_hiKoRrP;
        }
        
        return_hiKoRrP["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_sszfSxs=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_hiKoRrP["members"][std::to_string(i)].push_back(temp);
        }
        return return_hiKoRrP;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfo deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfo(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cCEPVim;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cCEPVim=NULL;
        }
    temp_cCEPVim=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cCEPVim;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_tOEzLdc;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_tOEzLdc=NULL;
        }
    temp_tOEzLdc=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int nTFANlp=0; nTFANlp < result.descriptorSetCount; nTFANlp++){
            [&]() {
temp_tOEzLdc[nTFANlp]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][nTFANlp]);}();;
        }
        }();result.pDescriptorCounts=temp_tOEzLdc;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(VkDescriptorSetVariableDescriptorCountAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RyGusrb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OVrYfic=json({});
    
        if (name.pNext==NULL){
            return_OVrYfic["null"]=true;
            return return_OVrYfic;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetCount"]=[&]() {
    json return_ehUxIjX=json({});
    return serialize_uint32_t(name.descriptorSetCount);}();
result["members"]["pDescriptorCounts"]=[&]() {
    json return_gKyxXkX=json({});
    
        if (name.pDescriptorCounts==NULL){
            return_gKyxXkX["null"]=true;
            return return_gKyxXkX;
        }
        
        return_gKyxXkX["members"]={};
        for(int i=0; i < name.descriptorSetCount; i++){
            json temp;
            temp=[&]() {
    json return_xkkWhqt=json({});
    return serialize_uint32_t(name.pDescriptorCounts[i]);}();
            return_gKyxXkX["members"][std::to_string(i)].push_back(temp);
        }
        return return_gKyxXkX;
        }();
return result;}

    VkDescriptorSetVariableDescriptorCountAllocateInfoEXT deserialize_VkDescriptorSetVariableDescriptorCountAllocateInfoEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZqJChjV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZqJChjV=NULL;
        }
    temp_ZqJChjV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZqJChjV;}();
[&]() {
result.descriptorSetCount=deserialize_uint32_t(name["members"]["descriptorSetCount"]);}();
[&]() {
uint32_t* temp_IdsPfiZ;[&]() {

        if (name["members"]["pDescriptorCounts"].contains("null")){
        temp_IdsPfiZ=NULL;
        }
    temp_IdsPfiZ=(uint32_t*)malloc(result.descriptorSetCount*sizeof(uint32_t));
        for (int iyqTQvf=0; iyqTQvf < result.descriptorSetCount; iyqTQvf++){
            [&]() {
temp_IdsPfiZ[iyqTQvf]=deserialize_uint32_t(name["members"]["pDescriptorCounts"]["members"][iyqTQvf]);}();;
        }
        }();result.pDescriptorCounts=temp_IdsPfiZ;}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(VkDescriptorSetVariableDescriptorCountLayoutSupport name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JeKAkEB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CXLKOxj=json({});
    
        if (name.pNext==NULL){
            return_CXLKOxj["null"]=true;
            return return_CXLKOxj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_YuTYeHI=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupport deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupport(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupport();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(VkDescriptorSetVariableDescriptorCountLayoutSupportEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dFViPcN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fEbNsYU=json({});
    
        if (name.pNext==NULL){
            return_fEbNsYU["null"]=true;
            return return_fEbNsYU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVariableDescriptorCount"]=[&]() {
    json return_jkuIfyq=json({});
    return serialize_uint32_t(name.maxVariableDescriptorCount);}();
return result;}

    VkDescriptorSetVariableDescriptorCountLayoutSupportEXT deserialize_VkDescriptorSetVariableDescriptorCountLayoutSupportEXT(json name){
        auto result=VkDescriptorSetVariableDescriptorCountLayoutSupportEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVariableDescriptorCount=deserialize_uint32_t(name["members"]["maxVariableDescriptorCount"]);}();
return result;}

    json serialize_VkAttachmentDescription2(VkAttachmentDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aAQhZCS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ThctvHv=json({});
    
        if (name.pNext==NULL){
            return_ThctvHv["null"]=true;
            return return_ThctvHv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_kSrtOvH=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_rGWuTqq=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_lMmyKmd=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_Ommkrcq=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_dCSvDxw=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_dCcCzyg=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_yTGSCnC=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_XGnlwVj=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_ySnrXlu=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2 deserialize_VkAttachmentDescription2(json name){
        auto result=VkAttachmentDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JegUxBz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JegUxBz=NULL;
        }
    temp_JegUxBz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JegUxBz;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescription2KHR(VkAttachmentDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dZqfIKC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kmRLyJp=json({});
    
        if (name.pNext==NULL){
            return_kmRLyJp["null"]=true;
            return return_kmRLyJp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_VsmsxFp=json({});
    return serialize_VkAttachmentDescriptionFlags(name.flags);}();
result["members"]["format"]=[&]() {
    json return_oLFMsZA=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["samples"]=[&]() {
    json return_wwlfjrW=json({});
    return serialize_VkSampleCountFlagBits(name.samples);}();
result["members"]["loadOp"]=[&]() {
    json return_dBMZERF=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_pLrgXUu=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["stencilLoadOp"]=[&]() {
    json return_aBjTNkj=json({});
    return serialize_VkAttachmentLoadOp(name.stencilLoadOp);}();
result["members"]["stencilStoreOp"]=[&]() {
    json return_nHPPiMJ=json({});
    return serialize_VkAttachmentStoreOp(name.stencilStoreOp);}();
result["members"]["initialLayout"]=[&]() {
    json return_vbkrwui=json({});
    return serialize_VkImageLayout(name.initialLayout);}();
result["members"]["finalLayout"]=[&]() {
    json return_siaJBnw=json({});
    return serialize_VkImageLayout(name.finalLayout);}();
return result;}

    VkAttachmentDescription2KHR deserialize_VkAttachmentDescription2KHR(json name){
        auto result=VkAttachmentDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HaKkWBq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HaKkWBq=NULL;
        }
    temp_HaKkWBq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HaKkWBq;}();
[&]() {
result.flags=deserialize_VkAttachmentDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.samples=deserialize_VkSampleCountFlagBits(name["members"]["samples"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.stencilLoadOp=deserialize_VkAttachmentLoadOp(name["members"]["stencilLoadOp"]);}();
[&]() {
result.stencilStoreOp=deserialize_VkAttachmentStoreOp(name["members"]["stencilStoreOp"]);}();
[&]() {
result.initialLayout=deserialize_VkImageLayout(name["members"]["initialLayout"]);}();
[&]() {
result.finalLayout=deserialize_VkImageLayout(name["members"]["finalLayout"]);}();
return result;}

    json serialize_VkAttachmentReference2(VkAttachmentReference2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_neWILKK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LPgWcbu=json({});
    
        if (name.pNext==NULL){
            return_LPgWcbu["null"]=true;
            return return_LPgWcbu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_CDfzqbO=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_LdvAglS=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_xReNcCw=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2 deserialize_VkAttachmentReference2(json name){
        auto result=VkAttachmentReference2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_usnmEKz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_usnmEKz=NULL;
        }
    temp_usnmEKz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_usnmEKz;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkAttachmentReference2KHR(VkAttachmentReference2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TBQBvKS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jLTEMNg=json({});
    
        if (name.pNext==NULL){
            return_jLTEMNg["null"]=true;
            return return_jLTEMNg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachment"]=[&]() {
    json return_XqtOhgE=json({});
    return serialize_uint32_t(name.attachment);}();
result["members"]["layout"]=[&]() {
    json return_jCCkbqB=json({});
    return serialize_VkImageLayout(name.layout);}();
result["members"]["aspectMask"]=[&]() {
    json return_VdbiKOJ=json({});
    return serialize_VkImageAspectFlags(name.aspectMask);}();
return result;}

    VkAttachmentReference2KHR deserialize_VkAttachmentReference2KHR(json name){
        auto result=VkAttachmentReference2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LUDDwlJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LUDDwlJ=NULL;
        }
    temp_LUDDwlJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LUDDwlJ;}();
[&]() {
result.attachment=deserialize_uint32_t(name["members"]["attachment"]);}();
[&]() {
result.layout=deserialize_VkImageLayout(name["members"]["layout"]);}();
[&]() {
result.aspectMask=deserialize_VkImageAspectFlags(name["members"]["aspectMask"]);}();
return result;}

    json serialize_VkSubpassDescription2(VkSubpassDescription2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OvcKlyk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dehpfpQ=json({});
    
        if (name.pNext==NULL){
            return_dehpfpQ["null"]=true;
            return return_dehpfpQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_bOsSrik=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_dFJKWTl=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_mFQauGa=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_dxNFLIs=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_cRjRkUX=json({});
    
        if (name.pInputAttachments==NULL){
            return_cRjRkUX["null"]=true;
            return return_cRjRkUX;
        }
        
        return_cRjRkUX["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_szJSexu=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_cRjRkUX["members"][std::to_string(i)].push_back(temp);
        }
        return return_cRjRkUX;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_baPAbbV=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_BhnvvUz=json({});
    
        if (name.pColorAttachments==NULL){
            return_BhnvvUz["null"]=true;
            return return_BhnvvUz;
        }
        
        return_BhnvvUz["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_TRaVoNm=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_BhnvvUz["members"][std::to_string(i)].push_back(temp);
        }
        return return_BhnvvUz;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_xwzmYBf=json({});
    
        if (name.pResolveAttachments==NULL){
            return_xwzmYBf["null"]=true;
            return return_xwzmYBf;
        }
        
        return_xwzmYBf["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_tocEbKr=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_xwzmYBf["members"][std::to_string(i)].push_back(temp);
        }
        return return_xwzmYBf;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_KnYxBjP=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_KnYxBjP["null"]=true;
            return return_KnYxBjP;
        }
        return_KnYxBjP=[&]() {
    json return_VzYsYbY=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_KnYxBjP;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_pXEwOgJ=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_jelJEjQ=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_jelJEjQ["null"]=true;
            return return_jelJEjQ;
        }
        
        return_jelJEjQ["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_eocKaEo=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_jelJEjQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_jelJEjQ;
        }();
return result;}

    VkSubpassDescription2 deserialize_VkSubpassDescription2(json name){
        auto result=VkSubpassDescription2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GpaXaPt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GpaXaPt=NULL;
        }
    temp_GpaXaPt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GpaXaPt;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_XvyJJeB;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_XvyJJeB=NULL;
        }
    temp_XvyJJeB=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int iLRibUb=0; iLRibUb < result.inputAttachmentCount; iLRibUb++){
            [&]() {
temp_XvyJJeB[iLRibUb]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][iLRibUb]);}();;
        }
        }();result.pInputAttachments=temp_XvyJJeB;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_RAdfTGf;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_RAdfTGf=NULL;
        }
    temp_RAdfTGf=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int RRmQkTx=0; RRmQkTx < result.colorAttachmentCount; RRmQkTx++){
            [&]() {
temp_RAdfTGf[RRmQkTx]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][RRmQkTx]);}();;
        }
        }();result.pColorAttachments=temp_RAdfTGf;}();
[&]() {
VkAttachmentReference2* temp_sbQRohl;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_sbQRohl=NULL;
        }
    temp_sbQRohl=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int ueRPGPg=0; ueRPGPg < result.colorAttachmentCount; ueRPGPg++){
            [&]() {
temp_sbQRohl[ueRPGPg]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][ueRPGPg]);}();;
        }
        }();result.pResolveAttachments=temp_sbQRohl;}();
[&]() {
VkAttachmentReference2* temp_fFqgDvf;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_fFqgDvf=NULL;
        }
    [&]() {
*(temp_fFqgDvf)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_fFqgDvf;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_kDFCPLe;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_kDFCPLe=NULL;
        }
    temp_kDFCPLe=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int wAlRluX=0; wAlRluX < result.preserveAttachmentCount; wAlRluX++){
            [&]() {
temp_kDFCPLe[wAlRluX]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][wAlRluX]);}();;
        }
        }();result.pPreserveAttachments=temp_kDFCPLe;}();
return result;}

    json serialize_VkSubpassDescription2KHR(VkSubpassDescription2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FgDgzXS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nFHiHCZ=json({});
    
        if (name.pNext==NULL){
            return_nFHiHCZ["null"]=true;
            return return_nFHiHCZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NMKZAlv=json({});
    return serialize_VkSubpassDescriptionFlags(name.flags);}();
result["members"]["pipelineBindPoint"]=[&]() {
    json return_xpTqNdq=json({});
    return serialize_VkPipelineBindPoint(name.pipelineBindPoint);}();
result["members"]["viewMask"]=[&]() {
    json return_ztJCuYX=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["inputAttachmentCount"]=[&]() {
    json return_JaTEvLc=json({});
    return serialize_uint32_t(name.inputAttachmentCount);}();
result["members"]["pInputAttachments"]=[&]() {
    json return_gnONVQK=json({});
    
        if (name.pInputAttachments==NULL){
            return_gnONVQK["null"]=true;
            return return_gnONVQK;
        }
        
        return_gnONVQK["members"]={};
        for(int i=0; i < name.inputAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_WJPwYIc=json({});
    return serialize_VkAttachmentReference2(name.pInputAttachments[i]);}();
            return_gnONVQK["members"][std::to_string(i)].push_back(temp);
        }
        return return_gnONVQK;
        }();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_ZgJkmfs=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_AbaIFcQ=json({});
    
        if (name.pColorAttachments==NULL){
            return_AbaIFcQ["null"]=true;
            return return_AbaIFcQ;
        }
        
        return_AbaIFcQ["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_grIaQJJ=json({});
    return serialize_VkAttachmentReference2(name.pColorAttachments[i]);}();
            return_AbaIFcQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_AbaIFcQ;
        }();
result["members"]["pResolveAttachments"]=[&]() {
    json return_uKXoMjj=json({});
    
        if (name.pResolveAttachments==NULL){
            return_uKXoMjj["null"]=true;
            return return_uKXoMjj;
        }
        
        return_uKXoMjj["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_PeqidAi=json({});
    return serialize_VkAttachmentReference2(name.pResolveAttachments[i]);}();
            return_uKXoMjj["members"][std::to_string(i)].push_back(temp);
        }
        return return_uKXoMjj;
        }();
result["members"]["pDepthStencilAttachment"]=[&]() {
    json return_RIGqvnJ=json({});
    
        if (name.pDepthStencilAttachment==NULL){
            return_RIGqvnJ["null"]=true;
            return return_RIGqvnJ;
        }
        return_RIGqvnJ=[&]() {
    json return_mNvVbsZ=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilAttachment);}();
return return_RIGqvnJ;}();
result["members"]["preserveAttachmentCount"]=[&]() {
    json return_eWlRecK=json({});
    return serialize_uint32_t(name.preserveAttachmentCount);}();
result["members"]["pPreserveAttachments"]=[&]() {
    json return_utIshvw=json({});
    
        if (name.pPreserveAttachments==NULL){
            return_utIshvw["null"]=true;
            return return_utIshvw;
        }
        
        return_utIshvw["members"]={};
        for(int i=0; i < name.preserveAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_YLXfdLg=json({});
    return serialize_uint32_t(name.pPreserveAttachments[i]);}();
            return_utIshvw["members"][std::to_string(i)].push_back(temp);
        }
        return return_utIshvw;
        }();
return result;}

    VkSubpassDescription2KHR deserialize_VkSubpassDescription2KHR(json name){
        auto result=VkSubpassDescription2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hkKzSxg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hkKzSxg=NULL;
        }
    temp_hkKzSxg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hkKzSxg;}();
[&]() {
result.flags=deserialize_VkSubpassDescriptionFlags(name["members"]["flags"]);}();
[&]() {
result.pipelineBindPoint=deserialize_VkPipelineBindPoint(name["members"]["pipelineBindPoint"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.inputAttachmentCount=deserialize_uint32_t(name["members"]["inputAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_VeEvzwX;[&]() {

        if (name["members"]["pInputAttachments"].contains("null")){
        temp_VeEvzwX=NULL;
        }
    temp_VeEvzwX=(VkAttachmentReference2*)malloc(result.inputAttachmentCount*sizeof(VkAttachmentReference2));
        for (int Shpmsfi=0; Shpmsfi < result.inputAttachmentCount; Shpmsfi++){
            [&]() {
temp_VeEvzwX[Shpmsfi]=deserialize_VkAttachmentReference2(name["members"]["pInputAttachments"]["members"][Shpmsfi]);}();;
        }
        }();result.pInputAttachments=temp_VeEvzwX;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkAttachmentReference2* temp_YHRAUjW;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_YHRAUjW=NULL;
        }
    temp_YHRAUjW=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int PttECtV=0; PttECtV < result.colorAttachmentCount; PttECtV++){
            [&]() {
temp_YHRAUjW[PttECtV]=deserialize_VkAttachmentReference2(name["members"]["pColorAttachments"]["members"][PttECtV]);}();;
        }
        }();result.pColorAttachments=temp_YHRAUjW;}();
[&]() {
VkAttachmentReference2* temp_ZRobRvy;[&]() {

        if (name["members"]["pResolveAttachments"].contains("null")){
        temp_ZRobRvy=NULL;
        }
    temp_ZRobRvy=(VkAttachmentReference2*)malloc(result.colorAttachmentCount*sizeof(VkAttachmentReference2));
        for (int DzraHDW=0; DzraHDW < result.colorAttachmentCount; DzraHDW++){
            [&]() {
temp_ZRobRvy[DzraHDW]=deserialize_VkAttachmentReference2(name["members"]["pResolveAttachments"]["members"][DzraHDW]);}();;
        }
        }();result.pResolveAttachments=temp_ZRobRvy;}();
[&]() {
VkAttachmentReference2* temp_MCUyeyB;[&]() {

        if (name["members"]["pDepthStencilAttachment"].contains("null")){
        temp_MCUyeyB=NULL;
        }
    [&]() {
*(temp_MCUyeyB)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilAttachment"]);}();
}();result.pDepthStencilAttachment=temp_MCUyeyB;}();
[&]() {
result.preserveAttachmentCount=deserialize_uint32_t(name["members"]["preserveAttachmentCount"]);}();
[&]() {
uint32_t* temp_QdBQITB;[&]() {

        if (name["members"]["pPreserveAttachments"].contains("null")){
        temp_QdBQITB=NULL;
        }
    temp_QdBQITB=(uint32_t*)malloc(result.preserveAttachmentCount*sizeof(uint32_t));
        for (int NCUDwwe=0; NCUDwwe < result.preserveAttachmentCount; NCUDwwe++){
            [&]() {
temp_QdBQITB[NCUDwwe]=deserialize_uint32_t(name["members"]["pPreserveAttachments"]["members"][NCUDwwe]);}();;
        }
        }();result.pPreserveAttachments=temp_QdBQITB;}();
return result;}

    json serialize_VkSubpassDependency2(VkSubpassDependency2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IoroReW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AjojDsU=json({});
    
        if (name.pNext==NULL){
            return_AjojDsU["null"]=true;
            return return_AjojDsU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_SnFZzCX=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_bXxYIlo=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_CVjKpBf=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_HxtQbbj=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_BVmOArH=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zmlohSa=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_pZLZYNP=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_iQNZHPS=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2 deserialize_VkSubpassDependency2(json name){
        auto result=VkSubpassDependency2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rWDkFRF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rWDkFRF=NULL;
        }
    temp_rWDkFRF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rWDkFRF;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkSubpassDependency2KHR(VkSubpassDependency2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iGRsgkF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bhosdaR=json({});
    
        if (name.pNext==NULL){
            return_bhosdaR["null"]=true;
            return return_bhosdaR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubpass"]=[&]() {
    json return_sTJbuPg=json({});
    return serialize_uint32_t(name.srcSubpass);}();
result["members"]["dstSubpass"]=[&]() {
    json return_FWTQiEo=json({});
    return serialize_uint32_t(name.dstSubpass);}();
result["members"]["srcStageMask"]=[&]() {
    json return_YojdKrs=json({});
    return serialize_VkPipelineStageFlags(name.srcStageMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_gAyXRAm=json({});
    return serialize_VkPipelineStageFlags(name.dstStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_GepbMdT=json({});
    return serialize_VkAccessFlags(name.srcAccessMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_jVEjStK=json({});
    return serialize_VkAccessFlags(name.dstAccessMask);}();
result["members"]["dependencyFlags"]=[&]() {
    json return_UZzaLhu=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["viewOffset"]=[&]() {
    json return_qJGXgin=json({});
    return serialize_int32_t(name.viewOffset);}();
return result;}

    VkSubpassDependency2KHR deserialize_VkSubpassDependency2KHR(json name){
        auto result=VkSubpassDependency2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mpmvYqw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mpmvYqw=NULL;
        }
    temp_mpmvYqw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mpmvYqw;}();
[&]() {
result.srcSubpass=deserialize_uint32_t(name["members"]["srcSubpass"]);}();
[&]() {
result.dstSubpass=deserialize_uint32_t(name["members"]["dstSubpass"]);}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags(name["members"]["srcStageMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags(name["members"]["dstStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags(name["members"]["dstAccessMask"]);}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.viewOffset=deserialize_int32_t(name["members"]["viewOffset"]);}();
return result;}

    json serialize_VkRenderPassCreateInfo2(VkRenderPassCreateInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WWsUySy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zEUYpcY=json({});
    
        if (name.pNext==NULL){
            return_zEUYpcY["null"]=true;
            return return_zEUYpcY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mRplslX=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_WjHGxOs=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_YqUwDBr=json({});
    
        if (name.pAttachments==NULL){
            return_YqUwDBr["null"]=true;
            return return_YqUwDBr;
        }
        
        return_YqUwDBr["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_OYAdVnc=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_YqUwDBr["members"][std::to_string(i)].push_back(temp);
        }
        return return_YqUwDBr;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_eqstCtX=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_CJephtf=json({});
    
        if (name.pSubpasses==NULL){
            return_CJephtf["null"]=true;
            return return_CJephtf;
        }
        
        return_CJephtf["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_NeDvtCl=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_CJephtf["members"][std::to_string(i)].push_back(temp);
        }
        return return_CJephtf;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_hizZzap=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_DfOGfFw=json({});
    
        if (name.pDependencies==NULL){
            return_DfOGfFw["null"]=true;
            return return_DfOGfFw;
        }
        
        return_DfOGfFw["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_wsheYMU=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_DfOGfFw["members"][std::to_string(i)].push_back(temp);
        }
        return return_DfOGfFw;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_UaQGMza=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_zkwyeWh=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_zkwyeWh["null"]=true;
            return return_zkwyeWh;
        }
        
        return_zkwyeWh["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_DBiUSws=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_zkwyeWh["members"][std::to_string(i)].push_back(temp);
        }
        return return_zkwyeWh;
        }();
return result;}

    VkRenderPassCreateInfo2 deserialize_VkRenderPassCreateInfo2(json name){
        auto result=VkRenderPassCreateInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IrfuXLm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IrfuXLm=NULL;
        }
    temp_IrfuXLm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IrfuXLm;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_FDfpjOl;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_FDfpjOl=NULL;
        }
    temp_FDfpjOl=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int tydvRMJ=0; tydvRMJ < result.attachmentCount; tydvRMJ++){
            [&]() {
temp_FDfpjOl[tydvRMJ]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][tydvRMJ]);}();;
        }
        }();result.pAttachments=temp_FDfpjOl;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_pJachuu;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_pJachuu=NULL;
        }
    temp_pJachuu=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int NShdtic=0; NShdtic < result.subpassCount; NShdtic++){
            [&]() {
temp_pJachuu[NShdtic]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][NShdtic]);}();;
        }
        }();result.pSubpasses=temp_pJachuu;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_YqpPzqv;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_YqpPzqv=NULL;
        }
    temp_YqpPzqv=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int GOlbVZV=0; GOlbVZV < result.dependencyCount; GOlbVZV++){
            [&]() {
temp_YqpPzqv[GOlbVZV]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][GOlbVZV]);}();;
        }
        }();result.pDependencies=temp_YqpPzqv;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_BrUBCDa;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_BrUBCDa=NULL;
        }
    temp_BrUBCDa=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int KAoaBwy=0; KAoaBwy < result.correlatedViewMaskCount; KAoaBwy++){
            [&]() {
temp_BrUBCDa[KAoaBwy]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][KAoaBwy]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_BrUBCDa;}();
return result;}

    json serialize_VkRenderPassCreateInfo2KHR(VkRenderPassCreateInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qHRinBC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LcHvDeg=json({});
    
        if (name.pNext==NULL){
            return_LcHvDeg["null"]=true;
            return return_LcHvDeg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yBdLDzU=json({});
    return serialize_VkRenderPassCreateFlags(name.flags);}();
result["members"]["attachmentCount"]=[&]() {
    json return_ARvQIgd=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_yebFtUC=json({});
    
        if (name.pAttachments==NULL){
            return_yebFtUC["null"]=true;
            return return_yebFtUC;
        }
        
        return_yebFtUC["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_MaXxVmM=json({});
    return serialize_VkAttachmentDescription2(name.pAttachments[i]);}();
            return_yebFtUC["members"][std::to_string(i)].push_back(temp);
        }
        return return_yebFtUC;
        }();
result["members"]["subpassCount"]=[&]() {
    json return_FcKlfdk=json({});
    return serialize_uint32_t(name.subpassCount);}();
result["members"]["pSubpasses"]=[&]() {
    json return_jrpfrkK=json({});
    
        if (name.pSubpasses==NULL){
            return_jrpfrkK["null"]=true;
            return return_jrpfrkK;
        }
        
        return_jrpfrkK["members"]={};
        for(int i=0; i < name.subpassCount; i++){
            json temp;
            temp=[&]() {
    json return_qUScAqb=json({});
    return serialize_VkSubpassDescription2(name.pSubpasses[i]);}();
            return_jrpfrkK["members"][std::to_string(i)].push_back(temp);
        }
        return return_jrpfrkK;
        }();
result["members"]["dependencyCount"]=[&]() {
    json return_dIfzAzZ=json({});
    return serialize_uint32_t(name.dependencyCount);}();
result["members"]["pDependencies"]=[&]() {
    json return_kNEjGQJ=json({});
    
        if (name.pDependencies==NULL){
            return_kNEjGQJ["null"]=true;
            return return_kNEjGQJ;
        }
        
        return_kNEjGQJ["members"]={};
        for(int i=0; i < name.dependencyCount; i++){
            json temp;
            temp=[&]() {
    json return_fswcKkM=json({});
    return serialize_VkSubpassDependency2(name.pDependencies[i]);}();
            return_kNEjGQJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_kNEjGQJ;
        }();
result["members"]["correlatedViewMaskCount"]=[&]() {
    json return_bMHjpSY=json({});
    return serialize_uint32_t(name.correlatedViewMaskCount);}();
result["members"]["pCorrelatedViewMasks"]=[&]() {
    json return_fEEUfht=json({});
    
        if (name.pCorrelatedViewMasks==NULL){
            return_fEEUfht["null"]=true;
            return return_fEEUfht;
        }
        
        return_fEEUfht["members"]={};
        for(int i=0; i < name.correlatedViewMaskCount; i++){
            json temp;
            temp=[&]() {
    json return_ktCsOsT=json({});
    return serialize_uint32_t(name.pCorrelatedViewMasks[i]);}();
            return_fEEUfht["members"][std::to_string(i)].push_back(temp);
        }
        return return_fEEUfht;
        }();
return result;}

    VkRenderPassCreateInfo2KHR deserialize_VkRenderPassCreateInfo2KHR(json name){
        auto result=VkRenderPassCreateInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EiTFqby;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EiTFqby=NULL;
        }
    temp_EiTFqby=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EiTFqby;}();
[&]() {
result.flags=deserialize_VkRenderPassCreateFlags(name["members"]["flags"]);}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkAttachmentDescription2* temp_iBpOxOz;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_iBpOxOz=NULL;
        }
    temp_iBpOxOz=(VkAttachmentDescription2*)malloc(result.attachmentCount*sizeof(VkAttachmentDescription2));
        for (int NJQiylt=0; NJQiylt < result.attachmentCount; NJQiylt++){
            [&]() {
temp_iBpOxOz[NJQiylt]=deserialize_VkAttachmentDescription2(name["members"]["pAttachments"]["members"][NJQiylt]);}();;
        }
        }();result.pAttachments=temp_iBpOxOz;}();
[&]() {
result.subpassCount=deserialize_uint32_t(name["members"]["subpassCount"]);}();
[&]() {
VkSubpassDescription2* temp_BfeSSxh;[&]() {

        if (name["members"]["pSubpasses"].contains("null")){
        temp_BfeSSxh=NULL;
        }
    temp_BfeSSxh=(VkSubpassDescription2*)malloc(result.subpassCount*sizeof(VkSubpassDescription2));
        for (int RtsXwib=0; RtsXwib < result.subpassCount; RtsXwib++){
            [&]() {
temp_BfeSSxh[RtsXwib]=deserialize_VkSubpassDescription2(name["members"]["pSubpasses"]["members"][RtsXwib]);}();;
        }
        }();result.pSubpasses=temp_BfeSSxh;}();
[&]() {
result.dependencyCount=deserialize_uint32_t(name["members"]["dependencyCount"]);}();
[&]() {
VkSubpassDependency2* temp_uNbMcXS;[&]() {

        if (name["members"]["pDependencies"].contains("null")){
        temp_uNbMcXS=NULL;
        }
    temp_uNbMcXS=(VkSubpassDependency2*)malloc(result.dependencyCount*sizeof(VkSubpassDependency2));
        for (int uoHQJZF=0; uoHQJZF < result.dependencyCount; uoHQJZF++){
            [&]() {
temp_uNbMcXS[uoHQJZF]=deserialize_VkSubpassDependency2(name["members"]["pDependencies"]["members"][uoHQJZF]);}();;
        }
        }();result.pDependencies=temp_uNbMcXS;}();
[&]() {
result.correlatedViewMaskCount=deserialize_uint32_t(name["members"]["correlatedViewMaskCount"]);}();
[&]() {
uint32_t* temp_YsLECZM;[&]() {

        if (name["members"]["pCorrelatedViewMasks"].contains("null")){
        temp_YsLECZM=NULL;
        }
    temp_YsLECZM=(uint32_t*)malloc(result.correlatedViewMaskCount*sizeof(uint32_t));
        for (int aiJnJBf=0; aiJnJBf < result.correlatedViewMaskCount; aiJnJBf++){
            [&]() {
temp_YsLECZM[aiJnJBf]=deserialize_uint32_t(name["members"]["pCorrelatedViewMasks"]["members"][aiJnJBf]);}();;
        }
        }();result.pCorrelatedViewMasks=temp_YsLECZM;}();
return result;}

    json serialize_VkSubpassBeginInfo(VkSubpassBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fxdJhQd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_edGKfDb=json({});
    
        if (name.pNext==NULL){
            return_edGKfDb["null"]=true;
            return return_edGKfDb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_oIoEEjv=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfo deserialize_VkSubpassBeginInfo(json name){
        auto result=VkSubpassBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PoWsevZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PoWsevZ=NULL;
        }
    temp_PoWsevZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PoWsevZ;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassBeginInfoKHR(VkSubpassBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GQEWWXD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KoMYSvh=json({});
    
        if (name.pNext==NULL){
            return_KoMYSvh["null"]=true;
            return return_KoMYSvh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["contents"]=[&]() {
    json return_lLmfbDe=json({});
    return serialize_VkSubpassContents(name.contents);}();
return result;}

    VkSubpassBeginInfoKHR deserialize_VkSubpassBeginInfoKHR(json name){
        auto result=VkSubpassBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iJwSFDr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iJwSFDr=NULL;
        }
    temp_iJwSFDr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iJwSFDr;}();
[&]() {
result.contents=deserialize_VkSubpassContents(name["members"]["contents"]);}();
return result;}

    json serialize_VkSubpassEndInfo(VkSubpassEndInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZDABYPz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rcABfiu=json({});
    
        if (name.pNext==NULL){
            return_rcABfiu["null"]=true;
            return return_rcABfiu;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfo deserialize_VkSubpassEndInfo(json name){
        auto result=VkSubpassEndInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dRiDgOz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dRiDgOz=NULL;
        }
    temp_dRiDgOz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dRiDgOz;}();
return result;}

    json serialize_VkSubpassEndInfoKHR(VkSubpassEndInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RmvKPvB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bbcGYEy=json({});
    
        if (name.pNext==NULL){
            return_bbcGYEy["null"]=true;
            return return_bbcGYEy;
        }
        return serialize_void_p(name.pNext);
}();
return result;}

    VkSubpassEndInfoKHR deserialize_VkSubpassEndInfoKHR(json name){
        auto result=VkSubpassEndInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BajapeI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BajapeI=NULL;
        }
    temp_BajapeI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BajapeI;}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeatures(VkPhysicalDeviceTimelineSemaphoreFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QsSORxQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zSwAQDR=json({});
    
        if (name.pNext==NULL){
            return_zSwAQDR["null"]=true;
            return return_zSwAQDR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_wFMvaFU=json({});
    return_wFMvaFU=[&]() {
    json return_OeknWdV=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_wFMvaFU;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeatures deserialize_VkPhysicalDeviceTimelineSemaphoreFeatures(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(VkPhysicalDeviceTimelineSemaphoreFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RtGOPqK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PcDBfEW=json({});
    
        if (name.pNext==NULL){
            return_PcDBfEW["null"]=true;
            return return_PcDBfEW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_plxNPlX=json({});
    return_plxNPlX=[&]() {
    json return_rcnOdky=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_plxNPlX;}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreFeaturesKHR deserialize_VkPhysicalDeviceTimelineSemaphoreFeaturesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphoreProperties(VkPhysicalDeviceTimelineSemaphoreProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XneyZoq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tZfTBLc=json({});
    
        if (name.pNext==NULL){
            return_tZfTBLc["null"]=true;
            return return_tZfTBLc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_YfgHCSz=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphoreProperties deserialize_VkPhysicalDeviceTimelineSemaphoreProperties(json name){
        auto result=VkPhysicalDeviceTimelineSemaphoreProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(VkPhysicalDeviceTimelineSemaphorePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tkwaswT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sGpxuFK=json({});
    
        if (name.pNext==NULL){
            return_sGpxuFK["null"]=true;
            return return_sGpxuFK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_JNaomXr=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
return result;}

    VkPhysicalDeviceTimelineSemaphorePropertiesKHR deserialize_VkPhysicalDeviceTimelineSemaphorePropertiesKHR(json name){
        auto result=VkPhysicalDeviceTimelineSemaphorePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfo(VkSemaphoreTypeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HMNZLpi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PwQqRsg=json({});
    
        if (name.pNext==NULL){
            return_PwQqRsg["null"]=true;
            return return_PwQqRsg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_DGwrBMQ=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_UoiMLvw=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfo deserialize_VkSemaphoreTypeCreateInfo(json name){
        auto result=VkSemaphoreTypeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JjHlFZV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JjHlFZV=NULL;
        }
    temp_JjHlFZV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JjHlFZV;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkSemaphoreTypeCreateInfoKHR(VkSemaphoreTypeCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LTtsJkr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wLtvaWD=json({});
    
        if (name.pNext==NULL){
            return_wLtvaWD["null"]=true;
            return return_wLtvaWD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphoreType"]=[&]() {
    json return_KWUUBiy=json({});
    return serialize_VkSemaphoreType(name.semaphoreType);}();
result["members"]["initialValue"]=[&]() {
    json return_RSJNlTx=json({});
    return serialize_uint64_t(name.initialValue);}();
return result;}

    VkSemaphoreTypeCreateInfoKHR deserialize_VkSemaphoreTypeCreateInfoKHR(json name){
        auto result=VkSemaphoreTypeCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zAMPGQK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zAMPGQK=NULL;
        }
    temp_zAMPGQK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zAMPGQK;}();
[&]() {
result.semaphoreType=deserialize_VkSemaphoreType(name["members"]["semaphoreType"]);}();
[&]() {
result.initialValue=deserialize_uint64_t(name["members"]["initialValue"]);}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfo(VkTimelineSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ohCQTpf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QeNkORx=json({});
    
        if (name.pNext==NULL){
            return_QeNkORx["null"]=true;
            return return_QeNkORx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_uJDcruw=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_sGgfdbZ=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_sGgfdbZ["null"]=true;
            return return_sGgfdbZ;
        }
        
        return_sGgfdbZ["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_yXCkRlM=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_sGgfdbZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_sGgfdbZ;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_ZxsjOaC=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_OvNKQcn=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_OvNKQcn["null"]=true;
            return return_OvNKQcn;
        }
        
        return_OvNKQcn["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_PmMBBle=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_OvNKQcn["members"][std::to_string(i)].push_back(temp);
        }
        return return_OvNKQcn;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfo deserialize_VkTimelineSemaphoreSubmitInfo(json name){
        auto result=VkTimelineSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rQAKViv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rQAKViv=NULL;
        }
    temp_rQAKViv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rQAKViv;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_nPJNgDy;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_nPJNgDy=NULL;
        }
    temp_nPJNgDy=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int XxOPJdR=0; XxOPJdR < result.waitSemaphoreValueCount; XxOPJdR++){
            [&]() {
temp_nPJNgDy[XxOPJdR]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][XxOPJdR]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_nPJNgDy;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_dZFLIPX;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_dZFLIPX=NULL;
        }
    temp_dZFLIPX=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int ueLMEqE=0; ueLMEqE < result.signalSemaphoreValueCount; ueLMEqE++){
            [&]() {
temp_dZFLIPX[ueLMEqE]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][ueLMEqE]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_dZFLIPX;}();
return result;}

    json serialize_VkTimelineSemaphoreSubmitInfoKHR(VkTimelineSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yaNirra=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eqeMhAw=json({});
    
        if (name.pNext==NULL){
            return_eqeMhAw["null"]=true;
            return return_eqeMhAw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["waitSemaphoreValueCount"]=[&]() {
    json return_omuWcFJ=json({});
    return serialize_uint32_t(name.waitSemaphoreValueCount);}();
result["members"]["pWaitSemaphoreValues"]=[&]() {
    json return_egUestK=json({});
    
        if (name.pWaitSemaphoreValues==NULL){
            return_egUestK["null"]=true;
            return return_egUestK;
        }
        
        return_egUestK["members"]={};
        for(int i=0; i < name.waitSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_gVbkHRw=json({});
    return serialize_uint64_t(name.pWaitSemaphoreValues[i]);}();
            return_egUestK["members"][std::to_string(i)].push_back(temp);
        }
        return return_egUestK;
        }();
result["members"]["signalSemaphoreValueCount"]=[&]() {
    json return_qxsjeUJ=json({});
    return serialize_uint32_t(name.signalSemaphoreValueCount);}();
result["members"]["pSignalSemaphoreValues"]=[&]() {
    json return_fOZczbU=json({});
    
        if (name.pSignalSemaphoreValues==NULL){
            return_fOZczbU["null"]=true;
            return return_fOZczbU;
        }
        
        return_fOZczbU["members"]={};
        for(int i=0; i < name.signalSemaphoreValueCount; i++){
            json temp;
            temp=[&]() {
    json return_yHPOypw=json({});
    return serialize_uint64_t(name.pSignalSemaphoreValues[i]);}();
            return_fOZczbU["members"][std::to_string(i)].push_back(temp);
        }
        return return_fOZczbU;
        }();
return result;}

    VkTimelineSemaphoreSubmitInfoKHR deserialize_VkTimelineSemaphoreSubmitInfoKHR(json name){
        auto result=VkTimelineSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CTeroHn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CTeroHn=NULL;
        }
    temp_CTeroHn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CTeroHn;}();
[&]() {
result.waitSemaphoreValueCount=deserialize_uint32_t(name["members"]["waitSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_rwcLrcW;[&]() {

        if (name["members"]["pWaitSemaphoreValues"].contains("null")){
        temp_rwcLrcW=NULL;
        }
    temp_rwcLrcW=(uint64_t*)malloc(result.waitSemaphoreValueCount*sizeof(uint64_t));
        for (int lXocZGE=0; lXocZGE < result.waitSemaphoreValueCount; lXocZGE++){
            [&]() {
temp_rwcLrcW[lXocZGE]=deserialize_uint64_t(name["members"]["pWaitSemaphoreValues"]["members"][lXocZGE]);}();;
        }
        }();result.pWaitSemaphoreValues=temp_rwcLrcW;}();
[&]() {
result.signalSemaphoreValueCount=deserialize_uint32_t(name["members"]["signalSemaphoreValueCount"]);}();
[&]() {
uint64_t* temp_XUdNKOR;[&]() {

        if (name["members"]["pSignalSemaphoreValues"].contains("null")){
        temp_XUdNKOR=NULL;
        }
    temp_XUdNKOR=(uint64_t*)malloc(result.signalSemaphoreValueCount*sizeof(uint64_t));
        for (int LUUYxpZ=0; LUUYxpZ < result.signalSemaphoreValueCount; LUUYxpZ++){
            [&]() {
temp_XUdNKOR[LUUYxpZ]=deserialize_uint64_t(name["members"]["pSignalSemaphoreValues"]["members"][LUUYxpZ]);}();;
        }
        }();result.pSignalSemaphoreValues=temp_XUdNKOR;}();
return result;}

    json serialize_VkSemaphoreWaitInfo(VkSemaphoreWaitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZloxHwJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lOmTuQt=json({});
    
        if (name.pNext==NULL){
            return_lOmTuQt["null"]=true;
            return return_lOmTuQt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_aVylaDI=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_syVnELY=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_nZYRslX=json({});
    
        if (name.pSemaphores==NULL){
            return_nZYRslX["null"]=true;
            return return_nZYRslX;
        }
        
        return_nZYRslX["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_QaPKmsf=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_nZYRslX["members"][std::to_string(i)].push_back(temp);
        }
        return return_nZYRslX;
        }();
result["members"]["pValues"]=[&]() {
    json return_RgBTBOf=json({});
    
        if (name.pValues==NULL){
            return_RgBTBOf["null"]=true;
            return return_RgBTBOf;
        }
        
        return_RgBTBOf["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_HHNcrNi=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_RgBTBOf["members"][std::to_string(i)].push_back(temp);
        }
        return return_RgBTBOf;
        }();
return result;}

    VkSemaphoreWaitInfo deserialize_VkSemaphoreWaitInfo(json name){
        auto result=VkSemaphoreWaitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DaqbebP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DaqbebP=NULL;
        }
    temp_DaqbebP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DaqbebP;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_oBnmkNl;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_oBnmkNl=NULL;
        }
    temp_oBnmkNl=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int ivtvhfB=0; ivtvhfB < result.semaphoreCount; ivtvhfB++){
            [&]() {
temp_oBnmkNl[ivtvhfB]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][ivtvhfB]);}();;
        }
        }();result.pSemaphores=temp_oBnmkNl;}();
[&]() {
uint64_t* temp_ApHgwLL;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_ApHgwLL=NULL;
        }
    temp_ApHgwLL=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int XUjTXUz=0; XUjTXUz < result.semaphoreCount; XUjTXUz++){
            [&]() {
temp_ApHgwLL[XUjTXUz]=deserialize_uint64_t(name["members"]["pValues"]["members"][XUjTXUz]);}();;
        }
        }();result.pValues=temp_ApHgwLL;}();
return result;}

    json serialize_VkSemaphoreWaitInfoKHR(VkSemaphoreWaitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CzFXCfC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NuBrSqS=json({});
    
        if (name.pNext==NULL){
            return_NuBrSqS["null"]=true;
            return return_NuBrSqS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_nahnlfa=json({});
    return serialize_VkSemaphoreWaitFlags(name.flags);}();
result["members"]["semaphoreCount"]=[&]() {
    json return_ACgfyFg=json({});
    return serialize_uint32_t(name.semaphoreCount);}();
result["members"]["pSemaphores"]=[&]() {
    json return_dUvBOhv=json({});
    
        if (name.pSemaphores==NULL){
            return_dUvBOhv["null"]=true;
            return return_dUvBOhv;
        }
        
        return_dUvBOhv["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_BdloPEq=json({});
    return serialize_VkSemaphore(name.pSemaphores[i]);}();
            return_dUvBOhv["members"][std::to_string(i)].push_back(temp);
        }
        return return_dUvBOhv;
        }();
result["members"]["pValues"]=[&]() {
    json return_cALOIhO=json({});
    
        if (name.pValues==NULL){
            return_cALOIhO["null"]=true;
            return return_cALOIhO;
        }
        
        return_cALOIhO["members"]={};
        for(int i=0; i < name.semaphoreCount; i++){
            json temp;
            temp=[&]() {
    json return_uikMTkO=json({});
    return serialize_uint64_t(name.pValues[i]);}();
            return_cALOIhO["members"][std::to_string(i)].push_back(temp);
        }
        return return_cALOIhO;
        }();
return result;}

    VkSemaphoreWaitInfoKHR deserialize_VkSemaphoreWaitInfoKHR(json name){
        auto result=VkSemaphoreWaitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fRHqbHj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fRHqbHj=NULL;
        }
    temp_fRHqbHj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fRHqbHj;}();
[&]() {
result.flags=deserialize_VkSemaphoreWaitFlags(name["members"]["flags"]);}();
[&]() {
result.semaphoreCount=deserialize_uint32_t(name["members"]["semaphoreCount"]);}();
[&]() {
VkSemaphore* temp_kGYEOwg;[&]() {

        if (name["members"]["pSemaphores"].contains("null")){
        temp_kGYEOwg=NULL;
        }
    temp_kGYEOwg=(VkSemaphore*)malloc(result.semaphoreCount*sizeof(VkSemaphore));
        for (int JYdbwNR=0; JYdbwNR < result.semaphoreCount; JYdbwNR++){
            [&]() {
temp_kGYEOwg[JYdbwNR]=deserialize_VkSemaphore(name["members"]["pSemaphores"]["members"][JYdbwNR]);}();;
        }
        }();result.pSemaphores=temp_kGYEOwg;}();
[&]() {
uint64_t* temp_knjsNVK;[&]() {

        if (name["members"]["pValues"].contains("null")){
        temp_knjsNVK=NULL;
        }
    temp_knjsNVK=(uint64_t*)malloc(result.semaphoreCount*sizeof(uint64_t));
        for (int VgMAlDw=0; VgMAlDw < result.semaphoreCount; VgMAlDw++){
            [&]() {
temp_knjsNVK[VgMAlDw]=deserialize_uint64_t(name["members"]["pValues"]["members"][VgMAlDw]);}();;
        }
        }();result.pValues=temp_knjsNVK;}();
return result;}

    json serialize_VkSemaphoreSignalInfo(VkSemaphoreSignalInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZQcfwfo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DogXHwQ=json({});
    
        if (name.pNext==NULL){
            return_DogXHwQ["null"]=true;
            return return_DogXHwQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_IJFfFjN=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_QMUSslW=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfo deserialize_VkSemaphoreSignalInfo(json name){
        auto result=VkSemaphoreSignalInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qjkoUOs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qjkoUOs=NULL;
        }
    temp_qjkoUOs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qjkoUOs;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkSemaphoreSignalInfoKHR(VkSemaphoreSignalInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JrjLLKs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LclKxCc=json({});
    
        if (name.pNext==NULL){
            return_LclKxCc["null"]=true;
            return return_LclKxCc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_cHgINlR=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_DmZTbOW=json({});
    return serialize_uint64_t(name.value);}();
return result;}

    VkSemaphoreSignalInfoKHR deserialize_VkSemaphoreSignalInfoKHR(json name){
        auto result=VkSemaphoreSignalInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cHQkWGD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cHQkWGD=NULL;
        }
    temp_cHQkWGD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cHQkWGD;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
return result;}

    json serialize_VkVertexInputBindingDivisorDescriptionEXT(VkVertexInputBindingDivisorDescriptionEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["binding"]=[&]() {
    json return_vMfqNyD=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["divisor"]=[&]() {
    json return_NpKdrmO=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDivisorDescriptionEXT deserialize_VkVertexInputBindingDivisorDescriptionEXT(json name){
        auto result=VkVertexInputBindingDivisorDescriptionEXT();
    
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(VkPipelineVertexInputDivisorStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JYBtcQW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YJnLzPI=json({});
    
        if (name.pNext==NULL){
            return_YJnLzPI["null"]=true;
            return return_YJnLzPI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexBindingDivisorCount"]=[&]() {
    json return_kVEnVSi=json({});
    return serialize_uint32_t(name.vertexBindingDivisorCount);}();
result["members"]["pVertexBindingDivisors"]=[&]() {
    json return_GrqAICv=json({});
    
        if (name.pVertexBindingDivisors==NULL){
            return_GrqAICv["null"]=true;
            return return_GrqAICv;
        }
        
        return_GrqAICv["members"]={};
        for(int i=0; i < name.vertexBindingDivisorCount; i++){
            json temp;
            temp=[&]() {
    json return_CitjHuE=json({});
    return serialize_VkVertexInputBindingDivisorDescriptionEXT(name.pVertexBindingDivisors[i]);}();
            return_GrqAICv["members"][std::to_string(i)].push_back(temp);
        }
        return return_GrqAICv;
        }();
return result;}

    VkPipelineVertexInputDivisorStateCreateInfoEXT deserialize_VkPipelineVertexInputDivisorStateCreateInfoEXT(json name){
        auto result=VkPipelineVertexInputDivisorStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pJGuhQC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pJGuhQC=NULL;
        }
    temp_pJGuhQC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pJGuhQC;}();
[&]() {
result.vertexBindingDivisorCount=deserialize_uint32_t(name["members"]["vertexBindingDivisorCount"]);}();
[&]() {
VkVertexInputBindingDivisorDescriptionEXT* temp_NtRnUSC;[&]() {

        if (name["members"]["pVertexBindingDivisors"].contains("null")){
        temp_NtRnUSC=NULL;
        }
    temp_NtRnUSC=(VkVertexInputBindingDivisorDescriptionEXT*)malloc(result.vertexBindingDivisorCount*sizeof(VkVertexInputBindingDivisorDescriptionEXT));
        for (int DvARjUv=0; DvARjUv < result.vertexBindingDivisorCount; DvARjUv++){
            [&]() {
temp_NtRnUSC[DvARjUv]=deserialize_VkVertexInputBindingDivisorDescriptionEXT(name["members"]["pVertexBindingDivisors"]["members"][DvARjUv]);}();;
        }
        }();result.pVertexBindingDivisors=temp_NtRnUSC;}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KzIMbyX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qGtNhPk=json({});
    
        if (name.pNext==NULL){
            return_qGtNhPk["null"]=true;
            return return_qGtNhPk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxVertexAttribDivisor"]=[&]() {
    json return_TClcFVJ=json({});
    return serialize_uint32_t(name.maxVertexAttribDivisor);}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxVertexAttribDivisor=deserialize_uint32_t(name["members"]["maxVertexAttribDivisor"]);}();
return result;}

    json serialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(VkPhysicalDevicePCIBusInfoPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wVDKKgZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kMqkBnV=json({});
    
        if (name.pNext==NULL){
            return_kMqkBnV["null"]=true;
            return return_kMqkBnV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pciDomain"]=[&]() {
    json return_noOKcty=json({});
    return serialize_uint32_t(name.pciDomain);}();
result["members"]["pciBus"]=[&]() {
    json return_oiugLmt=json({});
    return serialize_uint32_t(name.pciBus);}();
result["members"]["pciDevice"]=[&]() {
    json return_vbfTXSX=json({});
    return serialize_uint32_t(name.pciDevice);}();
result["members"]["pciFunction"]=[&]() {
    json return_rlrJmDj=json({});
    return serialize_uint32_t(name.pciFunction);}();
return result;}

    VkPhysicalDevicePCIBusInfoPropertiesEXT deserialize_VkPhysicalDevicePCIBusInfoPropertiesEXT(json name){
        auto result=VkPhysicalDevicePCIBusInfoPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pciDomain=deserialize_uint32_t(name["members"]["pciDomain"]);}();
[&]() {
result.pciBus=deserialize_uint32_t(name["members"]["pciBus"]);}();
[&]() {
result.pciDevice=deserialize_uint32_t(name["members"]["pciDevice"]);}();
[&]() {
result.pciFunction=deserialize_uint32_t(name["members"]["pciFunction"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(VkCommandBufferInheritanceConditionalRenderingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uOuRrlB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BuTXyLb=json({});
    
        if (name.pNext==NULL){
            return_BuTXyLb["null"]=true;
            return return_BuTXyLb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRenderingEnable"]=[&]() {
    json return_twbYqdX=json({});
    return_twbYqdX=[&]() {
    json return_LeZqLfK=json({});
    return serialize_uint32_t(name.conditionalRenderingEnable);}();return return_twbYqdX;}();
return result;}

    VkCommandBufferInheritanceConditionalRenderingInfoEXT deserialize_VkCommandBufferInheritanceConditionalRenderingInfoEXT(json name){
        auto result=VkCommandBufferInheritanceConditionalRenderingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ldEVqRi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ldEVqRi=NULL;
        }
    temp_ldEVqRi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ldEVqRi;}();
[&]() {
[&]() {
result.conditionalRenderingEnable=deserialize_uint32_t(name["members"]["conditionalRenderingEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeatures(VkPhysicalDevice8BitStorageFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UKACxom=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bhgzUVX=json({});
    
        if (name.pNext==NULL){
            return_bhgzUVX["null"]=true;
            return return_bhgzUVX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_jCWZaWs=json({});
    return_jCWZaWs=[&]() {
    json return_ZBFEyzk=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_jCWZaWs;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_SxcRDyF=json({});
    return_SxcRDyF=[&]() {
    json return_PqGIltv=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_SxcRDyF;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_aTHqqkg=json({});
    return_aTHqqkg=[&]() {
    json return_mBjRbvJ=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_aTHqqkg;}();
return result;}

    VkPhysicalDevice8BitStorageFeatures deserialize_VkPhysicalDevice8BitStorageFeatures(json name){
        auto result=VkPhysicalDevice8BitStorageFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDevice8BitStorageFeaturesKHR(VkPhysicalDevice8BitStorageFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GyTIwfi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UborVfl=json({});
    
        if (name.pNext==NULL){
            return_UborVfl["null"]=true;
            return return_UborVfl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_GzrJDBK=json({});
    return_GzrJDBK=[&]() {
    json return_eeZhVZa=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_GzrJDBK;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_XSAiHLK=json({});
    return_XSAiHLK=[&]() {
    json return_AgfftIR=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_XSAiHLK;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_zRyZFXY=json({});
    return_zRyZFXY=[&]() {
    json return_fVxqXVB=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_zRyZFXY;}();
return result;}

    VkPhysicalDevice8BitStorageFeaturesKHR deserialize_VkPhysicalDevice8BitStorageFeaturesKHR(json name){
        auto result=VkPhysicalDevice8BitStorageFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(VkPhysicalDeviceConditionalRenderingFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YPydqFB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AjJZvKS=json({});
    
        if (name.pNext==NULL){
            return_AjJZvKS["null"]=true;
            return return_AjJZvKS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["conditionalRendering"]=[&]() {
    json return_MkMUkos=json({});
    return_MkMUkos=[&]() {
    json return_DzTvvUk=json({});
    return serialize_uint32_t(name.conditionalRendering);}();return return_MkMUkos;}();
result["members"]["inheritedConditionalRendering"]=[&]() {
    json return_EtSCWZt=json({});
    return_EtSCWZt=[&]() {
    json return_FxytGKk=json({});
    return serialize_uint32_t(name.inheritedConditionalRendering);}();return return_EtSCWZt;}();
return result;}

    VkPhysicalDeviceConditionalRenderingFeaturesEXT deserialize_VkPhysicalDeviceConditionalRenderingFeaturesEXT(json name){
        auto result=VkPhysicalDeviceConditionalRenderingFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.conditionalRendering=deserialize_uint32_t(name["members"]["conditionalRendering"]);}();}();
[&]() {
[&]() {
result.inheritedConditionalRendering=deserialize_uint32_t(name["members"]["inheritedConditionalRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeatures(VkPhysicalDeviceVulkanMemoryModelFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dnMTEiQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XIiXBBK=json({});
    
        if (name.pNext==NULL){
            return_XIiXBBK["null"]=true;
            return return_XIiXBBK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_itiCmWp=json({});
    return_itiCmWp=[&]() {
    json return_BsCfPQE=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_itiCmWp;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_rKvJOFW=json({});
    return_rKvJOFW=[&]() {
    json return_gPdvkdl=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_rKvJOFW;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_CYTBtnr=json({});
    return_CYTBtnr=[&]() {
    json return_oyasRVJ=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_CYTBtnr;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeatures deserialize_VkPhysicalDeviceVulkanMemoryModelFeatures(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(VkPhysicalDeviceVulkanMemoryModelFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HoYWgBG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cUWVBHN=json({});
    
        if (name.pNext==NULL){
            return_cUWVBHN["null"]=true;
            return return_cUWVBHN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_GrNCZJT=json({});
    return_GrNCZJT=[&]() {
    json return_CVBBrQV=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_GrNCZJT;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_otEXxir=json({});
    return_otEXxir=[&]() {
    json return_PdfPTIB=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_otEXxir;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_bkavpjR=json({});
    return_bkavpjR=[&]() {
    json return_IpFXfYB=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_bkavpjR;}();
return result;}

    VkPhysicalDeviceVulkanMemoryModelFeaturesKHR deserialize_VkPhysicalDeviceVulkanMemoryModelFeaturesKHR(json name){
        auto result=VkPhysicalDeviceVulkanMemoryModelFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64Features(VkPhysicalDeviceShaderAtomicInt64Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GHDyzCF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LpsxCEr=json({});
    
        if (name.pNext==NULL){
            return_LpsxCEr["null"]=true;
            return return_LpsxCEr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_aMywmAu=json({});
    return_aMywmAu=[&]() {
    json return_CIlKmgz=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_aMywmAu;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_hdelUvJ=json({});
    return_hdelUvJ=[&]() {
    json return_iEhlnYe=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_hdelUvJ;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64Features deserialize_VkPhysicalDeviceShaderAtomicInt64Features(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(VkPhysicalDeviceShaderAtomicInt64FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SfWqqUI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AtDbRSg=json({});
    
        if (name.pNext==NULL){
            return_AtDbRSg["null"]=true;
            return return_AtDbRSg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_bPedpCu=json({});
    return_bPedpCu=[&]() {
    json return_XqESMKP=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_bPedpCu;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_hCAvfBq=json({});
    return_hCAvfBq=[&]() {
    json return_FBubaMv=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_hCAvfBq;}();
return result;}

    VkPhysicalDeviceShaderAtomicInt64FeaturesKHR deserialize_VkPhysicalDeviceShaderAtomicInt64FeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderAtomicInt64FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(VkPhysicalDeviceShaderAtomicFloatFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jYIGvOh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jrhhxGm=json({});
    
        if (name.pNext==NULL){
            return_jrhhxGm["null"]=true;
            return return_jrhhxGm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat32Atomics"]=[&]() {
    json return_fRTvcMq=json({});
    return_fRTvcMq=[&]() {
    json return_uBokjit=json({});
    return serialize_uint32_t(name.shaderBufferFloat32Atomics);}();return return_fRTvcMq;}();
result["members"]["shaderBufferFloat32AtomicAdd"]=[&]() {
    json return_xBoscjv=json({});
    return_xBoscjv=[&]() {
    json return_OkaciTi=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicAdd);}();return return_xBoscjv;}();
result["members"]["shaderBufferFloat64Atomics"]=[&]() {
    json return_oeNqFEt=json({});
    return_oeNqFEt=[&]() {
    json return_efAnWwR=json({});
    return serialize_uint32_t(name.shaderBufferFloat64Atomics);}();return return_oeNqFEt;}();
result["members"]["shaderBufferFloat64AtomicAdd"]=[&]() {
    json return_yTldWYt=json({});
    return_yTldWYt=[&]() {
    json return_QRqpbVB=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicAdd);}();return return_yTldWYt;}();
result["members"]["shaderSharedFloat32Atomics"]=[&]() {
    json return_RmSZwXu=json({});
    return_RmSZwXu=[&]() {
    json return_lmrYOzF=json({});
    return serialize_uint32_t(name.shaderSharedFloat32Atomics);}();return return_RmSZwXu;}();
result["members"]["shaderSharedFloat32AtomicAdd"]=[&]() {
    json return_VLBFWzM=json({});
    return_VLBFWzM=[&]() {
    json return_giWYQvE=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicAdd);}();return return_VLBFWzM;}();
result["members"]["shaderSharedFloat64Atomics"]=[&]() {
    json return_DdSRQTU=json({});
    return_DdSRQTU=[&]() {
    json return_MviIfGq=json({});
    return serialize_uint32_t(name.shaderSharedFloat64Atomics);}();return return_DdSRQTU;}();
result["members"]["shaderSharedFloat64AtomicAdd"]=[&]() {
    json return_miraRRo=json({});
    return_miraRRo=[&]() {
    json return_FKwvHCQ=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicAdd);}();return return_miraRRo;}();
result["members"]["shaderImageFloat32Atomics"]=[&]() {
    json return_IBuxtYo=json({});
    return_IBuxtYo=[&]() {
    json return_OLWJHmD=json({});
    return serialize_uint32_t(name.shaderImageFloat32Atomics);}();return return_IBuxtYo;}();
result["members"]["shaderImageFloat32AtomicAdd"]=[&]() {
    json return_JJhJKTT=json({});
    return_JJhJKTT=[&]() {
    json return_tuoScCc=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicAdd);}();return return_JJhJKTT;}();
result["members"]["sparseImageFloat32Atomics"]=[&]() {
    json return_FCiEYOn=json({});
    return_FCiEYOn=[&]() {
    json return_OQKemEP=json({});
    return serialize_uint32_t(name.sparseImageFloat32Atomics);}();return return_FCiEYOn;}();
result["members"]["sparseImageFloat32AtomicAdd"]=[&]() {
    json return_mgPDOkU=json({});
    return_mgPDOkU=[&]() {
    json return_nlLtphk=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicAdd);}();return return_mgPDOkU;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloatFeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloatFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloatFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat32Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32Atomics=deserialize_uint32_t(name["members"]["shaderImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicAdd"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32Atomics=deserialize_uint32_t(name["members"]["sparseImageFloat32Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicAdd=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicAdd"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fUNCaht=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hsWQjQw=json({});
    
        if (name.pNext==NULL){
            return_hsWQjQw["null"]=true;
            return return_hsWQjQw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBufferFloat16Atomics"]=[&]() {
    json return_GecWNJY=json({});
    return_GecWNJY=[&]() {
    json return_XorcVMD=json({});
    return serialize_uint32_t(name.shaderBufferFloat16Atomics);}();return return_GecWNJY;}();
result["members"]["shaderBufferFloat16AtomicAdd"]=[&]() {
    json return_EJtoMxu=json({});
    return_EJtoMxu=[&]() {
    json return_VJjblid=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicAdd);}();return return_EJtoMxu;}();
result["members"]["shaderBufferFloat16AtomicMinMax"]=[&]() {
    json return_SxMvxcB=json({});
    return_SxMvxcB=[&]() {
    json return_QPhwZoS=json({});
    return serialize_uint32_t(name.shaderBufferFloat16AtomicMinMax);}();return return_SxMvxcB;}();
result["members"]["shaderBufferFloat32AtomicMinMax"]=[&]() {
    json return_KZThFNp=json({});
    return_KZThFNp=[&]() {
    json return_iHVAWhe=json({});
    return serialize_uint32_t(name.shaderBufferFloat32AtomicMinMax);}();return return_KZThFNp;}();
result["members"]["shaderBufferFloat64AtomicMinMax"]=[&]() {
    json return_UhoKpkr=json({});
    return_UhoKpkr=[&]() {
    json return_hQFtOQh=json({});
    return serialize_uint32_t(name.shaderBufferFloat64AtomicMinMax);}();return return_UhoKpkr;}();
result["members"]["shaderSharedFloat16Atomics"]=[&]() {
    json return_BHYzDDO=json({});
    return_BHYzDDO=[&]() {
    json return_tmkqzdy=json({});
    return serialize_uint32_t(name.shaderSharedFloat16Atomics);}();return return_BHYzDDO;}();
result["members"]["shaderSharedFloat16AtomicAdd"]=[&]() {
    json return_ljQtyMs=json({});
    return_ljQtyMs=[&]() {
    json return_hKxsneZ=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicAdd);}();return return_ljQtyMs;}();
result["members"]["shaderSharedFloat16AtomicMinMax"]=[&]() {
    json return_BDlIqLn=json({});
    return_BDlIqLn=[&]() {
    json return_kzMOaZu=json({});
    return serialize_uint32_t(name.shaderSharedFloat16AtomicMinMax);}();return return_BDlIqLn;}();
result["members"]["shaderSharedFloat32AtomicMinMax"]=[&]() {
    json return_QQWEmOP=json({});
    return_QQWEmOP=[&]() {
    json return_EKSwoBh=json({});
    return serialize_uint32_t(name.shaderSharedFloat32AtomicMinMax);}();return return_QQWEmOP;}();
result["members"]["shaderSharedFloat64AtomicMinMax"]=[&]() {
    json return_ooBmHRc=json({});
    return_ooBmHRc=[&]() {
    json return_HZZcYME=json({});
    return serialize_uint32_t(name.shaderSharedFloat64AtomicMinMax);}();return return_ooBmHRc;}();
result["members"]["shaderImageFloat32AtomicMinMax"]=[&]() {
    json return_cvJmJwh=json({});
    return_cvJmJwh=[&]() {
    json return_RQHfzlM=json({});
    return serialize_uint32_t(name.shaderImageFloat32AtomicMinMax);}();return return_cvJmJwh;}();
result["members"]["sparseImageFloat32AtomicMinMax"]=[&]() {
    json return_KeEkSBT=json({});
    return_KeEkSBT=[&]() {
    json return_FAkzmVB=json({});
    return serialize_uint32_t(name.sparseImageFloat32AtomicMinMax);}();return return_KeEkSBT;}();
return result;}

    VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT deserialize_VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderBufferFloat16Atomics=deserialize_uint32_t(name["members"]["shaderBufferFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderBufferFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderBufferFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16Atomics=deserialize_uint32_t(name["members"]["shaderSharedFloat16Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicAdd=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicAdd"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat16AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat16AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderSharedFloat64AtomicMinMax=deserialize_uint32_t(name["members"]["shaderSharedFloat64AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.shaderImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["shaderImageFloat32AtomicMinMax"]);}();}();
[&]() {
[&]() {
result.sparseImageFloat32AtomicMinMax=deserialize_uint32_t(name["members"]["sparseImageFloat32AtomicMinMax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BldZIsI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GXJuwdG=json({});
    
        if (name.pNext==NULL){
            return_GXJuwdG["null"]=true;
            return return_GXJuwdG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexAttributeInstanceRateDivisor"]=[&]() {
    json return_HRZqIxW=json({});
    return_HRZqIxW=[&]() {
    json return_howgDNR=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateDivisor);}();return return_HRZqIxW;}();
result["members"]["vertexAttributeInstanceRateZeroDivisor"]=[&]() {
    json return_hmKWRyq=json({});
    return_hmKWRyq=[&]() {
    json return_kvNoTky=json({});
    return serialize_uint32_t(name.vertexAttributeInstanceRateZeroDivisor);}();return return_hmKWRyq;}();
return result;}

    VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT deserialize_VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateDivisor"]);}();}();
[&]() {
[&]() {
result.vertexAttributeInstanceRateZeroDivisor=deserialize_uint32_t(name["members"]["vertexAttributeInstanceRateZeroDivisor"]);}();}();
return result;}

    json serialize_VkQueueFamilyCheckpointPropertiesNV(VkQueueFamilyCheckpointPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_snTuvcY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dghboeS=json({});
    
        if (name.pNext==NULL){
            return_dghboeS["null"]=true;
            return return_dghboeS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_XFFfaqT=json({});
    return serialize_VkPipelineStageFlags(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointPropertiesNV deserialize_VkQueueFamilyCheckpointPropertiesNV(json name){
        auto result=VkQueueFamilyCheckpointPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointDataNV(VkCheckpointDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rTbJvcp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KfkhGKK=json({});
    
        if (name.pNext==NULL){
            return_KfkhGKK["null"]=true;
            return return_KfkhGKK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_KNLVoZe=json({});
    return serialize_VkPipelineStageFlagBits(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_fVzISBT=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_fVzISBT["null"]=true;
            return return_fVzISBT;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointDataNV deserialize_VkCheckpointDataNV(json name){
        auto result=VkCheckpointDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlagBits(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolveProperties(VkPhysicalDeviceDepthStencilResolveProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sdqEcKF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iNRQVno=json({});
    
        if (name.pNext==NULL){
            return_iNRQVno["null"]=true;
            return return_iNRQVno;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_cqlhjoB=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_GXwgTpb=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_mGHmRkO=json({});
    return_mGHmRkO=[&]() {
    json return_FaIfSPg=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_mGHmRkO;}();
result["members"]["independentResolve"]=[&]() {
    json return_XNlekij=json({});
    return_XNlekij=[&]() {
    json return_zYJGmcN=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_XNlekij;}();
return result;}

    VkPhysicalDeviceDepthStencilResolveProperties deserialize_VkPhysicalDeviceDepthStencilResolveProperties(json name){
        auto result=VkPhysicalDeviceDepthStencilResolveProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(VkPhysicalDeviceDepthStencilResolvePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fvaIoST=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QwIUVrO=json({});
    
        if (name.pNext==NULL){
            return_QwIUVrO["null"]=true;
            return return_QwIUVrO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_TYxxPwA=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_NpjRerG=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_YLaBdmi=json({});
    return_YLaBdmi=[&]() {
    json return_GToXUOU=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_YLaBdmi;}();
result["members"]["independentResolve"]=[&]() {
    json return_bUXWFqH=json({});
    return_bUXWFqH=[&]() {
    json return_NRlHZcA=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_bUXWFqH;}();
return result;}

    VkPhysicalDeviceDepthStencilResolvePropertiesKHR deserialize_VkPhysicalDeviceDepthStencilResolvePropertiesKHR(json name){
        auto result=VkPhysicalDeviceDepthStencilResolvePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolve(VkSubpassDescriptionDepthStencilResolve name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MzmKpzj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oQPqFOS=json({});
    
        if (name.pNext==NULL){
            return_oQPqFOS["null"]=true;
            return return_oQPqFOS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_hnhnqbq=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_AWBNPnr=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_dNsebgA=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_dNsebgA["null"]=true;
            return return_dNsebgA;
        }
        return_dNsebgA=[&]() {
    json return_mFmowAf=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_dNsebgA;}();
return result;}

    VkSubpassDescriptionDepthStencilResolve deserialize_VkSubpassDescriptionDepthStencilResolve(json name){
        auto result=VkSubpassDescriptionDepthStencilResolve();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ViIWddy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ViIWddy=NULL;
        }
    temp_ViIWddy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ViIWddy;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_pVLJsMc;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_pVLJsMc=NULL;
        }
    [&]() {
*(temp_pVLJsMc)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_pVLJsMc;}();
return result;}

    json serialize_VkSubpassDescriptionDepthStencilResolveKHR(VkSubpassDescriptionDepthStencilResolveKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TydwmPr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SzQbFVD=json({});
    
        if (name.pNext==NULL){
            return_SzQbFVD["null"]=true;
            return return_SzQbFVD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthResolveMode"]=[&]() {
    json return_qQCEZvs=json({});
    return serialize_VkResolveModeFlagBits(name.depthResolveMode);}();
result["members"]["stencilResolveMode"]=[&]() {
    json return_eLtCzWN=json({});
    return serialize_VkResolveModeFlagBits(name.stencilResolveMode);}();
result["members"]["pDepthStencilResolveAttachment"]=[&]() {
    json return_EXDxPxv=json({});
    
        if (name.pDepthStencilResolveAttachment==NULL){
            return_EXDxPxv["null"]=true;
            return return_EXDxPxv;
        }
        return_EXDxPxv=[&]() {
    json return_glVHROj=json({});
    return serialize_VkAttachmentReference2(*name.pDepthStencilResolveAttachment);}();
return return_EXDxPxv;}();
return result;}

    VkSubpassDescriptionDepthStencilResolveKHR deserialize_VkSubpassDescriptionDepthStencilResolveKHR(json name){
        auto result=VkSubpassDescriptionDepthStencilResolveKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hXqUGoR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hXqUGoR=NULL;
        }
    temp_hXqUGoR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hXqUGoR;}();
[&]() {
result.depthResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["depthResolveMode"]);}();
[&]() {
result.stencilResolveMode=deserialize_VkResolveModeFlagBits(name["members"]["stencilResolveMode"]);}();
[&]() {
VkAttachmentReference2* temp_ARuZcLk;[&]() {

        if (name["members"]["pDepthStencilResolveAttachment"].contains("null")){
        temp_ARuZcLk=NULL;
        }
    [&]() {
*(temp_ARuZcLk)=deserialize_VkAttachmentReference2(name["members"]["pDepthStencilResolveAttachment"]);}();
}();result.pDepthStencilResolveAttachment=temp_ARuZcLk;}();
return result;}

    json serialize_VkImageViewASTCDecodeModeEXT(VkImageViewASTCDecodeModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dNDtyuK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_egNeJBZ=json({});
    
        if (name.pNext==NULL){
            return_egNeJBZ["null"]=true;
            return return_egNeJBZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeMode"]=[&]() {
    json return_YLYxCFn=json({});
    return serialize_VkFormat(name.decodeMode);}();
return result;}

    VkImageViewASTCDecodeModeEXT deserialize_VkImageViewASTCDecodeModeEXT(json name){
        auto result=VkImageViewASTCDecodeModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xNoGmWo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xNoGmWo=NULL;
        }
    temp_xNoGmWo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xNoGmWo;}();
[&]() {
result.decodeMode=deserialize_VkFormat(name["members"]["decodeMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(VkPhysicalDeviceASTCDecodeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bnnLgCr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YXAyUSQ=json({});
    
        if (name.pNext==NULL){
            return_YXAyUSQ["null"]=true;
            return return_YXAyUSQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decodeModeSharedExponent"]=[&]() {
    json return_fxOkvxz=json({});
    return_fxOkvxz=[&]() {
    json return_MCJxtQk=json({});
    return serialize_uint32_t(name.decodeModeSharedExponent);}();return return_fxOkvxz;}();
return result;}

    VkPhysicalDeviceASTCDecodeFeaturesEXT deserialize_VkPhysicalDeviceASTCDecodeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceASTCDecodeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.decodeModeSharedExponent=deserialize_uint32_t(name["members"]["decodeModeSharedExponent"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(VkPhysicalDeviceTransformFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jxfMQJe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EnFarTI=json({});
    
        if (name.pNext==NULL){
            return_EnFarTI["null"]=true;
            return return_EnFarTI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transformFeedback"]=[&]() {
    json return_PiYEyOf=json({});
    return_PiYEyOf=[&]() {
    json return_QdYIdZt=json({});
    return serialize_uint32_t(name.transformFeedback);}();return return_PiYEyOf;}();
result["members"]["geometryStreams"]=[&]() {
    json return_vAKCPAF=json({});
    return_vAKCPAF=[&]() {
    json return_khXdYSA=json({});
    return serialize_uint32_t(name.geometryStreams);}();return return_vAKCPAF;}();
return result;}

    VkPhysicalDeviceTransformFeedbackFeaturesEXT deserialize_VkPhysicalDeviceTransformFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.transformFeedback=deserialize_uint32_t(name["members"]["transformFeedback"]);}();}();
[&]() {
[&]() {
result.geometryStreams=deserialize_uint32_t(name["members"]["geometryStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(VkPhysicalDeviceTransformFeedbackPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VhHCuDq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zNFcnYL=json({});
    
        if (name.pNext==NULL){
            return_zNFcnYL["null"]=true;
            return return_zNFcnYL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTransformFeedbackStreams"]=[&]() {
    json return_gdVVUPH=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreams);}();
result["members"]["maxTransformFeedbackBuffers"]=[&]() {
    json return_QOqDtrl=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBuffers);}();
result["members"]["maxTransformFeedbackBufferSize"]=[&]() {
    json return_thrcFyG=json({});
    return_thrcFyG=[&]() {
    json return_FXfSHWw=json({});
    return serialize_uint64_t(name.maxTransformFeedbackBufferSize);}();return return_thrcFyG;}();
result["members"]["maxTransformFeedbackStreamDataSize"]=[&]() {
    json return_ddatTMg=json({});
    return serialize_uint32_t(name.maxTransformFeedbackStreamDataSize);}();
result["members"]["maxTransformFeedbackBufferDataSize"]=[&]() {
    json return_hhUzWps=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataSize);}();
result["members"]["maxTransformFeedbackBufferDataStride"]=[&]() {
    json return_WGKXjNV=json({});
    return serialize_uint32_t(name.maxTransformFeedbackBufferDataStride);}();
result["members"]["transformFeedbackQueries"]=[&]() {
    json return_YJMrzFa=json({});
    return_YJMrzFa=[&]() {
    json return_HWnEIYr=json({});
    return serialize_uint32_t(name.transformFeedbackQueries);}();return return_YJMrzFa;}();
result["members"]["transformFeedbackStreamsLinesTriangles"]=[&]() {
    json return_ezPBBOt=json({});
    return_ezPBBOt=[&]() {
    json return_FxDrRvy=json({});
    return serialize_uint32_t(name.transformFeedbackStreamsLinesTriangles);}();return return_ezPBBOt;}();
result["members"]["transformFeedbackRasterizationStreamSelect"]=[&]() {
    json return_bhnEhCh=json({});
    return_bhnEhCh=[&]() {
    json return_tZcDbyO=json({});
    return serialize_uint32_t(name.transformFeedbackRasterizationStreamSelect);}();return return_bhnEhCh;}();
result["members"]["transformFeedbackDraw"]=[&]() {
    json return_vRBSZir=json({});
    return_vRBSZir=[&]() {
    json return_zbaqgUz=json({});
    return serialize_uint32_t(name.transformFeedbackDraw);}();return return_vRBSZir;}();
return result;}

    VkPhysicalDeviceTransformFeedbackPropertiesEXT deserialize_VkPhysicalDeviceTransformFeedbackPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTransformFeedbackPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTransformFeedbackStreams=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreams"]);}();
[&]() {
result.maxTransformFeedbackBuffers=deserialize_uint32_t(name["members"]["maxTransformFeedbackBuffers"]);}();
[&]() {
[&]() {
result.maxTransformFeedbackBufferSize=deserialize_uint64_t(name["members"]["maxTransformFeedbackBufferSize"]);}();}();
[&]() {
result.maxTransformFeedbackStreamDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackStreamDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataSize=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataSize"]);}();
[&]() {
result.maxTransformFeedbackBufferDataStride=deserialize_uint32_t(name["members"]["maxTransformFeedbackBufferDataStride"]);}();
[&]() {
[&]() {
result.transformFeedbackQueries=deserialize_uint32_t(name["members"]["transformFeedbackQueries"]);}();}();
[&]() {
[&]() {
result.transformFeedbackStreamsLinesTriangles=deserialize_uint32_t(name["members"]["transformFeedbackStreamsLinesTriangles"]);}();}();
[&]() {
[&]() {
result.transformFeedbackRasterizationStreamSelect=deserialize_uint32_t(name["members"]["transformFeedbackRasterizationStreamSelect"]);}();}();
[&]() {
[&]() {
result.transformFeedbackDraw=deserialize_uint32_t(name["members"]["transformFeedbackDraw"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationStateStreamCreateInfoEXT(VkPipelineRasterizationStateStreamCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IrOOHqC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CBtvbyS=json({});
    
        if (name.pNext==NULL){
            return_CBtvbyS["null"]=true;
            return return_CBtvbyS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FaUUvxo=json({});
    return serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name.flags);}();
result["members"]["rasterizationStream"]=[&]() {
    json return_RZPexyu=json({});
    return serialize_uint32_t(name.rasterizationStream);}();
return result;}

    VkPipelineRasterizationStateStreamCreateInfoEXT deserialize_VkPipelineRasterizationStateStreamCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationStateStreamCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dzkxUZv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dzkxUZv=NULL;
        }
    temp_dzkxUZv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dzkxUZv;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.rasterizationStream=deserialize_uint32_t(name["members"]["rasterizationStream"]);}();
return result;}

    json serialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RTVYMdN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HaUjSqn=json({});
    
        if (name.pNext==NULL){
            return_HaUjSqn["null"]=true;
            return return_HaUjSqn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTest"]=[&]() {
    json return_MDovyOb=json({});
    return_MDovyOb=[&]() {
    json return_EdsjYtt=json({});
    return serialize_uint32_t(name.representativeFragmentTest);}();return return_MDovyOb;}();
return result;}

    VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV deserialize_VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV(json name){
        auto result=VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.representativeFragmentTest=deserialize_uint32_t(name["members"]["representativeFragmentTest"]);}();}();
return result;}

    json serialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(VkPipelineRepresentativeFragmentTestStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UaBRMJg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LcBoAmb=json({});
    
        if (name.pNext==NULL){
            return_LcBoAmb["null"]=true;
            return return_LcBoAmb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["representativeFragmentTestEnable"]=[&]() {
    json return_WcOxlOp=json({});
    return_WcOxlOp=[&]() {
    json return_LfQYixm=json({});
    return serialize_uint32_t(name.representativeFragmentTestEnable);}();return return_WcOxlOp;}();
return result;}

    VkPipelineRepresentativeFragmentTestStateCreateInfoNV deserialize_VkPipelineRepresentativeFragmentTestStateCreateInfoNV(json name){
        auto result=VkPipelineRepresentativeFragmentTestStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EinDClC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EinDClC=NULL;
        }
    temp_EinDClC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EinDClC;}();
[&]() {
[&]() {
result.representativeFragmentTestEnable=deserialize_uint32_t(name["members"]["representativeFragmentTestEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(VkPhysicalDeviceExclusiveScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xMfOVoV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JNeosFK=json({});
    
        if (name.pNext==NULL){
            return_JNeosFK["null"]=true;
            return return_JNeosFK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissor"]=[&]() {
    json return_fqhdNDz=json({});
    return_fqhdNDz=[&]() {
    json return_jYbUTzM=json({});
    return serialize_uint32_t(name.exclusiveScissor);}();return return_fqhdNDz;}();
return result;}

    VkPhysicalDeviceExclusiveScissorFeaturesNV deserialize_VkPhysicalDeviceExclusiveScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceExclusiveScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.exclusiveScissor=deserialize_uint32_t(name["members"]["exclusiveScissor"]);}();}();
return result;}

    json serialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(VkPipelineViewportExclusiveScissorStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xvjceTs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ODYJQuZ=json({});
    
        if (name.pNext==NULL){
            return_ODYJQuZ["null"]=true;
            return return_ODYJQuZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["exclusiveScissorCount"]=[&]() {
    json return_tKERhrd=json({});
    return serialize_uint32_t(name.exclusiveScissorCount);}();
result["members"]["pExclusiveScissors"]=[&]() {
    json return_NyNeGhP=json({});
    
        if (name.pExclusiveScissors==NULL){
            return_NyNeGhP["null"]=true;
            return return_NyNeGhP;
        }
        
        return_NyNeGhP["members"]={};
        for(int i=0; i < name.exclusiveScissorCount; i++){
            json temp;
            temp=[&]() {
    json return_eteByJC=json({});
    return serialize_VkRect2D(name.pExclusiveScissors[i]);}();
            return_NyNeGhP["members"][std::to_string(i)].push_back(temp);
        }
        return return_NyNeGhP;
        }();
return result;}

    VkPipelineViewportExclusiveScissorStateCreateInfoNV deserialize_VkPipelineViewportExclusiveScissorStateCreateInfoNV(json name){
        auto result=VkPipelineViewportExclusiveScissorStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nsMjgpP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nsMjgpP=NULL;
        }
    temp_nsMjgpP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nsMjgpP;}();
[&]() {
result.exclusiveScissorCount=deserialize_uint32_t(name["members"]["exclusiveScissorCount"]);}();
[&]() {
VkRect2D* temp_yyxpVBD;[&]() {

        if (name["members"]["pExclusiveScissors"].contains("null")){
        temp_yyxpVBD=NULL;
        }
    temp_yyxpVBD=(VkRect2D*)malloc(result.exclusiveScissorCount*sizeof(VkRect2D));
        for (int aCbgMdS=0; aCbgMdS < result.exclusiveScissorCount; aCbgMdS++){
            [&]() {
temp_yyxpVBD[aCbgMdS]=deserialize_VkRect2D(name["members"]["pExclusiveScissors"]["members"][aCbgMdS]);}();;
        }
        }();result.pExclusiveScissors=temp_yyxpVBD;}();
return result;}

    json serialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(VkPhysicalDeviceCornerSampledImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DIMVZSr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RLdiRYk=json({});
    
        if (name.pNext==NULL){
            return_RLdiRYk["null"]=true;
            return return_RLdiRYk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cornerSampledImage"]=[&]() {
    json return_OoLgfCk=json({});
    return_OoLgfCk=[&]() {
    json return_QfvGlpW=json({});
    return serialize_uint32_t(name.cornerSampledImage);}();return return_OoLgfCk;}();
return result;}

    VkPhysicalDeviceCornerSampledImageFeaturesNV deserialize_VkPhysicalDeviceCornerSampledImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceCornerSampledImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cornerSampledImage=deserialize_uint32_t(name["members"]["cornerSampledImage"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(VkPhysicalDeviceComputeShaderDerivativesFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uhnTfds=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BEUIaRF=json({});
    
        if (name.pNext==NULL){
            return_BEUIaRF["null"]=true;
            return return_BEUIaRF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["computeDerivativeGroupQuads"]=[&]() {
    json return_GXbXQgm=json({});
    return_GXbXQgm=[&]() {
    json return_jmjeraj=json({});
    return serialize_uint32_t(name.computeDerivativeGroupQuads);}();return return_GXbXQgm;}();
result["members"]["computeDerivativeGroupLinear"]=[&]() {
    json return_ShFbjEd=json({});
    return_ShFbjEd=[&]() {
    json return_QGJBoSF=json({});
    return serialize_uint32_t(name.computeDerivativeGroupLinear);}();return return_ShFbjEd;}();
return result;}

    VkPhysicalDeviceComputeShaderDerivativesFeaturesNV deserialize_VkPhysicalDeviceComputeShaderDerivativesFeaturesNV(json name){
        auto result=VkPhysicalDeviceComputeShaderDerivativesFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.computeDerivativeGroupQuads=deserialize_uint32_t(name["members"]["computeDerivativeGroupQuads"]);}();}();
[&]() {
[&]() {
result.computeDerivativeGroupLinear=deserialize_uint32_t(name["members"]["computeDerivativeGroupLinear"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(VkPhysicalDeviceShaderImageFootprintFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SnNyGyq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PNfyZtQ=json({});
    
        if (name.pNext==NULL){
            return_PNfyZtQ["null"]=true;
            return return_PNfyZtQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageFootprint"]=[&]() {
    json return_QfoPCVO=json({});
    return_QfoPCVO=[&]() {
    json return_SwKXgdJ=json({});
    return serialize_uint32_t(name.imageFootprint);}();return return_QfoPCVO;}();
return result;}

    VkPhysicalDeviceShaderImageFootprintFeaturesNV deserialize_VkPhysicalDeviceShaderImageFootprintFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderImageFootprintFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageFootprint=deserialize_uint32_t(name["members"]["imageFootprint"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vDIGtVN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jOuIrIJ=json({});
    
        if (name.pNext==NULL){
            return_jOuIrIJ["null"]=true;
            return return_jOuIrIJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dedicatedAllocationImageAliasing"]=[&]() {
    json return_fCnTWey=json({});
    return_fCnTWey=[&]() {
    json return_TdZvnTP=json({});
    return serialize_uint32_t(name.dedicatedAllocationImageAliasing);}();return return_fCnTWey;}();
return result;}

    VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV deserialize_VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV(json name){
        auto result=VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dedicatedAllocationImageAliasing=deserialize_uint32_t(name["members"]["dedicatedAllocationImageAliasing"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(VkPhysicalDeviceCopyMemoryIndirectFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iRvkmQY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wrOFyJP=json({});
    
        if (name.pNext==NULL){
            return_wrOFyJP["null"]=true;
            return return_wrOFyJP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indirectCopy"]=[&]() {
    json return_RfPoJLB=json({});
    return_RfPoJLB=[&]() {
    json return_NBaSITq=json({});
    return serialize_uint32_t(name.indirectCopy);}();return return_RfPoJLB;}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectFeaturesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectFeaturesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indirectCopy=deserialize_uint32_t(name["members"]["indirectCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(VkPhysicalDeviceCopyMemoryIndirectPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xXBzwIH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SVVsBZb=json({});
    
        if (name.pNext==NULL){
            return_SVVsBZb["null"]=true;
            return return_SVVsBZb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedQueues"]=[&]() {
    json return_OJrcblf=json({});
    return serialize_VkQueueFlags(name.supportedQueues);}();
return result;}

    VkPhysicalDeviceCopyMemoryIndirectPropertiesNV deserialize_VkPhysicalDeviceCopyMemoryIndirectPropertiesNV(json name){
        auto result=VkPhysicalDeviceCopyMemoryIndirectPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedQueues=deserialize_VkQueueFlags(name["members"]["supportedQueues"]);}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(VkPhysicalDeviceMemoryDecompressionFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mShZcrB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZQVlveB=json({});
    
        if (name.pNext==NULL){
            return_ZQVlveB["null"]=true;
            return return_ZQVlveB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryDecompression"]=[&]() {
    json return_dURLIKZ=json({});
    return_dURLIKZ=[&]() {
    json return_auCKsov=json({});
    return serialize_uint32_t(name.memoryDecompression);}();return return_dURLIKZ;}();
return result;}

    VkPhysicalDeviceMemoryDecompressionFeaturesNV deserialize_VkPhysicalDeviceMemoryDecompressionFeaturesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryDecompression=deserialize_uint32_t(name["members"]["memoryDecompression"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(VkPhysicalDeviceMemoryDecompressionPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZCzXhIj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CCfnaKs=json({});
    
        if (name.pNext==NULL){
            return_CCfnaKs["null"]=true;
            return return_CCfnaKs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["decompressionMethods"]=[&]() {
    json return_PFIAQDc=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethods);}();
result["members"]["maxDecompressionIndirectCount"]=[&]() {
    json return_HwYIicC=json({});
    return serialize_uint64_t(name.maxDecompressionIndirectCount);}();
return result;}

    VkPhysicalDeviceMemoryDecompressionPropertiesNV deserialize_VkPhysicalDeviceMemoryDecompressionPropertiesNV(json name){
        auto result=VkPhysicalDeviceMemoryDecompressionPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.decompressionMethods=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethods"]);}();
[&]() {
result.maxDecompressionIndirectCount=deserialize_uint64_t(name["members"]["maxDecompressionIndirectCount"]);}();
return result;}

    json serialize_VkShadingRatePaletteNV(VkShadingRatePaletteNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRatePaletteEntryCount"]=[&]() {
    json return_UdHblMg=json({});
    return serialize_uint32_t(name.shadingRatePaletteEntryCount);}();
result["members"]["pShadingRatePaletteEntries"]=[&]() {
    json return_vXxQIof=json({});
    
        if (name.pShadingRatePaletteEntries==NULL){
            return_vXxQIof["null"]=true;
            return return_vXxQIof;
        }
        
        return_vXxQIof["members"]={};
        for(int i=0; i < name.shadingRatePaletteEntryCount; i++){
            json temp;
            temp=[&]() {
    json return_mymAoPK=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.pShadingRatePaletteEntries[i]);}();
            return_vXxQIof["members"][std::to_string(i)].push_back(temp);
        }
        return return_vXxQIof;
        }();
return result;}

    VkShadingRatePaletteNV deserialize_VkShadingRatePaletteNV(json name){
        auto result=VkShadingRatePaletteNV();
    
[&]() {
result.shadingRatePaletteEntryCount=deserialize_uint32_t(name["members"]["shadingRatePaletteEntryCount"]);}();
[&]() {
VkShadingRatePaletteEntryNV* temp_tJUuHCW;[&]() {

        if (name["members"]["pShadingRatePaletteEntries"].contains("null")){
        temp_tJUuHCW=NULL;
        }
    temp_tJUuHCW=(VkShadingRatePaletteEntryNV*)malloc(result.shadingRatePaletteEntryCount*sizeof(VkShadingRatePaletteEntryNV));
        for (int lMlHREe=0; lMlHREe < result.shadingRatePaletteEntryCount; lMlHREe++){
            [&]() {
temp_tJUuHCW[lMlHREe]=deserialize_VkShadingRatePaletteEntryNV(name["members"]["pShadingRatePaletteEntries"]["members"][lMlHREe]);}();;
        }
        }();result.pShadingRatePaletteEntries=temp_tJUuHCW;}();
return result;}

    json serialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(VkPipelineViewportShadingRateImageStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lYHlqIm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oNwZRUx=json({});
    
        if (name.pNext==NULL){
            return_oNwZRUx["null"]=true;
            return return_oNwZRUx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImageEnable"]=[&]() {
    json return_pDsYZHx=json({});
    return_pDsYZHx=[&]() {
    json return_xOldVpQ=json({});
    return serialize_uint32_t(name.shadingRateImageEnable);}();return return_pDsYZHx;}();
result["members"]["viewportCount"]=[&]() {
    json return_onIeOCK=json({});
    return serialize_uint32_t(name.viewportCount);}();
result["members"]["pShadingRatePalettes"]=[&]() {
    json return_CIcBXhp=json({});
    
        if (name.pShadingRatePalettes==NULL){
            return_CIcBXhp["null"]=true;
            return return_CIcBXhp;
        }
        
        return_CIcBXhp["members"]={};
        for(int i=0; i < name.viewportCount; i++){
            json temp;
            temp=[&]() {
    json return_iGgOECy=json({});
    return serialize_VkShadingRatePaletteNV(name.pShadingRatePalettes[i]);}();
            return_CIcBXhp["members"][std::to_string(i)].push_back(temp);
        }
        return return_CIcBXhp;
        }();
return result;}

    VkPipelineViewportShadingRateImageStateCreateInfoNV deserialize_VkPipelineViewportShadingRateImageStateCreateInfoNV(json name){
        auto result=VkPipelineViewportShadingRateImageStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gRRZMbx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gRRZMbx=NULL;
        }
    temp_gRRZMbx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gRRZMbx;}();
[&]() {
[&]() {
result.shadingRateImageEnable=deserialize_uint32_t(name["members"]["shadingRateImageEnable"]);}();}();
[&]() {
result.viewportCount=deserialize_uint32_t(name["members"]["viewportCount"]);}();
[&]() {
VkShadingRatePaletteNV* temp_YJdYmKZ;[&]() {

        if (name["members"]["pShadingRatePalettes"].contains("null")){
        temp_YJdYmKZ=NULL;
        }
    temp_YJdYmKZ=(VkShadingRatePaletteNV*)malloc(result.viewportCount*sizeof(VkShadingRatePaletteNV));
        for (int XNFbHqH=0; XNFbHqH < result.viewportCount; XNFbHqH++){
            [&]() {
temp_YJdYmKZ[XNFbHqH]=deserialize_VkShadingRatePaletteNV(name["members"]["pShadingRatePalettes"]["members"][XNFbHqH]);}();;
        }
        }();result.pShadingRatePalettes=temp_YJdYmKZ;}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImageFeaturesNV(VkPhysicalDeviceShadingRateImageFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KQGolVa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fNApvAm=json({});
    
        if (name.pNext==NULL){
            return_fNApvAm["null"]=true;
            return return_fNApvAm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateImage"]=[&]() {
    json return_wlylwMM=json({});
    return_wlylwMM=[&]() {
    json return_bCgIEnY=json({});
    return serialize_uint32_t(name.shadingRateImage);}();return return_wlylwMM;}();
result["members"]["shadingRateCoarseSampleOrder"]=[&]() {
    json return_QMShUVb=json({});
    return_QMShUVb=[&]() {
    json return_orzARFR=json({});
    return serialize_uint32_t(name.shadingRateCoarseSampleOrder);}();return return_QMShUVb;}();
return result;}

    VkPhysicalDeviceShadingRateImageFeaturesNV deserialize_VkPhysicalDeviceShadingRateImageFeaturesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImageFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shadingRateImage=deserialize_uint32_t(name["members"]["shadingRateImage"]);}();}();
[&]() {
[&]() {
result.shadingRateCoarseSampleOrder=deserialize_uint32_t(name["members"]["shadingRateCoarseSampleOrder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShadingRateImagePropertiesNV(VkPhysicalDeviceShadingRateImagePropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ifrLCEG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HDGfNkw=json({});
    
        if (name.pNext==NULL){
            return_HDGfNkw["null"]=true;
            return return_HDGfNkw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateTexelSize"]=[&]() {
    json return_frCKafH=json({});
    return serialize_VkExtent2D(name.shadingRateTexelSize);}();
result["members"]["shadingRatePaletteSize"]=[&]() {
    json return_ezmDqqc=json({});
    return serialize_uint32_t(name.shadingRatePaletteSize);}();
result["members"]["shadingRateMaxCoarseSamples"]=[&]() {
    json return_ypmyYgZ=json({});
    return serialize_uint32_t(name.shadingRateMaxCoarseSamples);}();
return result;}

    VkPhysicalDeviceShadingRateImagePropertiesNV deserialize_VkPhysicalDeviceShadingRateImagePropertiesNV(json name){
        auto result=VkPhysicalDeviceShadingRateImagePropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shadingRateTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateTexelSize"]);}();
[&]() {
result.shadingRatePaletteSize=deserialize_uint32_t(name["members"]["shadingRatePaletteSize"]);}();
[&]() {
result.shadingRateMaxCoarseSamples=deserialize_uint32_t(name["members"]["shadingRateMaxCoarseSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(VkPhysicalDeviceInvocationMaskFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WhLIZoW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vmeJonu=json({});
    
        if (name.pNext==NULL){
            return_vmeJonu["null"]=true;
            return return_vmeJonu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["invocationMask"]=[&]() {
    json return_najlEga=json({});
    return_najlEga=[&]() {
    json return_EyIuNHv=json({});
    return serialize_uint32_t(name.invocationMask);}();return return_najlEga;}();
return result;}

    VkPhysicalDeviceInvocationMaskFeaturesHUAWEI deserialize_VkPhysicalDeviceInvocationMaskFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceInvocationMaskFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.invocationMask=deserialize_uint32_t(name["members"]["invocationMask"]);}();}();
return result;}

    json serialize_VkCoarseSampleLocationNV(VkCoarseSampleLocationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pixelX"]=[&]() {
    json return_fvqhzfu=json({});
    return serialize_uint32_t(name.pixelX);}();
result["members"]["pixelY"]=[&]() {
    json return_ePkLISS=json({});
    return serialize_uint32_t(name.pixelY);}();
result["members"]["sample"]=[&]() {
    json return_WCpbDnd=json({});
    return serialize_uint32_t(name.sample);}();
return result;}

    VkCoarseSampleLocationNV deserialize_VkCoarseSampleLocationNV(json name){
        auto result=VkCoarseSampleLocationNV();
    
[&]() {
result.pixelX=deserialize_uint32_t(name["members"]["pixelX"]);}();
[&]() {
result.pixelY=deserialize_uint32_t(name["members"]["pixelY"]);}();
[&]() {
result.sample=deserialize_uint32_t(name["members"]["sample"]);}();
return result;}

    json serialize_VkCoarseSampleOrderCustomNV(VkCoarseSampleOrderCustomNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["shadingRate"]=[&]() {
    json return_CUdamLm=json({});
    return serialize_VkShadingRatePaletteEntryNV(name.shadingRate);}();
result["members"]["sampleCount"]=[&]() {
    json return_HkiJRKa=json({});
    return serialize_uint32_t(name.sampleCount);}();
result["members"]["sampleLocationCount"]=[&]() {
    json return_JLsTOzf=json({});
    return serialize_uint32_t(name.sampleLocationCount);}();
result["members"]["pSampleLocations"]=[&]() {
    json return_uabfozy=json({});
    
        if (name.pSampleLocations==NULL){
            return_uabfozy["null"]=true;
            return return_uabfozy;
        }
        
        return_uabfozy["members"]={};
        for(int i=0; i < name.sampleLocationCount; i++){
            json temp;
            temp=[&]() {
    json return_hHRzZDN=json({});
    return serialize_VkCoarseSampleLocationNV(name.pSampleLocations[i]);}();
            return_uabfozy["members"][std::to_string(i)].push_back(temp);
        }
        return return_uabfozy;
        }();
return result;}

    VkCoarseSampleOrderCustomNV deserialize_VkCoarseSampleOrderCustomNV(json name){
        auto result=VkCoarseSampleOrderCustomNV();
    
[&]() {
result.shadingRate=deserialize_VkShadingRatePaletteEntryNV(name["members"]["shadingRate"]);}();
[&]() {
result.sampleCount=deserialize_uint32_t(name["members"]["sampleCount"]);}();
[&]() {
result.sampleLocationCount=deserialize_uint32_t(name["members"]["sampleLocationCount"]);}();
[&]() {
VkCoarseSampleLocationNV* temp_cQdrwyc;[&]() {

        if (name["members"]["pSampleLocations"].contains("null")){
        temp_cQdrwyc=NULL;
        }
    temp_cQdrwyc=(VkCoarseSampleLocationNV*)malloc(result.sampleLocationCount*sizeof(VkCoarseSampleLocationNV));
        for (int PLfPomA=0; PLfPomA < result.sampleLocationCount; PLfPomA++){
            [&]() {
temp_cQdrwyc[PLfPomA]=deserialize_VkCoarseSampleLocationNV(name["members"]["pSampleLocations"]["members"][PLfPomA]);}();;
        }
        }();result.pSampleLocations=temp_cQdrwyc;}();
return result;}

    json serialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(VkPipelineViewportCoarseSampleOrderStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CSFUbUg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lyyRiRQ=json({});
    
        if (name.pNext==NULL){
            return_lyyRiRQ["null"]=true;
            return return_lyyRiRQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleOrderType"]=[&]() {
    json return_hRLVbdE=json({});
    return serialize_VkCoarseSampleOrderTypeNV(name.sampleOrderType);}();
result["members"]["customSampleOrderCount"]=[&]() {
    json return_yJwymIv=json({});
    return serialize_uint32_t(name.customSampleOrderCount);}();
result["members"]["pCustomSampleOrders"]=[&]() {
    json return_HYKFIjJ=json({});
    
        if (name.pCustomSampleOrders==NULL){
            return_HYKFIjJ["null"]=true;
            return return_HYKFIjJ;
        }
        
        return_HYKFIjJ["members"]={};
        for(int i=0; i < name.customSampleOrderCount; i++){
            json temp;
            temp=[&]() {
    json return_ymfCqfb=json({});
    return serialize_VkCoarseSampleOrderCustomNV(name.pCustomSampleOrders[i]);}();
            return_HYKFIjJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_HYKFIjJ;
        }();
return result;}

    VkPipelineViewportCoarseSampleOrderStateCreateInfoNV deserialize_VkPipelineViewportCoarseSampleOrderStateCreateInfoNV(json name){
        auto result=VkPipelineViewportCoarseSampleOrderStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WxRNVHV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WxRNVHV=NULL;
        }
    temp_WxRNVHV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WxRNVHV;}();
[&]() {
result.sampleOrderType=deserialize_VkCoarseSampleOrderTypeNV(name["members"]["sampleOrderType"]);}();
[&]() {
result.customSampleOrderCount=deserialize_uint32_t(name["members"]["customSampleOrderCount"]);}();
[&]() {
VkCoarseSampleOrderCustomNV* temp_gNZolmx;[&]() {

        if (name["members"]["pCustomSampleOrders"].contains("null")){
        temp_gNZolmx=NULL;
        }
    temp_gNZolmx=(VkCoarseSampleOrderCustomNV*)malloc(result.customSampleOrderCount*sizeof(VkCoarseSampleOrderCustomNV));
        for (int WsCTQfM=0; WsCTQfM < result.customSampleOrderCount; WsCTQfM++){
            [&]() {
temp_gNZolmx[WsCTQfM]=deserialize_VkCoarseSampleOrderCustomNV(name["members"]["pCustomSampleOrders"]["members"][WsCTQfM]);}();;
        }
        }();result.pCustomSampleOrders=temp_gNZolmx;}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesNV(VkPhysicalDeviceMeshShaderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xYPXgMN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hqBeXqN=json({});
    
        if (name.pNext==NULL){
            return_hqBeXqN["null"]=true;
            return return_hqBeXqN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_yDmwgYR=json({});
    return_yDmwgYR=[&]() {
    json return_JORiUaE=json({});
    return serialize_uint32_t(name.taskShader);}();return return_yDmwgYR;}();
result["members"]["meshShader"]=[&]() {
    json return_gziMcmN=json({});
    return_gziMcmN=[&]() {
    json return_VdxvcBa=json({});
    return serialize_uint32_t(name.meshShader);}();return return_gziMcmN;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesNV deserialize_VkPhysicalDeviceMeshShaderFeaturesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesNV(VkPhysicalDeviceMeshShaderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zsmKXCn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_InnNsZW=json({});
    
        if (name.pNext==NULL){
            return_InnNsZW["null"]=true;
            return return_InnNsZW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxDrawMeshTasksCount"]=[&]() {
    json return_fSIZejI=json({});
    return serialize_uint32_t(name.maxDrawMeshTasksCount);}();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_MFkHPcz=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_DdklqvK=json({});
    
        return_DdklqvK["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_LKhThiB=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_DdklqvK["members"][std::to_string(i)].push_back(temp);
        }
        return return_DdklqvK;
        }();
result["members"]["maxTaskTotalMemorySize"]=[&]() {
    json return_KtBPKBW=json({});
    return serialize_uint32_t(name.maxTaskTotalMemorySize);}();
result["members"]["maxTaskOutputCount"]=[&]() {
    json return_cyEFDqg=json({});
    return serialize_uint32_t(name.maxTaskOutputCount);}();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_xxhniSI=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_eInjvHs=json({});
    
        return_eInjvHs["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_DwbwvzD=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_eInjvHs["members"][std::to_string(i)].push_back(temp);
        }
        return return_eInjvHs;
        }();
result["members"]["maxMeshTotalMemorySize"]=[&]() {
    json return_vcpqCPW=json({});
    return serialize_uint32_t(name.maxMeshTotalMemorySize);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_qQfvzgg=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_oXGvSFs=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_UHnmoSR=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_DuHUYra=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_pGPaURr=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesNV deserialize_VkPhysicalDeviceMeshShaderPropertiesNV(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxDrawMeshTasksCount=deserialize_uint32_t(name["members"]["maxDrawMeshTasksCount"]);}();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int fCyHcyR=0; fCyHcyR < 3; fCyHcyR++){
            [&]() {
result.maxTaskWorkGroupSize[fCyHcyR]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][fCyHcyR]);}();;
        }
        }();
[&]() {
result.maxTaskTotalMemorySize=deserialize_uint32_t(name["members"]["maxTaskTotalMemorySize"]);}();
[&]() {
result.maxTaskOutputCount=deserialize_uint32_t(name["members"]["maxTaskOutputCount"]);}();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int NnYiZjG=0; NnYiZjG < 3; NnYiZjG++){
            [&]() {
result.maxMeshWorkGroupSize[NnYiZjG]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][NnYiZjG]);}();;
        }
        }();
[&]() {
result.maxMeshTotalMemorySize=deserialize_uint32_t(name["members"]["maxMeshTotalMemorySize"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandNV(VkDrawMeshTasksIndirectCommandNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["taskCount"]=[&]() {
    json return_LkWdNXV=json({});
    return serialize_uint32_t(name.taskCount);}();
result["members"]["firstTask"]=[&]() {
    json return_gWSBFBP=json({});
    return serialize_uint32_t(name.firstTask);}();
return result;}

    VkDrawMeshTasksIndirectCommandNV deserialize_VkDrawMeshTasksIndirectCommandNV(json name){
        auto result=VkDrawMeshTasksIndirectCommandNV();
    
[&]() {
result.taskCount=deserialize_uint32_t(name["members"]["taskCount"]);}();
[&]() {
result.firstTask=deserialize_uint32_t(name["members"]["firstTask"]);}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderFeaturesEXT(VkPhysicalDeviceMeshShaderFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uughNGt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TMJsCjo=json({});
    
        if (name.pNext==NULL){
            return_TMJsCjo["null"]=true;
            return return_TMJsCjo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["taskShader"]=[&]() {
    json return_jEAqCwn=json({});
    return_jEAqCwn=[&]() {
    json return_xQhhAYI=json({});
    return serialize_uint32_t(name.taskShader);}();return return_jEAqCwn;}();
result["members"]["meshShader"]=[&]() {
    json return_TibxJMH=json({});
    return_TibxJMH=[&]() {
    json return_ccfCyYT=json({});
    return serialize_uint32_t(name.meshShader);}();return return_TibxJMH;}();
result["members"]["multiviewMeshShader"]=[&]() {
    json return_zMmBXRg=json({});
    return_zMmBXRg=[&]() {
    json return_pBMBAkV=json({});
    return serialize_uint32_t(name.multiviewMeshShader);}();return return_zMmBXRg;}();
result["members"]["primitiveFragmentShadingRateMeshShader"]=[&]() {
    json return_EUhJVuM=json({});
    return_EUhJVuM=[&]() {
    json return_ralEpoo=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateMeshShader);}();return return_EUhJVuM;}();
result["members"]["meshShaderQueries"]=[&]() {
    json return_EcJHsEK=json({});
    return_EcJHsEK=[&]() {
    json return_NhoTEPX=json({});
    return serialize_uint32_t(name.meshShaderQueries);}();return return_EcJHsEK;}();
return result;}

    VkPhysicalDeviceMeshShaderFeaturesEXT deserialize_VkPhysicalDeviceMeshShaderFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.taskShader=deserialize_uint32_t(name["members"]["taskShader"]);}();}();
[&]() {
[&]() {
result.meshShader=deserialize_uint32_t(name["members"]["meshShader"]);}();}();
[&]() {
[&]() {
result.multiviewMeshShader=deserialize_uint32_t(name["members"]["multiviewMeshShader"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateMeshShader=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateMeshShader"]);}();}();
[&]() {
[&]() {
result.meshShaderQueries=deserialize_uint32_t(name["members"]["meshShaderQueries"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMeshShaderPropertiesEXT(VkPhysicalDeviceMeshShaderPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_teEUGmP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VMXmHbE=json({});
    
        if (name.pNext==NULL){
            return_VMXmHbE["null"]=true;
            return return_VMXmHbE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxTaskWorkGroupTotalCount"]=[&]() {
    json return_DlRmpQn=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupTotalCount);}();
result["members"]["maxTaskWorkGroupCount"]=[&]() {
    json return_iQLbruC=json({});
    
        return_iQLbruC["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_oyuuWZT=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupCount[i]);}();
            return_iQLbruC["members"][std::to_string(i)].push_back(temp);
        }
        return return_iQLbruC;
        }();
result["members"]["maxTaskWorkGroupInvocations"]=[&]() {
    json return_WoMrZIA=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupInvocations);}();
result["members"]["maxTaskWorkGroupSize"]=[&]() {
    json return_GhxEfEB=json({});
    
        return_GhxEfEB["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_AhhOzER=json({});
    return serialize_uint32_t(name.maxTaskWorkGroupSize[i]);}();
            return_GhxEfEB["members"][std::to_string(i)].push_back(temp);
        }
        return return_GhxEfEB;
        }();
result["members"]["maxTaskPayloadSize"]=[&]() {
    json return_oIsctQG=json({});
    return serialize_uint32_t(name.maxTaskPayloadSize);}();
result["members"]["maxTaskSharedMemorySize"]=[&]() {
    json return_pZQYmAF=json({});
    return serialize_uint32_t(name.maxTaskSharedMemorySize);}();
result["members"]["maxTaskPayloadAndSharedMemorySize"]=[&]() {
    json return_bVyUoqt=json({});
    return serialize_uint32_t(name.maxTaskPayloadAndSharedMemorySize);}();
result["members"]["maxMeshWorkGroupTotalCount"]=[&]() {
    json return_vMzPMDj=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupTotalCount);}();
result["members"]["maxMeshWorkGroupCount"]=[&]() {
    json return_cOVPIVq=json({});
    
        return_cOVPIVq["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_UeuwvLV=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupCount[i]);}();
            return_cOVPIVq["members"][std::to_string(i)].push_back(temp);
        }
        return return_cOVPIVq;
        }();
result["members"]["maxMeshWorkGroupInvocations"]=[&]() {
    json return_lELJyhK=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupInvocations);}();
result["members"]["maxMeshWorkGroupSize"]=[&]() {
    json return_qVtXUJs=json({});
    
        return_qVtXUJs["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_NkmFyfi=json({});
    return serialize_uint32_t(name.maxMeshWorkGroupSize[i]);}();
            return_qVtXUJs["members"][std::to_string(i)].push_back(temp);
        }
        return return_qVtXUJs;
        }();
result["members"]["maxMeshSharedMemorySize"]=[&]() {
    json return_aHvPRfn=json({});
    return serialize_uint32_t(name.maxMeshSharedMemorySize);}();
result["members"]["maxMeshPayloadAndSharedMemorySize"]=[&]() {
    json return_BnqqRzW=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndSharedMemorySize);}();
result["members"]["maxMeshOutputMemorySize"]=[&]() {
    json return_QDYybPU=json({});
    return serialize_uint32_t(name.maxMeshOutputMemorySize);}();
result["members"]["maxMeshPayloadAndOutputMemorySize"]=[&]() {
    json return_BXrAEvZ=json({});
    return serialize_uint32_t(name.maxMeshPayloadAndOutputMemorySize);}();
result["members"]["maxMeshOutputComponents"]=[&]() {
    json return_NQzwwns=json({});
    return serialize_uint32_t(name.maxMeshOutputComponents);}();
result["members"]["maxMeshOutputVertices"]=[&]() {
    json return_QXkPFfD=json({});
    return serialize_uint32_t(name.maxMeshOutputVertices);}();
result["members"]["maxMeshOutputPrimitives"]=[&]() {
    json return_RGsJKoZ=json({});
    return serialize_uint32_t(name.maxMeshOutputPrimitives);}();
result["members"]["maxMeshOutputLayers"]=[&]() {
    json return_cSVLBFf=json({});
    return serialize_uint32_t(name.maxMeshOutputLayers);}();
result["members"]["maxMeshMultiviewViewCount"]=[&]() {
    json return_kgsaTqC=json({});
    return serialize_uint32_t(name.maxMeshMultiviewViewCount);}();
result["members"]["meshOutputPerVertexGranularity"]=[&]() {
    json return_YbTOvSZ=json({});
    return serialize_uint32_t(name.meshOutputPerVertexGranularity);}();
result["members"]["meshOutputPerPrimitiveGranularity"]=[&]() {
    json return_SIqOVyE=json({});
    return serialize_uint32_t(name.meshOutputPerPrimitiveGranularity);}();
result["members"]["maxPreferredTaskWorkGroupInvocations"]=[&]() {
    json return_BDniWst=json({});
    return serialize_uint32_t(name.maxPreferredTaskWorkGroupInvocations);}();
result["members"]["maxPreferredMeshWorkGroupInvocations"]=[&]() {
    json return_RNRmjMs=json({});
    return serialize_uint32_t(name.maxPreferredMeshWorkGroupInvocations);}();
result["members"]["prefersLocalInvocationVertexOutput"]=[&]() {
    json return_QncxFaC=json({});
    return_QncxFaC=[&]() {
    json return_VzsrfJN=json({});
    return serialize_uint32_t(name.prefersLocalInvocationVertexOutput);}();return return_QncxFaC;}();
result["members"]["prefersLocalInvocationPrimitiveOutput"]=[&]() {
    json return_ogfUQFM=json({});
    return_ogfUQFM=[&]() {
    json return_XFQguRv=json({});
    return serialize_uint32_t(name.prefersLocalInvocationPrimitiveOutput);}();return return_ogfUQFM;}();
result["members"]["prefersCompactVertexOutput"]=[&]() {
    json return_IpkvrsV=json({});
    return_IpkvrsV=[&]() {
    json return_rVPOdfh=json({});
    return serialize_uint32_t(name.prefersCompactVertexOutput);}();return return_IpkvrsV;}();
result["members"]["prefersCompactPrimitiveOutput"]=[&]() {
    json return_xAyapEA=json({});
    return_xAyapEA=[&]() {
    json return_RylMZNK=json({});
    return serialize_uint32_t(name.prefersCompactPrimitiveOutput);}();return return_xAyapEA;}();
return result;}

    VkPhysicalDeviceMeshShaderPropertiesEXT deserialize_VkPhysicalDeviceMeshShaderPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMeshShaderPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxTaskWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxTaskWorkGroupTotalCount"]);}();
[&]() {

        for (int dsWsmhe=0; dsWsmhe < 3; dsWsmhe++){
            [&]() {
result.maxTaskWorkGroupCount[dsWsmhe]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupCount"]["members"][dsWsmhe]);}();;
        }
        }();
[&]() {
result.maxTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxTaskWorkGroupInvocations"]);}();
[&]() {

        for (int NBsnkyJ=0; NBsnkyJ < 3; NBsnkyJ++){
            [&]() {
result.maxTaskWorkGroupSize[NBsnkyJ]=deserialize_uint32_t(name["members"]["maxTaskWorkGroupSize"]["members"][NBsnkyJ]);}();;
        }
        }();
[&]() {
result.maxTaskPayloadSize=deserialize_uint32_t(name["members"]["maxTaskPayloadSize"]);}();
[&]() {
result.maxTaskSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskSharedMemorySize"]);}();
[&]() {
result.maxTaskPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxTaskPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshWorkGroupTotalCount=deserialize_uint32_t(name["members"]["maxMeshWorkGroupTotalCount"]);}();
[&]() {

        for (int WxNmVPo=0; WxNmVPo < 3; WxNmVPo++){
            [&]() {
result.maxMeshWorkGroupCount[WxNmVPo]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupCount"]["members"][WxNmVPo]);}();;
        }
        }();
[&]() {
result.maxMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxMeshWorkGroupInvocations"]);}();
[&]() {

        for (int XubFyKD=0; XubFyKD < 3; XubFyKD++){
            [&]() {
result.maxMeshWorkGroupSize[XubFyKD]=deserialize_uint32_t(name["members"]["maxMeshWorkGroupSize"]["members"][XubFyKD]);}();;
        }
        }();
[&]() {
result.maxMeshSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshSharedMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndSharedMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndSharedMemorySize"]);}();
[&]() {
result.maxMeshOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshOutputMemorySize"]);}();
[&]() {
result.maxMeshPayloadAndOutputMemorySize=deserialize_uint32_t(name["members"]["maxMeshPayloadAndOutputMemorySize"]);}();
[&]() {
result.maxMeshOutputComponents=deserialize_uint32_t(name["members"]["maxMeshOutputComponents"]);}();
[&]() {
result.maxMeshOutputVertices=deserialize_uint32_t(name["members"]["maxMeshOutputVertices"]);}();
[&]() {
result.maxMeshOutputPrimitives=deserialize_uint32_t(name["members"]["maxMeshOutputPrimitives"]);}();
[&]() {
result.maxMeshOutputLayers=deserialize_uint32_t(name["members"]["maxMeshOutputLayers"]);}();
[&]() {
result.maxMeshMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMeshMultiviewViewCount"]);}();
[&]() {
result.meshOutputPerVertexGranularity=deserialize_uint32_t(name["members"]["meshOutputPerVertexGranularity"]);}();
[&]() {
result.meshOutputPerPrimitiveGranularity=deserialize_uint32_t(name["members"]["meshOutputPerPrimitiveGranularity"]);}();
[&]() {
result.maxPreferredTaskWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredTaskWorkGroupInvocations"]);}();
[&]() {
result.maxPreferredMeshWorkGroupInvocations=deserialize_uint32_t(name["members"]["maxPreferredMeshWorkGroupInvocations"]);}();
[&]() {
[&]() {
result.prefersLocalInvocationVertexOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersLocalInvocationPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersLocalInvocationPrimitiveOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactVertexOutput=deserialize_uint32_t(name["members"]["prefersCompactVertexOutput"]);}();}();
[&]() {
[&]() {
result.prefersCompactPrimitiveOutput=deserialize_uint32_t(name["members"]["prefersCompactPrimitiveOutput"]);}();}();
return result;}

    json serialize_VkDrawMeshTasksIndirectCommandEXT(VkDrawMeshTasksIndirectCommandEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["groupCountX"]=[&]() {
    json return_vqnAcgR=json({});
    return serialize_uint32_t(name.groupCountX);}();
result["members"]["groupCountY"]=[&]() {
    json return_yNdjQRQ=json({});
    return serialize_uint32_t(name.groupCountY);}();
result["members"]["groupCountZ"]=[&]() {
    json return_VLZtOzm=json({});
    return serialize_uint32_t(name.groupCountZ);}();
return result;}

    VkDrawMeshTasksIndirectCommandEXT deserialize_VkDrawMeshTasksIndirectCommandEXT(json name){
        auto result=VkDrawMeshTasksIndirectCommandEXT();
    
[&]() {
result.groupCountX=deserialize_uint32_t(name["members"]["groupCountX"]);}();
[&]() {
result.groupCountY=deserialize_uint32_t(name["members"]["groupCountY"]);}();
[&]() {
result.groupCountZ=deserialize_uint32_t(name["members"]["groupCountZ"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoNV(VkRayTracingShaderGroupCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WjEmsHd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_maeiwmK=json({});
    
        if (name.pNext==NULL){
            return_maeiwmK["null"]=true;
            return return_maeiwmK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_hflbhzh=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_lTGSlHH=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_EInOCEA=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_OSVJqQu=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_dwcklyB=json({});
    return serialize_uint32_t(name.intersectionShader);}();
return result;}

    VkRayTracingShaderGroupCreateInfoNV deserialize_VkRayTracingShaderGroupCreateInfoNV(json name){
        auto result=VkRayTracingShaderGroupCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RLrfOxZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RLrfOxZ=NULL;
        }
    temp_RLrfOxZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RLrfOxZ;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
return result;}

    json serialize_VkRayTracingShaderGroupCreateInfoKHR(VkRayTracingShaderGroupCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SgmJROQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BsXUAhe=json({});
    
        if (name.pNext==NULL){
            return_BsXUAhe["null"]=true;
            return return_BsXUAhe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_VbxJdvh=json({});
    return serialize_VkRayTracingShaderGroupTypeKHR(name.type);}();
result["members"]["generalShader"]=[&]() {
    json return_xEscseE=json({});
    return serialize_uint32_t(name.generalShader);}();
result["members"]["closestHitShader"]=[&]() {
    json return_IUYLvCk=json({});
    return serialize_uint32_t(name.closestHitShader);}();
result["members"]["anyHitShader"]=[&]() {
    json return_PzrQlAQ=json({});
    return serialize_uint32_t(name.anyHitShader);}();
result["members"]["intersectionShader"]=[&]() {
    json return_rKJrzSq=json({});
    return serialize_uint32_t(name.intersectionShader);}();
result["members"]["pShaderGroupCaptureReplayHandle"]=[&]() {
    json return_DflSNye=json({});
    
        if (name.pShaderGroupCaptureReplayHandle==NULL){
            return_DflSNye["null"]=true;
            return return_DflSNye;
        }
        return serialize_void_p(name.pShaderGroupCaptureReplayHandle);
}();
return result;}

    VkRayTracingShaderGroupCreateInfoKHR deserialize_VkRayTracingShaderGroupCreateInfoKHR(json name){
        auto result=VkRayTracingShaderGroupCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bGIHKkw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bGIHKkw=NULL;
        }
    temp_bGIHKkw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bGIHKkw;}();
[&]() {
result.type=deserialize_VkRayTracingShaderGroupTypeKHR(name["members"]["type"]);}();
[&]() {
result.generalShader=deserialize_uint32_t(name["members"]["generalShader"]);}();
[&]() {
result.closestHitShader=deserialize_uint32_t(name["members"]["closestHitShader"]);}();
[&]() {
result.anyHitShader=deserialize_uint32_t(name["members"]["anyHitShader"]);}();
[&]() {
result.intersectionShader=deserialize_uint32_t(name["members"]["intersectionShader"]);}();
[&]() {
void* temp_VhxuaTJ;[&]() {

        if (name["members"]["pShaderGroupCaptureReplayHandle"].contains("null")){
        temp_VhxuaTJ=NULL;
        }
    temp_VhxuaTJ=deserialize_void_p(name["members"]["pShaderGroupCaptureReplayHandle"]);
}();result.pShaderGroupCaptureReplayHandle=temp_VhxuaTJ;}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoNV(VkRayTracingPipelineCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IxNRLgK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wToqwvE=json({});
    
        if (name.pNext==NULL){
            return_wToqwvE["null"]=true;
            return return_wToqwvE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_pMKQNic=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_lDdbPcj=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_hgldsKD=json({});
    
        if (name.pStages==NULL){
            return_hgldsKD["null"]=true;
            return return_hgldsKD;
        }
        
        return_hgldsKD["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_SeQfDDG=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_hgldsKD["members"][std::to_string(i)].push_back(temp);
        }
        return return_hgldsKD;
        }();
result["members"]["groupCount"]=[&]() {
    json return_rdDeYSB=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_tDczySz=json({});
    
        if (name.pGroups==NULL){
            return_tDczySz["null"]=true;
            return return_tDczySz;
        }
        
        return_tDczySz["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_OtSTaYG=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoNV(name.pGroups[i]);}();
            return_tDczySz["members"][std::to_string(i)].push_back(temp);
        }
        return return_tDczySz;
        }();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_MVkNxLb=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["layout"]=[&]() {
    json return_LHHGoSR=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_kYTQZvp=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_pZbdiTt=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoNV deserialize_VkRayTracingPipelineCreateInfoNV(json name){
        auto result=VkRayTracingPipelineCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LvhXyZw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LvhXyZw=NULL;
        }
    temp_LvhXyZw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LvhXyZw;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_RwWikGH;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_RwWikGH=NULL;
        }
    temp_RwWikGH=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int XvIDUSO=0; XvIDUSO < result.stageCount; XvIDUSO++){
            [&]() {
temp_RwWikGH[XvIDUSO]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][XvIDUSO]);}();;
        }
        }();result.pStages=temp_RwWikGH;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoNV* temp_Erwpchd;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_Erwpchd=NULL;
        }
    temp_Erwpchd=(VkRayTracingShaderGroupCreateInfoNV*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoNV));
        for (int qtSqbEj=0; qtSqbEj < result.groupCount; qtSqbEj++){
            [&]() {
temp_Erwpchd[qtSqbEj]=deserialize_VkRayTracingShaderGroupCreateInfoNV(name["members"]["pGroups"]["members"][qtSqbEj]);}();;
        }
        }();result.pGroups=temp_Erwpchd;}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkRayTracingPipelineCreateInfoKHR(VkRayTracingPipelineCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GVXbMad=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ebdnykv=json({});
    
        if (name.pNext==NULL){
            return_ebdnykv["null"]=true;
            return return_ebdnykv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fADNDYF=json({});
    return serialize_VkPipelineCreateFlags(name.flags);}();
result["members"]["stageCount"]=[&]() {
    json return_TobLbrW=json({});
    return serialize_uint32_t(name.stageCount);}();
result["members"]["pStages"]=[&]() {
    json return_FkSJXxL=json({});
    
        if (name.pStages==NULL){
            return_FkSJXxL["null"]=true;
            return return_FkSJXxL;
        }
        
        return_FkSJXxL["members"]={};
        for(int i=0; i < name.stageCount; i++){
            json temp;
            temp=[&]() {
    json return_sXVBUbt=json({});
    return serialize_VkPipelineShaderStageCreateInfo(name.pStages[i]);}();
            return_FkSJXxL["members"][std::to_string(i)].push_back(temp);
        }
        return return_FkSJXxL;
        }();
result["members"]["groupCount"]=[&]() {
    json return_CFkjNem=json({});
    return serialize_uint32_t(name.groupCount);}();
result["members"]["pGroups"]=[&]() {
    json return_KhVtURq=json({});
    
        if (name.pGroups==NULL){
            return_KhVtURq["null"]=true;
            return return_KhVtURq;
        }
        
        return_KhVtURq["members"]={};
        for(int i=0; i < name.groupCount; i++){
            json temp;
            temp=[&]() {
    json return_QZasyxv=json({});
    return serialize_VkRayTracingShaderGroupCreateInfoKHR(name.pGroups[i]);}();
            return_KhVtURq["members"][std::to_string(i)].push_back(temp);
        }
        return return_KhVtURq;
        }();
result["members"]["maxPipelineRayRecursionDepth"]=[&]() {
    json return_iYPxqNf=json({});
    return serialize_uint32_t(name.maxPipelineRayRecursionDepth);}();
result["members"]["pLibraryInfo"]=[&]() {
    json return_uimtjTT=json({});
    
        if (name.pLibraryInfo==NULL){
            return_uimtjTT["null"]=true;
            return return_uimtjTT;
        }
        return_uimtjTT=[&]() {
    json return_ILFhrTM=json({});
    return serialize_VkPipelineLibraryCreateInfoKHR(*name.pLibraryInfo);}();
return return_uimtjTT;}();
result["members"]["pLibraryInterface"]=[&]() {
    json return_pdEKnru=json({});
    
        if (name.pLibraryInterface==NULL){
            return_pdEKnru["null"]=true;
            return return_pdEKnru;
        }
        return_pdEKnru=[&]() {
    json return_sYejWkC=json({});
    return serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(*name.pLibraryInterface);}();
return return_pdEKnru;}();
result["members"]["pDynamicState"]=[&]() {
    json return_peUmslO=json({});
    
        if (name.pDynamicState==NULL){
            return_peUmslO["null"]=true;
            return return_peUmslO;
        }
        return_peUmslO=[&]() {
    json return_dAYImpH=json({});
    return serialize_VkPipelineDynamicStateCreateInfo(*name.pDynamicState);}();
return return_peUmslO;}();
result["members"]["layout"]=[&]() {
    json return_ONqSiSc=json({});
    return serialize_VkPipelineLayout(name.layout);}();
result["members"]["basePipelineHandle"]=[&]() {
    json return_vkGWDob=json({});
    return serialize_VkPipeline(name.basePipelineHandle);}();
result["members"]["basePipelineIndex"]=[&]() {
    json return_myHDkJR=json({});
    return serialize_int32_t(name.basePipelineIndex);}();
return result;}

    VkRayTracingPipelineCreateInfoKHR deserialize_VkRayTracingPipelineCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mOdHzRy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mOdHzRy=NULL;
        }
    temp_mOdHzRy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mOdHzRy;}();
[&]() {
result.flags=deserialize_VkPipelineCreateFlags(name["members"]["flags"]);}();
[&]() {
result.stageCount=deserialize_uint32_t(name["members"]["stageCount"]);}();
[&]() {
VkPipelineShaderStageCreateInfo* temp_MFrffyk;[&]() {

        if (name["members"]["pStages"].contains("null")){
        temp_MFrffyk=NULL;
        }
    temp_MFrffyk=(VkPipelineShaderStageCreateInfo*)malloc(result.stageCount*sizeof(VkPipelineShaderStageCreateInfo));
        for (int YToKPcf=0; YToKPcf < result.stageCount; YToKPcf++){
            [&]() {
temp_MFrffyk[YToKPcf]=deserialize_VkPipelineShaderStageCreateInfo(name["members"]["pStages"]["members"][YToKPcf]);}();;
        }
        }();result.pStages=temp_MFrffyk;}();
[&]() {
result.groupCount=deserialize_uint32_t(name["members"]["groupCount"]);}();
[&]() {
VkRayTracingShaderGroupCreateInfoKHR* temp_ZvABXEN;[&]() {

        if (name["members"]["pGroups"].contains("null")){
        temp_ZvABXEN=NULL;
        }
    temp_ZvABXEN=(VkRayTracingShaderGroupCreateInfoKHR*)malloc(result.groupCount*sizeof(VkRayTracingShaderGroupCreateInfoKHR));
        for (int Wxwmgrk=0; Wxwmgrk < result.groupCount; Wxwmgrk++){
            [&]() {
temp_ZvABXEN[Wxwmgrk]=deserialize_VkRayTracingShaderGroupCreateInfoKHR(name["members"]["pGroups"]["members"][Wxwmgrk]);}();;
        }
        }();result.pGroups=temp_ZvABXEN;}();
[&]() {
result.maxPipelineRayRecursionDepth=deserialize_uint32_t(name["members"]["maxPipelineRayRecursionDepth"]);}();
[&]() {
VkPipelineLibraryCreateInfoKHR* temp_cHOqJnW;[&]() {

        if (name["members"]["pLibraryInfo"].contains("null")){
        temp_cHOqJnW=NULL;
        }
    [&]() {
*(temp_cHOqJnW)=deserialize_VkPipelineLibraryCreateInfoKHR(name["members"]["pLibraryInfo"]);}();
}();result.pLibraryInfo=temp_cHOqJnW;}();
[&]() {
VkRayTracingPipelineInterfaceCreateInfoKHR* temp_PMGHigw;[&]() {

        if (name["members"]["pLibraryInterface"].contains("null")){
        temp_PMGHigw=NULL;
        }
    [&]() {
*(temp_PMGHigw)=deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(name["members"]["pLibraryInterface"]);}();
}();result.pLibraryInterface=temp_PMGHigw;}();
[&]() {
VkPipelineDynamicStateCreateInfo* temp_BnIVZIB;[&]() {

        if (name["members"]["pDynamicState"].contains("null")){
        temp_BnIVZIB=NULL;
        }
    [&]() {
*(temp_BnIVZIB)=deserialize_VkPipelineDynamicStateCreateInfo(name["members"]["pDynamicState"]);}();
}();result.pDynamicState=temp_BnIVZIB;}();
[&]() {
result.layout=deserialize_VkPipelineLayout(name["members"]["layout"]);}();
[&]() {
result.basePipelineHandle=deserialize_VkPipeline(name["members"]["basePipelineHandle"]);}();
[&]() {
result.basePipelineIndex=deserialize_int32_t(name["members"]["basePipelineIndex"]);}();
return result;}

    json serialize_VkGeometryTrianglesNV(VkGeometryTrianglesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RUPIUqk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iqjYZyX=json({});
    
        if (name.pNext==NULL){
            return_iqjYZyX["null"]=true;
            return return_iqjYZyX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_AckTADH=json({});
    return serialize_VkBuffer(name.vertexData);}();
result["members"]["vertexOffset"]=[&]() {
    json return_xCzgfLk=json({});
    return_xCzgfLk=[&]() {
    json return_NivdEqZ=json({});
    return serialize_uint64_t(name.vertexOffset);}();return return_xCzgfLk;}();
result["members"]["vertexCount"]=[&]() {
    json return_rgrhnwa=json({});
    return serialize_uint32_t(name.vertexCount);}();
result["members"]["vertexStride"]=[&]() {
    json return_ENsFIeB=json({});
    return_ENsFIeB=[&]() {
    json return_KTMYXsc=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_ENsFIeB;}();
result["members"]["vertexFormat"]=[&]() {
    json return_kVWZSzN=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["indexData"]=[&]() {
    json return_aqVSnOv=json({});
    return serialize_VkBuffer(name.indexData);}();
result["members"]["indexOffset"]=[&]() {
    json return_HGMpWfN=json({});
    return_HGMpWfN=[&]() {
    json return_nPsOgVs=json({});
    return serialize_uint64_t(name.indexOffset);}();return return_HGMpWfN;}();
result["members"]["indexCount"]=[&]() {
    json return_uNvVVHC=json({});
    return serialize_uint32_t(name.indexCount);}();
result["members"]["indexType"]=[&]() {
    json return_ZWJXtxK=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["transformData"]=[&]() {
    json return_cWlFmCP=json({});
    return serialize_VkBuffer(name.transformData);}();
result["members"]["transformOffset"]=[&]() {
    json return_tePxorK=json({});
    return_tePxorK=[&]() {
    json return_YjTnOyA=json({});
    return serialize_uint64_t(name.transformOffset);}();return return_tePxorK;}();
return result;}

    VkGeometryTrianglesNV deserialize_VkGeometryTrianglesNV(json name){
        auto result=VkGeometryTrianglesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CtMFDAw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CtMFDAw=NULL;
        }
    temp_CtMFDAw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CtMFDAw;}();
[&]() {
result.vertexData=deserialize_VkBuffer(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexOffset=deserialize_uint64_t(name["members"]["vertexOffset"]);}();}();
[&]() {
result.vertexCount=deserialize_uint32_t(name["members"]["vertexCount"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.indexData=deserialize_VkBuffer(name["members"]["indexData"]);}();
[&]() {
[&]() {
result.indexOffset=deserialize_uint64_t(name["members"]["indexOffset"]);}();}();
[&]() {
result.indexCount=deserialize_uint32_t(name["members"]["indexCount"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.transformData=deserialize_VkBuffer(name["members"]["transformData"]);}();
[&]() {
[&]() {
result.transformOffset=deserialize_uint64_t(name["members"]["transformOffset"]);}();}();
return result;}

    json serialize_VkGeometryAABBNV(VkGeometryAABBNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kSBMvrW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oATwSUV=json({});
    
        if (name.pNext==NULL){
            return_oATwSUV["null"]=true;
            return return_oATwSUV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["aabbData"]=[&]() {
    json return_pbOQbAO=json({});
    return serialize_VkBuffer(name.aabbData);}();
result["members"]["numAABBs"]=[&]() {
    json return_Kwssyew=json({});
    return serialize_uint32_t(name.numAABBs);}();
result["members"]["stride"]=[&]() {
    json return_yurHHEH=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["offset"]=[&]() {
    json return_sWaxpgu=json({});
    return_sWaxpgu=[&]() {
    json return_QKvbgty=json({});
    return serialize_uint64_t(name.offset);}();return return_sWaxpgu;}();
return result;}

    VkGeometryAABBNV deserialize_VkGeometryAABBNV(json name){
        auto result=VkGeometryAABBNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kaDvJkF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kaDvJkF=NULL;
        }
    temp_kaDvJkF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kaDvJkF;}();
[&]() {
result.aabbData=deserialize_VkBuffer(name["members"]["aabbData"]);}();
[&]() {
result.numAABBs=deserialize_uint32_t(name["members"]["numAABBs"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
return result;}

    json serialize_VkGeometryDataNV(VkGeometryDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_pJSQSwM=json({});
    return serialize_VkGeometryTrianglesNV(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_sWYveka=json({});
    return serialize_VkGeometryAABBNV(name.aabbs);}();
return result;}

    VkGeometryDataNV deserialize_VkGeometryDataNV(json name){
        auto result=VkGeometryDataNV();
    
[&]() {
result.triangles=deserialize_VkGeometryTrianglesNV(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkGeometryAABBNV(name["members"]["aabbs"]);}();
return result;}

    json serialize_VkGeometryNV(VkGeometryNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NctqTTa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FFRyFvx=json({});
    
        if (name.pNext==NULL){
            return_FFRyFvx["null"]=true;
            return return_FFRyFvx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_gXyoQnE=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_arwQsjg=json({});
    return serialize_VkGeometryDataNV(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_ZpsbytI=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkGeometryNV deserialize_VkGeometryNV(json name){
        auto result=VkGeometryNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BSEZqrh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BSEZqrh=NULL;
        }
    temp_BSEZqrh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BSEZqrh;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkGeometryDataNV(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureInfoNV(VkAccelerationStructureInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_peCAkuq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SQfvWso=json({});
    
        if (name.pNext==NULL){
            return_SQfvWso["null"]=true;
            return return_SQfvWso;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_NoWGLvu=json({});
    return serialize_VkAccelerationStructureTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_uoVtasv=json({});
    return serialize_VkBuildAccelerationStructureFlagsNV(name.flags);}();
result["members"]["instanceCount"]=[&]() {
    json return_yNztqzi=json({});
    return serialize_uint32_t(name.instanceCount);}();
result["members"]["geometryCount"]=[&]() {
    json return_KobiWsm=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_QloFoCM=json({});
    
        if (name.pGeometries==NULL){
            return_QloFoCM["null"]=true;
            return return_QloFoCM;
        }
        
        return_QloFoCM["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_yFfNeNH=json({});
    return serialize_VkGeometryNV(name.pGeometries[i]);}();
            return_QloFoCM["members"][std::to_string(i)].push_back(temp);
        }
        return return_QloFoCM;
        }();
return result;}

    VkAccelerationStructureInfoNV deserialize_VkAccelerationStructureInfoNV(json name){
        auto result=VkAccelerationStructureInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LeKcEoK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LeKcEoK=NULL;
        }
    temp_LeKcEoK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LeKcEoK;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsNV(name["members"]["flags"]);}();
[&]() {
result.instanceCount=deserialize_uint32_t(name["members"]["instanceCount"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkGeometryNV* temp_yZswLdp;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_yZswLdp=NULL;
        }
    temp_yZswLdp=(VkGeometryNV*)malloc(result.geometryCount*sizeof(VkGeometryNV));
        for (int VDmkTjV=0; VDmkTjV < result.geometryCount; VDmkTjV++){
            [&]() {
temp_yZswLdp[VDmkTjV]=deserialize_VkGeometryNV(name["members"]["pGeometries"]["members"][VDmkTjV]);}();;
        }
        }();result.pGeometries=temp_yZswLdp;}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoNV(VkAccelerationStructureCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QqlyShE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YhDNXSL=json({});
    
        if (name.pNext==NULL){
            return_YhDNXSL["null"]=true;
            return return_YhDNXSL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compactedSize"]=[&]() {
    json return_AqEcpBC=json({});
    return_AqEcpBC=[&]() {
    json return_cGUKvMU=json({});
    return serialize_uint64_t(name.compactedSize);}();return return_AqEcpBC;}();
result["members"]["info"]=[&]() {
    json return_jqrvnYf=json({});
    return serialize_VkAccelerationStructureInfoNV(name.info);}();
return result;}

    VkAccelerationStructureCreateInfoNV deserialize_VkAccelerationStructureCreateInfoNV(json name){
        auto result=VkAccelerationStructureCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SnqUvqd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SnqUvqd=NULL;
        }
    temp_SnqUvqd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SnqUvqd;}();
[&]() {
[&]() {
result.compactedSize=deserialize_uint64_t(name["members"]["compactedSize"]);}();}();
[&]() {
result.info=deserialize_VkAccelerationStructureInfoNV(name["members"]["info"]);}();
return result;}

    json serialize_VkBindAccelerationStructureMemoryInfoNV(VkBindAccelerationStructureMemoryInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_apWgmbS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XlkyWne=json({});
    
        if (name.pNext==NULL){
            return_XlkyWne["null"]=true;
            return return_XlkyWne;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_VXPQcrX=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
result["members"]["memory"]=[&]() {
    json return_EbdOQjG=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_DtsSKnU=json({});
    return_DtsSKnU=[&]() {
    json return_hOMGHYH=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_DtsSKnU;}();
result["members"]["deviceIndexCount"]=[&]() {
    json return_CiVdHGE=json({});
    return serialize_uint32_t(name.deviceIndexCount);}();
result["members"]["pDeviceIndices"]=[&]() {
    json return_tqKYEcm=json({});
    
        if (name.pDeviceIndices==NULL){
            return_tqKYEcm["null"]=true;
            return return_tqKYEcm;
        }
        
        return_tqKYEcm["members"]={};
        for(int i=0; i < name.deviceIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_hlecbEX=json({});
    return serialize_uint32_t(name.pDeviceIndices[i]);}();
            return_tqKYEcm["members"][std::to_string(i)].push_back(temp);
        }
        return return_tqKYEcm;
        }();
return result;}

    VkBindAccelerationStructureMemoryInfoNV deserialize_VkBindAccelerationStructureMemoryInfoNV(json name){
        auto result=VkBindAccelerationStructureMemoryInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sIzWxUR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sIzWxUR=NULL;
        }
    temp_sIzWxUR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sIzWxUR;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
result.deviceIndexCount=deserialize_uint32_t(name["members"]["deviceIndexCount"]);}();
[&]() {
uint32_t* temp_fVUSCgS;[&]() {

        if (name["members"]["pDeviceIndices"].contains("null")){
        temp_fVUSCgS=NULL;
        }
    temp_fVUSCgS=(uint32_t*)malloc(result.deviceIndexCount*sizeof(uint32_t));
        for (int oMtgosJ=0; oMtgosJ < result.deviceIndexCount; oMtgosJ++){
            [&]() {
temp_fVUSCgS[oMtgosJ]=deserialize_uint32_t(name["members"]["pDeviceIndices"]["members"][oMtgosJ]);}();;
        }
        }();result.pDeviceIndices=temp_fVUSCgS;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureKHR(VkWriteDescriptorSetAccelerationStructureKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DJxTLyU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aXeFhOU=json({});
    
        if (name.pNext==NULL){
            return_aXeFhOU["null"]=true;
            return return_aXeFhOU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_mOJNrwj=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_WWlTNuv=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_WWlTNuv["null"]=true;
            return return_WWlTNuv;
        }
        
        return_WWlTNuv["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_ptRmhrd=json({});
    return serialize_VkAccelerationStructureKHR(name.pAccelerationStructures[i]);}();
            return_WWlTNuv["members"][std::to_string(i)].push_back(temp);
        }
        return return_WWlTNuv;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureKHR deserialize_VkWriteDescriptorSetAccelerationStructureKHR(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JIeMqoM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JIeMqoM=NULL;
        }
    temp_JIeMqoM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JIeMqoM;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureKHR* temp_tVlxUsQ;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_tVlxUsQ=NULL;
        }
    temp_tVlxUsQ=(VkAccelerationStructureKHR*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureKHR));
        for (int OtczpXR=0; OtczpXR < result.accelerationStructureCount; OtczpXR++){
            [&]() {
temp_tVlxUsQ[OtczpXR]=deserialize_VkAccelerationStructureKHR(name["members"]["pAccelerationStructures"]["members"][OtczpXR]);}();;
        }
        }();result.pAccelerationStructures=temp_tVlxUsQ;}();
return result;}

    json serialize_VkWriteDescriptorSetAccelerationStructureNV(VkWriteDescriptorSetAccelerationStructureNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HzUphHV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lfMIAGE=json({});
    
        if (name.pNext==NULL){
            return_lfMIAGE["null"]=true;
            return return_lfMIAGE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureCount"]=[&]() {
    json return_WdVYNfG=json({});
    return serialize_uint32_t(name.accelerationStructureCount);}();
result["members"]["pAccelerationStructures"]=[&]() {
    json return_yvqYcbH=json({});
    
        if (name.pAccelerationStructures==NULL){
            return_yvqYcbH["null"]=true;
            return return_yvqYcbH;
        }
        
        return_yvqYcbH["members"]={};
        for(int i=0; i < name.accelerationStructureCount; i++){
            json temp;
            temp=[&]() {
    json return_DIRqUdj=json({});
    return serialize_VkAccelerationStructureNV(name.pAccelerationStructures[i]);}();
            return_yvqYcbH["members"][std::to_string(i)].push_back(temp);
        }
        return return_yvqYcbH;
        }();
return result;}

    VkWriteDescriptorSetAccelerationStructureNV deserialize_VkWriteDescriptorSetAccelerationStructureNV(json name){
        auto result=VkWriteDescriptorSetAccelerationStructureNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vMkXNda;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vMkXNda=NULL;
        }
    temp_vMkXNda=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vMkXNda;}();
[&]() {
result.accelerationStructureCount=deserialize_uint32_t(name["members"]["accelerationStructureCount"]);}();
[&]() {
VkAccelerationStructureNV* temp_jwrdncO;[&]() {

        if (name["members"]["pAccelerationStructures"].contains("null")){
        temp_jwrdncO=NULL;
        }
    temp_jwrdncO=(VkAccelerationStructureNV*)malloc(result.accelerationStructureCount*sizeof(VkAccelerationStructureNV));
        for (int xMvOGGj=0; xMvOGGj < result.accelerationStructureCount; xMvOGGj++){
            [&]() {
temp_jwrdncO[xMvOGGj]=deserialize_VkAccelerationStructureNV(name["members"]["pAccelerationStructures"]["members"][xMvOGGj]);}();;
        }
        }();result.pAccelerationStructures=temp_jwrdncO;}();
return result;}

    json serialize_VkAccelerationStructureMemoryRequirementsInfoNV(VkAccelerationStructureMemoryRequirementsInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KsCsHHJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RDJjDOB=json({});
    
        if (name.pNext==NULL){
            return_RDJjDOB["null"]=true;
            return return_RDJjDOB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_Mzrxhhh=json({});
    return serialize_VkAccelerationStructureMemoryRequirementsTypeNV(name.type);}();
result["members"]["accelerationStructure"]=[&]() {
    json return_gBvMSkb=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureMemoryRequirementsInfoNV deserialize_VkAccelerationStructureMemoryRequirementsInfoNV(json name){
        auto result=VkAccelerationStructureMemoryRequirementsInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_avYuova;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_avYuova=NULL;
        }
    temp_avYuova=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_avYuova;}();
[&]() {
result.type=deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(name["members"]["type"]);}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(VkPhysicalDeviceAccelerationStructureFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GVUlkkj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OXfRqGg=json({});
    
        if (name.pNext==NULL){
            return_OXfRqGg["null"]=true;
            return return_OXfRqGg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_JQExhZb=json({});
    return_JQExhZb=[&]() {
    json return_KnpNLPg=json({});
    return serialize_uint32_t(name.accelerationStructure);}();return return_JQExhZb;}();
result["members"]["accelerationStructureCaptureReplay"]=[&]() {
    json return_FmxNsTj=json({});
    return_FmxNsTj=[&]() {
    json return_JZvBCfs=json({});
    return serialize_uint32_t(name.accelerationStructureCaptureReplay);}();return return_FmxNsTj;}();
result["members"]["accelerationStructureIndirectBuild"]=[&]() {
    json return_PhdzhwA=json({});
    return_PhdzhwA=[&]() {
    json return_FCJQptV=json({});
    return serialize_uint32_t(name.accelerationStructureIndirectBuild);}();return return_PhdzhwA;}();
result["members"]["accelerationStructureHostCommands"]=[&]() {
    json return_KzLudcw=json({});
    return_KzLudcw=[&]() {
    json return_EGYTvEz=json({});
    return serialize_uint32_t(name.accelerationStructureHostCommands);}();return return_KzLudcw;}();
result["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]=[&]() {
    json return_oDSFwnn=json({});
    return_oDSFwnn=[&]() {
    json return_joQYKeR=json({});
    return serialize_uint32_t(name.descriptorBindingAccelerationStructureUpdateAfterBind);}();return return_oDSFwnn;}();
return result;}

    VkPhysicalDeviceAccelerationStructureFeaturesKHR deserialize_VkPhysicalDeviceAccelerationStructureFeaturesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructureFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint32_t(name["members"]["accelerationStructure"]);}();}();
[&]() {
[&]() {
result.accelerationStructureCaptureReplay=deserialize_uint32_t(name["members"]["accelerationStructureCaptureReplay"]);}();}();
[&]() {
[&]() {
result.accelerationStructureIndirectBuild=deserialize_uint32_t(name["members"]["accelerationStructureIndirectBuild"]);}();}();
[&]() {
[&]() {
result.accelerationStructureHostCommands=deserialize_uint32_t(name["members"]["accelerationStructureHostCommands"]);}();}();
[&]() {
[&]() {
result.descriptorBindingAccelerationStructureUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingAccelerationStructureUpdateAfterBind"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(VkPhysicalDeviceRayTracingPipelineFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZSMmFOM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PeJaiMx=json({});
    
        if (name.pNext==NULL){
            return_PeJaiMx["null"]=true;
            return return_PeJaiMx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPipeline"]=[&]() {
    json return_BLXlduc=json({});
    return_BLXlduc=[&]() {
    json return_kSqLlnE=json({});
    return serialize_uint32_t(name.rayTracingPipeline);}();return return_BLXlduc;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]=[&]() {
    json return_FRSCbgh=json({});
    return_FRSCbgh=[&]() {
    json return_FLlKnPQ=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplay);}();return return_FRSCbgh;}();
result["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]=[&]() {
    json return_SGMpGdN=json({});
    return_SGMpGdN=[&]() {
    json return_JnuxhIy=json({});
    return serialize_uint32_t(name.rayTracingPipelineShaderGroupHandleCaptureReplayMixed);}();return return_SGMpGdN;}();
result["members"]["rayTracingPipelineTraceRaysIndirect"]=[&]() {
    json return_pDdsDgE=json({});
    return_pDdsDgE=[&]() {
    json return_JcIOoVg=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect);}();return return_pDdsDgE;}();
result["members"]["rayTraversalPrimitiveCulling"]=[&]() {
    json return_CAPYJWL=json({});
    return_CAPYJWL=[&]() {
    json return_qoNXQvZ=json({});
    return serialize_uint32_t(name.rayTraversalPrimitiveCulling);}();return return_CAPYJWL;}();
return result;}

    VkPhysicalDeviceRayTracingPipelineFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPipelineFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelineFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPipeline=deserialize_uint32_t(name["members"]["rayTracingPipeline"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplay=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplay"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineShaderGroupHandleCaptureReplayMixed=deserialize_uint32_t(name["members"]["rayTracingPipelineShaderGroupHandleCaptureReplayMixed"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect"]);}();}();
[&]() {
[&]() {
result.rayTraversalPrimitiveCulling=deserialize_uint32_t(name["members"]["rayTraversalPrimitiveCulling"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayQueryFeaturesKHR(VkPhysicalDeviceRayQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qQNrEII=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vYwMKwq=json({});
    
        if (name.pNext==NULL){
            return_vYwMKwq["null"]=true;
            return return_vYwMKwq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayQuery"]=[&]() {
    json return_cFXsVzX=json({});
    return_cFXsVzX=[&]() {
    json return_OeHPTkw=json({});
    return serialize_uint32_t(name.rayQuery);}();return return_cFXsVzX;}();
return result;}

    VkPhysicalDeviceRayQueryFeaturesKHR deserialize_VkPhysicalDeviceRayQueryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayQuery=deserialize_uint32_t(name["members"]["rayQuery"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(VkPhysicalDeviceAccelerationStructurePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VCWefnT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MBSkdoX=json({});
    
        if (name.pNext==NULL){
            return_MBSkdoX["null"]=true;
            return return_MBSkdoX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_TbXKHCA=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_MiDTDGQ=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxPrimitiveCount"]=[&]() {
    json return_roctUqs=json({});
    return serialize_uint64_t(name.maxPrimitiveCount);}();
result["members"]["maxPerStageDescriptorAccelerationStructures"]=[&]() {
    json return_YozcUtA=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorAccelerationStructures);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_gZquxJF=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindAccelerationStructures);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_YrvEail=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
result["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]=[&]() {
    json return_ZySOvxW=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindAccelerationStructures);}();
result["members"]["minAccelerationStructureScratchOffsetAlignment"]=[&]() {
    json return_TelesML=json({});
    return serialize_uint32_t(name.minAccelerationStructureScratchOffsetAlignment);}();
return result;}

    VkPhysicalDeviceAccelerationStructurePropertiesKHR deserialize_VkPhysicalDeviceAccelerationStructurePropertiesKHR(json name){
        auto result=VkPhysicalDeviceAccelerationStructurePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxPrimitiveCount=deserialize_uint64_t(name["members"]["maxPrimitiveCount"]);}();
[&]() {
result.maxPerStageDescriptorAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorAccelerationStructures"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindAccelerationStructures"]);}();
[&]() {
result.minAccelerationStructureScratchOffsetAlignment=deserialize_uint32_t(name["members"]["minAccelerationStructureScratchOffsetAlignment"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(VkPhysicalDeviceRayTracingPipelinePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yhTedcm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hfdXrDJ=json({});
    
        if (name.pNext==NULL){
            return_hfdXrDJ["null"]=true;
            return return_hfdXrDJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_ERnMgAE=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRayRecursionDepth"]=[&]() {
    json return_zpzhMSh=json({});
    return serialize_uint32_t(name.maxRayRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_JSMfRXT=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_Suajydp=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["shaderGroupHandleCaptureReplaySize"]=[&]() {
    json return_YXMYmgd=json({});
    return serialize_uint32_t(name.shaderGroupHandleCaptureReplaySize);}();
result["members"]["maxRayDispatchInvocationCount"]=[&]() {
    json return_BpDwXFh=json({});
    return serialize_uint32_t(name.maxRayDispatchInvocationCount);}();
result["members"]["shaderGroupHandleAlignment"]=[&]() {
    json return_fUPfKfM=json({});
    return serialize_uint32_t(name.shaderGroupHandleAlignment);}();
result["members"]["maxRayHitAttributeSize"]=[&]() {
    json return_aNKRrRK=json({});
    return serialize_uint32_t(name.maxRayHitAttributeSize);}();
return result;}

    VkPhysicalDeviceRayTracingPipelinePropertiesKHR deserialize_VkPhysicalDeviceRayTracingPipelinePropertiesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPipelinePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRayRecursionDepth=deserialize_uint32_t(name["members"]["maxRayRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.shaderGroupHandleCaptureReplaySize=deserialize_uint32_t(name["members"]["shaderGroupHandleCaptureReplaySize"]);}();
[&]() {
result.maxRayDispatchInvocationCount=deserialize_uint32_t(name["members"]["maxRayDispatchInvocationCount"]);}();
[&]() {
result.shaderGroupHandleAlignment=deserialize_uint32_t(name["members"]["shaderGroupHandleAlignment"]);}();
[&]() {
result.maxRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPropertiesNV(VkPhysicalDeviceRayTracingPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zwnVVGn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zmJfOXB=json({});
    
        if (name.pNext==NULL){
            return_zmJfOXB["null"]=true;
            return return_zmJfOXB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderGroupHandleSize"]=[&]() {
    json return_roRgoHZ=json({});
    return serialize_uint32_t(name.shaderGroupHandleSize);}();
result["members"]["maxRecursionDepth"]=[&]() {
    json return_UVUiCrB=json({});
    return serialize_uint32_t(name.maxRecursionDepth);}();
result["members"]["maxShaderGroupStride"]=[&]() {
    json return_kNWVFxR=json({});
    return serialize_uint32_t(name.maxShaderGroupStride);}();
result["members"]["shaderGroupBaseAlignment"]=[&]() {
    json return_GwzIVDY=json({});
    return serialize_uint32_t(name.shaderGroupBaseAlignment);}();
result["members"]["maxGeometryCount"]=[&]() {
    json return_bEkMWNy=json({});
    return serialize_uint64_t(name.maxGeometryCount);}();
result["members"]["maxInstanceCount"]=[&]() {
    json return_fuyuBku=json({});
    return serialize_uint64_t(name.maxInstanceCount);}();
result["members"]["maxTriangleCount"]=[&]() {
    json return_qngYAFv=json({});
    return serialize_uint64_t(name.maxTriangleCount);}();
result["members"]["maxDescriptorSetAccelerationStructures"]=[&]() {
    json return_LzQspTD=json({});
    return serialize_uint32_t(name.maxDescriptorSetAccelerationStructures);}();
return result;}

    VkPhysicalDeviceRayTracingPropertiesNV deserialize_VkPhysicalDeviceRayTracingPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderGroupHandleSize=deserialize_uint32_t(name["members"]["shaderGroupHandleSize"]);}();
[&]() {
result.maxRecursionDepth=deserialize_uint32_t(name["members"]["maxRecursionDepth"]);}();
[&]() {
result.maxShaderGroupStride=deserialize_uint32_t(name["members"]["maxShaderGroupStride"]);}();
[&]() {
result.shaderGroupBaseAlignment=deserialize_uint32_t(name["members"]["shaderGroupBaseAlignment"]);}();
[&]() {
result.maxGeometryCount=deserialize_uint64_t(name["members"]["maxGeometryCount"]);}();
[&]() {
result.maxInstanceCount=deserialize_uint64_t(name["members"]["maxInstanceCount"]);}();
[&]() {
result.maxTriangleCount=deserialize_uint64_t(name["members"]["maxTriangleCount"]);}();
[&]() {
result.maxDescriptorSetAccelerationStructures=deserialize_uint32_t(name["members"]["maxDescriptorSetAccelerationStructures"]);}();
return result;}

    json serialize_VkStridedDeviceAddressRegionKHR(VkStridedDeviceAddressRegionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_DVEsqjs=json({});
    return_DVEsqjs=[&]() {
    json return_JhftABH=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_DVEsqjs;}();
result["members"]["stride"]=[&]() {
    json return_NFnZOdP=json({});
    return_NFnZOdP=[&]() {
    json return_dmaiKMa=json({});
    return serialize_uint64_t(name.stride);}();return return_NFnZOdP;}();
result["members"]["size"]=[&]() {
    json return_zbFaVJJ=json({});
    return_zbFaVJJ=[&]() {
    json return_VACseWk=json({});
    return serialize_uint64_t(name.size);}();return return_zbFaVJJ;}();
return result;}

    VkStridedDeviceAddressRegionKHR deserialize_VkStridedDeviceAddressRegionKHR(json name){
        auto result=VkStridedDeviceAddressRegionKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkTraceRaysIndirectCommandKHR(VkTraceRaysIndirectCommandKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["width"]=[&]() {
    json return_AzqcmCH=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_BewsTdf=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_oURttBB=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommandKHR deserialize_VkTraceRaysIndirectCommandKHR(json name){
        auto result=VkTraceRaysIndirectCommandKHR();
    
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkTraceRaysIndirectCommand2KHR(VkTraceRaysIndirectCommand2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["raygenShaderRecordAddress"]=[&]() {
    json return_SXYITHh=json({});
    return_SXYITHh=[&]() {
    json return_YjNYZYO=json({});
    return serialize_uint64_t(name.raygenShaderRecordAddress);}();return return_SXYITHh;}();
result["members"]["raygenShaderRecordSize"]=[&]() {
    json return_hQEsgAw=json({});
    return_hQEsgAw=[&]() {
    json return_DaMIBsR=json({});
    return serialize_uint64_t(name.raygenShaderRecordSize);}();return return_hQEsgAw;}();
result["members"]["missShaderBindingTableAddress"]=[&]() {
    json return_qHpcQNj=json({});
    return_qHpcQNj=[&]() {
    json return_GVqHaxS=json({});
    return serialize_uint64_t(name.missShaderBindingTableAddress);}();return return_qHpcQNj;}();
result["members"]["missShaderBindingTableSize"]=[&]() {
    json return_kFbylBN=json({});
    return_kFbylBN=[&]() {
    json return_CeApaaw=json({});
    return serialize_uint64_t(name.missShaderBindingTableSize);}();return return_kFbylBN;}();
result["members"]["missShaderBindingTableStride"]=[&]() {
    json return_OnADwUs=json({});
    return_OnADwUs=[&]() {
    json return_BpsYSqk=json({});
    return serialize_uint64_t(name.missShaderBindingTableStride);}();return return_OnADwUs;}();
result["members"]["hitShaderBindingTableAddress"]=[&]() {
    json return_adjbHIG=json({});
    return_adjbHIG=[&]() {
    json return_KwKHErH=json({});
    return serialize_uint64_t(name.hitShaderBindingTableAddress);}();return return_adjbHIG;}();
result["members"]["hitShaderBindingTableSize"]=[&]() {
    json return_UTCpNSz=json({});
    return_UTCpNSz=[&]() {
    json return_NHrbsJO=json({});
    return serialize_uint64_t(name.hitShaderBindingTableSize);}();return return_UTCpNSz;}();
result["members"]["hitShaderBindingTableStride"]=[&]() {
    json return_CBXOSoS=json({});
    return_CBXOSoS=[&]() {
    json return_TeCqTnB=json({});
    return serialize_uint64_t(name.hitShaderBindingTableStride);}();return return_CBXOSoS;}();
result["members"]["callableShaderBindingTableAddress"]=[&]() {
    json return_ZHYFOlg=json({});
    return_ZHYFOlg=[&]() {
    json return_lPGdgVu=json({});
    return serialize_uint64_t(name.callableShaderBindingTableAddress);}();return return_ZHYFOlg;}();
result["members"]["callableShaderBindingTableSize"]=[&]() {
    json return_SLicLAT=json({});
    return_SLicLAT=[&]() {
    json return_VVBaYOe=json({});
    return serialize_uint64_t(name.callableShaderBindingTableSize);}();return return_SLicLAT;}();
result["members"]["callableShaderBindingTableStride"]=[&]() {
    json return_bPLoCFW=json({});
    return_bPLoCFW=[&]() {
    json return_QYpmBOT=json({});
    return serialize_uint64_t(name.callableShaderBindingTableStride);}();return return_bPLoCFW;}();
result["members"]["width"]=[&]() {
    json return_lGzKlEV=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_IgUaDJR=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["depth"]=[&]() {
    json return_RNrKPWt=json({});
    return serialize_uint32_t(name.depth);}();
return result;}

    VkTraceRaysIndirectCommand2KHR deserialize_VkTraceRaysIndirectCommand2KHR(json name){
        auto result=VkTraceRaysIndirectCommand2KHR();
    
[&]() {
[&]() {
result.raygenShaderRecordAddress=deserialize_uint64_t(name["members"]["raygenShaderRecordAddress"]);}();}();
[&]() {
[&]() {
result.raygenShaderRecordSize=deserialize_uint64_t(name["members"]["raygenShaderRecordSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableAddress=deserialize_uint64_t(name["members"]["missShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableSize=deserialize_uint64_t(name["members"]["missShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.missShaderBindingTableStride=deserialize_uint64_t(name["members"]["missShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableAddress=deserialize_uint64_t(name["members"]["hitShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableSize=deserialize_uint64_t(name["members"]["hitShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.hitShaderBindingTableStride=deserialize_uint64_t(name["members"]["hitShaderBindingTableStride"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableAddress=deserialize_uint64_t(name["members"]["callableShaderBindingTableAddress"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableSize=deserialize_uint64_t(name["members"]["callableShaderBindingTableSize"]);}();}();
[&]() {
[&]() {
result.callableShaderBindingTableStride=deserialize_uint64_t(name["members"]["callableShaderBindingTableStride"]);}();}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.depth=deserialize_uint32_t(name["members"]["depth"]);}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_csBgvHm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pMycMKp=json({});
    
        if (name.pNext==NULL){
            return_pMycMKp["null"]=true;
            return return_pMycMKp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMaintenance1"]=[&]() {
    json return_lPQnigg=json({});
    return_lPQnigg=[&]() {
    json return_EKDPtny=json({});
    return serialize_uint32_t(name.rayTracingMaintenance1);}();return return_lPQnigg;}();
result["members"]["rayTracingPipelineTraceRaysIndirect2"]=[&]() {
    json return_AqRRpDt=json({});
    return_AqRRpDt=[&]() {
    json return_PQKmcom=json({});
    return serialize_uint32_t(name.rayTracingPipelineTraceRaysIndirect2);}();return return_AqRRpDt;}();
return result;}

    VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR deserialize_VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMaintenance1=deserialize_uint32_t(name["members"]["rayTracingMaintenance1"]);}();}();
[&]() {
[&]() {
result.rayTracingPipelineTraceRaysIndirect2=deserialize_uint32_t(name["members"]["rayTracingPipelineTraceRaysIndirect2"]);}();}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesListEXT(VkDrmFormatModifierPropertiesListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OsAbGmq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kLDOGfT=json({});
    
        if (name.pNext==NULL){
            return_kLDOGfT["null"]=true;
            return return_kLDOGfT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_JRNDwKv=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_EFiYOUK=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_EFiYOUK["null"]=true;
            return return_EFiYOUK;
        }
        
        return_EFiYOUK["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_KUusSqA=json({});
    return serialize_VkDrmFormatModifierPropertiesEXT(name.pDrmFormatModifierProperties[i]);}();
            return_EFiYOUK["members"][std::to_string(i)].push_back(temp);
        }
        return return_EFiYOUK;
        }();
return result;}

    VkDrmFormatModifierPropertiesListEXT deserialize_VkDrmFormatModifierPropertiesListEXT(json name){
        auto result=VkDrmFormatModifierPropertiesListEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierPropertiesEXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierPropertiesEXT));
        for (int bPbKalt=0; bPbKalt < result.drmFormatModifierCount; bPbKalt++){
            [&]() {
result.pDrmFormatModifierProperties[bPbKalt]=deserialize_VkDrmFormatModifierPropertiesEXT(name["members"]["pDrmFormatModifierProperties"]["members"][bPbKalt]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierPropertiesEXT(VkDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_nQBRxKs=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_ycapxjp=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_rwcvAvg=json({});
    return serialize_VkFormatFeatureFlags(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierPropertiesEXT deserialize_VkDrmFormatModifierPropertiesEXT(json name){
        auto result=VkDrmFormatModifierPropertiesEXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(VkPhysicalDeviceImageDrmFormatModifierInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nHDUHFn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KHFLalw=json({});
    
        if (name.pNext==NULL){
            return_KHFLalw["null"]=true;
            return return_KHFLalw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_EvKmsOB=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["sharingMode"]=[&]() {
    json return_QFIHJYb=json({});
    return serialize_VkSharingMode(name.sharingMode);}();
result["members"]["queueFamilyIndexCount"]=[&]() {
    json return_EKGxsXw=json({});
    return serialize_uint32_t(name.queueFamilyIndexCount);}();
result["members"]["pQueueFamilyIndices"]=[&]() {
    json return_Zvssunw=json({});
    
        if (name.pQueueFamilyIndices==NULL){
            return_Zvssunw["null"]=true;
            return return_Zvssunw;
        }
        
        return_Zvssunw["members"]={};
        for(int i=0; i < name.queueFamilyIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_eELTZzL=json({});
    return serialize_uint32_t(name.pQueueFamilyIndices[i]);}();
            return_Zvssunw["members"][std::to_string(i)].push_back(temp);
        }
        return return_Zvssunw;
        }();
return result;}

    VkPhysicalDeviceImageDrmFormatModifierInfoEXT deserialize_VkPhysicalDeviceImageDrmFormatModifierInfoEXT(json name){
        auto result=VkPhysicalDeviceImageDrmFormatModifierInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NJvnWvk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NJvnWvk=NULL;
        }
    temp_NJvnWvk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NJvnWvk;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.sharingMode=deserialize_VkSharingMode(name["members"]["sharingMode"]);}();
[&]() {
result.queueFamilyIndexCount=deserialize_uint32_t(name["members"]["queueFamilyIndexCount"]);}();
[&]() {
uint32_t* temp_NvVAAEM;[&]() {

        if (name["members"]["pQueueFamilyIndices"].contains("null")){
        temp_NvVAAEM=NULL;
        }
    temp_NvVAAEM=(uint32_t*)malloc(result.queueFamilyIndexCount*sizeof(uint32_t));
        for (int NusFGmP=0; NusFGmP < result.queueFamilyIndexCount; NusFGmP++){
            [&]() {
temp_NvVAAEM[NusFGmP]=deserialize_uint32_t(name["members"]["pQueueFamilyIndices"]["members"][NusFGmP]);}();;
        }
        }();result.pQueueFamilyIndices=temp_NvVAAEM;}();
return result;}

    json serialize_VkImageDrmFormatModifierListCreateInfoEXT(VkImageDrmFormatModifierListCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SuHSDtf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qSgzXWr=json({});
    
        if (name.pNext==NULL){
            return_qSgzXWr["null"]=true;
            return return_qSgzXWr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_EGQPOun=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifiers"]=[&]() {
    json return_vCplWrY=json({});
    
        if (name.pDrmFormatModifiers==NULL){
            return_vCplWrY["null"]=true;
            return return_vCplWrY;
        }
        
        return_vCplWrY["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_tFQifGA=json({});
    return serialize_uint64_t(name.pDrmFormatModifiers[i]);}();
            return_vCplWrY["members"][std::to_string(i)].push_back(temp);
        }
        return return_vCplWrY;
        }();
return result;}

    VkImageDrmFormatModifierListCreateInfoEXT deserialize_VkImageDrmFormatModifierListCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierListCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_esEztSA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_esEztSA=NULL;
        }
    temp_esEztSA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_esEztSA;}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {
uint64_t* temp_fCOfKWe;[&]() {

        if (name["members"]["pDrmFormatModifiers"].contains("null")){
        temp_fCOfKWe=NULL;
        }
    temp_fCOfKWe=(uint64_t*)malloc(result.drmFormatModifierCount*sizeof(uint64_t));
        for (int AtzQKwc=0; AtzQKwc < result.drmFormatModifierCount; AtzQKwc++){
            [&]() {
temp_fCOfKWe[AtzQKwc]=deserialize_uint64_t(name["members"]["pDrmFormatModifiers"]["members"][AtzQKwc]);}();;
        }
        }();result.pDrmFormatModifiers=temp_fCOfKWe;}();
return result;}

    json serialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(VkImageDrmFormatModifierExplicitCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wizhMEs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XQOSkQM=json({});
    
        if (name.pNext==NULL){
            return_XQOSkQM["null"]=true;
            return return_XQOSkQM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_obKcLFB=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_NwSkuZr=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["pPlaneLayouts"]=[&]() {
    json return_wOfbuXW=json({});
    
        if (name.pPlaneLayouts==NULL){
            return_wOfbuXW["null"]=true;
            return return_wOfbuXW;
        }
        
        return_wOfbuXW["members"]={};
        for(int i=0; i < name.drmFormatModifierPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_TqUFMTH=json({});
    return serialize_VkSubresourceLayout(name.pPlaneLayouts[i]);}();
            return_wOfbuXW["members"][std::to_string(i)].push_back(temp);
        }
        return return_wOfbuXW;
        }();
return result;}

    VkImageDrmFormatModifierExplicitCreateInfoEXT deserialize_VkImageDrmFormatModifierExplicitCreateInfoEXT(json name){
        auto result=VkImageDrmFormatModifierExplicitCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HADHYtX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HADHYtX=NULL;
        }
    temp_HADHYtX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HADHYtX;}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
VkSubresourceLayout* temp_xbTJete;[&]() {

        if (name["members"]["pPlaneLayouts"].contains("null")){
        temp_xbTJete=NULL;
        }
    temp_xbTJete=(VkSubresourceLayout*)malloc(result.drmFormatModifierPlaneCount*sizeof(VkSubresourceLayout));
        for (int gHqcVFQ=0; gHqcVFQ < result.drmFormatModifierPlaneCount; gHqcVFQ++){
            [&]() {
temp_xbTJete[gHqcVFQ]=deserialize_VkSubresourceLayout(name["members"]["pPlaneLayouts"]["members"][gHqcVFQ]);}();;
        }
        }();result.pPlaneLayouts=temp_xbTJete;}();
return result;}

    json serialize_VkImageDrmFormatModifierPropertiesEXT(VkImageDrmFormatModifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ybmwaHr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JwSwSrM=json({});
    
        if (name.pNext==NULL){
            return_JwSwSrM["null"]=true;
            return return_JwSwSrM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifier"]=[&]() {
    json return_vbXxnXm=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
return result;}

    VkImageDrmFormatModifierPropertiesEXT deserialize_VkImageDrmFormatModifierPropertiesEXT(json name){
        auto result=VkImageDrmFormatModifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfo(VkImageStencilUsageCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Jfsgadr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XCCdTnv=json({});
    
        if (name.pNext==NULL){
            return_XCCdTnv["null"]=true;
            return return_XCCdTnv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_PNYNpmk=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfo deserialize_VkImageStencilUsageCreateInfo(json name){
        auto result=VkImageStencilUsageCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yYvfoBx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yYvfoBx=NULL;
        }
    temp_yYvfoBx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yYvfoBx;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkImageStencilUsageCreateInfoEXT(VkImageStencilUsageCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wwRgnav=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HmVGaBJ=json({});
    
        if (name.pNext==NULL){
            return_HmVGaBJ["null"]=true;
            return return_HmVGaBJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilUsage"]=[&]() {
    json return_BYIplnl=json({});
    return serialize_VkImageUsageFlags(name.stencilUsage);}();
return result;}

    VkImageStencilUsageCreateInfoEXT deserialize_VkImageStencilUsageCreateInfoEXT(json name){
        auto result=VkImageStencilUsageCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IVTHtHP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IVTHtHP=NULL;
        }
    temp_IVTHtHP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IVTHtHP;}();
[&]() {
result.stencilUsage=deserialize_VkImageUsageFlags(name["members"]["stencilUsage"]);}();
return result;}

    json serialize_VkDeviceMemoryOverallocationCreateInfoAMD(VkDeviceMemoryOverallocationCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bLxinUB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nEAHiGP=json({});
    
        if (name.pNext==NULL){
            return_nEAHiGP["null"]=true;
            return return_nEAHiGP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["overallocationBehavior"]=[&]() {
    json return_UKhGywG=json({});
    return serialize_VkMemoryOverallocationBehaviorAMD(name.overallocationBehavior);}();
return result;}

    VkDeviceMemoryOverallocationCreateInfoAMD deserialize_VkDeviceMemoryOverallocationCreateInfoAMD(json name){
        auto result=VkDeviceMemoryOverallocationCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NKDrrhu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NKDrrhu=NULL;
        }
    temp_NKDrrhu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NKDrrhu;}();
[&]() {
result.overallocationBehavior=deserialize_VkMemoryOverallocationBehaviorAMD(name["members"]["overallocationBehavior"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(VkPhysicalDeviceFragmentDensityMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fhCzyHy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fECRlam=json({});
    
        if (name.pNext==NULL){
            return_fECRlam["null"]=true;
            return return_fECRlam;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMap"]=[&]() {
    json return_smECusC=json({});
    return_smECusC=[&]() {
    json return_CEPlViz=json({});
    return serialize_uint32_t(name.fragmentDensityMap);}();return return_smECusC;}();
result["members"]["fragmentDensityMapDynamic"]=[&]() {
    json return_OPYjBSJ=json({});
    return_OPYjBSJ=[&]() {
    json return_fbTRmQe=json({});
    return serialize_uint32_t(name.fragmentDensityMapDynamic);}();return return_OPYjBSJ;}();
result["members"]["fragmentDensityMapNonSubsampledImages"]=[&]() {
    json return_qPulOvH=json({});
    return_qPulOvH=[&]() {
    json return_DAuvkdt=json({});
    return serialize_uint32_t(name.fragmentDensityMapNonSubsampledImages);}();return return_qPulOvH;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapFeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMap=deserialize_uint32_t(name["members"]["fragmentDensityMap"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapDynamic=deserialize_uint32_t(name["members"]["fragmentDensityMapDynamic"]);}();}();
[&]() {
[&]() {
result.fragmentDensityMapNonSubsampledImages=deserialize_uint32_t(name["members"]["fragmentDensityMapNonSubsampledImages"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(VkPhysicalDeviceFragmentDensityMap2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fMjPghf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nIVSKmV=json({});
    
        if (name.pNext==NULL){
            return_nIVSKmV["null"]=true;
            return return_nIVSKmV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapDeferred"]=[&]() {
    json return_juQyYLy=json({});
    return_juQyYLy=[&]() {
    json return_UharmlH=json({});
    return serialize_uint32_t(name.fragmentDensityMapDeferred);}();return return_juQyYLy;}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2FeaturesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapDeferred=deserialize_uint32_t(name["members"]["fragmentDensityMapDeferred"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iaiEFzd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IfZxqDF=json({});
    
        if (name.pNext==NULL){
            return_IfZxqDF["null"]=true;
            return return_IfZxqDF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapOffset"]=[&]() {
    json return_BzZjuWy=json({});
    return_BzZjuWy=[&]() {
    json return_XyfFwQZ=json({});
    return serialize_uint32_t(name.fragmentDensityMapOffset);}();return return_BzZjuWy;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentDensityMapOffset=deserialize_uint32_t(name["members"]["fragmentDensityMapOffset"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(VkPhysicalDeviceFragmentDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YZrYzPy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nOVoXUs=json({});
    
        if (name.pNext==NULL){
            return_nOVoXUs["null"]=true;
            return return_nOVoXUs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentDensityTexelSize"]=[&]() {
    json return_uGyiVcD=json({});
    return serialize_VkExtent2D(name.minFragmentDensityTexelSize);}();
result["members"]["maxFragmentDensityTexelSize"]=[&]() {
    json return_WaGoPId=json({});
    return serialize_VkExtent2D(name.maxFragmentDensityTexelSize);}();
result["members"]["fragmentDensityInvocations"]=[&]() {
    json return_gcVQZNk=json({});
    return_gcVQZNk=[&]() {
    json return_mLBSQix=json({});
    return serialize_uint32_t(name.fragmentDensityInvocations);}();return return_gcVQZNk;}();
return result;}

    VkPhysicalDeviceFragmentDensityMapPropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentDensityTexelSize"]);}();
[&]() {
result.maxFragmentDensityTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentDensityTexelSize"]);}();
[&]() {
[&]() {
result.fragmentDensityInvocations=deserialize_uint32_t(name["members"]["fragmentDensityInvocations"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(VkPhysicalDeviceFragmentDensityMap2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fjHMBmP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FmlYEoI=json({});
    
        if (name.pNext==NULL){
            return_FmlYEoI["null"]=true;
            return return_FmlYEoI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subsampledLoads"]=[&]() {
    json return_GziwbPj=json({});
    return_GziwbPj=[&]() {
    json return_svtIccn=json({});
    return serialize_uint32_t(name.subsampledLoads);}();return return_GziwbPj;}();
result["members"]["subsampledCoarseReconstructionEarlyAccess"]=[&]() {
    json return_lQVPTqH=json({});
    return_lQVPTqH=[&]() {
    json return_WOYzhjh=json({});
    return serialize_uint32_t(name.subsampledCoarseReconstructionEarlyAccess);}();return return_lQVPTqH;}();
result["members"]["maxSubsampledArrayLayers"]=[&]() {
    json return_VnZXBhS=json({});
    return serialize_uint32_t(name.maxSubsampledArrayLayers);}();
result["members"]["maxDescriptorSetSubsampledSamplers"]=[&]() {
    json return_ZGUOTLd=json({});
    return serialize_uint32_t(name.maxDescriptorSetSubsampledSamplers);}();
return result;}

    VkPhysicalDeviceFragmentDensityMap2PropertiesEXT deserialize_VkPhysicalDeviceFragmentDensityMap2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceFragmentDensityMap2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subsampledLoads=deserialize_uint32_t(name["members"]["subsampledLoads"]);}();}();
[&]() {
[&]() {
result.subsampledCoarseReconstructionEarlyAccess=deserialize_uint32_t(name["members"]["subsampledCoarseReconstructionEarlyAccess"]);}();}();
[&]() {
result.maxSubsampledArrayLayers=deserialize_uint32_t(name["members"]["maxSubsampledArrayLayers"]);}();
[&]() {
result.maxDescriptorSetSubsampledSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetSubsampledSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_krfHecs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tfDafie=json({});
    
        if (name.pNext==NULL){
            return_tfDafie["null"]=true;
            return return_tfDafie;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetGranularity"]=[&]() {
    json return_rOqziUb=json({});
    return serialize_VkExtent2D(name.fragmentDensityOffsetGranularity);}();
return result;}

    VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM deserialize_VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.fragmentDensityOffsetGranularity=deserialize_VkExtent2D(name["members"]["fragmentDensityOffsetGranularity"]);}();
return result;}

    json serialize_VkRenderPassFragmentDensityMapCreateInfoEXT(VkRenderPassFragmentDensityMapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EZtfarU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rsWoNbq=json({});
    
        if (name.pNext==NULL){
            return_rsWoNbq["null"]=true;
            return return_rsWoNbq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityMapAttachment"]=[&]() {
    json return_nNtiJKO=json({});
    return serialize_VkAttachmentReference(name.fragmentDensityMapAttachment);}();
return result;}

    VkRenderPassFragmentDensityMapCreateInfoEXT deserialize_VkRenderPassFragmentDensityMapCreateInfoEXT(json name){
        auto result=VkRenderPassFragmentDensityMapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TUKXVsw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TUKXVsw=NULL;
        }
    temp_TUKXVsw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TUKXVsw;}();
[&]() {
result.fragmentDensityMapAttachment=deserialize_VkAttachmentReference(name["members"]["fragmentDensityMapAttachment"]);}();
return result;}

    json serialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(VkSubpassFragmentDensityMapOffsetEndInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uRACDXv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dxylHip=json({});
    
        if (name.pNext==NULL){
            return_dxylHip["null"]=true;
            return return_dxylHip;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentDensityOffsetCount"]=[&]() {
    json return_VTzBNuI=json({});
    return serialize_uint32_t(name.fragmentDensityOffsetCount);}();
result["members"]["pFragmentDensityOffsets"]=[&]() {
    json return_GjWMnZQ=json({});
    
        if (name.pFragmentDensityOffsets==NULL){
            return_GjWMnZQ["null"]=true;
            return return_GjWMnZQ;
        }
        
        return_GjWMnZQ["members"]={};
        for(int i=0; i < name.fragmentDensityOffsetCount; i++){
            json temp;
            temp=[&]() {
    json return_puSqogM=json({});
    return serialize_VkOffset2D(name.pFragmentDensityOffsets[i]);}();
            return_GjWMnZQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_GjWMnZQ;
        }();
return result;}

    VkSubpassFragmentDensityMapOffsetEndInfoQCOM deserialize_VkSubpassFragmentDensityMapOffsetEndInfoQCOM(json name){
        auto result=VkSubpassFragmentDensityMapOffsetEndInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CKMzvIq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CKMzvIq=NULL;
        }
    temp_CKMzvIq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CKMzvIq;}();
[&]() {
result.fragmentDensityOffsetCount=deserialize_uint32_t(name["members"]["fragmentDensityOffsetCount"]);}();
[&]() {
VkOffset2D* temp_GYIAGpT;[&]() {

        if (name["members"]["pFragmentDensityOffsets"].contains("null")){
        temp_GYIAGpT=NULL;
        }
    temp_GYIAGpT=(VkOffset2D*)malloc(result.fragmentDensityOffsetCount*sizeof(VkOffset2D));
        for (int dvkmCrJ=0; dvkmCrJ < result.fragmentDensityOffsetCount; dvkmCrJ++){
            [&]() {
temp_GYIAGpT[dvkmCrJ]=deserialize_VkOffset2D(name["members"]["pFragmentDensityOffsets"]["members"][dvkmCrJ]);}();;
        }
        }();result.pFragmentDensityOffsets=temp_GYIAGpT;}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeatures(VkPhysicalDeviceScalarBlockLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qbMSqZk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YCDFORp=json({});
    
        if (name.pNext==NULL){
            return_YCDFORp["null"]=true;
            return return_YCDFORp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_VGhCqDF=json({});
    return_VGhCqDF=[&]() {
    json return_GUDgJvH=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_VGhCqDF;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeatures deserialize_VkPhysicalDeviceScalarBlockLayoutFeatures(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(VkPhysicalDeviceScalarBlockLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ptxqYwS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pKrtRSx=json({});
    
        if (name.pNext==NULL){
            return_pKrtRSx["null"]=true;
            return return_pKrtRSx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_UBWXdnX=json({});
    return_UBWXdnX=[&]() {
    json return_KwDuVNx=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_UBWXdnX;}();
return result;}

    VkPhysicalDeviceScalarBlockLayoutFeaturesEXT deserialize_VkPhysicalDeviceScalarBlockLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceScalarBlockLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
return result;}

    json serialize_VkSurfaceProtectedCapabilitiesKHR(VkSurfaceProtectedCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_njmkkuq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xMOwbjy=json({});
    
        if (name.pNext==NULL){
            return_xMOwbjy["null"]=true;
            return return_xMOwbjy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportsProtected"]=[&]() {
    json return_wGkGzzB=json({});
    return_wGkGzzB=[&]() {
    json return_WxBjeNA=json({});
    return serialize_uint32_t(name.supportsProtected);}();return return_wGkGzzB;}();
return result;}

    VkSurfaceProtectedCapabilitiesKHR deserialize_VkSurfaceProtectedCapabilitiesKHR(json name){
        auto result=VkSurfaceProtectedCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rtYpplH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rtYpplH=NULL;
        }
    temp_rtYpplH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rtYpplH;}();
[&]() {
[&]() {
result.supportsProtected=deserialize_uint32_t(name["members"]["supportsProtected"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(VkPhysicalDeviceUniformBufferStandardLayoutFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mkISJVq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UrbYRXl=json({});
    
        if (name.pNext==NULL){
            return_UrbYRXl["null"]=true;
            return return_UrbYRXl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_NrReEGo=json({});
    return_NrReEGo=[&]() {
    json return_kNbBYRh=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_NrReEGo;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeatures deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeatures(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jxEEQOe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tVqcjgQ=json({});
    
        if (name.pNext==NULL){
            return_tVqcjgQ["null"]=true;
            return return_tVqcjgQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_skSRZzA=json({});
    return_skSRZzA=[&]() {
    json return_uBquByp=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_skSRZzA;}();
return result;}

    VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR deserialize_VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(VkPhysicalDeviceDepthClipEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HoPoaQo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CFDiQJW=json({});
    
        if (name.pNext==NULL){
            return_CFDiQJW["null"]=true;
            return return_CFDiQJW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipEnable"]=[&]() {
    json return_cSiPsJS=json({});
    return_cSiPsJS=[&]() {
    json return_qWEbHle=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_cSiPsJS;}();
return result;}

    VkPhysicalDeviceDepthClipEnableFeaturesEXT deserialize_VkPhysicalDeviceDepthClipEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(VkPipelineRasterizationDepthClipStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ekKJEIC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ttsZlNs=json({});
    
        if (name.pNext==NULL){
            return_ttsZlNs["null"]=true;
            return return_ttsZlNs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_fxLYWmx=json({});
    return serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name.flags);}();
result["members"]["depthClipEnable"]=[&]() {
    json return_haaLPpy=json({});
    return_haaLPpy=[&]() {
    json return_xVmNdKD=json({});
    return serialize_uint32_t(name.depthClipEnable);}();return return_haaLPpy;}();
return result;}

    VkPipelineRasterizationDepthClipStateCreateInfoEXT deserialize_VkPipelineRasterizationDepthClipStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationDepthClipStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RsVXRYD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RsVXRYD=NULL;
        }
    temp_RsVXRYD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RsVXRYD;}();
[&]() {
result.flags=deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.depthClipEnable=deserialize_uint32_t(name["members"]["depthClipEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(VkPhysicalDeviceMemoryBudgetPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SqnYIjy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ayLMLSW=json({});
    
        if (name.pNext==NULL){
            return_ayLMLSW["null"]=true;
            return return_ayLMLSW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["heapBudget"]=[&]() {
    json return_zfFjBFy=json({});
    
        return_zfFjBFy["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_CIgsEFg=json({});
    return_CIgsEFg=[&]() {
    json return_VxkFzXH=json({});
    return serialize_uint64_t(name.heapBudget[i]);}();return return_CIgsEFg;}();
            return_zfFjBFy["members"][std::to_string(i)].push_back(temp);
        }
        return return_zfFjBFy;
        }();
result["members"]["heapUsage"]=[&]() {
    json return_JlYLFVH=json({});
    
        return_JlYLFVH["members"]={};
        for(int i=0; i < VK_MAX_MEMORY_HEAPS; i++){
            json temp;
            temp=[&]() {
    json return_mLdXtQT=json({});
    return_mLdXtQT=[&]() {
    json return_qTjEvii=json({});
    return serialize_uint64_t(name.heapUsage[i]);}();return return_mLdXtQT;}();
            return_JlYLFVH["members"][std::to_string(i)].push_back(temp);
        }
        return return_JlYLFVH;
        }();
return result;}

    VkPhysicalDeviceMemoryBudgetPropertiesEXT deserialize_VkPhysicalDeviceMemoryBudgetPropertiesEXT(json name){
        auto result=VkPhysicalDeviceMemoryBudgetPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int FvNMRaT=0; FvNMRaT < VK_MAX_MEMORY_HEAPS; FvNMRaT++){
            [&]() {
[&]() {
result.heapBudget[FvNMRaT]=deserialize_uint64_t(name["members"]["heapBudget"]["members"][FvNMRaT]);}();}();;
        }
        }();
[&]() {

        for (int SGoZMLI=0; SGoZMLI < VK_MAX_MEMORY_HEAPS; SGoZMLI++){
            [&]() {
[&]() {
result.heapUsage[SGoZMLI]=deserialize_uint64_t(name["members"]["heapUsage"]["members"][SGoZMLI]);}();}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(VkPhysicalDeviceMemoryPriorityFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XHKPXUt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mtgkMWP=json({});
    
        if (name.pNext==NULL){
            return_mtgkMWP["null"]=true;
            return return_mtgkMWP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryPriority"]=[&]() {
    json return_LHQSUzS=json({});
    return_LHQSUzS=[&]() {
    json return_vkRTKhS=json({});
    return serialize_uint32_t(name.memoryPriority);}();return return_LHQSUzS;}();
return result;}

    VkPhysicalDeviceMemoryPriorityFeaturesEXT deserialize_VkPhysicalDeviceMemoryPriorityFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMemoryPriorityFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.memoryPriority=deserialize_uint32_t(name["members"]["memoryPriority"]);}();}();
return result;}

    json serialize_VkMemoryPriorityAllocateInfoEXT(VkMemoryPriorityAllocateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oNwDwuT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nIFOsbL=json({});
    
        if (name.pNext==NULL){
            return_nIFOsbL["null"]=true;
            return return_nIFOsbL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["priority"]=[&]() {
    json return_mBHCYIz=json({});
    return serialize_float(name.priority);}();
return result;}

    VkMemoryPriorityAllocateInfoEXT deserialize_VkMemoryPriorityAllocateInfoEXT(json name){
        auto result=VkMemoryPriorityAllocateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NVWmVbW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NVWmVbW=NULL;
        }
    temp_NVWmVbW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NVWmVbW;}();
[&]() {
result.priority=deserialize_float(name["members"]["priority"]);}();
return result;}

    json serialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KSfDrUb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wMOERpB=json({});
    
        if (name.pNext==NULL){
            return_wMOERpB["null"]=true;
            return return_wMOERpB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pageableDeviceLocalMemory"]=[&]() {
    json return_LPkpAPV=json({});
    return_LPkpAPV=[&]() {
    json return_DnRLJgZ=json({});
    return serialize_uint32_t(name.pageableDeviceLocalMemory);}();return return_LPkpAPV;}();
return result;}

    VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT deserialize_VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pageableDeviceLocalMemory=deserialize_uint32_t(name["members"]["pageableDeviceLocalMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeatures(VkPhysicalDeviceBufferDeviceAddressFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nQqTzWA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vrRGMXP=json({});
    
        if (name.pNext==NULL){
            return_vrRGMXP["null"]=true;
            return return_vrRGMXP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_WjgHGLj=json({});
    return_WjgHGLj=[&]() {
    json return_MyNWFqU=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_WjgHGLj;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_TUAnlPj=json({});
    return_TUAnlPj=[&]() {
    json return_udMvhco=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_TUAnlPj;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_jmPNwaO=json({});
    return_jmPNwaO=[&]() {
    json return_zakmehd=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_jmPNwaO;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeatures deserialize_VkPhysicalDeviceBufferDeviceAddressFeatures(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(VkPhysicalDeviceBufferDeviceAddressFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GecQnOY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fRENWrd=json({});
    
        if (name.pNext==NULL){
            return_fRENWrd["null"]=true;
            return return_fRENWrd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_AjyaZGS=json({});
    return_AjyaZGS=[&]() {
    json return_ZIMRJpK=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_AjyaZGS;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_eyMNJoM=json({});
    return_eyMNJoM=[&]() {
    json return_tTLGSmm=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_eyMNJoM;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_wmKeBlp=json({});
    return_wmKeBlp=[&]() {
    json return_MekCqQC=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_wmKeBlp;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesKHR deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesKHR(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(VkPhysicalDeviceBufferDeviceAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dcspQql=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MYOpKod=json({});
    
        if (name.pNext==NULL){
            return_MYOpKod["null"]=true;
            return return_MYOpKod;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_EBkiJRN=json({});
    return_EBkiJRN=[&]() {
    json return_PCMWYqe=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_EBkiJRN;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_vpNmwEi=json({});
    return_vpNmwEi=[&]() {
    json return_UKmILyG=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_vpNmwEi;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_bTqOaGc=json({});
    return_bTqOaGc=[&]() {
    json return_gkbjulw=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_bTqOaGc;}();
return result;}

    VkPhysicalDeviceBufferDeviceAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferDeviceAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferDeviceAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBufferAddressFeaturesEXT(VkPhysicalDeviceBufferAddressFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sSbcWxT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_InmKbcW=json({});
    
        if (name.pNext==NULL){
            return_InmKbcW["null"]=true;
            return return_InmKbcW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_RuHoEkg=json({});
    return_RuHoEkg=[&]() {
    json return_XVoFMff=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_RuHoEkg;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_VhzzmHV=json({});
    return_VhzzmHV=[&]() {
    json return_wLmeIxO=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_VhzzmHV;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_tuGWkHg=json({});
    return_tuGWkHg=[&]() {
    json return_tPIkKSs=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_tuGWkHg;}();
return result;}

    VkPhysicalDeviceBufferAddressFeaturesEXT deserialize_VkPhysicalDeviceBufferAddressFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBufferAddressFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
return result;}

    json serialize_VkBufferDeviceAddressInfo(VkBufferDeviceAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DxseqMJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gTwPDFA=json({});
    
        if (name.pNext==NULL){
            return_gTwPDFA["null"]=true;
            return return_gTwPDFA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_qxjWhlb=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfo deserialize_VkBufferDeviceAddressInfo(json name){
        auto result=VkBufferDeviceAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WcMUAkK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WcMUAkK=NULL;
        }
    temp_WcMUAkK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WcMUAkK;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoKHR(VkBufferDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PIxkXpy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TduZIKa=json({});
    
        if (name.pNext==NULL){
            return_TduZIKa["null"]=true;
            return return_TduZIKa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_LNosGBP=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoKHR deserialize_VkBufferDeviceAddressInfoKHR(json name){
        auto result=VkBufferDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HkdiPMm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HkdiPMm=NULL;
        }
    temp_HkdiPMm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HkdiPMm;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferDeviceAddressInfoEXT(VkBufferDeviceAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Ccezzrw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MuuauOr=json({});
    
        if (name.pNext==NULL){
            return_MuuauOr["null"]=true;
            return return_MuuauOr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_FIPYhRD=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferDeviceAddressInfoEXT deserialize_VkBufferDeviceAddressInfoEXT(json name){
        auto result=VkBufferDeviceAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kiAxgxf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kiAxgxf=NULL;
        }
    temp_kiAxgxf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kiAxgxf;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfo(VkBufferOpaqueCaptureAddressCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FlKfXkf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sxGSnNp=json({});
    
        if (name.pNext==NULL){
            return_sxGSnNp["null"]=true;
            return return_sxGSnNp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_krUvdRn=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfo deserialize_VkBufferOpaqueCaptureAddressCreateInfo(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_wfEUnrg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_wfEUnrg=NULL;
        }
    temp_wfEUnrg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_wfEUnrg;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(VkBufferOpaqueCaptureAddressCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ikvNdgP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OCxtoeP=json({});
    
        if (name.pNext==NULL){
            return_OCxtoeP["null"]=true;
            return return_OCxtoeP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_oHUyeSB=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkBufferOpaqueCaptureAddressCreateInfoKHR deserialize_VkBufferOpaqueCaptureAddressCreateInfoKHR(json name){
        auto result=VkBufferOpaqueCaptureAddressCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qzBSzRZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qzBSzRZ=NULL;
        }
    temp_qzBSzRZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qzBSzRZ;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkBufferDeviceAddressCreateInfoEXT(VkBufferDeviceAddressCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QWeqPnE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TiduoZD=json({});
    
        if (name.pNext==NULL){
            return_TiduoZD["null"]=true;
            return return_TiduoZD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_SQqQtVs=json({});
    return_SQqQtVs=[&]() {
    json return_qyNpXQx=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_SQqQtVs;}();
return result;}

    VkBufferDeviceAddressCreateInfoEXT deserialize_VkBufferDeviceAddressCreateInfoEXT(json name){
        auto result=VkBufferDeviceAddressCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VBLrCOI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VBLrCOI=NULL;
        }
    temp_VBLrCOI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VBLrCOI;}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(VkPhysicalDeviceImageViewImageFormatInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dJEeYjj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EKdodUA=json({});
    
        if (name.pNext==NULL){
            return_EKdodUA["null"]=true;
            return return_EKdodUA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageViewType"]=[&]() {
    json return_nMEJWYK=json({});
    return serialize_VkImageViewType(name.imageViewType);}();
return result;}

    VkPhysicalDeviceImageViewImageFormatInfoEXT deserialize_VkPhysicalDeviceImageViewImageFormatInfoEXT(json name){
        auto result=VkPhysicalDeviceImageViewImageFormatInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageViewType=deserialize_VkImageViewType(name["members"]["imageViewType"]);}();
return result;}

    json serialize_VkFilterCubicImageViewImageFormatPropertiesEXT(VkFilterCubicImageViewImageFormatPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hwMqtXu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cBIiCVe=json({});
    
        if (name.pNext==NULL){
            return_cBIiCVe["null"]=true;
            return return_cBIiCVe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCubic"]=[&]() {
    json return_NzTTCzc=json({});
    return_NzTTCzc=[&]() {
    json return_MRoosGe=json({});
    return serialize_uint32_t(name.filterCubic);}();return return_NzTTCzc;}();
result["members"]["filterCubicMinmax"]=[&]() {
    json return_yYgZYgw=json({});
    return_yYgZYgw=[&]() {
    json return_ifUfyPR=json({});
    return serialize_uint32_t(name.filterCubicMinmax);}();return return_yYgZYgw;}();
return result;}

    VkFilterCubicImageViewImageFormatPropertiesEXT deserialize_VkFilterCubicImageViewImageFormatPropertiesEXT(json name){
        auto result=VkFilterCubicImageViewImageFormatPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.filterCubic=deserialize_uint32_t(name["members"]["filterCubic"]);}();}();
[&]() {
[&]() {
result.filterCubicMinmax=deserialize_uint32_t(name["members"]["filterCubicMinmax"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeatures(VkPhysicalDeviceImagelessFramebufferFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cmGMiJp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZeszlRJ=json({});
    
        if (name.pNext==NULL){
            return_ZeszlRJ["null"]=true;
            return return_ZeszlRJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_stgMRcx=json({});
    return_stgMRcx=[&]() {
    json return_sqKDAkV=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_stgMRcx;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeatures deserialize_VkPhysicalDeviceImagelessFramebufferFeatures(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(VkPhysicalDeviceImagelessFramebufferFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qKHsJzI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RhNjVTf=json({});
    
        if (name.pNext==NULL){
            return_RhNjVTf["null"]=true;
            return return_RhNjVTf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_KpdfxJB=json({});
    return_KpdfxJB=[&]() {
    json return_JevMnVw=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_KpdfxJB;}();
return result;}

    VkPhysicalDeviceImagelessFramebufferFeaturesKHR deserialize_VkPhysicalDeviceImagelessFramebufferFeaturesKHR(json name){
        auto result=VkPhysicalDeviceImagelessFramebufferFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfo(VkFramebufferAttachmentsCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ByWTMAv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rmmmhet=json({});
    
        if (name.pNext==NULL){
            return_rmmmhet["null"]=true;
            return return_rmmmhet;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_ShaTsJl=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_FnvinyA=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_FnvinyA["null"]=true;
            return return_FnvinyA;
        }
        
        return_FnvinyA["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_whLODwo=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_FnvinyA["members"][std::to_string(i)].push_back(temp);
        }
        return return_FnvinyA;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfo deserialize_VkFramebufferAttachmentsCreateInfo(json name){
        auto result=VkFramebufferAttachmentsCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RrKfrOa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RrKfrOa=NULL;
        }
    temp_RrKfrOa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RrKfrOa;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_dgmiJcj;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_dgmiJcj=NULL;
        }
    temp_dgmiJcj=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int urhdGMJ=0; urhdGMJ < result.attachmentImageInfoCount; urhdGMJ++){
            [&]() {
temp_dgmiJcj[urhdGMJ]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][urhdGMJ]);}();;
        }
        }();result.pAttachmentImageInfos=temp_dgmiJcj;}();
return result;}

    json serialize_VkFramebufferAttachmentsCreateInfoKHR(VkFramebufferAttachmentsCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yQqNmey=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YIqIJCW=json({});
    
        if (name.pNext==NULL){
            return_YIqIJCW["null"]=true;
            return return_YIqIJCW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentImageInfoCount"]=[&]() {
    json return_mQbNtSQ=json({});
    return serialize_uint32_t(name.attachmentImageInfoCount);}();
result["members"]["pAttachmentImageInfos"]=[&]() {
    json return_AOWXTMN=json({});
    
        if (name.pAttachmentImageInfos==NULL){
            return_AOWXTMN["null"]=true;
            return return_AOWXTMN;
        }
        
        return_AOWXTMN["members"]={};
        for(int i=0; i < name.attachmentImageInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_AtNKcPr=json({});
    return serialize_VkFramebufferAttachmentImageInfo(name.pAttachmentImageInfos[i]);}();
            return_AOWXTMN["members"][std::to_string(i)].push_back(temp);
        }
        return return_AOWXTMN;
        }();
return result;}

    VkFramebufferAttachmentsCreateInfoKHR deserialize_VkFramebufferAttachmentsCreateInfoKHR(json name){
        auto result=VkFramebufferAttachmentsCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iQsATky;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iQsATky=NULL;
        }
    temp_iQsATky=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iQsATky;}();
[&]() {
result.attachmentImageInfoCount=deserialize_uint32_t(name["members"]["attachmentImageInfoCount"]);}();
[&]() {
VkFramebufferAttachmentImageInfo* temp_GxPgRnN;[&]() {

        if (name["members"]["pAttachmentImageInfos"].contains("null")){
        temp_GxPgRnN=NULL;
        }
    temp_GxPgRnN=(VkFramebufferAttachmentImageInfo*)malloc(result.attachmentImageInfoCount*sizeof(VkFramebufferAttachmentImageInfo));
        for (int RPqIEjW=0; RPqIEjW < result.attachmentImageInfoCount; RPqIEjW++){
            [&]() {
temp_GxPgRnN[RPqIEjW]=deserialize_VkFramebufferAttachmentImageInfo(name["members"]["pAttachmentImageInfos"]["members"][RPqIEjW]);}();;
        }
        }();result.pAttachmentImageInfos=temp_GxPgRnN;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfo(VkFramebufferAttachmentImageInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QexGtCj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mAttJcs=json({});
    
        if (name.pNext==NULL){
            return_mAttJcs["null"]=true;
            return return_mAttJcs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ETsSHcw=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_LHvOAch=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_uuXrWiF=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_HOCXxXG=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_KBCdSDv=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_ecWmpkm=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_VmFZSWl=json({});
    
        if (name.pViewFormats==NULL){
            return_VmFZSWl["null"]=true;
            return return_VmFZSWl;
        }
        
        return_VmFZSWl["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_umyuBNL=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_VmFZSWl["members"][std::to_string(i)].push_back(temp);
        }
        return return_VmFZSWl;
        }();
return result;}

    VkFramebufferAttachmentImageInfo deserialize_VkFramebufferAttachmentImageInfo(json name){
        auto result=VkFramebufferAttachmentImageInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JXoGhLc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JXoGhLc=NULL;
        }
    temp_JXoGhLc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JXoGhLc;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_mpxCcTB;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_mpxCcTB=NULL;
        }
    temp_mpxCcTB=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int xBYyHYH=0; xBYyHYH < result.viewFormatCount; xBYyHYH++){
            [&]() {
temp_mpxCcTB[xBYyHYH]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][xBYyHYH]);}();;
        }
        }();result.pViewFormats=temp_mpxCcTB;}();
return result;}

    json serialize_VkFramebufferAttachmentImageInfoKHR(VkFramebufferAttachmentImageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NaoNLHH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UixcKIc=json({});
    
        if (name.pNext==NULL){
            return_UixcKIc["null"]=true;
            return return_UixcKIc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_qXBlZaX=json({});
    return serialize_VkImageCreateFlags(name.flags);}();
result["members"]["usage"]=[&]() {
    json return_ORMQtqU=json({});
    return serialize_VkImageUsageFlags(name.usage);}();
result["members"]["width"]=[&]() {
    json return_rapmpVz=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_aCJeZzL=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["layerCount"]=[&]() {
    json return_nAqYdsm=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewFormatCount"]=[&]() {
    json return_ZiSAlyf=json({});
    return serialize_uint32_t(name.viewFormatCount);}();
result["members"]["pViewFormats"]=[&]() {
    json return_WxRBfUQ=json({});
    
        if (name.pViewFormats==NULL){
            return_WxRBfUQ["null"]=true;
            return return_WxRBfUQ;
        }
        
        return_WxRBfUQ["members"]={};
        for(int i=0; i < name.viewFormatCount; i++){
            json temp;
            temp=[&]() {
    json return_AlZlXnY=json({});
    return serialize_VkFormat(name.pViewFormats[i]);}();
            return_WxRBfUQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_WxRBfUQ;
        }();
return result;}

    VkFramebufferAttachmentImageInfoKHR deserialize_VkFramebufferAttachmentImageInfoKHR(json name){
        auto result=VkFramebufferAttachmentImageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xerlnOP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xerlnOP=NULL;
        }
    temp_xerlnOP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xerlnOP;}();
[&]() {
result.flags=deserialize_VkImageCreateFlags(name["members"]["flags"]);}();
[&]() {
result.usage=deserialize_VkImageUsageFlags(name["members"]["usage"]);}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewFormatCount=deserialize_uint32_t(name["members"]["viewFormatCount"]);}();
[&]() {
VkFormat* temp_GNonBGT;[&]() {

        if (name["members"]["pViewFormats"].contains("null")){
        temp_GNonBGT=NULL;
        }
    temp_GNonBGT=(VkFormat*)malloc(result.viewFormatCount*sizeof(VkFormat));
        for (int jHvxung=0; jHvxung < result.viewFormatCount; jHvxung++){
            [&]() {
temp_GNonBGT[jHvxung]=deserialize_VkFormat(name["members"]["pViewFormats"]["members"][jHvxung]);}();;
        }
        }();result.pViewFormats=temp_GNonBGT;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfo(VkRenderPassAttachmentBeginInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zwOcYbd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qkbyxxi=json({});
    
        if (name.pNext==NULL){
            return_qkbyxxi["null"]=true;
            return return_qkbyxxi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_nTcoSHj=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_RpxCHIX=json({});
    
        if (name.pAttachments==NULL){
            return_RpxCHIX["null"]=true;
            return return_RpxCHIX;
        }
        
        return_RpxCHIX["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_HATTRaB=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_RpxCHIX["members"][std::to_string(i)].push_back(temp);
        }
        return return_RpxCHIX;
        }();
return result;}

    VkRenderPassAttachmentBeginInfo deserialize_VkRenderPassAttachmentBeginInfo(json name){
        auto result=VkRenderPassAttachmentBeginInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yGVDJPw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yGVDJPw=NULL;
        }
    temp_yGVDJPw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yGVDJPw;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_qykdpzo;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_qykdpzo=NULL;
        }
    temp_qykdpzo=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int trYgZYz=0; trYgZYz < result.attachmentCount; trYgZYz++){
            [&]() {
temp_qykdpzo[trYgZYz]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][trYgZYz]);}();;
        }
        }();result.pAttachments=temp_qykdpzo;}();
return result;}

    json serialize_VkRenderPassAttachmentBeginInfoKHR(VkRenderPassAttachmentBeginInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CZSoYNZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jTnYEtR=json({});
    
        if (name.pNext==NULL){
            return_jTnYEtR["null"]=true;
            return return_jTnYEtR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_bsoKnMS=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pAttachments"]=[&]() {
    json return_uVwDiQs=json({});
    
        if (name.pAttachments==NULL){
            return_uVwDiQs["null"]=true;
            return return_uVwDiQs;
        }
        
        return_uVwDiQs["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_BfXUrKV=json({});
    return serialize_VkImageView(name.pAttachments[i]);}();
            return_uVwDiQs["members"][std::to_string(i)].push_back(temp);
        }
        return return_uVwDiQs;
        }();
return result;}

    VkRenderPassAttachmentBeginInfoKHR deserialize_VkRenderPassAttachmentBeginInfoKHR(json name){
        auto result=VkRenderPassAttachmentBeginInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XvobSpq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XvobSpq=NULL;
        }
    temp_XvobSpq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XvobSpq;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkImageView* temp_QvzzlUf;[&]() {

        if (name["members"]["pAttachments"].contains("null")){
        temp_QvzzlUf=NULL;
        }
    temp_QvzzlUf=(VkImageView*)malloc(result.attachmentCount*sizeof(VkImageView));
        for (int feMDaku=0; feMDaku < result.attachmentCount; feMDaku++){
            [&]() {
temp_QvzzlUf[feMDaku]=deserialize_VkImageView(name["members"]["pAttachments"]["members"][feMDaku]);}();;
        }
        }();result.pAttachments=temp_QvzzlUf;}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(VkPhysicalDeviceTextureCompressionASTCHDRFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SnpiFPy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WEcJxmL=json({});
    
        if (name.pNext==NULL){
            return_WEcJxmL["null"]=true;
            return return_WEcJxmL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_vbtplsT=json({});
    return_vbtplsT=[&]() {
    json return_qvKVSYy=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_vbtplsT;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeatures deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeatures(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fsrbEsx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pWQbLRh=json({});
    
        if (name.pNext==NULL){
            return_pWQbLRh["null"]=true;
            return return_pWQbLRh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_srgPTVv=json({});
    return_srgPTVv=[&]() {
    json return_hcRnpPO=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_srgPTVv;}();
return result;}

    VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT deserialize_VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(VkPhysicalDeviceCooperativeMatrixFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gOzABcQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VBDGQnO=json({});
    
        if (name.pNext==NULL){
            return_VBDGQnO["null"]=true;
            return return_VBDGQnO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_ffkAqzn=json({});
    return_ffkAqzn=[&]() {
    json return_GVSeaNU=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_ffkAqzn;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_mEUdwYa=json({});
    return_mEUdwYa=[&]() {
    json return_VlxdZrw=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_mEUdwYa;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesNV deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(VkPhysicalDeviceCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vczcfJP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GFAownk=json({});
    
        if (name.pNext==NULL){
            return_GFAownk["null"]=true;
            return return_GFAownk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_zFSKvGl=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesNV deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesNV(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesNV(VkCooperativeMatrixPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lcNLhbi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rFXwKlU=json({});
    
        if (name.pNext==NULL){
            return_rFXwKlU["null"]=true;
            return return_rFXwKlU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_tSCASvQ=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_uhfCXmo=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_GKLtgAN=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_fvYXzhu=json({});
    return serialize_VkComponentTypeNV(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_pPdvUcR=json({});
    return serialize_VkComponentTypeNV(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_diJbatr=json({});
    return serialize_VkComponentTypeNV(name.CType);}();
result["members"]["DType"]=[&]() {
    json return_tYyvCaW=json({});
    return serialize_VkComponentTypeNV(name.DType);}();
result["members"]["scope"]=[&]() {
    json return_AkkXhwO=json({});
    return serialize_VkScopeNV(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesNV deserialize_VkCooperativeMatrixPropertiesNV(json name){
        auto result=VkCooperativeMatrixPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeNV(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeNV(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeNV(name["members"]["CType"]);}();
[&]() {
result.DType=deserialize_VkComponentTypeNV(name["members"]["DType"]);}();
[&]() {
result.scope=deserialize_VkScopeNV(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(VkPhysicalDeviceYcbcrImageArraysFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wyYAAwe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jAbtbXK=json({});
    
        if (name.pNext==NULL){
            return_jAbtbXK["null"]=true;
            return return_jAbtbXK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrImageArrays"]=[&]() {
    json return_JkxTJpk=json({});
    return_JkxTJpk=[&]() {
    json return_KeQbEMK=json({});
    return serialize_uint32_t(name.ycbcrImageArrays);}();return return_JkxTJpk;}();
return result;}

    VkPhysicalDeviceYcbcrImageArraysFeaturesEXT deserialize_VkPhysicalDeviceYcbcrImageArraysFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcrImageArraysFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrImageArrays=deserialize_uint32_t(name["members"]["ycbcrImageArrays"]);}();}();
return result;}

    json serialize_VkImageViewHandleInfoNVX(VkImageViewHandleInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_whAlcFm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gjlDIVL=json({});
    
        if (name.pNext==NULL){
            return_gjlDIVL["null"]=true;
            return return_gjlDIVL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_DAWKxYB=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["descriptorType"]=[&]() {
    json return_XqFkoxH=json({});
    return serialize_VkDescriptorType(name.descriptorType);}();
result["members"]["sampler"]=[&]() {
    json return_SpwhekL=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkImageViewHandleInfoNVX deserialize_VkImageViewHandleInfoNVX(json name){
        auto result=VkImageViewHandleInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GAygJdO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GAygJdO=NULL;
        }
    temp_GAygJdO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GAygJdO;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.descriptorType=deserialize_VkDescriptorType(name["members"]["descriptorType"]);}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkImageViewAddressPropertiesNVX(VkImageViewAddressPropertiesNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MEndHRs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BiCkxPB=json({});
    
        if (name.pNext==NULL){
            return_BiCkxPB["null"]=true;
            return return_BiCkxPB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceAddress"]=[&]() {
    json return_VrfFDEH=json({});
    return_VrfFDEH=[&]() {
    json return_UjMXfLe=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_VrfFDEH;}();
result["members"]["size"]=[&]() {
    json return_VhUpLTt=json({});
    return_VhUpLTt=[&]() {
    json return_RJzfZjA=json({});
    return serialize_uint64_t(name.size);}();return return_VhUpLTt;}();
return result;}

    VkImageViewAddressPropertiesNVX deserialize_VkImageViewAddressPropertiesNVX(json name){
        auto result=VkImageViewAddressPropertiesNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkPipelineCreationFeedback(VkPipelineCreationFeedback name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_NgugDFE=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_ogcIbcO=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedback deserialize_VkPipelineCreationFeedback(json name){
        auto result=VkPipelineCreationFeedback();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackEXT(VkPipelineCreationFeedbackEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["flags"]=[&]() {
    json return_lxRCsxB=json({});
    return serialize_VkPipelineCreationFeedbackFlags(name.flags);}();
result["members"]["duration"]=[&]() {
    json return_SSDCfnP=json({});
    return serialize_uint64_t(name.duration);}();
return result;}

    VkPipelineCreationFeedbackEXT deserialize_VkPipelineCreationFeedbackEXT(json name){
        auto result=VkPipelineCreationFeedbackEXT();
    
[&]() {
result.flags=deserialize_VkPipelineCreationFeedbackFlags(name["members"]["flags"]);}();
[&]() {
result.duration=deserialize_uint64_t(name["members"]["duration"]);}();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfo(VkPipelineCreationFeedbackCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JLMjaxE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rdnRkkH=json({});
    
        if (name.pNext==NULL){
            return_rdnRkkH["null"]=true;
            return return_rdnRkkH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_pPDMUrL=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_pPDMUrL["null"]=true;
            return return_pPDMUrL;
        }
        return_pPDMUrL=[&]() {
    json return_PdDhrsf=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_pPDMUrL;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_tEbsGDd=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_upwMveD=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_upwMveD["null"]=true;
            return return_upwMveD;
        }
        
        return_upwMveD["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_THpeoGs=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_upwMveD["members"][std::to_string(i)].push_back(temp);
        }
        return return_upwMveD;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfo deserialize_VkPipelineCreationFeedbackCreateInfo(json name){
        auto result=VkPipelineCreationFeedbackCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WZHvqhI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WZHvqhI=NULL;
        }
    temp_WZHvqhI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WZHvqhI;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int clBTsFt=0; clBTsFt < result.pipelineStageCreationFeedbackCount; clBTsFt++){
            [&]() {
result.pPipelineStageCreationFeedbacks[clBTsFt]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][clBTsFt]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineCreationFeedbackCreateInfoEXT(VkPipelineCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MZbPosg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XUrAUGe=json({});
    
        if (name.pNext==NULL){
            return_XUrAUGe["null"]=true;
            return return_XUrAUGe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pPipelineCreationFeedback"]=[&]() {
    json return_eygFvWK=json({});
    
        if (name.pPipelineCreationFeedback==NULL){
            return_eygFvWK["null"]=true;
            return return_eygFvWK;
        }
        return_eygFvWK=[&]() {
    json return_sVQNzCQ=json({});
    return serialize_VkPipelineCreationFeedback(*name.pPipelineCreationFeedback);}();
return return_eygFvWK;}();
result["members"]["pipelineStageCreationFeedbackCount"]=[&]() {
    json return_vUHWaBK=json({});
    return serialize_uint32_t(name.pipelineStageCreationFeedbackCount);}();
result["members"]["pPipelineStageCreationFeedbacks"]=[&]() {
    json return_vYThVmI=json({});
    
        if (name.pPipelineStageCreationFeedbacks==NULL){
            return_vYThVmI["null"]=true;
            return return_vYThVmI;
        }
        
        return_vYThVmI["members"]={};
        for(int i=0; i < name.pipelineStageCreationFeedbackCount; i++){
            json temp;
            temp=[&]() {
    json return_EBCjFAn=json({});
    return serialize_VkPipelineCreationFeedback(name.pPipelineStageCreationFeedbacks[i]);}();
            return_vYThVmI["members"][std::to_string(i)].push_back(temp);
        }
        return return_vYThVmI;
        }();
return result;}

    VkPipelineCreationFeedbackCreateInfoEXT deserialize_VkPipelineCreationFeedbackCreateInfoEXT(json name){
        auto result=VkPipelineCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zyPqNQf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zyPqNQf=NULL;
        }
    temp_zyPqNQf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zyPqNQf;}();
[&]() {

        if (name["members"]["pPipelineCreationFeedback"].contains("null")){
        result.pPipelineCreationFeedback=NULL;
        }
    [&]() {
*(result.pPipelineCreationFeedback)=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineCreationFeedback"]);}();
}();
[&]() {
result.pipelineStageCreationFeedbackCount=deserialize_uint32_t(name["members"]["pipelineStageCreationFeedbackCount"]);}();
[&]() {

        if (name["members"]["pPipelineStageCreationFeedbacks"].contains("null")){
        result.pPipelineStageCreationFeedbacks=NULL;
        }
    result.pPipelineStageCreationFeedbacks=(VkPipelineCreationFeedback*)malloc(result.pipelineStageCreationFeedbackCount*sizeof(VkPipelineCreationFeedback));
        for (int GvDgfrs=0; GvDgfrs < result.pipelineStageCreationFeedbackCount; GvDgfrs++){
            [&]() {
result.pPipelineStageCreationFeedbacks[GvDgfrs]=deserialize_VkPipelineCreationFeedback(name["members"]["pPipelineStageCreationFeedbacks"]["members"][GvDgfrs]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePresentBarrierFeaturesNV(VkPhysicalDevicePresentBarrierFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iIUvheS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hqsdGWE=json({});
    
        if (name.pNext==NULL){
            return_hqsdGWE["null"]=true;
            return return_hqsdGWE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrier"]=[&]() {
    json return_lISErIQ=json({});
    return_lISErIQ=[&]() {
    json return_PUPwEHm=json({});
    return serialize_uint32_t(name.presentBarrier);}();return return_lISErIQ;}();
return result;}

    VkPhysicalDevicePresentBarrierFeaturesNV deserialize_VkPhysicalDevicePresentBarrierFeaturesNV(json name){
        auto result=VkPhysicalDevicePresentBarrierFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrier=deserialize_uint32_t(name["members"]["presentBarrier"]);}();}();
return result;}

    json serialize_VkSurfaceCapabilitiesPresentBarrierNV(VkSurfaceCapabilitiesPresentBarrierNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gZKiniV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qRcicNK=json({});
    
        if (name.pNext==NULL){
            return_qRcicNK["null"]=true;
            return return_qRcicNK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierSupported"]=[&]() {
    json return_xCULjLk=json({});
    return_xCULjLk=[&]() {
    json return_keTPsGO=json({});
    return serialize_uint32_t(name.presentBarrierSupported);}();return return_xCULjLk;}();
return result;}

    VkSurfaceCapabilitiesPresentBarrierNV deserialize_VkSurfaceCapabilitiesPresentBarrierNV(json name){
        auto result=VkSurfaceCapabilitiesPresentBarrierNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierSupported=deserialize_uint32_t(name["members"]["presentBarrierSupported"]);}();}();
return result;}

    json serialize_VkSwapchainPresentBarrierCreateInfoNV(VkSwapchainPresentBarrierCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IeGywAE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pnpqGbx=json({});
    
        if (name.pNext==NULL){
            return_pnpqGbx["null"]=true;
            return return_pnpqGbx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentBarrierEnable"]=[&]() {
    json return_BLAYRxa=json({});
    return_BLAYRxa=[&]() {
    json return_dctSoHQ=json({});
    return serialize_uint32_t(name.presentBarrierEnable);}();return return_BLAYRxa;}();
return result;}

    VkSwapchainPresentBarrierCreateInfoNV deserialize_VkSwapchainPresentBarrierCreateInfoNV(json name){
        auto result=VkSwapchainPresentBarrierCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.presentBarrierEnable=deserialize_uint32_t(name["members"]["presentBarrierEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(VkPhysicalDevicePerformanceQueryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CygWHKp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gmzKwqK=json({});
    
        if (name.pNext==NULL){
            return_gmzKwqK["null"]=true;
            return return_gmzKwqK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCounterQueryPools"]=[&]() {
    json return_UhNtbSL=json({});
    return_UhNtbSL=[&]() {
    json return_dRVzwgr=json({});
    return serialize_uint32_t(name.performanceCounterQueryPools);}();return return_UhNtbSL;}();
result["members"]["performanceCounterMultipleQueryPools"]=[&]() {
    json return_lPPHhtw=json({});
    return_lPPHhtw=[&]() {
    json return_qqZPLYo=json({});
    return serialize_uint32_t(name.performanceCounterMultipleQueryPools);}();return return_lPPHhtw;}();
return result;}

    VkPhysicalDevicePerformanceQueryFeaturesKHR deserialize_VkPhysicalDevicePerformanceQueryFeaturesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.performanceCounterQueryPools=deserialize_uint32_t(name["members"]["performanceCounterQueryPools"]);}();}();
[&]() {
[&]() {
result.performanceCounterMultipleQueryPools=deserialize_uint32_t(name["members"]["performanceCounterMultipleQueryPools"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(VkPhysicalDevicePerformanceQueryPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IUXmlQr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JmfCJhw=json({});
    
        if (name.pNext==NULL){
            return_JmfCJhw["null"]=true;
            return return_JmfCJhw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["allowCommandBufferQueryCopies"]=[&]() {
    json return_HIKvlaw=json({});
    return_HIKvlaw=[&]() {
    json return_ZACMmvq=json({});
    return serialize_uint32_t(name.allowCommandBufferQueryCopies);}();return return_HIKvlaw;}();
return result;}

    VkPhysicalDevicePerformanceQueryPropertiesKHR deserialize_VkPhysicalDevicePerformanceQueryPropertiesKHR(json name){
        auto result=VkPhysicalDevicePerformanceQueryPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.allowCommandBufferQueryCopies=deserialize_uint32_t(name["members"]["allowCommandBufferQueryCopies"]);}();}();
return result;}

    json serialize_VkPerformanceCounterKHR(VkPerformanceCounterKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uMGLzXO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vmUDstu=json({});
    
        if (name.pNext==NULL){
            return_vmUDstu["null"]=true;
            return return_vmUDstu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["unit"]=[&]() {
    json return_PpnXvFg=json({});
    return serialize_VkPerformanceCounterUnitKHR(name.unit);}();
result["members"]["scope"]=[&]() {
    json return_zWezGDH=json({});
    return serialize_VkPerformanceCounterScopeKHR(name.scope);}();
result["members"]["storage"]=[&]() {
    json return_owwphyO=json({});
    return serialize_VkPerformanceCounterStorageKHR(name.storage);}();
result["members"]["uuid"]=[&]() {
    json return_LEeWcaH=json({});
    
        return_LEeWcaH["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_LLxONZO=json({});
    return serialize_uint8_t(name.uuid[i]);}();
            return_LEeWcaH["members"][std::to_string(i)].push_back(temp);
        }
        return return_LEeWcaH;
        }();
return result;}

    VkPerformanceCounterKHR deserialize_VkPerformanceCounterKHR(json name){
        auto result=VkPerformanceCounterKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.unit=deserialize_VkPerformanceCounterUnitKHR(name["members"]["unit"]);}();
[&]() {
result.scope=deserialize_VkPerformanceCounterScopeKHR(name["members"]["scope"]);}();
[&]() {
result.storage=deserialize_VkPerformanceCounterStorageKHR(name["members"]["storage"]);}();
[&]() {

        for (int kARbQVt=0; kARbQVt < VK_UUID_SIZE; kARbQVt++){
            [&]() {
result.uuid[kARbQVt]=deserialize_uint8_t(name["members"]["uuid"]["members"][kARbQVt]);}();;
        }
        }();
return result;}

    json serialize_VkPerformanceCounterDescriptionKHR(VkPerformanceCounterDescriptionKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HiFVOUs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WvpHNDo=json({});
    
        if (name.pNext==NULL){
            return_WvpHNDo["null"]=true;
            return return_WvpHNDo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_VxhhBPs=json({});
    return serialize_VkPerformanceCounterDescriptionFlagsKHR(name.flags);}();
result["members"]["name"]=[&]() {
    json return_hqHEGLn=json({});
    
        return_hqHEGLn["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_CHeDmmb=json({});
    return serialize_char(name.name[i]);}();
            return_hqHEGLn["members"][std::to_string(i)].push_back(temp);
        }
        return return_hqHEGLn;
        }();
result["members"]["category"]=[&]() {
    json return_NGWbfMw=json({});
    
        return_NGWbfMw["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_URkusjO=json({});
    return serialize_char(name.category[i]);}();
            return_NGWbfMw["members"][std::to_string(i)].push_back(temp);
        }
        return return_NGWbfMw;
        }();
result["members"]["description"]=[&]() {
    json return_YaSWHRJ=json({});
    
        return_YaSWHRJ["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_aaiUsij=json({});
    return serialize_char(name.description[i]);}();
            return_YaSWHRJ["members"][std::to_string(i)].push_back(temp);
        }
        return return_YaSWHRJ;
        }();
return result;}

    VkPerformanceCounterDescriptionKHR deserialize_VkPerformanceCounterDescriptionKHR(json name){
        auto result=VkPerformanceCounterDescriptionKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkPerformanceCounterDescriptionFlagsKHR(name["members"]["flags"]);}();
[&]() {

        for (int nzIMFGi=0; nzIMFGi < VK_MAX_DESCRIPTION_SIZE; nzIMFGi++){
            [&]() {
result.name[nzIMFGi]=deserialize_char(name["members"]["name"]["members"][nzIMFGi]);}();;
        }
        }();
[&]() {

        for (int AJrKzbN=0; AJrKzbN < VK_MAX_DESCRIPTION_SIZE; AJrKzbN++){
            [&]() {
result.category[AJrKzbN]=deserialize_char(name["members"]["category"]["members"][AJrKzbN]);}();;
        }
        }();
[&]() {

        for (int VBEltQv=0; VBEltQv < VK_MAX_DESCRIPTION_SIZE; VBEltQv++){
            [&]() {
result.description[VBEltQv]=deserialize_char(name["members"]["description"]["members"][VBEltQv]);}();;
        }
        }();
return result;}

    json serialize_VkQueryPoolPerformanceCreateInfoKHR(VkQueryPoolPerformanceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iUgjtyl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lkqNsiy=json({});
    
        if (name.pNext==NULL){
            return_lkqNsiy["null"]=true;
            return return_lkqNsiy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_arTLjPP=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["counterIndexCount"]=[&]() {
    json return_rbImyfx=json({});
    return serialize_uint32_t(name.counterIndexCount);}();
result["members"]["pCounterIndices"]=[&]() {
    json return_TkYqvGi=json({});
    
        if (name.pCounterIndices==NULL){
            return_TkYqvGi["null"]=true;
            return return_TkYqvGi;
        }
        
        return_TkYqvGi["members"]={};
        for(int i=0; i < name.counterIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_mRTsKej=json({});
    return serialize_uint32_t(name.pCounterIndices[i]);}();
            return_TkYqvGi["members"][std::to_string(i)].push_back(temp);
        }
        return return_TkYqvGi;
        }();
return result;}

    VkQueryPoolPerformanceCreateInfoKHR deserialize_VkQueryPoolPerformanceCreateInfoKHR(json name){
        auto result=VkQueryPoolPerformanceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gnCBejB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gnCBejB=NULL;
        }
    temp_gnCBejB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gnCBejB;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.counterIndexCount=deserialize_uint32_t(name["members"]["counterIndexCount"]);}();
[&]() {
uint32_t* temp_BHPQdOo;[&]() {

        if (name["members"]["pCounterIndices"].contains("null")){
        temp_BHPQdOo=NULL;
        }
    temp_BHPQdOo=(uint32_t*)malloc(result.counterIndexCount*sizeof(uint32_t));
        for (int rWuLych=0; rWuLych < result.counterIndexCount; rWuLych++){
            [&]() {
temp_BHPQdOo[rWuLych]=deserialize_uint32_t(name["members"]["pCounterIndices"]["members"][rWuLych]);}();;
        }
        }();result.pCounterIndices=temp_BHPQdOo;}();
return result;}

    json serialize_VkPerformanceCounterResultKHR(VkPerformanceCounterResultKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["int32"]=[&]() {
    json return_iQgKqkA=json({});
    return serialize_int32_t(name.int32);}();
result["members"]["int64"]=[&]() {
    json return_BFtyZCf=json({});
    return serialize_int64_t(name.int64);}();
result["members"]["uint32"]=[&]() {
    json return_SCBkrnp=json({});
    return serialize_uint32_t(name.uint32);}();
result["members"]["uint64"]=[&]() {
    json return_UEFwPau=json({});
    return serialize_uint64_t(name.uint64);}();
result["members"]["float32"]=[&]() {
    json return_rLoPFeX=json({});
    return serialize_float(name.float32);}();
result["members"]["float64"]=[&]() {
    json return_sBUsIaN=json({});
    return serialize_double(name.float64);}();
return result;}

    VkPerformanceCounterResultKHR deserialize_VkPerformanceCounterResultKHR(json name){
        auto result=VkPerformanceCounterResultKHR();
    
[&]() {
result.int32=deserialize_int32_t(name["members"]["int32"]);}();
[&]() {
result.int64=deserialize_int64_t(name["members"]["int64"]);}();
[&]() {
result.uint32=deserialize_uint32_t(name["members"]["uint32"]);}();
[&]() {
result.uint64=deserialize_uint64_t(name["members"]["uint64"]);}();
[&]() {
result.float32=deserialize_float(name["members"]["float32"]);}();
[&]() {
result.float64=deserialize_double(name["members"]["float64"]);}();
return result;}

    json serialize_VkAcquireProfilingLockInfoKHR(VkAcquireProfilingLockInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PFPoWsZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EHwjyLF=json({});
    
        if (name.pNext==NULL){
            return_EHwjyLF["null"]=true;
            return return_EHwjyLF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_sXehfKz=json({});
    return serialize_VkAcquireProfilingLockFlagsKHR(name.flags);}();
result["members"]["timeout"]=[&]() {
    json return_yLOYOOK=json({});
    return serialize_uint64_t(name.timeout);}();
return result;}

    VkAcquireProfilingLockInfoKHR deserialize_VkAcquireProfilingLockInfoKHR(json name){
        auto result=VkAcquireProfilingLockInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DGHyIWs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DGHyIWs=NULL;
        }
    temp_DGHyIWs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DGHyIWs;}();
[&]() {
result.flags=deserialize_VkAcquireProfilingLockFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.timeout=deserialize_uint64_t(name["members"]["timeout"]);}();
return result;}

    json serialize_VkPerformanceQuerySubmitInfoKHR(VkPerformanceQuerySubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mJszLKH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IyPeVRJ=json({});
    
        if (name.pNext==NULL){
            return_IyPeVRJ["null"]=true;
            return return_IyPeVRJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["counterPassIndex"]=[&]() {
    json return_DjmmnLt=json({});
    return serialize_uint32_t(name.counterPassIndex);}();
return result;}

    VkPerformanceQuerySubmitInfoKHR deserialize_VkPerformanceQuerySubmitInfoKHR(json name){
        auto result=VkPerformanceQuerySubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eOLnllQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eOLnllQ=NULL;
        }
    temp_eOLnllQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eOLnllQ;}();
[&]() {
result.counterPassIndex=deserialize_uint32_t(name["members"]["counterPassIndex"]);}();
return result;}

    json serialize_VkHeadlessSurfaceCreateInfoEXT(VkHeadlessSurfaceCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ytVcYEJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CrUdiRc=json({});
    
        if (name.pNext==NULL){
            return_CrUdiRc["null"]=true;
            return return_CrUdiRc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_oElFlQa=json({});
    return serialize_VkHeadlessSurfaceCreateFlagsEXT(name.flags);}();
return result;}

    VkHeadlessSurfaceCreateInfoEXT deserialize_VkHeadlessSurfaceCreateInfoEXT(json name){
        auto result=VkHeadlessSurfaceCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TZCAYZB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TZCAYZB=NULL;
        }
    temp_TZCAYZB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TZCAYZB;}();
[&]() {
result.flags=deserialize_VkHeadlessSurfaceCreateFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(VkPhysicalDeviceCoverageReductionModeFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XOFxXBL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yedKgtx=json({});
    
        if (name.pNext==NULL){
            return_yedKgtx["null"]=true;
            return return_yedKgtx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_WHqvHSc=json({});
    return_WHqvHSc=[&]() {
    json return_eXPxbeQ=json({});
    return serialize_uint32_t(name.coverageReductionMode);}();return return_WHqvHSc;}();
return result;}

    VkPhysicalDeviceCoverageReductionModeFeaturesNV deserialize_VkPhysicalDeviceCoverageReductionModeFeaturesNV(json name){
        auto result=VkPhysicalDeviceCoverageReductionModeFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.coverageReductionMode=deserialize_uint32_t(name["members"]["coverageReductionMode"]);}();}();
return result;}

    json serialize_VkPipelineCoverageReductionStateCreateInfoNV(VkPipelineCoverageReductionStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KBHmMNv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jyLprfP=json({});
    
        if (name.pNext==NULL){
            return_jyLprfP["null"]=true;
            return return_jyLprfP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_wWefmIF=json({});
    return serialize_VkPipelineCoverageReductionStateCreateFlagsNV(name.flags);}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_PIUzNES=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
return result;}

    VkPipelineCoverageReductionStateCreateInfoNV deserialize_VkPipelineCoverageReductionStateCreateInfoNV(json name){
        auto result=VkPipelineCoverageReductionStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jiPEkBW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jiPEkBW=NULL;
        }
    temp_jiPEkBW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jiPEkBW;}();
[&]() {
result.flags=deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(name["members"]["flags"]);}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
return result;}

    json serialize_VkFramebufferMixedSamplesCombinationNV(VkFramebufferMixedSamplesCombinationNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PIvUFIg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kJlmUKY=json({});
    
        if (name.pNext==NULL){
            return_kJlmUKY["null"]=true;
            return return_kJlmUKY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["coverageReductionMode"]=[&]() {
    json return_WegodCT=json({});
    return serialize_VkCoverageReductionModeNV(name.coverageReductionMode);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_FMlLQzs=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
result["members"]["depthStencilSamples"]=[&]() {
    json return_SHJtUMs=json({});
    return serialize_VkSampleCountFlags(name.depthStencilSamples);}();
result["members"]["colorSamples"]=[&]() {
    json return_pMIVkCr=json({});
    return serialize_VkSampleCountFlags(name.colorSamples);}();
return result;}

    VkFramebufferMixedSamplesCombinationNV deserialize_VkFramebufferMixedSamplesCombinationNV(json name){
        auto result=VkFramebufferMixedSamplesCombinationNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.coverageReductionMode=deserialize_VkCoverageReductionModeNV(name["members"]["coverageReductionMode"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
[&]() {
result.depthStencilSamples=deserialize_VkSampleCountFlags(name["members"]["depthStencilSamples"]);}();
[&]() {
result.colorSamples=deserialize_VkSampleCountFlags(name["members"]["colorSamples"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MQKAjrq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tuPLZPQ=json({});
    
        if (name.pNext==NULL){
            return_tuPLZPQ["null"]=true;
            return return_tuPLZPQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerFunctions2"]=[&]() {
    json return_LVPDEmj=json({});
    return_LVPDEmj=[&]() {
    json return_IqYsgDG=json({});
    return serialize_uint32_t(name.shaderIntegerFunctions2);}();return return_LVPDEmj;}();
return result;}

    VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL deserialize_VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL(json name){
        auto result=VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerFunctions2=deserialize_uint32_t(name["members"]["shaderIntegerFunctions2"]);}();}();
return result;}

    json serialize_VkPerformanceValueDataINTEL(VkPerformanceValueDataINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["value32"]=[&]() {
    json return_DUCoMCE=json({});
    return serialize_uint32_t(name.value32);}();
result["members"]["value64"]=[&]() {
    json return_qxbEYTz=json({});
    return serialize_uint64_t(name.value64);}();
result["members"]["valueFloat"]=[&]() {
    json return_vrtymbl=json({});
    return serialize_float(name.valueFloat);}();
result["members"]["valueBool"]=[&]() {
    json return_CluMeGe=json({});
    return_CluMeGe=[&]() {
    json return_WVcNXWv=json({});
    return serialize_uint32_t(name.valueBool);}();return return_CluMeGe;}();
result["members"]["valueString"]=[&]() {
    json return_mnQxjhQ=json({});
    
        if (name.valueString==NULL){
            return_mnQxjhQ["null"]=true;
            return return_mnQxjhQ;
        }
        return serialize_char_p(name.valueString);
}();
return result;}

    VkPerformanceValueDataINTEL deserialize_VkPerformanceValueDataINTEL(json name){
        auto result=VkPerformanceValueDataINTEL();
    
[&]() {
result.value32=deserialize_uint32_t(name["members"]["value32"]);}();
[&]() {
result.value64=deserialize_uint64_t(name["members"]["value64"]);}();
[&]() {
result.valueFloat=deserialize_float(name["members"]["valueFloat"]);}();
[&]() {
[&]() {
result.valueBool=deserialize_uint32_t(name["members"]["valueBool"]);}();}();
[&]() {
char* temp_wmGPydG;[&]() {

        if (name["members"]["valueString"].contains("null")){
        temp_wmGPydG=NULL;
        }
    temp_wmGPydG=deserialize_char_p(name["members"]["valueString"]);
}();result.valueString=temp_wmGPydG;}();
return result;}

    json serialize_VkPerformanceValueINTEL(VkPerformanceValueINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_ddhfxqV=json({});
    return serialize_VkPerformanceValueTypeINTEL(name.type);}();
result["members"]["data"]=[&]() {
    json return_dsufWKz=json({});
    return serialize_VkPerformanceValueDataINTEL(name.data);}();
return result;}

    VkPerformanceValueINTEL deserialize_VkPerformanceValueINTEL(json name){
        auto result=VkPerformanceValueINTEL();
    
[&]() {
result.type=deserialize_VkPerformanceValueTypeINTEL(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkPerformanceValueDataINTEL(name["members"]["data"]);}();
return result;}

    json serialize_VkInitializePerformanceApiInfoINTEL(VkInitializePerformanceApiInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zAGiiGH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MtfPesk=json({});
    
        if (name.pNext==NULL){
            return_MtfPesk["null"]=true;
            return return_MtfPesk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pUserData"]=[&]() {
    json return_gOuwvrK=json({});
    
        if (name.pUserData==NULL){
            return_gOuwvrK["null"]=true;
            return return_gOuwvrK;
        }
        return serialize_void_p(name.pUserData);
}();
return result;}

    VkInitializePerformanceApiInfoINTEL deserialize_VkInitializePerformanceApiInfoINTEL(json name){
        auto result=VkInitializePerformanceApiInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jeTbBRs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jeTbBRs=NULL;
        }
    temp_jeTbBRs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jeTbBRs;}();
[&]() {

        if (name["members"]["pUserData"].contains("null")){
        result.pUserData=NULL;
        }
    result.pUserData=deserialize_void_p(name["members"]["pUserData"]);
}();
return result;}

    json serialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(VkQueryPoolPerformanceQueryCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bboFFrD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZaHgsJK=json({});
    
        if (name.pNext==NULL){
            return_ZaHgsJK["null"]=true;
            return return_ZaHgsJK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_cSTctAr=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolPerformanceQueryCreateInfoINTEL deserialize_VkQueryPoolPerformanceQueryCreateInfoINTEL(json name){
        auto result=VkQueryPoolPerformanceQueryCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VcbTXhD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VcbTXhD=NULL;
        }
    temp_VcbTXhD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VcbTXhD;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkQueryPoolCreateInfoINTEL(VkQueryPoolCreateInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_etVKken=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hrXEWBW=json({});
    
        if (name.pNext==NULL){
            return_hrXEWBW["null"]=true;
            return return_hrXEWBW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["performanceCountersSampling"]=[&]() {
    json return_NuQavrl=json({});
    return serialize_VkQueryPoolSamplingModeINTEL(name.performanceCountersSampling);}();
return result;}

    VkQueryPoolCreateInfoINTEL deserialize_VkQueryPoolCreateInfoINTEL(json name){
        auto result=VkQueryPoolCreateInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FBZDqDh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FBZDqDh=NULL;
        }
    temp_FBZDqDh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FBZDqDh;}();
[&]() {
result.performanceCountersSampling=deserialize_VkQueryPoolSamplingModeINTEL(name["members"]["performanceCountersSampling"]);}();
return result;}

    json serialize_VkPerformanceMarkerInfoINTEL(VkPerformanceMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VULsHNj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qCYAWBO=json({});
    
        if (name.pNext==NULL){
            return_qCYAWBO["null"]=true;
            return return_qCYAWBO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_bUKCwEk=json({});
    return serialize_uint64_t(name.marker);}();
return result;}

    VkPerformanceMarkerInfoINTEL deserialize_VkPerformanceMarkerInfoINTEL(json name){
        auto result=VkPerformanceMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WNFRZtZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WNFRZtZ=NULL;
        }
    temp_WNFRZtZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WNFRZtZ;}();
[&]() {
result.marker=deserialize_uint64_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceStreamMarkerInfoINTEL(VkPerformanceStreamMarkerInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lZXdVir=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CezbYNG=json({});
    
        if (name.pNext==NULL){
            return_CezbYNG["null"]=true;
            return return_CezbYNG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["marker"]=[&]() {
    json return_qCAYYAg=json({});
    return serialize_uint32_t(name.marker);}();
return result;}

    VkPerformanceStreamMarkerInfoINTEL deserialize_VkPerformanceStreamMarkerInfoINTEL(json name){
        auto result=VkPerformanceStreamMarkerInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PYDCzoR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PYDCzoR=NULL;
        }
    temp_PYDCzoR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PYDCzoR;}();
[&]() {
result.marker=deserialize_uint32_t(name["members"]["marker"]);}();
return result;}

    json serialize_VkPerformanceOverrideInfoINTEL(VkPerformanceOverrideInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fpDjZFL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QrZJuxO=json({});
    
        if (name.pNext==NULL){
            return_QrZJuxO["null"]=true;
            return return_QrZJuxO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_qoFeSNE=json({});
    return serialize_VkPerformanceOverrideTypeINTEL(name.type);}();
result["members"]["enable"]=[&]() {
    json return_GPwbbXu=json({});
    return_GPwbbXu=[&]() {
    json return_Ssuawwz=json({});
    return serialize_uint32_t(name.enable);}();return return_GPwbbXu;}();
result["members"]["parameter"]=[&]() {
    json return_UtfkMxe=json({});
    return serialize_uint64_t(name.parameter);}();
return result;}

    VkPerformanceOverrideInfoINTEL deserialize_VkPerformanceOverrideInfoINTEL(json name){
        auto result=VkPerformanceOverrideInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uBqLIHU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uBqLIHU=NULL;
        }
    temp_uBqLIHU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uBqLIHU;}();
[&]() {
result.type=deserialize_VkPerformanceOverrideTypeINTEL(name["members"]["type"]);}();
[&]() {
[&]() {
result.enable=deserialize_uint32_t(name["members"]["enable"]);}();}();
[&]() {
result.parameter=deserialize_uint64_t(name["members"]["parameter"]);}();
return result;}

    json serialize_VkPerformanceConfigurationAcquireInfoINTEL(VkPerformanceConfigurationAcquireInfoINTEL name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XReBMZF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YWCdoQV=json({});
    
        if (name.pNext==NULL){
            return_YWCdoQV["null"]=true;
            return return_YWCdoQV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_juBCQgr=json({});
    return serialize_VkPerformanceConfigurationTypeINTEL(name.type);}();
return result;}

    VkPerformanceConfigurationAcquireInfoINTEL deserialize_VkPerformanceConfigurationAcquireInfoINTEL(json name){
        auto result=VkPerformanceConfigurationAcquireInfoINTEL();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ymJjDBz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ymJjDBz=NULL;
        }
    temp_ymJjDBz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ymJjDBz;}();
[&]() {
result.type=deserialize_VkPerformanceConfigurationTypeINTEL(name["members"]["type"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderClockFeaturesKHR(VkPhysicalDeviceShaderClockFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ovxMHWF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nVqpdnh=json({});
    
        if (name.pNext==NULL){
            return_nVqpdnh["null"]=true;
            return return_nVqpdnh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupClock"]=[&]() {
    json return_FHYvMjC=json({});
    return_FHYvMjC=[&]() {
    json return_KMqwxUr=json({});
    return serialize_uint32_t(name.shaderSubgroupClock);}();return return_FHYvMjC;}();
result["members"]["shaderDeviceClock"]=[&]() {
    json return_fzKjpQh=json({});
    return_fzKjpQh=[&]() {
    json return_OnhAuyU=json({});
    return serialize_uint32_t(name.shaderDeviceClock);}();return return_fzKjpQh;}();
return result;}

    VkPhysicalDeviceShaderClockFeaturesKHR deserialize_VkPhysicalDeviceShaderClockFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderClockFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupClock=deserialize_uint32_t(name["members"]["shaderSubgroupClock"]);}();}();
[&]() {
[&]() {
result.shaderDeviceClock=deserialize_uint32_t(name["members"]["shaderDeviceClock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(VkPhysicalDeviceIndexTypeUint8FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tizasuj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aAohGbE=json({});
    
        if (name.pNext==NULL){
            return_aAohGbE["null"]=true;
            return return_aAohGbE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexTypeUint8"]=[&]() {
    json return_ijsuYll=json({});
    return_ijsuYll=[&]() {
    json return_NENOwEX=json({});
    return serialize_uint32_t(name.indexTypeUint8);}();return return_ijsuYll;}();
return result;}

    VkPhysicalDeviceIndexTypeUint8FeaturesEXT deserialize_VkPhysicalDeviceIndexTypeUint8FeaturesEXT(json name){
        auto result=VkPhysicalDeviceIndexTypeUint8FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.indexTypeUint8=deserialize_uint32_t(name["members"]["indexTypeUint8"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(VkPhysicalDeviceShaderSMBuiltinsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fbxRWSq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wSDbSBc=json({});
    
        if (name.pNext==NULL){
            return_wSDbSBc["null"]=true;
            return return_wSDbSBc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMCount"]=[&]() {
    json return_VKrjubs=json({});
    return serialize_uint32_t(name.shaderSMCount);}();
result["members"]["shaderWarpsPerSM"]=[&]() {
    json return_NOqacrH=json({});
    return serialize_uint32_t(name.shaderWarpsPerSM);}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsPropertiesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsPropertiesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderSMCount=deserialize_uint32_t(name["members"]["shaderSMCount"]);}();
[&]() {
result.shaderWarpsPerSM=deserialize_uint32_t(name["members"]["shaderWarpsPerSM"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(VkPhysicalDeviceShaderSMBuiltinsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fCUOQwt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PrKFDls=json({});
    
        if (name.pNext==NULL){
            return_PrKFDls["null"]=true;
            return return_PrKFDls;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSMBuiltins"]=[&]() {
    json return_mlclght=json({});
    return_mlclght=[&]() {
    json return_KnvHkaA=json({});
    return serialize_uint32_t(name.shaderSMBuiltins);}();return return_mlclght;}();
return result;}

    VkPhysicalDeviceShaderSMBuiltinsFeaturesNV deserialize_VkPhysicalDeviceShaderSMBuiltinsFeaturesNV(json name){
        auto result=VkPhysicalDeviceShaderSMBuiltinsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSMBuiltins=deserialize_uint32_t(name["members"]["shaderSMBuiltins"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VGqXNsI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yAYstmR=json({});
    
        if (name.pNext==NULL){
            return_yAYstmR["null"]=true;
            return return_yAYstmR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderSampleInterlock"]=[&]() {
    json return_DxrnJkG=json({});
    return_DxrnJkG=[&]() {
    json return_CEpFNWc=json({});
    return serialize_uint32_t(name.fragmentShaderSampleInterlock);}();return return_DxrnJkG;}();
result["members"]["fragmentShaderPixelInterlock"]=[&]() {
    json return_NuhKkkC=json({});
    return_NuhKkkC=[&]() {
    json return_lJiITHs=json({});
    return serialize_uint32_t(name.fragmentShaderPixelInterlock);}();return return_NuhKkkC;}();
result["members"]["fragmentShaderShadingRateInterlock"]=[&]() {
    json return_bicvBNN=json({});
    return_bicvBNN=[&]() {
    json return_WmqytQm=json({});
    return serialize_uint32_t(name.fragmentShaderShadingRateInterlock);}();return return_bicvBNN;}();
return result;}

    VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT deserialize_VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderSampleInterlock=deserialize_uint32_t(name["members"]["fragmentShaderSampleInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderPixelInterlock=deserialize_uint32_t(name["members"]["fragmentShaderPixelInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShaderShadingRateInterlock=deserialize_uint32_t(name["members"]["fragmentShaderShadingRateInterlock"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NAgPosZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vZwXjzM=json({});
    
        if (name.pNext==NULL){
            return_vZwXjzM["null"]=true;
            return return_vZwXjzM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_GHnbzKB=json({});
    return_GHnbzKB=[&]() {
    json return_nlbTkfI=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_GHnbzKB;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CetpNCZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dhuhmVy=json({});
    
        if (name.pNext==NULL){
            return_dhuhmVy["null"]=true;
            return return_dhuhmVy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_jybPPAm=json({});
    return_jybPPAm=[&]() {
    json return_CeVkuCj=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_jybPPAm;}();
return result;}

    VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR deserialize_VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR(json name){
        auto result=VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayout(VkAttachmentReferenceStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FsFHXaO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_klTuAyc=json({});
    
        if (name.pNext==NULL){
            return_klTuAyc["null"]=true;
            return return_klTuAyc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_MmXJRFp=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayout deserialize_VkAttachmentReferenceStencilLayout(json name){
        auto result=VkAttachmentReferenceStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mMJdxmu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gYoRUEr=json({});
    
        if (name.pNext==NULL){
            return_gYoRUEr["null"]=true;
            return return_gYoRUEr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitiveTopologyListRestart"]=[&]() {
    json return_JXvvGle=json({});
    return_JXvvGle=[&]() {
    json return_YcnMIEE=json({});
    return serialize_uint32_t(name.primitiveTopologyListRestart);}();return return_JXvvGle;}();
result["members"]["primitiveTopologyPatchListRestart"]=[&]() {
    json return_uLrKDhg=json({});
    return_uLrKDhg=[&]() {
    json return_FAoLdih=json({});
    return serialize_uint32_t(name.primitiveTopologyPatchListRestart);}();return return_uLrKDhg;}();
return result;}

    VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT deserialize_VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitiveTopologyListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyListRestart"]);}();}();
[&]() {
[&]() {
result.primitiveTopologyPatchListRestart=deserialize_uint32_t(name["members"]["primitiveTopologyPatchListRestart"]);}();}();
return result;}

    json serialize_VkAttachmentReferenceStencilLayoutKHR(VkAttachmentReferenceStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IVTaCYU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DnBlcTq=json({});
    
        if (name.pNext==NULL){
            return_DnBlcTq["null"]=true;
            return return_DnBlcTq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilLayout"]=[&]() {
    json return_SWwSEOy=json({});
    return serialize_VkImageLayout(name.stencilLayout);}();
return result;}

    VkAttachmentReferenceStencilLayoutKHR deserialize_VkAttachmentReferenceStencilLayoutKHR(json name){
        auto result=VkAttachmentReferenceStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilLayout=deserialize_VkImageLayout(name["members"]["stencilLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayout(VkAttachmentDescriptionStencilLayout name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_Maydpby=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jNTLgiY=json({});
    
        if (name.pNext==NULL){
            return_jNTLgiY["null"]=true;
            return return_jNTLgiY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_AVCHfso=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_wQGuyoL=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayout deserialize_VkAttachmentDescriptionStencilLayout(json name){
        auto result=VkAttachmentDescriptionStencilLayout();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkAttachmentDescriptionStencilLayoutKHR(VkAttachmentDescriptionStencilLayoutKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fXQZhUw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cxHWJpQ=json({});
    
        if (name.pNext==NULL){
            return_cxHWJpQ["null"]=true;
            return return_cxHWJpQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stencilInitialLayout"]=[&]() {
    json return_MArzxqp=json({});
    return serialize_VkImageLayout(name.stencilInitialLayout);}();
result["members"]["stencilFinalLayout"]=[&]() {
    json return_ewtkTGp=json({});
    return serialize_VkImageLayout(name.stencilFinalLayout);}();
return result;}

    VkAttachmentDescriptionStencilLayoutKHR deserialize_VkAttachmentDescriptionStencilLayoutKHR(json name){
        auto result=VkAttachmentDescriptionStencilLayoutKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stencilInitialLayout=deserialize_VkImageLayout(name["members"]["stencilInitialLayout"]);}();
[&]() {
result.stencilFinalLayout=deserialize_VkImageLayout(name["members"]["stencilFinalLayout"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iucnmte=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fudTlhr=json({});
    
        if (name.pNext==NULL){
            return_fudTlhr["null"]=true;
            return return_fudTlhr;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineExecutableInfo"]=[&]() {
    json return_ZspPIHs=json({});
    return_ZspPIHs=[&]() {
    json return_aRJOdNl=json({});
    return serialize_uint32_t(name.pipelineExecutableInfo);}();return return_ZspPIHs;}();
return result;}

    VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR deserialize_VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR(json name){
        auto result=VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineExecutableInfo=deserialize_uint32_t(name["members"]["pipelineExecutableInfo"]);}();}();
return result;}

    json serialize_VkPipelineInfoKHR(VkPipelineInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wfuwYjB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cAieeeY=json({});
    
        if (name.pNext==NULL){
            return_cAieeeY["null"]=true;
            return return_cAieeeY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_eTutdze=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoKHR deserialize_VkPipelineInfoKHR(json name){
        auto result=VkPipelineInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_veaVilS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_veaVilS=NULL;
        }
    temp_veaVilS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_veaVilS;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineInfoEXT(VkPipelineInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wCQHEwC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yqlaSLs=json({});
    
        if (name.pNext==NULL){
            return_yqlaSLs["null"]=true;
            return return_yqlaSLs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_sEKwQeH=json({});
    return serialize_VkPipeline(name.pipeline);}();
return result;}

    VkPipelineInfoEXT deserialize_VkPipelineInfoEXT(json name){
        auto result=VkPipelineInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NYyAWqw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NYyAWqw=NULL;
        }
    temp_NYyAWqw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NYyAWqw;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
return result;}

    json serialize_VkPipelineExecutablePropertiesKHR(VkPipelineExecutablePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HzKuzNj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qVcikPz=json({});
    
        if (name.pNext==NULL){
            return_qVcikPz["null"]=true;
            return return_qVcikPz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stages"]=[&]() {
    json return_mlCqixq=json({});
    return serialize_VkShaderStageFlags(name.stages);}();
result["members"]["name"]=[&]() {
    json return_hhWoVaL=json({});
    
        return_hhWoVaL["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_CVJUcKF=json({});
    return serialize_char(name.name[i]);}();
            return_hhWoVaL["members"][std::to_string(i)].push_back(temp);
        }
        return return_hhWoVaL;
        }();
result["members"]["description"]=[&]() {
    json return_qtFaFUW=json({});
    
        return_qtFaFUW["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_CwetgBC=json({});
    return serialize_char(name.description[i]);}();
            return_qtFaFUW["members"][std::to_string(i)].push_back(temp);
        }
        return return_qtFaFUW;
        }();
result["members"]["subgroupSize"]=[&]() {
    json return_qknhrgO=json({});
    return serialize_uint32_t(name.subgroupSize);}();
return result;}

    VkPipelineExecutablePropertiesKHR deserialize_VkPipelineExecutablePropertiesKHR(json name){
        auto result=VkPipelineExecutablePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stages=deserialize_VkShaderStageFlags(name["members"]["stages"]);}();
[&]() {

        for (int JebVUmw=0; JebVUmw < VK_MAX_DESCRIPTION_SIZE; JebVUmw++){
            [&]() {
result.name[JebVUmw]=deserialize_char(name["members"]["name"]["members"][JebVUmw]);}();;
        }
        }();
[&]() {

        for (int DmOZBPE=0; DmOZBPE < VK_MAX_DESCRIPTION_SIZE; DmOZBPE++){
            [&]() {
result.description[DmOZBPE]=deserialize_char(name["members"]["description"]["members"][DmOZBPE]);}();;
        }
        }();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
return result;}

    json serialize_VkPipelineExecutableInfoKHR(VkPipelineExecutableInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XgzVMRq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EeSferH=json({});
    
        if (name.pNext==NULL){
            return_EeSferH["null"]=true;
            return return_EeSferH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipeline"]=[&]() {
    json return_UYWRLoH=json({});
    return serialize_VkPipeline(name.pipeline);}();
result["members"]["executableIndex"]=[&]() {
    json return_FrUuobh=json({});
    return serialize_uint32_t(name.executableIndex);}();
return result;}

    VkPipelineExecutableInfoKHR deserialize_VkPipelineExecutableInfoKHR(json name){
        auto result=VkPipelineExecutableInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JaFMIsr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JaFMIsr=NULL;
        }
    temp_JaFMIsr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JaFMIsr;}();
[&]() {
result.pipeline=deserialize_VkPipeline(name["members"]["pipeline"]);}();
[&]() {
result.executableIndex=deserialize_uint32_t(name["members"]["executableIndex"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticValueKHR(VkPipelineExecutableStatisticValueKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["b32"]=[&]() {
    json return_iGkHiQr=json({});
    return_iGkHiQr=[&]() {
    json return_VTQgyHV=json({});
    return serialize_uint32_t(name.b32);}();return return_iGkHiQr;}();
result["members"]["i64"]=[&]() {
    json return_IpIolFh=json({});
    return serialize_int64_t(name.i64);}();
result["members"]["u64"]=[&]() {
    json return_aWOaDqu=json({});
    return serialize_uint64_t(name.u64);}();
result["members"]["f64"]=[&]() {
    json return_MnChPJQ=json({});
    return serialize_double(name.f64);}();
return result;}

    VkPipelineExecutableStatisticValueKHR deserialize_VkPipelineExecutableStatisticValueKHR(json name){
        auto result=VkPipelineExecutableStatisticValueKHR();
    
[&]() {
[&]() {
result.b32=deserialize_uint32_t(name["members"]["b32"]);}();}();
[&]() {
result.i64=deserialize_int64_t(name["members"]["i64"]);}();
[&]() {
result.u64=deserialize_uint64_t(name["members"]["u64"]);}();
[&]() {
result.f64=deserialize_double(name["members"]["f64"]);}();
return result;}

    json serialize_VkPipelineExecutableStatisticKHR(VkPipelineExecutableStatisticKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zOYMxcV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_buGQVPC=json({});
    
        if (name.pNext==NULL){
            return_buGQVPC["null"]=true;
            return return_buGQVPC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_abMztIR=json({});
    
        return_abMztIR["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_bQvjlTu=json({});
    return serialize_char(name.name[i]);}();
            return_abMztIR["members"][std::to_string(i)].push_back(temp);
        }
        return return_abMztIR;
        }();
result["members"]["description"]=[&]() {
    json return_kmUnvNv=json({});
    
        return_kmUnvNv["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_FYZfbRF=json({});
    return serialize_char(name.description[i]);}();
            return_kmUnvNv["members"][std::to_string(i)].push_back(temp);
        }
        return return_kmUnvNv;
        }();
result["members"]["format"]=[&]() {
    json return_fDqYmIS=json({});
    return serialize_VkPipelineExecutableStatisticFormatKHR(name.format);}();
result["members"]["value"]=[&]() {
    json return_RnlHSGA=json({});
    return serialize_VkPipelineExecutableStatisticValueKHR(name.value);}();
return result;}

    VkPipelineExecutableStatisticKHR deserialize_VkPipelineExecutableStatisticKHR(json name){
        auto result=VkPipelineExecutableStatisticKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int rCzcukQ=0; rCzcukQ < VK_MAX_DESCRIPTION_SIZE; rCzcukQ++){
            [&]() {
result.name[rCzcukQ]=deserialize_char(name["members"]["name"]["members"][rCzcukQ]);}();;
        }
        }();
[&]() {

        for (int YhmUbUu=0; YhmUbUu < VK_MAX_DESCRIPTION_SIZE; YhmUbUu++){
            [&]() {
result.description[YhmUbUu]=deserialize_char(name["members"]["description"]["members"][YhmUbUu]);}();;
        }
        }();
[&]() {
result.format=deserialize_VkPipelineExecutableStatisticFormatKHR(name["members"]["format"]);}();
[&]() {
result.value=deserialize_VkPipelineExecutableStatisticValueKHR(name["members"]["value"]);}();
return result;}

    json serialize_VkPipelineExecutableInternalRepresentationKHR(VkPipelineExecutableInternalRepresentationKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NNcHZKp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gKklHVf=json({});
    
        if (name.pNext==NULL){
            return_gKklHVf["null"]=true;
            return return_gKklHVf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_HjEnDgD=json({});
    
        return_HjEnDgD["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_HuqNseI=json({});
    return serialize_char(name.name[i]);}();
            return_HjEnDgD["members"][std::to_string(i)].push_back(temp);
        }
        return return_HjEnDgD;
        }();
result["members"]["description"]=[&]() {
    json return_eUKXXha=json({});
    
        return_eUKXXha["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_BOCpGSP=json({});
    return serialize_char(name.description[i]);}();
            return_eUKXXha["members"][std::to_string(i)].push_back(temp);
        }
        return return_eUKXXha;
        }();
result["members"]["isText"]=[&]() {
    json return_YeqIdFU=json({});
    return_YeqIdFU=[&]() {
    json return_TInAsjr=json({});
    return serialize_uint32_t(name.isText);}();return return_YeqIdFU;}();
result["members"]["dataSize"]=[&]() {
    json return_UQjyWRl=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_ffgvRbM=json({});
    
        if (name.pData==NULL){
            return_ffgvRbM["null"]=true;
            return return_ffgvRbM;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkPipelineExecutableInternalRepresentationKHR deserialize_VkPipelineExecutableInternalRepresentationKHR(json name){
        auto result=VkPipelineExecutableInternalRepresentationKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int hUBmxrw=0; hUBmxrw < VK_MAX_DESCRIPTION_SIZE; hUBmxrw++){
            [&]() {
result.name[hUBmxrw]=deserialize_char(name["members"]["name"]["members"][hUBmxrw]);}();;
        }
        }();
[&]() {

        for (int EbhHUhd=0; EbhHUhd < VK_MAX_DESCRIPTION_SIZE; EbhHUhd++){
            [&]() {
result.description[EbhHUhd]=deserialize_char(name["members"]["description"]["members"][EbhHUhd]);}();;
        }
        }();
[&]() {
[&]() {
result.isText=deserialize_uint32_t(name["members"]["isText"]);}();}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {

        if (name["members"]["pData"].contains("null")){
        result.pData=NULL;
        }
    result.pData=deserialize_void_p(name["members"]["pData"]);
}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wfRisjX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ABTDHLs=json({});
    
        if (name.pNext==NULL){
            return_ABTDHLs["null"]=true;
            return return_ABTDHLs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_LPWXzkF=json({});
    return_LPWXzkF=[&]() {
    json return_rdScvCT=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_LPWXzkF;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_egekTnk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WasNXbw=json({});
    
        if (name.pNext==NULL){
            return_WasNXbw["null"]=true;
            return return_WasNXbw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_wnfzmgj=json({});
    return_wnfzmgj=[&]() {
    json return_YIANguj=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_wnfzmgj;}();
return result;}

    VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT deserialize_VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cxvPuEF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NuiFPWH=json({});
    
        if (name.pNext==NULL){
            return_NuiFPWH["null"]=true;
            return return_NuiFPWH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["texelBufferAlignment"]=[&]() {
    json return_JUzhPgt=json({});
    return_JUzhPgt=[&]() {
    json return_Vabsfas=json({});
    return serialize_uint32_t(name.texelBufferAlignment);}();return return_JUzhPgt;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.texelBufferAlignment=deserialize_uint32_t(name["members"]["texelBufferAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentProperties(VkPhysicalDeviceTexelBufferAlignmentProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IVvymNy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mYrfble=json({});
    
        if (name.pNext==NULL){
            return_mYrfble["null"]=true;
            return return_mYrfble;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_bwEdQLB=json({});
    return_bwEdQLB=[&]() {
    json return_pSbtrBM=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_bwEdQLB;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_mAGoAvV=json({});
    return_mAGoAvV=[&]() {
    json return_yaINEfh=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_mAGoAvV;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_SfqvEqK=json({});
    return_SfqvEqK=[&]() {
    json return_GPhYgBV=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_SfqvEqK;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_LUHJbXA=json({});
    return_LUHJbXA=[&]() {
    json return_SkeAqyp=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_LUHJbXA;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentProperties deserialize_VkPhysicalDeviceTexelBufferAlignmentProperties(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vMVTZdu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XvVFNPR=json({});
    
        if (name.pNext==NULL){
            return_XvVFNPR["null"]=true;
            return return_XvVFNPR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_yGPyCRO=json({});
    return_yGPyCRO=[&]() {
    json return_cdIutBv=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_yGPyCRO;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_pUWqCZo=json({});
    return_pUWqCZo=[&]() {
    json return_GyJioIt=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_pUWqCZo;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_ZTRGfgT=json({});
    return_ZTRGfgT=[&]() {
    json return_BIRidlf=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_ZTRGfgT;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_UvZkCHw=json({});
    return_UvZkCHw=[&]() {
    json return_msIMJLT=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_UvZkCHw;}();
return result;}

    VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT deserialize_VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT(json name){
        auto result=VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeatures(VkPhysicalDeviceSubgroupSizeControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OnnAGhV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lPqIALJ=json({});
    
        if (name.pNext==NULL){
            return_lPqIALJ["null"]=true;
            return return_lPqIALJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_rLDaImZ=json({});
    return_rLDaImZ=[&]() {
    json return_UztnGXX=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_rLDaImZ;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_LAHhdvH=json({});
    return_LAHhdvH=[&]() {
    json return_fjnlluw=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_LAHhdvH;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeatures deserialize_VkPhysicalDeviceSubgroupSizeControlFeatures(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(VkPhysicalDeviceSubgroupSizeControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yCpClxK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YLasYpq=json({});
    
        if (name.pNext==NULL){
            return_YLasYpq["null"]=true;
            return return_YLasYpq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_xZqULsJ=json({});
    return_xZqULsJ=[&]() {
    json return_EtiKmSW=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_xZqULsJ;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_cuXSDBm=json({});
    return_cuXSDBm=[&]() {
    json return_UJvEljr=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_cuXSDBm;}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlFeaturesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlProperties(VkPhysicalDeviceSubgroupSizeControlProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kKoClbM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ADyKXOi=json({});
    
        if (name.pNext==NULL){
            return_ADyKXOi["null"]=true;
            return return_ADyKXOi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_qnBbpEQ=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_TwGPFzQ=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_tDmUDlY=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_uHXyTOX=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlProperties deserialize_VkPhysicalDeviceSubgroupSizeControlProperties(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(VkPhysicalDeviceSubgroupSizeControlPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MjtrELA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AeHehCp=json({});
    
        if (name.pNext==NULL){
            return_AeHehCp["null"]=true;
            return return_AeHehCp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_ineTmBF=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_scorIue=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_EZTAgfG=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_bEyMPxk=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
return result;}

    VkPhysicalDeviceSubgroupSizeControlPropertiesEXT deserialize_VkPhysicalDeviceSubgroupSizeControlPropertiesEXT(json name){
        auto result=VkPhysicalDeviceSubgroupSizeControlPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(VkPipelineShaderStageRequiredSubgroupSizeCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gDqoTMe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tBOVHvf=json({});
    
        if (name.pNext==NULL){
            return_tBOVHvf["null"]=true;
            return return_tBOVHvf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_wUiGIbV=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfo deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfo(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tbYeCEF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fqlnNKo=json({});
    
        if (name.pNext==NULL){
            return_fqlnNKo["null"]=true;
            return return_fqlnNKo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_BKbETGu=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT deserialize_VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(VkShaderRequiredSubgroupSizeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CbdIocz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sOZWVbQ=json({});
    
        if (name.pNext==NULL){
            return_sOZWVbQ["null"]=true;
            return return_sOZWVbQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["requiredSubgroupSize"]=[&]() {
    json return_IbAJQfZ=json({});
    return serialize_uint32_t(name.requiredSubgroupSize);}();
return result;}

    VkShaderRequiredSubgroupSizeCreateInfoEXT deserialize_VkShaderRequiredSubgroupSizeCreateInfoEXT(json name){
        auto result=VkShaderRequiredSubgroupSizeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.requiredSubgroupSize=deserialize_uint32_t(name["members"]["requiredSubgroupSize"]);}();
return result;}

    json serialize_VkSubpassShadingPipelineCreateInfoHUAWEI(VkSubpassShadingPipelineCreateInfoHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XegSqcN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nahgzjV=json({});
    
        if (name.pNext==NULL){
            return_nahgzjV["null"]=true;
            return return_nahgzjV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["renderPass"]=[&]() {
    json return_gGOSruO=json({});
    return serialize_VkRenderPass(name.renderPass);}();
result["members"]["subpass"]=[&]() {
    json return_PkpaiiG=json({});
    return serialize_uint32_t(name.subpass);}();
return result;}

    VkSubpassShadingPipelineCreateInfoHUAWEI deserialize_VkSubpassShadingPipelineCreateInfoHUAWEI(json name){
        auto result=VkSubpassShadingPipelineCreateInfoHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.renderPass=deserialize_VkRenderPass(name["members"]["renderPass"]);}();
[&]() {
result.subpass=deserialize_uint32_t(name["members"]["subpass"]);}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(VkPhysicalDeviceSubpassShadingPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wpSVCmL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AJXzxCk=json({});
    
        if (name.pNext==NULL){
            return_AJXzxCk["null"]=true;
            return return_AJXzxCk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]=[&]() {
    json return_NiJoOEI=json({});
    return serialize_uint32_t(name.maxSubpassShadingWorkgroupSizeAspectRatio);}();
return result;}

    VkPhysicalDeviceSubpassShadingPropertiesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxSubpassShadingWorkgroupSizeAspectRatio=deserialize_uint32_t(name["members"]["maxSubpassShadingWorkgroupSizeAspectRatio"]);}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FmuEKbd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XUyNTeZ=json({});
    
        if (name.pNext==NULL){
            return_XUyNTeZ["null"]=true;
            return return_XUyNTeZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWorkGroupCount"]=[&]() {
    json return_usfHgmh=json({});
    
        return_usfHgmh["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_BNbHVlG=json({});
    return serialize_uint32_t(name.maxWorkGroupCount[i]);}();
            return_usfHgmh["members"][std::to_string(i)].push_back(temp);
        }
        return return_usfHgmh;
        }();
result["members"]["maxWorkGroupSize"]=[&]() {
    json return_ijrehwa=json({});
    
        return_ijrehwa["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_nqupZHq=json({});
    return serialize_uint32_t(name.maxWorkGroupSize[i]);}();
            return_ijrehwa["members"][std::to_string(i)].push_back(temp);
        }
        return return_ijrehwa;
        }();
result["members"]["maxOutputClusterCount"]=[&]() {
    json return_RTfVvjs=json({});
    return serialize_uint32_t(name.maxOutputClusterCount);}();
result["members"]["indirectBufferOffsetAlignment"]=[&]() {
    json return_rHuhAEX=json({});
    return_rHuhAEX=[&]() {
    json return_UXljbSd=json({});
    return serialize_uint64_t(name.indirectBufferOffsetAlignment);}();return return_rHuhAEX;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int LjujEJi=0; LjujEJi < 3; LjujEJi++){
            [&]() {
result.maxWorkGroupCount[LjujEJi]=deserialize_uint32_t(name["members"]["maxWorkGroupCount"]["members"][LjujEJi]);}();;
        }
        }();
[&]() {

        for (int cTPJMuG=0; cTPJMuG < 3; cTPJMuG++){
            [&]() {
result.maxWorkGroupSize[cTPJMuG]=deserialize_uint32_t(name["members"]["maxWorkGroupSize"]["members"][cTPJMuG]);}();;
        }
        }();
[&]() {
result.maxOutputClusterCount=deserialize_uint32_t(name["members"]["maxOutputClusterCount"]);}();
[&]() {
[&]() {
result.indirectBufferOffsetAlignment=deserialize_uint64_t(name["members"]["indirectBufferOffsetAlignment"]);}();}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfo(VkMemoryOpaqueCaptureAddressAllocateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xocHAPV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VTlSCjZ=json({});
    
        if (name.pNext==NULL){
            return_VTlSCjZ["null"]=true;
            return return_VTlSCjZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_ypJlGLk=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfo deserialize_VkMemoryOpaqueCaptureAddressAllocateInfo(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IKdFyhv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IKdFyhv=NULL;
        }
    temp_IKdFyhv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IKdFyhv;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(VkMemoryOpaqueCaptureAddressAllocateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yaeupZX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zPdDAOx=json({});
    
        if (name.pNext==NULL){
            return_zPdDAOx["null"]=true;
            return return_zPdDAOx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureAddress"]=[&]() {
    json return_BXoVQeX=json({});
    return serialize_uint64_t(name.opaqueCaptureAddress);}();
return result;}

    VkMemoryOpaqueCaptureAddressAllocateInfoKHR deserialize_VkMemoryOpaqueCaptureAddressAllocateInfoKHR(json name){
        auto result=VkMemoryOpaqueCaptureAddressAllocateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XaExdGR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XaExdGR=NULL;
        }
    temp_XaExdGR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XaExdGR;}();
[&]() {
result.opaqueCaptureAddress=deserialize_uint64_t(name["members"]["opaqueCaptureAddress"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfo(VkDeviceMemoryOpaqueCaptureAddressInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IpniMCe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AwZpITK=json({});
    
        if (name.pNext==NULL){
            return_AwZpITK["null"]=true;
            return return_AwZpITK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_kJQRXAS=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfo deserialize_VkDeviceMemoryOpaqueCaptureAddressInfo(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FHapHak;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FHapHak=NULL;
        }
    temp_FHapHak=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FHapHak;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(VkDeviceMemoryOpaqueCaptureAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TxfYORI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DkFmafQ=json({});
    
        if (name.pNext==NULL){
            return_DkFmafQ["null"]=true;
            return return_DkFmafQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_WfrDzKf=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkDeviceMemoryOpaqueCaptureAddressInfoKHR deserialize_VkDeviceMemoryOpaqueCaptureAddressInfoKHR(json name){
        auto result=VkDeviceMemoryOpaqueCaptureAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zZdXMYi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zZdXMYi=NULL;
        }
    temp_zZdXMYi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zZdXMYi;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(VkPhysicalDeviceLineRasterizationFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HfScjen=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CaqQcbQ=json({});
    
        if (name.pNext==NULL){
            return_CaqQcbQ["null"]=true;
            return return_CaqQcbQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rectangularLines"]=[&]() {
    json return_AwmDMri=json({});
    return_AwmDMri=[&]() {
    json return_bpBcedG=json({});
    return serialize_uint32_t(name.rectangularLines);}();return return_AwmDMri;}();
result["members"]["bresenhamLines"]=[&]() {
    json return_ByBIkMg=json({});
    return_ByBIkMg=[&]() {
    json return_ffgkbBR=json({});
    return serialize_uint32_t(name.bresenhamLines);}();return return_ByBIkMg;}();
result["members"]["smoothLines"]=[&]() {
    json return_eOfCRuK=json({});
    return_eOfCRuK=[&]() {
    json return_uqZVkVg=json({});
    return serialize_uint32_t(name.smoothLines);}();return return_eOfCRuK;}();
result["members"]["stippledRectangularLines"]=[&]() {
    json return_eRBrKuk=json({});
    return_eRBrKuk=[&]() {
    json return_XZegSWz=json({});
    return serialize_uint32_t(name.stippledRectangularLines);}();return return_eRBrKuk;}();
result["members"]["stippledBresenhamLines"]=[&]() {
    json return_qgqEDdd=json({});
    return_qgqEDdd=[&]() {
    json return_xLOKFRl=json({});
    return serialize_uint32_t(name.stippledBresenhamLines);}();return return_qgqEDdd;}();
result["members"]["stippledSmoothLines"]=[&]() {
    json return_KbcupAE=json({});
    return_KbcupAE=[&]() {
    json return_wyPeksM=json({});
    return serialize_uint32_t(name.stippledSmoothLines);}();return return_KbcupAE;}();
return result;}

    VkPhysicalDeviceLineRasterizationFeaturesEXT deserialize_VkPhysicalDeviceLineRasterizationFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rectangularLines=deserialize_uint32_t(name["members"]["rectangularLines"]);}();}();
[&]() {
[&]() {
result.bresenhamLines=deserialize_uint32_t(name["members"]["bresenhamLines"]);}();}();
[&]() {
[&]() {
result.smoothLines=deserialize_uint32_t(name["members"]["smoothLines"]);}();}();
[&]() {
[&]() {
result.stippledRectangularLines=deserialize_uint32_t(name["members"]["stippledRectangularLines"]);}();}();
[&]() {
[&]() {
result.stippledBresenhamLines=deserialize_uint32_t(name["members"]["stippledBresenhamLines"]);}();}();
[&]() {
[&]() {
result.stippledSmoothLines=deserialize_uint32_t(name["members"]["stippledSmoothLines"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(VkPhysicalDeviceLineRasterizationPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qnNZvta=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DuMYzeQ=json({});
    
        if (name.pNext==NULL){
            return_DuMYzeQ["null"]=true;
            return return_DuMYzeQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineSubPixelPrecisionBits"]=[&]() {
    json return_KEbfadZ=json({});
    return serialize_uint32_t(name.lineSubPixelPrecisionBits);}();
return result;}

    VkPhysicalDeviceLineRasterizationPropertiesEXT deserialize_VkPhysicalDeviceLineRasterizationPropertiesEXT(json name){
        auto result=VkPhysicalDeviceLineRasterizationPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.lineSubPixelPrecisionBits=deserialize_uint32_t(name["members"]["lineSubPixelPrecisionBits"]);}();
return result;}

    json serialize_VkPipelineRasterizationLineStateCreateInfoEXT(VkPipelineRasterizationLineStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mddyTqj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_msuOMYE=json({});
    
        if (name.pNext==NULL){
            return_msuOMYE["null"]=true;
            return return_msuOMYE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["lineRasterizationMode"]=[&]() {
    json return_mtfySGZ=json({});
    return serialize_VkLineRasterizationModeEXT(name.lineRasterizationMode);}();
result["members"]["stippledLineEnable"]=[&]() {
    json return_imowksb=json({});
    return_imowksb=[&]() {
    json return_iBXrBrd=json({});
    return serialize_uint32_t(name.stippledLineEnable);}();return return_imowksb;}();
result["members"]["lineStippleFactor"]=[&]() {
    json return_fQhjcaz=json({});
    return serialize_uint32_t(name.lineStippleFactor);}();
result["members"]["lineStipplePattern"]=[&]() {
    json return_BcIIqRC=json({});
    return serialize_uint16_t(name.lineStipplePattern);}();
return result;}

    VkPipelineRasterizationLineStateCreateInfoEXT deserialize_VkPipelineRasterizationLineStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationLineStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GNLDiFk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GNLDiFk=NULL;
        }
    temp_GNLDiFk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GNLDiFk;}();
[&]() {
result.lineRasterizationMode=deserialize_VkLineRasterizationModeEXT(name["members"]["lineRasterizationMode"]);}();
[&]() {
[&]() {
result.stippledLineEnable=deserialize_uint32_t(name["members"]["stippledLineEnable"]);}();}();
[&]() {
result.lineStippleFactor=deserialize_uint32_t(name["members"]["lineStippleFactor"]);}();
[&]() {
result.lineStipplePattern=deserialize_uint16_t(name["members"]["lineStipplePattern"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(VkPhysicalDevicePipelineCreationCacheControlFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_weEXfbT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bUyuHBz=json({});
    
        if (name.pNext==NULL){
            return_bUyuHBz["null"]=true;
            return return_bUyuHBz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_MmwleIh=json({});
    return_MmwleIh=[&]() {
    json return_pRwmgUB=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_MmwleIh;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeatures deserialize_VkPhysicalDevicePipelineCreationCacheControlFeatures(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nGlaVDA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tbNULzM=json({});
    
        if (name.pNext==NULL){
            return_tbNULzM["null"]=true;
            return return_tbNULzM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_yprsGiq=json({});
    return_yprsGiq=[&]() {
    json return_UWtjdwv=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_yprsGiq;}();
return result;}

    VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT deserialize_VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Features(VkPhysicalDeviceVulkan11Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HdunUfG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MFwuUUw=json({});
    
        if (name.pNext==NULL){
            return_MFwuUUw["null"]=true;
            return return_MFwuUUw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffer16BitAccess"]=[&]() {
    json return_ScmHXuZ=json({});
    return_ScmHXuZ=[&]() {
    json return_RDlFVGI=json({});
    return serialize_uint32_t(name.storageBuffer16BitAccess);}();return return_ScmHXuZ;}();
result["members"]["uniformAndStorageBuffer16BitAccess"]=[&]() {
    json return_PrBWWGO=json({});
    return_PrBWWGO=[&]() {
    json return_ouyNgqW=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer16BitAccess);}();return return_PrBWWGO;}();
result["members"]["storagePushConstant16"]=[&]() {
    json return_jscGSWk=json({});
    return_jscGSWk=[&]() {
    json return_DFbTdhU=json({});
    return serialize_uint32_t(name.storagePushConstant16);}();return return_jscGSWk;}();
result["members"]["storageInputOutput16"]=[&]() {
    json return_PKLYrkl=json({});
    return_PKLYrkl=[&]() {
    json return_ptSxNrH=json({});
    return serialize_uint32_t(name.storageInputOutput16);}();return return_PKLYrkl;}();
result["members"]["multiview"]=[&]() {
    json return_gTLAUCw=json({});
    return_gTLAUCw=[&]() {
    json return_Rydnwwk=json({});
    return serialize_uint32_t(name.multiview);}();return return_gTLAUCw;}();
result["members"]["multiviewGeometryShader"]=[&]() {
    json return_JnyNMCj=json({});
    return_JnyNMCj=[&]() {
    json return_LVbSBbY=json({});
    return serialize_uint32_t(name.multiviewGeometryShader);}();return return_JnyNMCj;}();
result["members"]["multiviewTessellationShader"]=[&]() {
    json return_CZSYmRO=json({});
    return_CZSYmRO=[&]() {
    json return_ItoNSTj=json({});
    return serialize_uint32_t(name.multiviewTessellationShader);}();return return_CZSYmRO;}();
result["members"]["variablePointersStorageBuffer"]=[&]() {
    json return_ZmclrGV=json({});
    return_ZmclrGV=[&]() {
    json return_SNyuyzW=json({});
    return serialize_uint32_t(name.variablePointersStorageBuffer);}();return return_ZmclrGV;}();
result["members"]["variablePointers"]=[&]() {
    json return_oMmbLQi=json({});
    return_oMmbLQi=[&]() {
    json return_omMOaCa=json({});
    return serialize_uint32_t(name.variablePointers);}();return return_oMmbLQi;}();
result["members"]["protectedMemory"]=[&]() {
    json return_RnDeeNp=json({});
    return_RnDeeNp=[&]() {
    json return_GPcfMCc=json({});
    return serialize_uint32_t(name.protectedMemory);}();return return_RnDeeNp;}();
result["members"]["samplerYcbcrConversion"]=[&]() {
    json return_OLDDiUk=json({});
    return_OLDDiUk=[&]() {
    json return_OvdXhil=json({});
    return serialize_uint32_t(name.samplerYcbcrConversion);}();return return_OLDDiUk;}();
result["members"]["shaderDrawParameters"]=[&]() {
    json return_TQnSFvt=json({});
    return_TQnSFvt=[&]() {
    json return_WpvZijK=json({});
    return serialize_uint32_t(name.shaderDrawParameters);}();return return_TQnSFvt;}();
return result;}

    VkPhysicalDeviceVulkan11Features deserialize_VkPhysicalDeviceVulkan11Features(json name){
        auto result=VkPhysicalDeviceVulkan11Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.storageBuffer16BitAccess=deserialize_uint32_t(name["members"]["storageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer16BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer16BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant16=deserialize_uint32_t(name["members"]["storagePushConstant16"]);}();}();
[&]() {
[&]() {
result.storageInputOutput16=deserialize_uint32_t(name["members"]["storageInputOutput16"]);}();}();
[&]() {
[&]() {
result.multiview=deserialize_uint32_t(name["members"]["multiview"]);}();}();
[&]() {
[&]() {
result.multiviewGeometryShader=deserialize_uint32_t(name["members"]["multiviewGeometryShader"]);}();}();
[&]() {
[&]() {
result.multiviewTessellationShader=deserialize_uint32_t(name["members"]["multiviewTessellationShader"]);}();}();
[&]() {
[&]() {
result.variablePointersStorageBuffer=deserialize_uint32_t(name["members"]["variablePointersStorageBuffer"]);}();}();
[&]() {
[&]() {
result.variablePointers=deserialize_uint32_t(name["members"]["variablePointers"]);}();}();
[&]() {
[&]() {
result.protectedMemory=deserialize_uint32_t(name["members"]["protectedMemory"]);}();}();
[&]() {
[&]() {
result.samplerYcbcrConversion=deserialize_uint32_t(name["members"]["samplerYcbcrConversion"]);}();}();
[&]() {
[&]() {
result.shaderDrawParameters=deserialize_uint32_t(name["members"]["shaderDrawParameters"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan11Properties(VkPhysicalDeviceVulkan11Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SNrtOTC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VgEoIIe=json({});
    
        if (name.pNext==NULL){
            return_VgEoIIe["null"]=true;
            return return_VgEoIIe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceUUID"]=[&]() {
    json return_exgdNaQ=json({});
    
        return_exgdNaQ["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_plDFtlC=json({});
    return serialize_uint8_t(name.deviceUUID[i]);}();
            return_exgdNaQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_exgdNaQ;
        }();
result["members"]["driverUUID"]=[&]() {
    json return_DYVFoFb=json({});
    
        return_DYVFoFb["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_piawfAd=json({});
    return serialize_uint8_t(name.driverUUID[i]);}();
            return_DYVFoFb["members"][std::to_string(i)].push_back(temp);
        }
        return return_DYVFoFb;
        }();
result["members"]["deviceLUID"]=[&]() {
    json return_IWpwUma=json({});
    
        return_IWpwUma["members"]={};
        for(int i=0; i < VK_LUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_RFviMsf=json({});
    return serialize_uint8_t(name.deviceLUID[i]);}();
            return_IWpwUma["members"][std::to_string(i)].push_back(temp);
        }
        return return_IWpwUma;
        }();
result["members"]["deviceNodeMask"]=[&]() {
    json return_bauFiNw=json({});
    return serialize_uint32_t(name.deviceNodeMask);}();
result["members"]["deviceLUIDValid"]=[&]() {
    json return_VxrCouv=json({});
    return_VxrCouv=[&]() {
    json return_FAqpIKm=json({});
    return serialize_uint32_t(name.deviceLUIDValid);}();return return_VxrCouv;}();
result["members"]["subgroupSize"]=[&]() {
    json return_wUfBJXH=json({});
    return serialize_uint32_t(name.subgroupSize);}();
result["members"]["subgroupSupportedStages"]=[&]() {
    json return_aqZuRfG=json({});
    return serialize_VkShaderStageFlags(name.subgroupSupportedStages);}();
result["members"]["subgroupSupportedOperations"]=[&]() {
    json return_uRoblYL=json({});
    return serialize_VkSubgroupFeatureFlags(name.subgroupSupportedOperations);}();
result["members"]["subgroupQuadOperationsInAllStages"]=[&]() {
    json return_VPlefia=json({});
    return_VPlefia=[&]() {
    json return_CPSBMhn=json({});
    return serialize_uint32_t(name.subgroupQuadOperationsInAllStages);}();return return_VPlefia;}();
result["members"]["pointClippingBehavior"]=[&]() {
    json return_SZszbCq=json({});
    return serialize_VkPointClippingBehavior(name.pointClippingBehavior);}();
result["members"]["maxMultiviewViewCount"]=[&]() {
    json return_jXFWVyX=json({});
    return serialize_uint32_t(name.maxMultiviewViewCount);}();
result["members"]["maxMultiviewInstanceIndex"]=[&]() {
    json return_jGzWHZe=json({});
    return serialize_uint32_t(name.maxMultiviewInstanceIndex);}();
result["members"]["protectedNoFault"]=[&]() {
    json return_sSkWmIX=json({});
    return_sSkWmIX=[&]() {
    json return_xrXHiAE=json({});
    return serialize_uint32_t(name.protectedNoFault);}();return return_sSkWmIX;}();
result["members"]["maxPerSetDescriptors"]=[&]() {
    json return_RkASBtK=json({});
    return serialize_uint32_t(name.maxPerSetDescriptors);}();
result["members"]["maxMemoryAllocationSize"]=[&]() {
    json return_oLbKKrt=json({});
    return_oLbKKrt=[&]() {
    json return_vXKbzMY=json({});
    return serialize_uint64_t(name.maxMemoryAllocationSize);}();return return_oLbKKrt;}();
return result;}

    VkPhysicalDeviceVulkan11Properties deserialize_VkPhysicalDeviceVulkan11Properties(json name){
        auto result=VkPhysicalDeviceVulkan11Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int LkQOAyO=0; LkQOAyO < VK_UUID_SIZE; LkQOAyO++){
            [&]() {
result.deviceUUID[LkQOAyO]=deserialize_uint8_t(name["members"]["deviceUUID"]["members"][LkQOAyO]);}();;
        }
        }();
[&]() {

        for (int CSacZlO=0; CSacZlO < VK_UUID_SIZE; CSacZlO++){
            [&]() {
result.driverUUID[CSacZlO]=deserialize_uint8_t(name["members"]["driverUUID"]["members"][CSacZlO]);}();;
        }
        }();
[&]() {

        for (int csXnArY=0; csXnArY < VK_LUID_SIZE; csXnArY++){
            [&]() {
result.deviceLUID[csXnArY]=deserialize_uint8_t(name["members"]["deviceLUID"]["members"][csXnArY]);}();;
        }
        }();
[&]() {
result.deviceNodeMask=deserialize_uint32_t(name["members"]["deviceNodeMask"]);}();
[&]() {
[&]() {
result.deviceLUIDValid=deserialize_uint32_t(name["members"]["deviceLUIDValid"]);}();}();
[&]() {
result.subgroupSize=deserialize_uint32_t(name["members"]["subgroupSize"]);}();
[&]() {
result.subgroupSupportedStages=deserialize_VkShaderStageFlags(name["members"]["subgroupSupportedStages"]);}();
[&]() {
result.subgroupSupportedOperations=deserialize_VkSubgroupFeatureFlags(name["members"]["subgroupSupportedOperations"]);}();
[&]() {
[&]() {
result.subgroupQuadOperationsInAllStages=deserialize_uint32_t(name["members"]["subgroupQuadOperationsInAllStages"]);}();}();
[&]() {
result.pointClippingBehavior=deserialize_VkPointClippingBehavior(name["members"]["pointClippingBehavior"]);}();
[&]() {
result.maxMultiviewViewCount=deserialize_uint32_t(name["members"]["maxMultiviewViewCount"]);}();
[&]() {
result.maxMultiviewInstanceIndex=deserialize_uint32_t(name["members"]["maxMultiviewInstanceIndex"]);}();
[&]() {
[&]() {
result.protectedNoFault=deserialize_uint32_t(name["members"]["protectedNoFault"]);}();}();
[&]() {
result.maxPerSetDescriptors=deserialize_uint32_t(name["members"]["maxPerSetDescriptors"]);}();
[&]() {
[&]() {
result.maxMemoryAllocationSize=deserialize_uint64_t(name["members"]["maxMemoryAllocationSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Features(VkPhysicalDeviceVulkan12Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HZcbBIl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kGbcLRV=json({});
    
        if (name.pNext==NULL){
            return_kGbcLRV["null"]=true;
            return return_kGbcLRV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["samplerMirrorClampToEdge"]=[&]() {
    json return_teCegaH=json({});
    return_teCegaH=[&]() {
    json return_FueIhOv=json({});
    return serialize_uint32_t(name.samplerMirrorClampToEdge);}();return return_teCegaH;}();
result["members"]["drawIndirectCount"]=[&]() {
    json return_fgFtJON=json({});
    return_fgFtJON=[&]() {
    json return_qyJOBuF=json({});
    return serialize_uint32_t(name.drawIndirectCount);}();return return_fgFtJON;}();
result["members"]["storageBuffer8BitAccess"]=[&]() {
    json return_tRmTspq=json({});
    return_tRmTspq=[&]() {
    json return_WwjEOTY=json({});
    return serialize_uint32_t(name.storageBuffer8BitAccess);}();return return_tRmTspq;}();
result["members"]["uniformAndStorageBuffer8BitAccess"]=[&]() {
    json return_zUBIgIN=json({});
    return_zUBIgIN=[&]() {
    json return_kkgNTZx=json({});
    return serialize_uint32_t(name.uniformAndStorageBuffer8BitAccess);}();return return_zUBIgIN;}();
result["members"]["storagePushConstant8"]=[&]() {
    json return_OhWsPUn=json({});
    return_OhWsPUn=[&]() {
    json return_YlKITlb=json({});
    return serialize_uint32_t(name.storagePushConstant8);}();return return_OhWsPUn;}();
result["members"]["shaderBufferInt64Atomics"]=[&]() {
    json return_vAAprWy=json({});
    return_vAAprWy=[&]() {
    json return_cZuSGSb=json({});
    return serialize_uint32_t(name.shaderBufferInt64Atomics);}();return return_vAAprWy;}();
result["members"]["shaderSharedInt64Atomics"]=[&]() {
    json return_rInzJbZ=json({});
    return_rInzJbZ=[&]() {
    json return_igMvfMi=json({});
    return serialize_uint32_t(name.shaderSharedInt64Atomics);}();return return_rInzJbZ;}();
result["members"]["shaderFloat16"]=[&]() {
    json return_MqGsjMO=json({});
    return_MqGsjMO=[&]() {
    json return_WXgeZFY=json({});
    return serialize_uint32_t(name.shaderFloat16);}();return return_MqGsjMO;}();
result["members"]["shaderInt8"]=[&]() {
    json return_HfQtzIZ=json({});
    return_HfQtzIZ=[&]() {
    json return_rbRifSW=json({});
    return serialize_uint32_t(name.shaderInt8);}();return return_HfQtzIZ;}();
result["members"]["descriptorIndexing"]=[&]() {
    json return_KfwyJyX=json({});
    return_KfwyJyX=[&]() {
    json return_MVIpism=json({});
    return serialize_uint32_t(name.descriptorIndexing);}();return return_KfwyJyX;}();
result["members"]["shaderInputAttachmentArrayDynamicIndexing"]=[&]() {
    json return_HRzxwsJ=json({});
    return_HRzxwsJ=[&]() {
    json return_GqKLpqH=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayDynamicIndexing);}();return return_HRzxwsJ;}();
result["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_gcqFluL=json({});
    return_gcqFluL=[&]() {
    json return_oSjuKOR=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayDynamicIndexing);}();return return_gcqFluL;}();
result["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]=[&]() {
    json return_Jzztaga=json({});
    return_Jzztaga=[&]() {
    json return_hIHszEE=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayDynamicIndexing);}();return return_Jzztaga;}();
result["members"]["shaderUniformBufferArrayNonUniformIndexing"]=[&]() {
    json return_TvKDNSP=json({});
    return_TvKDNSP=[&]() {
    json return_yvIKvya=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexing);}();return return_TvKDNSP;}();
result["members"]["shaderSampledImageArrayNonUniformIndexing"]=[&]() {
    json return_GbHPCeI=json({});
    return_GbHPCeI=[&]() {
    json return_NUdqWkq=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexing);}();return return_GbHPCeI;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexing"]=[&]() {
    json return_Zyiuioz=json({});
    return_Zyiuioz=[&]() {
    json return_hHdeHWO=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexing);}();return return_Zyiuioz;}();
result["members"]["shaderStorageImageArrayNonUniformIndexing"]=[&]() {
    json return_lmhzPJs=json({});
    return_lmhzPJs=[&]() {
    json return_QMdfcrM=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexing);}();return return_lmhzPJs;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexing"]=[&]() {
    json return_Rszluyq=json({});
    return_Rszluyq=[&]() {
    json return_LIAgxwq=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexing);}();return return_Rszluyq;}();
result["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_mXvKYGr=json({});
    return_mXvKYGr=[&]() {
    json return_BfIDdVb=json({});
    return serialize_uint32_t(name.shaderUniformTexelBufferArrayNonUniformIndexing);}();return return_mXvKYGr;}();
result["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]=[&]() {
    json return_gPlqVSz=json({});
    return_gPlqVSz=[&]() {
    json return_GkLEuBY=json({});
    return serialize_uint32_t(name.shaderStorageTexelBufferArrayNonUniformIndexing);}();return return_gPlqVSz;}();
result["members"]["descriptorBindingUniformBufferUpdateAfterBind"]=[&]() {
    json return_naKMJJa=json({});
    return_naKMJJa=[&]() {
    json return_qOgSxbo=json({});
    return serialize_uint32_t(name.descriptorBindingUniformBufferUpdateAfterBind);}();return return_naKMJJa;}();
result["members"]["descriptorBindingSampledImageUpdateAfterBind"]=[&]() {
    json return_qTwyoZk=json({});
    return_qTwyoZk=[&]() {
    json return_ioRLFpU=json({});
    return serialize_uint32_t(name.descriptorBindingSampledImageUpdateAfterBind);}();return return_qTwyoZk;}();
result["members"]["descriptorBindingStorageImageUpdateAfterBind"]=[&]() {
    json return_yCHNDrz=json({});
    return_yCHNDrz=[&]() {
    json return_cozWcVC=json({});
    return serialize_uint32_t(name.descriptorBindingStorageImageUpdateAfterBind);}();return return_yCHNDrz;}();
result["members"]["descriptorBindingStorageBufferUpdateAfterBind"]=[&]() {
    json return_NpYVOzs=json({});
    return_NpYVOzs=[&]() {
    json return_ZSBzvXL=json({});
    return serialize_uint32_t(name.descriptorBindingStorageBufferUpdateAfterBind);}();return return_NpYVOzs;}();
result["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]=[&]() {
    json return_WRfklVo=json({});
    return_WRfklVo=[&]() {
    json return_EjDeDCx=json({});
    return serialize_uint32_t(name.descriptorBindingUniformTexelBufferUpdateAfterBind);}();return return_WRfklVo;}();
result["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]=[&]() {
    json return_AvXCKIG=json({});
    return_AvXCKIG=[&]() {
    json return_YvuEsvq=json({});
    return serialize_uint32_t(name.descriptorBindingStorageTexelBufferUpdateAfterBind);}();return return_AvXCKIG;}();
result["members"]["descriptorBindingUpdateUnusedWhilePending"]=[&]() {
    json return_ueYRnqW=json({});
    return_ueYRnqW=[&]() {
    json return_eLEqrGj=json({});
    return serialize_uint32_t(name.descriptorBindingUpdateUnusedWhilePending);}();return return_ueYRnqW;}();
result["members"]["descriptorBindingPartiallyBound"]=[&]() {
    json return_ukFgysu=json({});
    return_ukFgysu=[&]() {
    json return_jlzQNOh=json({});
    return serialize_uint32_t(name.descriptorBindingPartiallyBound);}();return return_ukFgysu;}();
result["members"]["descriptorBindingVariableDescriptorCount"]=[&]() {
    json return_HPRVlCV=json({});
    return_HPRVlCV=[&]() {
    json return_gYOxgHf=json({});
    return serialize_uint32_t(name.descriptorBindingVariableDescriptorCount);}();return return_HPRVlCV;}();
result["members"]["runtimeDescriptorArray"]=[&]() {
    json return_bTlgMOA=json({});
    return_bTlgMOA=[&]() {
    json return_YYEyfuv=json({});
    return serialize_uint32_t(name.runtimeDescriptorArray);}();return return_bTlgMOA;}();
result["members"]["samplerFilterMinmax"]=[&]() {
    json return_vtLlzlw=json({});
    return_vtLlzlw=[&]() {
    json return_nobboFX=json({});
    return serialize_uint32_t(name.samplerFilterMinmax);}();return return_vtLlzlw;}();
result["members"]["scalarBlockLayout"]=[&]() {
    json return_rNzWfqs=json({});
    return_rNzWfqs=[&]() {
    json return_sYkRbpc=json({});
    return serialize_uint32_t(name.scalarBlockLayout);}();return return_rNzWfqs;}();
result["members"]["imagelessFramebuffer"]=[&]() {
    json return_PBOsPvp=json({});
    return_PBOsPvp=[&]() {
    json return_NpJxGKw=json({});
    return serialize_uint32_t(name.imagelessFramebuffer);}();return return_PBOsPvp;}();
result["members"]["uniformBufferStandardLayout"]=[&]() {
    json return_TKKFOkt=json({});
    return_TKKFOkt=[&]() {
    json return_DiqYBqW=json({});
    return serialize_uint32_t(name.uniformBufferStandardLayout);}();return return_TKKFOkt;}();
result["members"]["shaderSubgroupExtendedTypes"]=[&]() {
    json return_oWVIYqn=json({});
    return_oWVIYqn=[&]() {
    json return_zWNybyg=json({});
    return serialize_uint32_t(name.shaderSubgroupExtendedTypes);}();return return_oWVIYqn;}();
result["members"]["separateDepthStencilLayouts"]=[&]() {
    json return_jSeuEav=json({});
    return_jSeuEav=[&]() {
    json return_RAgVawS=json({});
    return serialize_uint32_t(name.separateDepthStencilLayouts);}();return return_jSeuEav;}();
result["members"]["hostQueryReset"]=[&]() {
    json return_tLPBCiG=json({});
    return_tLPBCiG=[&]() {
    json return_jPKMVpR=json({});
    return serialize_uint32_t(name.hostQueryReset);}();return return_tLPBCiG;}();
result["members"]["timelineSemaphore"]=[&]() {
    json return_VoaFjrZ=json({});
    return_VoaFjrZ=[&]() {
    json return_etUEjFG=json({});
    return serialize_uint32_t(name.timelineSemaphore);}();return return_VoaFjrZ;}();
result["members"]["bufferDeviceAddress"]=[&]() {
    json return_ApsuThJ=json({});
    return_ApsuThJ=[&]() {
    json return_doEgXLE=json({});
    return serialize_uint32_t(name.bufferDeviceAddress);}();return return_ApsuThJ;}();
result["members"]["bufferDeviceAddressCaptureReplay"]=[&]() {
    json return_QTPNwrx=json({});
    return_QTPNwrx=[&]() {
    json return_oDwSrKp=json({});
    return serialize_uint32_t(name.bufferDeviceAddressCaptureReplay);}();return return_QTPNwrx;}();
result["members"]["bufferDeviceAddressMultiDevice"]=[&]() {
    json return_iFKbeZo=json({});
    return_iFKbeZo=[&]() {
    json return_exaxQHx=json({});
    return serialize_uint32_t(name.bufferDeviceAddressMultiDevice);}();return return_iFKbeZo;}();
result["members"]["vulkanMemoryModel"]=[&]() {
    json return_ZwaiAvk=json({});
    return_ZwaiAvk=[&]() {
    json return_vZEhecT=json({});
    return serialize_uint32_t(name.vulkanMemoryModel);}();return return_ZwaiAvk;}();
result["members"]["vulkanMemoryModelDeviceScope"]=[&]() {
    json return_jtXQegS=json({});
    return_jtXQegS=[&]() {
    json return_IctXEJc=json({});
    return serialize_uint32_t(name.vulkanMemoryModelDeviceScope);}();return return_jtXQegS;}();
result["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]=[&]() {
    json return_WhWlxAY=json({});
    return_WhWlxAY=[&]() {
    json return_LdZlImb=json({});
    return serialize_uint32_t(name.vulkanMemoryModelAvailabilityVisibilityChains);}();return return_WhWlxAY;}();
result["members"]["shaderOutputViewportIndex"]=[&]() {
    json return_wwYzOGE=json({});
    return_wwYzOGE=[&]() {
    json return_aNBYAuy=json({});
    return serialize_uint32_t(name.shaderOutputViewportIndex);}();return return_wwYzOGE;}();
result["members"]["shaderOutputLayer"]=[&]() {
    json return_NyrQvZs=json({});
    return_NyrQvZs=[&]() {
    json return_aLSxzMz=json({});
    return serialize_uint32_t(name.shaderOutputLayer);}();return return_NyrQvZs;}();
result["members"]["subgroupBroadcastDynamicId"]=[&]() {
    json return_DWXHgpG=json({});
    return_DWXHgpG=[&]() {
    json return_ScnNTXg=json({});
    return serialize_uint32_t(name.subgroupBroadcastDynamicId);}();return return_DWXHgpG;}();
return result;}

    VkPhysicalDeviceVulkan12Features deserialize_VkPhysicalDeviceVulkan12Features(json name){
        auto result=VkPhysicalDeviceVulkan12Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.samplerMirrorClampToEdge=deserialize_uint32_t(name["members"]["samplerMirrorClampToEdge"]);}();}();
[&]() {
[&]() {
result.drawIndirectCount=deserialize_uint32_t(name["members"]["drawIndirectCount"]);}();}();
[&]() {
[&]() {
result.storageBuffer8BitAccess=deserialize_uint32_t(name["members"]["storageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.uniformAndStorageBuffer8BitAccess=deserialize_uint32_t(name["members"]["uniformAndStorageBuffer8BitAccess"]);}();}();
[&]() {
[&]() {
result.storagePushConstant8=deserialize_uint32_t(name["members"]["storagePushConstant8"]);}();}();
[&]() {
[&]() {
result.shaderBufferInt64Atomics=deserialize_uint32_t(name["members"]["shaderBufferInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderSharedInt64Atomics=deserialize_uint32_t(name["members"]["shaderSharedInt64Atomics"]);}();}();
[&]() {
[&]() {
result.shaderFloat16=deserialize_uint32_t(name["members"]["shaderFloat16"]);}();}();
[&]() {
[&]() {
result.shaderInt8=deserialize_uint32_t(name["members"]["shaderInt8"]);}();}();
[&]() {
[&]() {
result.descriptorIndexing=deserialize_uint32_t(name["members"]["descriptorIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayDynamicIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayDynamicIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderUniformTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderUniformTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.shaderStorageTexelBufferArrayNonUniformIndexing=deserialize_uint32_t(name["members"]["shaderStorageTexelBufferArrayNonUniformIndexing"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingSampledImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingSampledImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageImageUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageImageUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUniformTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingUniformTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingStorageTexelBufferUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingStorageTexelBufferUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.descriptorBindingUpdateUnusedWhilePending=deserialize_uint32_t(name["members"]["descriptorBindingUpdateUnusedWhilePending"]);}();}();
[&]() {
[&]() {
result.descriptorBindingPartiallyBound=deserialize_uint32_t(name["members"]["descriptorBindingPartiallyBound"]);}();}();
[&]() {
[&]() {
result.descriptorBindingVariableDescriptorCount=deserialize_uint32_t(name["members"]["descriptorBindingVariableDescriptorCount"]);}();}();
[&]() {
[&]() {
result.runtimeDescriptorArray=deserialize_uint32_t(name["members"]["runtimeDescriptorArray"]);}();}();
[&]() {
[&]() {
result.samplerFilterMinmax=deserialize_uint32_t(name["members"]["samplerFilterMinmax"]);}();}();
[&]() {
[&]() {
result.scalarBlockLayout=deserialize_uint32_t(name["members"]["scalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.imagelessFramebuffer=deserialize_uint32_t(name["members"]["imagelessFramebuffer"]);}();}();
[&]() {
[&]() {
result.uniformBufferStandardLayout=deserialize_uint32_t(name["members"]["uniformBufferStandardLayout"]);}();}();
[&]() {
[&]() {
result.shaderSubgroupExtendedTypes=deserialize_uint32_t(name["members"]["shaderSubgroupExtendedTypes"]);}();}();
[&]() {
[&]() {
result.separateDepthStencilLayouts=deserialize_uint32_t(name["members"]["separateDepthStencilLayouts"]);}();}();
[&]() {
[&]() {
result.hostQueryReset=deserialize_uint32_t(name["members"]["hostQueryReset"]);}();}();
[&]() {
[&]() {
result.timelineSemaphore=deserialize_uint32_t(name["members"]["timelineSemaphore"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddress=deserialize_uint32_t(name["members"]["bufferDeviceAddress"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressCaptureReplay=deserialize_uint32_t(name["members"]["bufferDeviceAddressCaptureReplay"]);}();}();
[&]() {
[&]() {
result.bufferDeviceAddressMultiDevice=deserialize_uint32_t(name["members"]["bufferDeviceAddressMultiDevice"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModel=deserialize_uint32_t(name["members"]["vulkanMemoryModel"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelDeviceScope=deserialize_uint32_t(name["members"]["vulkanMemoryModelDeviceScope"]);}();}();
[&]() {
[&]() {
result.vulkanMemoryModelAvailabilityVisibilityChains=deserialize_uint32_t(name["members"]["vulkanMemoryModelAvailabilityVisibilityChains"]);}();}();
[&]() {
[&]() {
result.shaderOutputViewportIndex=deserialize_uint32_t(name["members"]["shaderOutputViewportIndex"]);}();}();
[&]() {
[&]() {
result.shaderOutputLayer=deserialize_uint32_t(name["members"]["shaderOutputLayer"]);}();}();
[&]() {
[&]() {
result.subgroupBroadcastDynamicId=deserialize_uint32_t(name["members"]["subgroupBroadcastDynamicId"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan12Properties(VkPhysicalDeviceVulkan12Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OlNYbkP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GiRRZwT=json({});
    
        if (name.pNext==NULL){
            return_GiRRZwT["null"]=true;
            return return_GiRRZwT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["driverID"]=[&]() {
    json return_yVjUYlB=json({});
    return serialize_VkDriverId(name.driverID);}();
result["members"]["driverName"]=[&]() {
    json return_RKaiSWI=json({});
    
        return_RKaiSWI["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_MbMMDKF=json({});
    return serialize_char(name.driverName[i]);}();
            return_RKaiSWI["members"][std::to_string(i)].push_back(temp);
        }
        return return_RKaiSWI;
        }();
result["members"]["driverInfo"]=[&]() {
    json return_EnAyblt=json({});
    
        return_EnAyblt["members"]={};
        for(int i=0; i < VK_MAX_DRIVER_INFO_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_VYDQVMZ=json({});
    return serialize_char(name.driverInfo[i]);}();
            return_EnAyblt["members"][std::to_string(i)].push_back(temp);
        }
        return return_EnAyblt;
        }();
result["members"]["conformanceVersion"]=[&]() {
    json return_EdYFQaj=json({});
    return serialize_VkConformanceVersion(name.conformanceVersion);}();
result["members"]["denormBehaviorIndependence"]=[&]() {
    json return_EYZUDsb=json({});
    return serialize_VkShaderFloatControlsIndependence(name.denormBehaviorIndependence);}();
result["members"]["roundingModeIndependence"]=[&]() {
    json return_BkWFJFN=json({});
    return serialize_VkShaderFloatControlsIndependence(name.roundingModeIndependence);}();
result["members"]["shaderSignedZeroInfNanPreserveFloat16"]=[&]() {
    json return_ZJkVAfz=json({});
    return_ZJkVAfz=[&]() {
    json return_dPpLwud=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat16);}();return return_ZJkVAfz;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat32"]=[&]() {
    json return_XSzIjMz=json({});
    return_XSzIjMz=[&]() {
    json return_tADsynf=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat32);}();return return_XSzIjMz;}();
result["members"]["shaderSignedZeroInfNanPreserveFloat64"]=[&]() {
    json return_iywDvpx=json({});
    return_iywDvpx=[&]() {
    json return_fuoiVAg=json({});
    return serialize_uint32_t(name.shaderSignedZeroInfNanPreserveFloat64);}();return return_iywDvpx;}();
result["members"]["shaderDenormPreserveFloat16"]=[&]() {
    json return_dRCBbez=json({});
    return_dRCBbez=[&]() {
    json return_IjHZMDl=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat16);}();return return_dRCBbez;}();
result["members"]["shaderDenormPreserveFloat32"]=[&]() {
    json return_OXBjCPI=json({});
    return_OXBjCPI=[&]() {
    json return_mndwgGE=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat32);}();return return_OXBjCPI;}();
result["members"]["shaderDenormPreserveFloat64"]=[&]() {
    json return_OKEXnAg=json({});
    return_OKEXnAg=[&]() {
    json return_cVnlUDI=json({});
    return serialize_uint32_t(name.shaderDenormPreserveFloat64);}();return return_OKEXnAg;}();
result["members"]["shaderDenormFlushToZeroFloat16"]=[&]() {
    json return_qXRXGPi=json({});
    return_qXRXGPi=[&]() {
    json return_tBbLaKu=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat16);}();return return_qXRXGPi;}();
result["members"]["shaderDenormFlushToZeroFloat32"]=[&]() {
    json return_UMpIcdS=json({});
    return_UMpIcdS=[&]() {
    json return_Mkbtbhb=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat32);}();return return_UMpIcdS;}();
result["members"]["shaderDenormFlushToZeroFloat64"]=[&]() {
    json return_brUtmUz=json({});
    return_brUtmUz=[&]() {
    json return_lMremRS=json({});
    return serialize_uint32_t(name.shaderDenormFlushToZeroFloat64);}();return return_brUtmUz;}();
result["members"]["shaderRoundingModeRTEFloat16"]=[&]() {
    json return_UEsMmwT=json({});
    return_UEsMmwT=[&]() {
    json return_YRikySD=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat16);}();return return_UEsMmwT;}();
result["members"]["shaderRoundingModeRTEFloat32"]=[&]() {
    json return_rVHpJad=json({});
    return_rVHpJad=[&]() {
    json return_meHkTTR=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat32);}();return return_rVHpJad;}();
result["members"]["shaderRoundingModeRTEFloat64"]=[&]() {
    json return_BMjukPS=json({});
    return_BMjukPS=[&]() {
    json return_KsMFXER=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTEFloat64);}();return return_BMjukPS;}();
result["members"]["shaderRoundingModeRTZFloat16"]=[&]() {
    json return_epmpzNG=json({});
    return_epmpzNG=[&]() {
    json return_YJHYxTh=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat16);}();return return_epmpzNG;}();
result["members"]["shaderRoundingModeRTZFloat32"]=[&]() {
    json return_AhXblWQ=json({});
    return_AhXblWQ=[&]() {
    json return_hMdcFiT=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat32);}();return return_AhXblWQ;}();
result["members"]["shaderRoundingModeRTZFloat64"]=[&]() {
    json return_uaoCwvK=json({});
    return_uaoCwvK=[&]() {
    json return_SXPBqKz=json({});
    return serialize_uint32_t(name.shaderRoundingModeRTZFloat64);}();return return_uaoCwvK;}();
result["members"]["maxUpdateAfterBindDescriptorsInAllPools"]=[&]() {
    json return_CAJmJgA=json({});
    return serialize_uint32_t(name.maxUpdateAfterBindDescriptorsInAllPools);}();
result["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_shjqxSz=json({});
    return_shjqxSz=[&]() {
    json return_KYucPbA=json({});
    return serialize_uint32_t(name.shaderUniformBufferArrayNonUniformIndexingNative);}();return return_shjqxSz;}();
result["members"]["shaderSampledImageArrayNonUniformIndexingNative"]=[&]() {
    json return_OhccVYm=json({});
    return_OhccVYm=[&]() {
    json return_gKughLe=json({});
    return serialize_uint32_t(name.shaderSampledImageArrayNonUniformIndexingNative);}();return return_OhccVYm;}();
result["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]=[&]() {
    json return_ArcPFQK=json({});
    return_ArcPFQK=[&]() {
    json return_poxfVEx=json({});
    return serialize_uint32_t(name.shaderStorageBufferArrayNonUniformIndexingNative);}();return return_ArcPFQK;}();
result["members"]["shaderStorageImageArrayNonUniformIndexingNative"]=[&]() {
    json return_VCnurso=json({});
    return_VCnurso=[&]() {
    json return_moYgSEd=json({});
    return serialize_uint32_t(name.shaderStorageImageArrayNonUniformIndexingNative);}();return return_VCnurso;}();
result["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]=[&]() {
    json return_NTXgwEq=json({});
    return_NTXgwEq=[&]() {
    json return_gZDtteT=json({});
    return serialize_uint32_t(name.shaderInputAttachmentArrayNonUniformIndexingNative);}();return return_NTXgwEq;}();
result["members"]["robustBufferAccessUpdateAfterBind"]=[&]() {
    json return_UfhgvEK=json({});
    return_UfhgvEK=[&]() {
    json return_xUQZWiT=json({});
    return serialize_uint32_t(name.robustBufferAccessUpdateAfterBind);}();return return_UfhgvEK;}();
result["members"]["quadDivergentImplicitLod"]=[&]() {
    json return_XJEsrmN=json({});
    return_XJEsrmN=[&]() {
    json return_nzfSFjI=json({});
    return serialize_uint32_t(name.quadDivergentImplicitLod);}();return return_XJEsrmN;}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]=[&]() {
    json return_bhXbxOv=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSamplers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]=[&]() {
    json return_DatCZeX=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindUniformBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]=[&]() {
    json return_vkPfIXU=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageBuffers);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]=[&]() {
    json return_EHWCKSy=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindSampledImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]=[&]() {
    json return_xZykZpe=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindStorageImages);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]=[&]() {
    json return_PkXHIAp=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInputAttachments);}();
result["members"]["maxPerStageUpdateAfterBindResources"]=[&]() {
    json return_hsoHsqq=json({});
    return serialize_uint32_t(name.maxPerStageUpdateAfterBindResources);}();
result["members"]["maxDescriptorSetUpdateAfterBindSamplers"]=[&]() {
    json return_fhLtAEm=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSamplers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]=[&]() {
    json return_rblLjoo=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]=[&]() {
    json return_TAdNkVo=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]=[&]() {
    json return_JVYPgOI=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffers);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]=[&]() {
    json return_invTlsI=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic);}();
result["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]=[&]() {
    json return_ucQFbHm=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindSampledImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]=[&]() {
    json return_BCznKez=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindStorageImages);}();
result["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]=[&]() {
    json return_pHEoRbp=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInputAttachments);}();
result["members"]["supportedDepthResolveModes"]=[&]() {
    json return_tHcuWQt=json({});
    return serialize_VkResolveModeFlags(name.supportedDepthResolveModes);}();
result["members"]["supportedStencilResolveModes"]=[&]() {
    json return_fkMpDUy=json({});
    return serialize_VkResolveModeFlags(name.supportedStencilResolveModes);}();
result["members"]["independentResolveNone"]=[&]() {
    json return_MburbBQ=json({});
    return_MburbBQ=[&]() {
    json return_BiZSYzt=json({});
    return serialize_uint32_t(name.independentResolveNone);}();return return_MburbBQ;}();
result["members"]["independentResolve"]=[&]() {
    json return_ZdYoPvO=json({});
    return_ZdYoPvO=[&]() {
    json return_ADdiqGe=json({});
    return serialize_uint32_t(name.independentResolve);}();return return_ZdYoPvO;}();
result["members"]["filterMinmaxSingleComponentFormats"]=[&]() {
    json return_PoMtaHb=json({});
    return_PoMtaHb=[&]() {
    json return_mDPujJG=json({});
    return serialize_uint32_t(name.filterMinmaxSingleComponentFormats);}();return return_PoMtaHb;}();
result["members"]["filterMinmaxImageComponentMapping"]=[&]() {
    json return_tcsiEqH=json({});
    return_tcsiEqH=[&]() {
    json return_nthrIox=json({});
    return serialize_uint32_t(name.filterMinmaxImageComponentMapping);}();return return_tcsiEqH;}();
result["members"]["maxTimelineSemaphoreValueDifference"]=[&]() {
    json return_qRpOzeS=json({});
    return serialize_uint64_t(name.maxTimelineSemaphoreValueDifference);}();
result["members"]["framebufferIntegerColorSampleCounts"]=[&]() {
    json return_VltCsOZ=json({});
    return serialize_VkSampleCountFlags(name.framebufferIntegerColorSampleCounts);}();
return result;}

    VkPhysicalDeviceVulkan12Properties deserialize_VkPhysicalDeviceVulkan12Properties(json name){
        auto result=VkPhysicalDeviceVulkan12Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.driverID=deserialize_VkDriverId(name["members"]["driverID"]);}();
[&]() {

        for (int rJnesRJ=0; rJnesRJ < VK_MAX_DRIVER_NAME_SIZE; rJnesRJ++){
            [&]() {
result.driverName[rJnesRJ]=deserialize_char(name["members"]["driverName"]["members"][rJnesRJ]);}();;
        }
        }();
[&]() {

        for (int FdTLCMs=0; FdTLCMs < VK_MAX_DRIVER_INFO_SIZE; FdTLCMs++){
            [&]() {
result.driverInfo[FdTLCMs]=deserialize_char(name["members"]["driverInfo"]["members"][FdTLCMs]);}();;
        }
        }();
[&]() {
result.conformanceVersion=deserialize_VkConformanceVersion(name["members"]["conformanceVersion"]);}();
[&]() {
result.denormBehaviorIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["denormBehaviorIndependence"]);}();
[&]() {
result.roundingModeIndependence=deserialize_VkShaderFloatControlsIndependence(name["members"]["roundingModeIndependence"]);}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat16=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat32=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderSignedZeroInfNanPreserveFloat64=deserialize_uint32_t(name["members"]["shaderSignedZeroInfNanPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat16=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat32=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormPreserveFloat64=deserialize_uint32_t(name["members"]["shaderDenormPreserveFloat64"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat16=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat16"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat32=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat32"]);}();}();
[&]() {
[&]() {
result.shaderDenormFlushToZeroFloat64=deserialize_uint32_t(name["members"]["shaderDenormFlushToZeroFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTEFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTEFloat64"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat16=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat16"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat32=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat32"]);}();}();
[&]() {
[&]() {
result.shaderRoundingModeRTZFloat64=deserialize_uint32_t(name["members"]["shaderRoundingModeRTZFloat64"]);}();}();
[&]() {
result.maxUpdateAfterBindDescriptorsInAllPools=deserialize_uint32_t(name["members"]["maxUpdateAfterBindDescriptorsInAllPools"]);}();
[&]() {
[&]() {
result.shaderUniformBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderUniformBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderSampledImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderSampledImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageBufferArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageBufferArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderStorageImageArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderStorageImageArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.shaderInputAttachmentArrayNonUniformIndexingNative=deserialize_uint32_t(name["members"]["shaderInputAttachmentArrayNonUniformIndexingNative"]);}();}();
[&]() {
[&]() {
result.robustBufferAccessUpdateAfterBind=deserialize_uint32_t(name["members"]["robustBufferAccessUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.quadDivergentImplicitLod=deserialize_uint32_t(name["members"]["quadDivergentImplicitLod"]);}();}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSamplers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInputAttachments"]);}();
[&]() {
result.maxPerStageUpdateAfterBindResources=deserialize_uint32_t(name["members"]["maxPerStageUpdateAfterBindResources"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSamplers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSamplers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindUniformBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindUniformBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffers=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffers"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageBuffersDynamic=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageBuffersDynamic"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindSampledImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindSampledImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindStorageImages=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindStorageImages"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInputAttachments=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInputAttachments"]);}();
[&]() {
result.supportedDepthResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedDepthResolveModes"]);}();
[&]() {
result.supportedStencilResolveModes=deserialize_VkResolveModeFlags(name["members"]["supportedStencilResolveModes"]);}();
[&]() {
[&]() {
result.independentResolveNone=deserialize_uint32_t(name["members"]["independentResolveNone"]);}();}();
[&]() {
[&]() {
result.independentResolve=deserialize_uint32_t(name["members"]["independentResolve"]);}();}();
[&]() {
[&]() {
result.filterMinmaxSingleComponentFormats=deserialize_uint32_t(name["members"]["filterMinmaxSingleComponentFormats"]);}();}();
[&]() {
[&]() {
result.filterMinmaxImageComponentMapping=deserialize_uint32_t(name["members"]["filterMinmaxImageComponentMapping"]);}();}();
[&]() {
result.maxTimelineSemaphoreValueDifference=deserialize_uint64_t(name["members"]["maxTimelineSemaphoreValueDifference"]);}();
[&]() {
result.framebufferIntegerColorSampleCounts=deserialize_VkSampleCountFlags(name["members"]["framebufferIntegerColorSampleCounts"]);}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Features(VkPhysicalDeviceVulkan13Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WoTvXKa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cBnAxQa=json({});
    
        if (name.pNext==NULL){
            return_cBnAxQa["null"]=true;
            return return_cBnAxQa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_DPxlZdl=json({});
    return_DPxlZdl=[&]() {
    json return_PnATPub=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_DPxlZdl;}();
result["members"]["inlineUniformBlock"]=[&]() {
    json return_ruIhQme=json({});
    return_ruIhQme=[&]() {
    json return_UVrOZHP=json({});
    return serialize_uint32_t(name.inlineUniformBlock);}();return return_ruIhQme;}();
result["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]=[&]() {
    json return_cZcBHcb=json({});
    return_cZcBHcb=[&]() {
    json return_TNNctyj=json({});
    return serialize_uint32_t(name.descriptorBindingInlineUniformBlockUpdateAfterBind);}();return return_cZcBHcb;}();
result["members"]["pipelineCreationCacheControl"]=[&]() {
    json return_UcjefUj=json({});
    return_UcjefUj=[&]() {
    json return_PpplkgY=json({});
    return serialize_uint32_t(name.pipelineCreationCacheControl);}();return return_UcjefUj;}();
result["members"]["privateData"]=[&]() {
    json return_rZBlUMK=json({});
    return_rZBlUMK=[&]() {
    json return_cSKzCuS=json({});
    return serialize_uint32_t(name.privateData);}();return return_rZBlUMK;}();
result["members"]["shaderDemoteToHelperInvocation"]=[&]() {
    json return_NWuDTTr=json({});
    return_NWuDTTr=[&]() {
    json return_XjnQGDi=json({});
    return serialize_uint32_t(name.shaderDemoteToHelperInvocation);}();return return_NWuDTTr;}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_BFsxCSJ=json({});
    return_BFsxCSJ=[&]() {
    json return_KHKQZmg=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_BFsxCSJ;}();
result["members"]["subgroupSizeControl"]=[&]() {
    json return_VlfeJVt=json({});
    return_VlfeJVt=[&]() {
    json return_MTBpFDp=json({});
    return serialize_uint32_t(name.subgroupSizeControl);}();return return_VlfeJVt;}();
result["members"]["computeFullSubgroups"]=[&]() {
    json return_SwBRKQW=json({});
    return_SwBRKQW=[&]() {
    json return_JtQPFrp=json({});
    return serialize_uint32_t(name.computeFullSubgroups);}();return return_SwBRKQW;}();
result["members"]["synchronization2"]=[&]() {
    json return_czGhSZv=json({});
    return_czGhSZv=[&]() {
    json return_VBOBFEN=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_czGhSZv;}();
result["members"]["textureCompressionASTC_HDR"]=[&]() {
    json return_kYTYdUj=json({});
    return_kYTYdUj=[&]() {
    json return_xaqJHow=json({});
    return serialize_uint32_t(name.textureCompressionASTC_HDR);}();return return_kYTYdUj;}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_ZuyAxCS=json({});
    return_ZuyAxCS=[&]() {
    json return_kjzffkI=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_ZuyAxCS;}();
result["members"]["dynamicRendering"]=[&]() {
    json return_CruXkRm=json({});
    return_CruXkRm=[&]() {
    json return_TlXLceu=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_CruXkRm;}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_pFgkPMx=json({});
    return_pFgkPMx=[&]() {
    json return_aoxdcsi=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_pFgkPMx;}();
result["members"]["maintenance4"]=[&]() {
    json return_YpoUzmi=json({});
    return_YpoUzmi=[&]() {
    json return_aeZpuFN=json({});
    return serialize_uint32_t(name.maintenance4);}();return return_YpoUzmi;}();
return result;}

    VkPhysicalDeviceVulkan13Features deserialize_VkPhysicalDeviceVulkan13Features(json name){
        auto result=VkPhysicalDeviceVulkan13Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
[&]() {
[&]() {
result.inlineUniformBlock=deserialize_uint32_t(name["members"]["inlineUniformBlock"]);}();}();
[&]() {
[&]() {
result.descriptorBindingInlineUniformBlockUpdateAfterBind=deserialize_uint32_t(name["members"]["descriptorBindingInlineUniformBlockUpdateAfterBind"]);}();}();
[&]() {
[&]() {
result.pipelineCreationCacheControl=deserialize_uint32_t(name["members"]["pipelineCreationCacheControl"]);}();}();
[&]() {
[&]() {
result.privateData=deserialize_uint32_t(name["members"]["privateData"]);}();}();
[&]() {
[&]() {
result.shaderDemoteToHelperInvocation=deserialize_uint32_t(name["members"]["shaderDemoteToHelperInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
[&]() {
[&]() {
result.subgroupSizeControl=deserialize_uint32_t(name["members"]["subgroupSizeControl"]);}();}();
[&]() {
[&]() {
result.computeFullSubgroups=deserialize_uint32_t(name["members"]["computeFullSubgroups"]);}();}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
[&]() {
[&]() {
result.textureCompressionASTC_HDR=deserialize_uint32_t(name["members"]["textureCompressionASTC_HDR"]);}();}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
[&]() {
[&]() {
result.maintenance4=deserialize_uint32_t(name["members"]["maintenance4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVulkan13Properties(VkPhysicalDeviceVulkan13Properties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EWWGjae=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TriuABl=json({});
    
        if (name.pNext==NULL){
            return_TriuABl["null"]=true;
            return return_TriuABl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minSubgroupSize"]=[&]() {
    json return_fUyFRzd=json({});
    return serialize_uint32_t(name.minSubgroupSize);}();
result["members"]["maxSubgroupSize"]=[&]() {
    json return_aCxnhse=json({});
    return serialize_uint32_t(name.maxSubgroupSize);}();
result["members"]["maxComputeWorkgroupSubgroups"]=[&]() {
    json return_lgsIefZ=json({});
    return serialize_uint32_t(name.maxComputeWorkgroupSubgroups);}();
result["members"]["requiredSubgroupSizeStages"]=[&]() {
    json return_ZKKAvsN=json({});
    return serialize_VkShaderStageFlags(name.requiredSubgroupSizeStages);}();
result["members"]["maxInlineUniformBlockSize"]=[&]() {
    json return_SxMEFom=json({});
    return serialize_uint32_t(name.maxInlineUniformBlockSize);}();
result["members"]["maxPerStageDescriptorInlineUniformBlocks"]=[&]() {
    json return_sMCdjfd=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorInlineUniformBlocks);}();
result["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_GUthRnS=json({});
    return serialize_uint32_t(name.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxDescriptorSetInlineUniformBlocks"]=[&]() {
    json return_OMTyIzq=json({});
    return serialize_uint32_t(name.maxDescriptorSetInlineUniformBlocks);}();
result["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]=[&]() {
    json return_ssdMtAm=json({});
    return serialize_uint32_t(name.maxDescriptorSetUpdateAfterBindInlineUniformBlocks);}();
result["members"]["maxInlineUniformTotalSize"]=[&]() {
    json return_DOatuyP=json({});
    return serialize_uint32_t(name.maxInlineUniformTotalSize);}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_OdszjsZ=json({});
    return_OdszjsZ=[&]() {
    json return_beukWIv=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_OdszjsZ;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_JxfqWLa=json({});
    return_JxfqWLa=[&]() {
    json return_MzHJJmm=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_JxfqWLa;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_qvPfvEI=json({});
    return_qvPfvEI=[&]() {
    json return_BTAamHG=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_qvPfvEI;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_oGmHiYq=json({});
    return_oGmHiYq=[&]() {
    json return_augZQNX=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_oGmHiYq;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_IUlnuQG=json({});
    return_IUlnuQG=[&]() {
    json return_rgeFtdW=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_IUlnuQG;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_zcfPVEV=json({});
    return_zcfPVEV=[&]() {
    json return_boyhOmM=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_zcfPVEV;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_QuTpXgz=json({});
    return_QuTpXgz=[&]() {
    json return_BPPtVPN=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_QuTpXgz;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_NRVcdex=json({});
    return_NRVcdex=[&]() {
    json return_XONzWFy=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_NRVcdex;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_ecmIceZ=json({});
    return_ecmIceZ=[&]() {
    json return_qqwzpuG=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_ecmIceZ;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_LkhbzUZ=json({});
    return_LkhbzUZ=[&]() {
    json return_dAXoavn=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_LkhbzUZ;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_tHxrkMn=json({});
    return_tHxrkMn=[&]() {
    json return_oZkazsw=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_tHxrkMn;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_ovJLilC=json({});
    return_ovJLilC=[&]() {
    json return_GEUdmQa=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_ovJLilC;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_dZALGpO=json({});
    return_dZALGpO=[&]() {
    json return_YDUwNIb=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_dZALGpO;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_SACOZrK=json({});
    return_SACOZrK=[&]() {
    json return_MnyiPUb=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_SACOZrK;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_iorXzkD=json({});
    return_iorXzkD=[&]() {
    json return_IhzvnFA=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_iorXzkD;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_DKfgorY=json({});
    return_DKfgorY=[&]() {
    json return_YMObCrU=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_DKfgorY;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_uhWSuSE=json({});
    return_uhWSuSE=[&]() {
    json return_GGJeEfN=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_uhWSuSE;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_tjyqxdu=json({});
    return_tjyqxdu=[&]() {
    json return_CHIkkeL=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_tjyqxdu;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_tuBxeTj=json({});
    return_tuBxeTj=[&]() {
    json return_Rrevtyd=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_tuBxeTj;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_wfIfkTd=json({});
    return_wfIfkTd=[&]() {
    json return_moJWxRI=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_wfIfkTd;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_hKBEyTb=json({});
    return_hKBEyTb=[&]() {
    json return_yxqcJal=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_hKBEyTb;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_PiBMWMs=json({});
    return_PiBMWMs=[&]() {
    json return_XUUBhUR=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_PiBMWMs;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_BGrUrjl=json({});
    return_BGrUrjl=[&]() {
    json return_XRqDzVo=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_BGrUrjl;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_mKOpdzU=json({});
    return_mKOpdzU=[&]() {
    json return_umcHSww=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_mKOpdzU;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_mzXKVMV=json({});
    return_mzXKVMV=[&]() {
    json return_PCmpaPt=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_mzXKVMV;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_UlTmEri=json({});
    return_UlTmEri=[&]() {
    json return_pSEyUEC=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_UlTmEri;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_hGHOyFu=json({});
    return_hGHOyFu=[&]() {
    json return_oTYIKka=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_hGHOyFu;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_FhXTOxq=json({});
    return_FhXTOxq=[&]() {
    json return_XpSwVJn=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_FhXTOxq;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_VFfZxkP=json({});
    return_VFfZxkP=[&]() {
    json return_mVHTXKu=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_VFfZxkP;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_xmtprKa=json({});
    return_xmtprKa=[&]() {
    json return_aKIMJpZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_xmtprKa;}();
result["members"]["storageTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_GfCFDKC=json({});
    return_GfCFDKC=[&]() {
    json return_BVlJYVd=json({});
    return serialize_uint64_t(name.storageTexelBufferOffsetAlignmentBytes);}();return return_GfCFDKC;}();
result["members"]["storageTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_LHXzLZx=json({});
    return_LHXzLZx=[&]() {
    json return_uIGtWSj=json({});
    return serialize_uint32_t(name.storageTexelBufferOffsetSingleTexelAlignment);}();return return_LHXzLZx;}();
result["members"]["uniformTexelBufferOffsetAlignmentBytes"]=[&]() {
    json return_pNCTWrn=json({});
    return_pNCTWrn=[&]() {
    json return_hVaQveH=json({});
    return serialize_uint64_t(name.uniformTexelBufferOffsetAlignmentBytes);}();return return_pNCTWrn;}();
result["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]=[&]() {
    json return_LYyKiZC=json({});
    return_LYyKiZC=[&]() {
    json return_qSdABxo=json({});
    return serialize_uint32_t(name.uniformTexelBufferOffsetSingleTexelAlignment);}();return return_LYyKiZC;}();
result["members"]["maxBufferSize"]=[&]() {
    json return_BVdRcos=json({});
    return_BVdRcos=[&]() {
    json return_QIYRVwy=json({});
    return serialize_uint64_t(name.maxBufferSize);}();return return_BVdRcos;}();
return result;}

    VkPhysicalDeviceVulkan13Properties deserialize_VkPhysicalDeviceVulkan13Properties(json name){
        auto result=VkPhysicalDeviceVulkan13Properties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minSubgroupSize=deserialize_uint32_t(name["members"]["minSubgroupSize"]);}();
[&]() {
result.maxSubgroupSize=deserialize_uint32_t(name["members"]["maxSubgroupSize"]);}();
[&]() {
result.maxComputeWorkgroupSubgroups=deserialize_uint32_t(name["members"]["maxComputeWorkgroupSubgroups"]);}();
[&]() {
result.requiredSubgroupSizeStages=deserialize_VkShaderStageFlags(name["members"]["requiredSubgroupSizeStages"]);}();
[&]() {
result.maxInlineUniformBlockSize=deserialize_uint32_t(name["members"]["maxInlineUniformBlockSize"]);}();
[&]() {
result.maxPerStageDescriptorInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorInlineUniformBlocks"]);}();
[&]() {
result.maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetInlineUniformBlocks"]);}();
[&]() {
result.maxDescriptorSetUpdateAfterBindInlineUniformBlocks=deserialize_uint32_t(name["members"]["maxDescriptorSetUpdateAfterBindInlineUniformBlocks"]);}();
[&]() {
result.maxInlineUniformTotalSize=deserialize_uint32_t(name["members"]["maxInlineUniformTotalSize"]);}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["storageTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.storageTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["storageTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetAlignmentBytes=deserialize_uint64_t(name["members"]["uniformTexelBufferOffsetAlignmentBytes"]);}();}();
[&]() {
[&]() {
result.uniformTexelBufferOffsetSingleTexelAlignment=deserialize_uint32_t(name["members"]["uniformTexelBufferOffsetSingleTexelAlignment"]);}();}();
[&]() {
[&]() {
result.maxBufferSize=deserialize_uint64_t(name["members"]["maxBufferSize"]);}();}();
return result;}

    json serialize_VkPipelineCompilerControlCreateInfoAMD(VkPipelineCompilerControlCreateInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gZVDICF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vDgpTZU=json({});
    
        if (name.pNext==NULL){
            return_vDgpTZU["null"]=true;
            return return_vDgpTZU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["compilerControlFlags"]=[&]() {
    json return_XKiDMoI=json({});
    return serialize_VkPipelineCompilerControlFlagsAMD(name.compilerControlFlags);}();
return result;}

    VkPipelineCompilerControlCreateInfoAMD deserialize_VkPipelineCompilerControlCreateInfoAMD(json name){
        auto result=VkPipelineCompilerControlCreateInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dOhBavc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dOhBavc=NULL;
        }
    temp_dOhBavc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dOhBavc;}();
[&]() {
result.compilerControlFlags=deserialize_VkPipelineCompilerControlFlagsAMD(name["members"]["compilerControlFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(VkPhysicalDeviceCoherentMemoryFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xnXsVLB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DsmkmFF=json({});
    
        if (name.pNext==NULL){
            return_DsmkmFF["null"]=true;
            return return_DsmkmFF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceCoherentMemory"]=[&]() {
    json return_NKflLXQ=json({});
    return_NKflLXQ=[&]() {
    json return_hmBIjwX=json({});
    return serialize_uint32_t(name.deviceCoherentMemory);}();return return_NKflLXQ;}();
return result;}

    VkPhysicalDeviceCoherentMemoryFeaturesAMD deserialize_VkPhysicalDeviceCoherentMemoryFeaturesAMD(json name){
        auto result=VkPhysicalDeviceCoherentMemoryFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceCoherentMemory=deserialize_uint32_t(name["members"]["deviceCoherentMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceToolProperties(VkPhysicalDeviceToolProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_murqVWA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uDSUpqB=json({});
    
        if (name.pNext==NULL){
            return_uDSUpqB["null"]=true;
            return return_uDSUpqB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_pDKLuLK=json({});
    
        return_pDKLuLK["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_QuuSctP=json({});
    return serialize_char(name.name[i]);}();
            return_pDKLuLK["members"][std::to_string(i)].push_back(temp);
        }
        return return_pDKLuLK;
        }();
result["members"]["version"]=[&]() {
    json return_UpwUZZb=json({});
    
        return_UpwUZZb["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_ZwQHSSs=json({});
    return serialize_char(name.version[i]);}();
            return_UpwUZZb["members"][std::to_string(i)].push_back(temp);
        }
        return return_UpwUZZb;
        }();
result["members"]["purposes"]=[&]() {
    json return_VJuxogn=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_KmTMOiO=json({});
    
        return_KmTMOiO["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_FDovzGn=json({});
    return serialize_char(name.description[i]);}();
            return_KmTMOiO["members"][std::to_string(i)].push_back(temp);
        }
        return return_KmTMOiO;
        }();
result["members"]["layer"]=[&]() {
    json return_PJLBmGg=json({});
    
        return_PJLBmGg["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_QvfDTWO=json({});
    return serialize_char(name.layer[i]);}();
            return_PJLBmGg["members"][std::to_string(i)].push_back(temp);
        }
        return return_PJLBmGg;
        }();
return result;}

    VkPhysicalDeviceToolProperties deserialize_VkPhysicalDeviceToolProperties(json name){
        auto result=VkPhysicalDeviceToolProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int PLiOVax=0; PLiOVax < VK_MAX_EXTENSION_NAME_SIZE; PLiOVax++){
            [&]() {
result.name[PLiOVax]=deserialize_char(name["members"]["name"]["members"][PLiOVax]);}();;
        }
        }();
[&]() {

        for (int mtuAENl=0; mtuAENl < VK_MAX_EXTENSION_NAME_SIZE; mtuAENl++){
            [&]() {
result.version[mtuAENl]=deserialize_char(name["members"]["version"]["members"][mtuAENl]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int YLOMAQY=0; YLOMAQY < VK_MAX_DESCRIPTION_SIZE; YLOMAQY++){
            [&]() {
result.description[YLOMAQY]=deserialize_char(name["members"]["description"]["members"][YLOMAQY]);}();;
        }
        }();
[&]() {

        for (int LGUDkUV=0; LGUDkUV < VK_MAX_EXTENSION_NAME_SIZE; LGUDkUV++){
            [&]() {
result.layer[LGUDkUV]=deserialize_char(name["members"]["layer"]["members"][LGUDkUV]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceToolPropertiesEXT(VkPhysicalDeviceToolPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vEqSQlb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lnmNTth=json({});
    
        if (name.pNext==NULL){
            return_lnmNTth["null"]=true;
            return return_lnmNTth;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["name"]=[&]() {
    json return_HTwcZlh=json({});
    
        return_HTwcZlh["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_tmDrPzY=json({});
    return serialize_char(name.name[i]);}();
            return_HTwcZlh["members"][std::to_string(i)].push_back(temp);
        }
        return return_HTwcZlh;
        }();
result["members"]["version"]=[&]() {
    json return_KKAnETQ=json({});
    
        return_KKAnETQ["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_fCwwtTM=json({});
    return serialize_char(name.version[i]);}();
            return_KKAnETQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_KKAnETQ;
        }();
result["members"]["purposes"]=[&]() {
    json return_jtNwrGM=json({});
    return serialize_VkToolPurposeFlags(name.purposes);}();
result["members"]["description"]=[&]() {
    json return_xFEQjZU=json({});
    
        return_xFEQjZU["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_mtnqOfu=json({});
    return serialize_char(name.description[i]);}();
            return_xFEQjZU["members"][std::to_string(i)].push_back(temp);
        }
        return return_xFEQjZU;
        }();
result["members"]["layer"]=[&]() {
    json return_QzLXavW=json({});
    
        return_QzLXavW["members"]={};
        for(int i=0; i < VK_MAX_EXTENSION_NAME_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_xJePRTs=json({});
    return serialize_char(name.layer[i]);}();
            return_QzLXavW["members"][std::to_string(i)].push_back(temp);
        }
        return return_QzLXavW;
        }();
return result;}

    VkPhysicalDeviceToolPropertiesEXT deserialize_VkPhysicalDeviceToolPropertiesEXT(json name){
        auto result=VkPhysicalDeviceToolPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int szHLzGJ=0; szHLzGJ < VK_MAX_EXTENSION_NAME_SIZE; szHLzGJ++){
            [&]() {
result.name[szHLzGJ]=deserialize_char(name["members"]["name"]["members"][szHLzGJ]);}();;
        }
        }();
[&]() {

        for (int WHOekGv=0; WHOekGv < VK_MAX_EXTENSION_NAME_SIZE; WHOekGv++){
            [&]() {
result.version[WHOekGv]=deserialize_char(name["members"]["version"]["members"][WHOekGv]);}();;
        }
        }();
[&]() {
result.purposes=deserialize_VkToolPurposeFlags(name["members"]["purposes"]);}();
[&]() {

        for (int yqJZdHU=0; yqJZdHU < VK_MAX_DESCRIPTION_SIZE; yqJZdHU++){
            [&]() {
result.description[yqJZdHU]=deserialize_char(name["members"]["description"]["members"][yqJZdHU]);}();;
        }
        }();
[&]() {

        for (int VfVBAMO=0; VfVBAMO < VK_MAX_EXTENSION_NAME_SIZE; VfVBAMO++){
            [&]() {
result.layer[VfVBAMO]=deserialize_char(name["members"]["layer"]["members"][VfVBAMO]);}();;
        }
        }();
return result;}

    json serialize_VkSamplerCustomBorderColorCreateInfoEXT(VkSamplerCustomBorderColorCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eESCANA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uOZWwFz=json({});
    
        if (name.pNext==NULL){
            return_uOZWwFz["null"]=true;
            return return_uOZWwFz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColor"]=[&]() {
    json return_cbrQPws=json({});
    return serialize_VkClearColorValue(name.customBorderColor);}();
result["members"]["format"]=[&]() {
    json return_FvEYCVz=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkSamplerCustomBorderColorCreateInfoEXT deserialize_VkSamplerCustomBorderColorCreateInfoEXT(json name){
        auto result=VkSamplerCustomBorderColorCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VFWMxQa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VFWMxQa=NULL;
        }
    temp_VFWMxQa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VFWMxQa;}();
[&]() {
result.customBorderColor=deserialize_VkClearColorValue(name["members"]["customBorderColor"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(VkPhysicalDeviceCustomBorderColorPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xDgAqId=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hKmgXjv=json({});
    
        if (name.pNext==NULL){
            return_hKmgXjv["null"]=true;
            return return_hKmgXjv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxCustomBorderColorSamplers"]=[&]() {
    json return_aBzUdZv=json({});
    return serialize_uint32_t(name.maxCustomBorderColorSamplers);}();
return result;}

    VkPhysicalDeviceCustomBorderColorPropertiesEXT deserialize_VkPhysicalDeviceCustomBorderColorPropertiesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxCustomBorderColorSamplers=deserialize_uint32_t(name["members"]["maxCustomBorderColorSamplers"]);}();
return result;}

    json serialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(VkPhysicalDeviceCustomBorderColorFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vryylfX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ycGwSCD=json({});
    
        if (name.pNext==NULL){
            return_ycGwSCD["null"]=true;
            return return_ycGwSCD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["customBorderColors"]=[&]() {
    json return_vTkILRT=json({});
    return_vTkILRT=[&]() {
    json return_CfYADxR=json({});
    return serialize_uint32_t(name.customBorderColors);}();return return_vTkILRT;}();
result["members"]["customBorderColorWithoutFormat"]=[&]() {
    json return_iOoXkOy=json({});
    return_iOoXkOy=[&]() {
    json return_UAJoXSk=json({});
    return serialize_uint32_t(name.customBorderColorWithoutFormat);}();return return_iOoXkOy;}();
return result;}

    VkPhysicalDeviceCustomBorderColorFeaturesEXT deserialize_VkPhysicalDeviceCustomBorderColorFeaturesEXT(json name){
        auto result=VkPhysicalDeviceCustomBorderColorFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.customBorderColors=deserialize_uint32_t(name["members"]["customBorderColors"]);}();}();
[&]() {
[&]() {
result.customBorderColorWithoutFormat=deserialize_uint32_t(name["members"]["customBorderColorWithoutFormat"]);}();}();
return result;}

    json serialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(VkSamplerBorderColorComponentMappingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ikreKtk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IwmICvD=json({});
    
        if (name.pNext==NULL){
            return_IwmICvD["null"]=true;
            return return_IwmICvD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["components"]=[&]() {
    json return_WhPEVGv=json({});
    return serialize_VkComponentMapping(name.components);}();
result["members"]["srgb"]=[&]() {
    json return_EQrHLpc=json({});
    return_EQrHLpc=[&]() {
    json return_rzdpaed=json({});
    return serialize_uint32_t(name.srgb);}();return return_EQrHLpc;}();
return result;}

    VkSamplerBorderColorComponentMappingCreateInfoEXT deserialize_VkSamplerBorderColorComponentMappingCreateInfoEXT(json name){
        auto result=VkSamplerBorderColorComponentMappingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NNIqMwG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NNIqMwG=NULL;
        }
    temp_NNIqMwG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NNIqMwG;}();
[&]() {
result.components=deserialize_VkComponentMapping(name["members"]["components"]);}();
[&]() {
[&]() {
result.srgb=deserialize_uint32_t(name["members"]["srgb"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(VkPhysicalDeviceBorderColorSwizzleFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wqYykoJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HJkOwGn=json({});
    
        if (name.pNext==NULL){
            return_HJkOwGn["null"]=true;
            return return_HJkOwGn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["borderColorSwizzle"]=[&]() {
    json return_fxRlTQG=json({});
    return_fxRlTQG=[&]() {
    json return_CiypwJZ=json({});
    return serialize_uint32_t(name.borderColorSwizzle);}();return return_fxRlTQG;}();
result["members"]["borderColorSwizzleFromImage"]=[&]() {
    json return_vQHekTL=json({});
    return_vQHekTL=[&]() {
    json return_uyRqJtS=json({});
    return serialize_uint32_t(name.borderColorSwizzleFromImage);}();return return_vQHekTL;}();
return result;}

    VkPhysicalDeviceBorderColorSwizzleFeaturesEXT deserialize_VkPhysicalDeviceBorderColorSwizzleFeaturesEXT(json name){
        auto result=VkPhysicalDeviceBorderColorSwizzleFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.borderColorSwizzle=deserialize_uint32_t(name["members"]["borderColorSwizzle"]);}();}();
[&]() {
[&]() {
result.borderColorSwizzleFromImage=deserialize_uint32_t(name["members"]["borderColorSwizzleFromImage"]);}();}();
return result;}

    json serialize_VkDeviceOrHostAddressKHR(VkDeviceOrHostAddressKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_CGJEDrC=json({});
    return_CGJEDrC=[&]() {
    json return_HgTflzm=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_CGJEDrC;}();
result["members"]["hostAddress"]=[&]() {
    json return_RVsoQof=json({});
    
        if (name.hostAddress==NULL){
            return_RVsoQof["null"]=true;
            return return_RVsoQof;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressKHR deserialize_VkDeviceOrHostAddressKHR(json name){
        auto result=VkDeviceOrHostAddressKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        result.hostAddress=NULL;
        }
    result.hostAddress=deserialize_void_p(name["members"]["hostAddress"]);
}();
return result;}

    json serialize_VkDeviceOrHostAddressConstKHR(VkDeviceOrHostAddressConstKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["deviceAddress"]=[&]() {
    json return_PLfXueR=json({});
    return_PLfXueR=[&]() {
    json return_soUbSld=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_PLfXueR;}();
result["members"]["hostAddress"]=[&]() {
    json return_ydTlgwS=json({});
    
        if (name.hostAddress==NULL){
            return_ydTlgwS["null"]=true;
            return return_ydTlgwS;
        }
        return serialize_void_p(name.hostAddress);
}();
return result;}

    VkDeviceOrHostAddressConstKHR deserialize_VkDeviceOrHostAddressConstKHR(json name){
        auto result=VkDeviceOrHostAddressConstKHR();
    
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
[&]() {
void* temp_bkMeLfr;[&]() {

        if (name["members"]["hostAddress"].contains("null")){
        temp_bkMeLfr=NULL;
        }
    temp_bkMeLfr=deserialize_void_p(name["members"]["hostAddress"]);
}();result.hostAddress=temp_bkMeLfr;}();
return result;}

    json serialize_VkAccelerationStructureGeometryTrianglesDataKHR(VkAccelerationStructureGeometryTrianglesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bafWeOB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vugUAAq=json({});
    
        if (name.pNext==NULL){
            return_vugUAAq["null"]=true;
            return return_vugUAAq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexFormat"]=[&]() {
    json return_JDUmLbk=json({});
    return serialize_VkFormat(name.vertexFormat);}();
result["members"]["vertexData"]=[&]() {
    json return_iZltfQc=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
result["members"]["vertexStride"]=[&]() {
    json return_CvkABet=json({});
    return_CvkABet=[&]() {
    json return_gOOTzQS=json({});
    return serialize_uint64_t(name.vertexStride);}();return return_CvkABet;}();
result["members"]["maxVertex"]=[&]() {
    json return_memXQet=json({});
    return serialize_uint32_t(name.maxVertex);}();
result["members"]["indexType"]=[&]() {
    json return_cwxuydn=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexData"]=[&]() {
    json return_ZDzEIQm=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexData);}();
result["members"]["transformData"]=[&]() {
    json return_BCsruZI=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.transformData);}();
return result;}

    VkAccelerationStructureGeometryTrianglesDataKHR deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryTrianglesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VzoQaFX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VzoQaFX=NULL;
        }
    temp_VzoQaFX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VzoQaFX;}();
[&]() {
result.vertexFormat=deserialize_VkFormat(name["members"]["vertexFormat"]);}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
[&]() {
[&]() {
result.vertexStride=deserialize_uint64_t(name["members"]["vertexStride"]);}();}();
[&]() {
result.maxVertex=deserialize_uint32_t(name["members"]["maxVertex"]);}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexData"]);}();
[&]() {
result.transformData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["transformData"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryAabbsDataKHR(VkAccelerationStructureGeometryAabbsDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pMHFIKe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YVCTDVk=json({});
    
        if (name.pNext==NULL){
            return_YVCTDVk["null"]=true;
            return return_YVCTDVk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["data"]=[&]() {
    json return_HOsUltA=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["stride"]=[&]() {
    json return_fYMmXxL=json({});
    return_fYMmXxL=[&]() {
    json return_mLEogdH=json({});
    return serialize_uint64_t(name.stride);}();return return_fYMmXxL;}();
return result;}

    VkAccelerationStructureGeometryAabbsDataKHR deserialize_VkAccelerationStructureGeometryAabbsDataKHR(json name){
        auto result=VkAccelerationStructureGeometryAabbsDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jJUwvGr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jJUwvGr=NULL;
        }
    temp_jJUwvGr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jJUwvGr;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
[&]() {
result.stride=deserialize_uint64_t(name["members"]["stride"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryInstancesDataKHR(VkAccelerationStructureGeometryInstancesDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YpKjipT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qELxeBN=json({});
    
        if (name.pNext==NULL){
            return_qELxeBN["null"]=true;
            return return_qELxeBN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["arrayOfPointers"]=[&]() {
    json return_EjXXDWP=json({});
    return_EjXXDWP=[&]() {
    json return_cPGegqp=json({});
    return serialize_uint32_t(name.arrayOfPointers);}();return return_EjXXDWP;}();
result["members"]["data"]=[&]() {
    json return_uEbkNLj=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
return result;}

    VkAccelerationStructureGeometryInstancesDataKHR deserialize_VkAccelerationStructureGeometryInstancesDataKHR(json name){
        auto result=VkAccelerationStructureGeometryInstancesDataKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fjUNdPO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fjUNdPO=NULL;
        }
    temp_fjUNdPO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fjUNdPO;}();
[&]() {
[&]() {
result.arrayOfPointers=deserialize_uint32_t(name["members"]["arrayOfPointers"]);}();}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryDataKHR(VkAccelerationStructureGeometryDataKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["triangles"]=[&]() {
    json return_CzXnNgY=json({});
    return serialize_VkAccelerationStructureGeometryTrianglesDataKHR(name.triangles);}();
result["members"]["aabbs"]=[&]() {
    json return_eVzKmxA=json({});
    return serialize_VkAccelerationStructureGeometryAabbsDataKHR(name.aabbs);}();
result["members"]["instances"]=[&]() {
    json return_giGRPoE=json({});
    return serialize_VkAccelerationStructureGeometryInstancesDataKHR(name.instances);}();
return result;}

    VkAccelerationStructureGeometryDataKHR deserialize_VkAccelerationStructureGeometryDataKHR(json name){
        auto result=VkAccelerationStructureGeometryDataKHR();
    
[&]() {
result.triangles=deserialize_VkAccelerationStructureGeometryTrianglesDataKHR(name["members"]["triangles"]);}();
[&]() {
result.aabbs=deserialize_VkAccelerationStructureGeometryAabbsDataKHR(name["members"]["aabbs"]);}();
[&]() {
result.instances=deserialize_VkAccelerationStructureGeometryInstancesDataKHR(name["members"]["instances"]);}();
return result;}

    json serialize_VkAccelerationStructureGeometryKHR(VkAccelerationStructureGeometryKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hbYNPll=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hMKVDWH=json({});
    
        if (name.pNext==NULL){
            return_hMKVDWH["null"]=true;
            return return_hMKVDWH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["geometryType"]=[&]() {
    json return_uVOZtwr=json({});
    return serialize_VkGeometryTypeKHR(name.geometryType);}();
result["members"]["geometry"]=[&]() {
    json return_rfjCDOL=json({});
    return serialize_VkAccelerationStructureGeometryDataKHR(name.geometry);}();
result["members"]["flags"]=[&]() {
    json return_CGfqGHH=json({});
    return serialize_VkGeometryFlagsKHR(name.flags);}();
return result;}

    VkAccelerationStructureGeometryKHR deserialize_VkAccelerationStructureGeometryKHR(json name){
        auto result=VkAccelerationStructureGeometryKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CtDKPgP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CtDKPgP=NULL;
        }
    temp_CtDKPgP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CtDKPgP;}();
[&]() {
result.geometryType=deserialize_VkGeometryTypeKHR(name["members"]["geometryType"]);}();
[&]() {
result.geometry=deserialize_VkAccelerationStructureGeometryDataKHR(name["members"]["geometry"]);}();
[&]() {
result.flags=deserialize_VkGeometryFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildGeometryInfoKHR(VkAccelerationStructureBuildGeometryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NqaNsww=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hYusDyG=json({});
    
        if (name.pNext==NULL){
            return_hYusDyG["null"]=true;
            return return_hYusDyG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_ujPUZsd=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["flags"]=[&]() {
    json return_XrQTNIL=json({});
    return serialize_VkBuildAccelerationStructureFlagsKHR(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_FRdmNri=json({});
    return serialize_VkBuildAccelerationStructureModeKHR(name.mode);}();
result["members"]["srcAccelerationStructure"]=[&]() {
    json return_iGpaTbi=json({});
    return serialize_VkAccelerationStructureKHR(name.srcAccelerationStructure);}();
result["members"]["dstAccelerationStructure"]=[&]() {
    json return_LBjrCII=json({});
    return serialize_VkAccelerationStructureKHR(name.dstAccelerationStructure);}();
result["members"]["geometryCount"]=[&]() {
    json return_YvtxCxJ=json({});
    return serialize_uint32_t(name.geometryCount);}();
result["members"]["pGeometries"]=[&]() {
    json return_udUyEfE=json({});
    
        if (name.pGeometries==NULL){
            return_udUyEfE["null"]=true;
            return return_udUyEfE;
        }
        
        return_udUyEfE["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_QRYzroz=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.pGeometries[i]);}();
            return_udUyEfE["members"][std::to_string(i)].push_back(temp);
        }
        return return_udUyEfE;
        }();
result["members"]["ppGeometries"]=[&]() {
    json return_txGZLnZ=json({});
    
        if (name.ppGeometries==NULL){
            return_txGZLnZ["null"]=true;
            return return_txGZLnZ;
        }
        
        return_txGZLnZ["members"]={};
        for(int i=0; i < name.geometryCount; i++){
            json temp;
            temp=[&]() {
    json return_KsmCMkn=json({});
    
        if (name.ppGeometries[i]==NULL){
            return_KsmCMkn["null"]=true;
            return return_KsmCMkn;
        }
        
        return_KsmCMkn["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_NpjtNBr=json({});
    return serialize_VkAccelerationStructureGeometryKHR(name.ppGeometries[i][i]);}();
            return_KsmCMkn["members"][std::to_string(i)].push_back(temp);
        }
        return return_KsmCMkn;
        }();
            return_txGZLnZ["members"][std::to_string(i)].push_back(temp);
        }
        return return_txGZLnZ;
        }();
result["members"]["scratchData"]=[&]() {
    json return_yYKgyhL=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
return result;}

    VkAccelerationStructureBuildGeometryInfoKHR deserialize_VkAccelerationStructureBuildGeometryInfoKHR(json name){
        auto result=VkAccelerationStructureBuildGeometryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_redxyus;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_redxyus=NULL;
        }
    temp_redxyus=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_redxyus;}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildAccelerationStructureFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildAccelerationStructureModeKHR(name["members"]["mode"]);}();
[&]() {
result.srcAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["srcAccelerationStructure"]);}();
[&]() {
result.dstAccelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["dstAccelerationStructure"]);}();
[&]() {
result.geometryCount=deserialize_uint32_t(name["members"]["geometryCount"]);}();
[&]() {
VkAccelerationStructureGeometryKHR* temp_rgIEvGH;[&]() {

        if (name["members"]["pGeometries"].contains("null")){
        temp_rgIEvGH=NULL;
        }
    temp_rgIEvGH=(VkAccelerationStructureGeometryKHR*)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR));
        for (int ZwiPFrg=0; ZwiPFrg < result.geometryCount; ZwiPFrg++){
            [&]() {
temp_rgIEvGH[ZwiPFrg]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["pGeometries"]["members"][ZwiPFrg]);}();;
        }
        }();result.pGeometries=temp_rgIEvGH;}();
[&]() {
VkAccelerationStructureGeometryKHR** temp_XXxYAdd;[&]() {

        if (name["members"]["ppGeometries"].contains("null")){
        temp_XXxYAdd=NULL;
        }
    temp_XXxYAdd=(VkAccelerationStructureGeometryKHR**)malloc(result.geometryCount*sizeof(VkAccelerationStructureGeometryKHR*));
        for (int VcALIth=0; VcALIth < result.geometryCount; VcALIth++){
            [&]() {

        if (name["members"]["ppGeometries"]["members"][VcALIth].contains("null")){
        temp_XXxYAdd[VcALIth]=NULL;
        }
    temp_XXxYAdd[VcALIth]=(VkAccelerationStructureGeometryKHR*)malloc(1*sizeof(VkAccelerationStructureGeometryKHR));
        for (int pAbcTZs=0; pAbcTZs < 1; pAbcTZs++){
            [&]() {
temp_XXxYAdd[VcALIth][pAbcTZs]=deserialize_VkAccelerationStructureGeometryKHR(name["members"]["ppGeometries"]["members"][VcALIth]["members"][pAbcTZs]);}();;
        }
        }();;
        }
        }();result.ppGeometries=temp_XXxYAdd;}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
return result;}

    json serialize_VkAccelerationStructureBuildRangeInfoKHR(VkAccelerationStructureBuildRangeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["primitiveCount"]=[&]() {
    json return_pmYrcSV=json({});
    return serialize_uint32_t(name.primitiveCount);}();
result["members"]["primitiveOffset"]=[&]() {
    json return_rqYldVB=json({});
    return serialize_uint32_t(name.primitiveOffset);}();
result["members"]["firstVertex"]=[&]() {
    json return_adRLMTc=json({});
    return serialize_uint32_t(name.firstVertex);}();
result["members"]["transformOffset"]=[&]() {
    json return_CDMCxiA=json({});
    return serialize_uint32_t(name.transformOffset);}();
return result;}

    VkAccelerationStructureBuildRangeInfoKHR deserialize_VkAccelerationStructureBuildRangeInfoKHR(json name){
        auto result=VkAccelerationStructureBuildRangeInfoKHR();
    
[&]() {
result.primitiveCount=deserialize_uint32_t(name["members"]["primitiveCount"]);}();
[&]() {
result.primitiveOffset=deserialize_uint32_t(name["members"]["primitiveOffset"]);}();
[&]() {
result.firstVertex=deserialize_uint32_t(name["members"]["firstVertex"]);}();
[&]() {
result.transformOffset=deserialize_uint32_t(name["members"]["transformOffset"]);}();
return result;}

    json serialize_VkAccelerationStructureCreateInfoKHR(VkAccelerationStructureCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FTyAzoe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DWYlSbV=json({});
    
        if (name.pNext==NULL){
            return_DWYlSbV["null"]=true;
            return return_DWYlSbV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_ZJviTNx=json({});
    return serialize_VkAccelerationStructureCreateFlagsKHR(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_IrxqXbd=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_ArTodEA=json({});
    return_ArTodEA=[&]() {
    json return_nnfVQHp=json({});
    return serialize_uint64_t(name.offset);}();return return_ArTodEA;}();
result["members"]["size"]=[&]() {
    json return_CMzkVNg=json({});
    return_CMzkVNg=[&]() {
    json return_ZfxZWbc=json({});
    return serialize_uint64_t(name.size);}();return return_CMzkVNg;}();
result["members"]["type"]=[&]() {
    json return_SXadxiX=json({});
    return serialize_VkAccelerationStructureTypeKHR(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_MeJMPza=json({});
    return_MeJMPza=[&]() {
    json return_iqqUfWy=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_MeJMPza;}();
return result;}

    VkAccelerationStructureCreateInfoKHR deserialize_VkAccelerationStructureCreateInfoKHR(json name){
        auto result=VkAccelerationStructureCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_moMeYFy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_moMeYFy=NULL;
        }
    temp_moMeYFy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_moMeYFy;}();
[&]() {
result.createFlags=deserialize_VkAccelerationStructureCreateFlagsKHR(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkAccelerationStructureTypeKHR(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkAabbPositionsKHR(VkAabbPositionsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_EBGrihi=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_PRfZhOZ=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_ptRRlkZ=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_vLSQtjq=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_mxNuowl=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_guOVoBQ=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsKHR deserialize_VkAabbPositionsKHR(json name){
        auto result=VkAabbPositionsKHR();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkAabbPositionsNV(VkAabbPositionsNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["minX"]=[&]() {
    json return_bsvvmRC=json({});
    return serialize_float(name.minX);}();
result["members"]["minY"]=[&]() {
    json return_lcwCGDv=json({});
    return serialize_float(name.minY);}();
result["members"]["minZ"]=[&]() {
    json return_HyqQGXH=json({});
    return serialize_float(name.minZ);}();
result["members"]["maxX"]=[&]() {
    json return_wwrhUgi=json({});
    return serialize_float(name.maxX);}();
result["members"]["maxY"]=[&]() {
    json return_ZdDjcKU=json({});
    return serialize_float(name.maxY);}();
result["members"]["maxZ"]=[&]() {
    json return_VZsJouM=json({});
    return serialize_float(name.maxZ);}();
return result;}

    VkAabbPositionsNV deserialize_VkAabbPositionsNV(json name){
        auto result=VkAabbPositionsNV();
    
[&]() {
result.minX=deserialize_float(name["members"]["minX"]);}();
[&]() {
result.minY=deserialize_float(name["members"]["minY"]);}();
[&]() {
result.minZ=deserialize_float(name["members"]["minZ"]);}();
[&]() {
result.maxX=deserialize_float(name["members"]["maxX"]);}();
[&]() {
result.maxY=deserialize_float(name["members"]["maxY"]);}();
[&]() {
result.maxZ=deserialize_float(name["members"]["maxZ"]);}();
return result;}

    json serialize_VkTransformMatrixKHR(VkTransformMatrixKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_RhmvEwT=json({});
    
        return_RhmvEwT["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_NwLGavI=json({});
    
        return_NwLGavI["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_FQoTZJg=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_NwLGavI["members"][std::to_string(i)].push_back(temp);
        }
        return return_NwLGavI;
        }();
            return_RhmvEwT["members"][std::to_string(i)].push_back(temp);
        }
        return return_RhmvEwT;
        }();
return result;}

    VkTransformMatrixKHR deserialize_VkTransformMatrixKHR(json name){
        auto result=VkTransformMatrixKHR();
    
[&]() {

        for (int juKgUHl=0; juKgUHl < 3; juKgUHl++){
            [&]() {

        for (int itCpHou=0; itCpHou < 4; itCpHou++){
            [&]() {
result.matrix[juKgUHl][itCpHou]=deserialize_float(name["members"]["matrix"]["members"][juKgUHl]["members"][itCpHou]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkTransformMatrixNV(VkTransformMatrixNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["matrix"]=[&]() {
    json return_UuuTLrx=json({});
    
        return_UuuTLrx["members"]={};
        for(int i=0; i < 3; i++){
            json temp;
            temp=[&]() {
    json return_AMTAGfw=json({});
    
        return_AMTAGfw["members"]={};
        for(int i=0; i < 4; i++){
            json temp;
            temp=[&]() {
    json return_UCpQUiS=json({});
    return serialize_float(name.matrix[i][i]);}();
            return_AMTAGfw["members"][std::to_string(i)].push_back(temp);
        }
        return return_AMTAGfw;
        }();
            return_UuuTLrx["members"][std::to_string(i)].push_back(temp);
        }
        return return_UuuTLrx;
        }();
return result;}

    VkTransformMatrixNV deserialize_VkTransformMatrixNV(json name){
        auto result=VkTransformMatrixNV();
    
[&]() {

        for (int SwGGeCb=0; SwGGeCb < 3; SwGGeCb++){
            [&]() {

        for (int eyrPvXX=0; eyrPvXX < 4; eyrPvXX++){
            [&]() {
result.matrix[SwGGeCb][eyrPvXX]=deserialize_float(name["members"]["matrix"]["members"][SwGGeCb]["members"][eyrPvXX]);}();;
        }
        }();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureInstanceKHR(VkAccelerationStructureInstanceKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_sYFAVgw=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_NYaTmhh=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_cGBpnOa=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_fBxHCcU=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_svUlstX=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_eJhMfvy=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceKHR deserialize_VkAccelerationStructureInstanceKHR(json name){
        auto result=VkAccelerationStructureInstanceKHR();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureInstanceNV(VkAccelerationStructureInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transform"]=[&]() {
    json return_hdaDxam=json({});
    return serialize_VkTransformMatrixKHR(name.transform);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_TzRKMTX=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_IEgYkDm=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_Krhpvfk=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_duqgpbp=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_SuMJeVt=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureInstanceNV deserialize_VkAccelerationStructureInstanceNV(json name){
        auto result=VkAccelerationStructureInstanceNV();
    
[&]() {
result.transform=deserialize_VkTransformMatrixKHR(name["members"]["transform"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureDeviceAddressInfoKHR(VkAccelerationStructureDeviceAddressInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TyLIdIe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NSVkLEj=json({});
    
        if (name.pNext==NULL){
            return_NSVkLEj["null"]=true;
            return return_NSVkLEj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_DePTeAx=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
return result;}

    VkAccelerationStructureDeviceAddressInfoKHR deserialize_VkAccelerationStructureDeviceAddressInfoKHR(json name){
        auto result=VkAccelerationStructureDeviceAddressInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LWpKDIw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LWpKDIw=NULL;
        }
    temp_LWpKDIw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LWpKDIw;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
return result;}

    json serialize_VkAccelerationStructureVersionInfoKHR(VkAccelerationStructureVersionInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pUyefPs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wcaToZY=json({});
    
        if (name.pNext==NULL){
            return_wcaToZY["null"]=true;
            return return_wcaToZY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_eUvrcAc=json({});
    
        if (name.pVersionData==NULL){
            return_eUvrcAc["null"]=true;
            return return_eUvrcAc;
        }
        
        return_eUvrcAc["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_WJQyWJE=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_eUvrcAc["members"][std::to_string(i)].push_back(temp);
        }
        return return_eUvrcAc;
        }();
return result;}

    VkAccelerationStructureVersionInfoKHR deserialize_VkAccelerationStructureVersionInfoKHR(json name){
        auto result=VkAccelerationStructureVersionInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eLRiOAU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eLRiOAU=NULL;
        }
    temp_eLRiOAU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eLRiOAU;}();
[&]() {
uint8_t* temp_cNeGPoZ;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_cNeGPoZ=NULL;
        }
    temp_cNeGPoZ=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int wDlpJqi=0; wDlpJqi < 2*VK_UUID_SIZE; wDlpJqi++){
            [&]() {
temp_cNeGPoZ[wDlpJqi]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][wDlpJqi]);}();;
        }
        }();result.pVersionData=temp_cNeGPoZ;}();
return result;}

    json serialize_VkCopyAccelerationStructureInfoKHR(VkCopyAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZnvSxxT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mAKDsAe=json({});
    
        if (name.pNext==NULL){
            return_mAKDsAe["null"]=true;
            return return_mAKDsAe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_hgbYuAh=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_xjFERkF=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_dnbsdLO=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureInfoKHR deserialize_VkCopyAccelerationStructureInfoKHR(json name){
        auto result=VkCopyAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mKuKaRa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mKuKaRa=NULL;
        }
    temp_mKuKaRa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mKuKaRa;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyAccelerationStructureToMemoryInfoKHR(VkCopyAccelerationStructureToMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UmuSXaX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ghCSINH=json({});
    
        if (name.pNext==NULL){
            return_ghCSINH["null"]=true;
            return return_ghCSINH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_fzoRfsP=json({});
    return serialize_VkAccelerationStructureKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_XkDgDWN=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_EucCdLN=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyAccelerationStructureToMemoryInfoKHR deserialize_VkCopyAccelerationStructureToMemoryInfoKHR(json name){
        auto result=VkCopyAccelerationStructureToMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vJKVpHW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vJKVpHW=NULL;
        }
    temp_vJKVpHW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vJKVpHW;}();
[&]() {
result.src=deserialize_VkAccelerationStructureKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToAccelerationStructureInfoKHR(VkCopyMemoryToAccelerationStructureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GZWMhda=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KyRIkEj=json({});
    
        if (name.pNext==NULL){
            return_KyRIkEj["null"]=true;
            return return_KyRIkEj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_Kruateo=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_OtnOccG=json({});
    return serialize_VkAccelerationStructureKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_UfEEZqk=json({});
    return serialize_VkCopyAccelerationStructureModeKHR(name.mode);}();
return result;}

    VkCopyMemoryToAccelerationStructureInfoKHR deserialize_VkCopyMemoryToAccelerationStructureInfoKHR(json name){
        auto result=VkCopyMemoryToAccelerationStructureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LYAYknM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LYAYknM=NULL;
        }
    temp_LYAYknM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LYAYknM;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkAccelerationStructureKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyAccelerationStructureModeKHR(name["members"]["mode"]);}();
return result;}

    json serialize_VkRayTracingPipelineInterfaceCreateInfoKHR(VkRayTracingPipelineInterfaceCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hDVbYtb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VvHSBxc=json({});
    
        if (name.pNext==NULL){
            return_VvHSBxc["null"]=true;
            return return_VvHSBxc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxPipelineRayPayloadSize"]=[&]() {
    json return_KUzeysN=json({});
    return serialize_uint32_t(name.maxPipelineRayPayloadSize);}();
result["members"]["maxPipelineRayHitAttributeSize"]=[&]() {
    json return_yOgpWrL=json({});
    return serialize_uint32_t(name.maxPipelineRayHitAttributeSize);}();
return result;}

    VkRayTracingPipelineInterfaceCreateInfoKHR deserialize_VkRayTracingPipelineInterfaceCreateInfoKHR(json name){
        auto result=VkRayTracingPipelineInterfaceCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EKMPtkz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EKMPtkz=NULL;
        }
    temp_EKMPtkz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EKMPtkz;}();
[&]() {
result.maxPipelineRayPayloadSize=deserialize_uint32_t(name["members"]["maxPipelineRayPayloadSize"]);}();
[&]() {
result.maxPipelineRayHitAttributeSize=deserialize_uint32_t(name["members"]["maxPipelineRayHitAttributeSize"]);}();
return result;}

    json serialize_VkPipelineLibraryCreateInfoKHR(VkPipelineLibraryCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wiEicMO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LTgxhXn=json({});
    
        if (name.pNext==NULL){
            return_LTgxhXn["null"]=true;
            return return_LTgxhXn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["libraryCount"]=[&]() {
    json return_vUrABZG=json({});
    return serialize_uint32_t(name.libraryCount);}();
result["members"]["pLibraries"]=[&]() {
    json return_HDmqhSx=json({});
    
        if (name.pLibraries==NULL){
            return_HDmqhSx["null"]=true;
            return return_HDmqhSx;
        }
        
        return_HDmqhSx["members"]={};
        for(int i=0; i < name.libraryCount; i++){
            json temp;
            temp=[&]() {
    json return_hevhpzA=json({});
    return serialize_VkPipeline(name.pLibraries[i]);}();
            return_HDmqhSx["members"][std::to_string(i)].push_back(temp);
        }
        return return_HDmqhSx;
        }();
return result;}

    VkPipelineLibraryCreateInfoKHR deserialize_VkPipelineLibraryCreateInfoKHR(json name){
        auto result=VkPipelineLibraryCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iKEGGGp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iKEGGGp=NULL;
        }
    temp_iKEGGGp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iKEGGGp;}();
[&]() {
result.libraryCount=deserialize_uint32_t(name["members"]["libraryCount"]);}();
[&]() {
VkPipeline* temp_BsLgjsi;[&]() {

        if (name["members"]["pLibraries"].contains("null")){
        temp_BsLgjsi=NULL;
        }
    temp_BsLgjsi=(VkPipeline*)malloc(result.libraryCount*sizeof(VkPipeline));
        for (int WJmvdbq=0; WJmvdbq < result.libraryCount; WJmvdbq++){
            [&]() {
temp_BsLgjsi[WJmvdbq]=deserialize_VkPipeline(name["members"]["pLibraries"]["members"][WJmvdbq]);}();;
        }
        }();result.pLibraries=temp_BsLgjsi;}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(VkPhysicalDeviceExtendedDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wdtiZGd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HZGADHG=json({});
    
        if (name.pNext==NULL){
            return_HZGADHG["null"]=true;
            return return_HZGADHG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState"]=[&]() {
    json return_UASGBRi=json({});
    return_UASGBRi=[&]() {
    json return_zszBHWA=json({});
    return serialize_uint32_t(name.extendedDynamicState);}();return return_UASGBRi;}();
return result;}

    VkPhysicalDeviceExtendedDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState=deserialize_uint32_t(name["members"]["extendedDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(VkPhysicalDeviceExtendedDynamicState2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OkXptht=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zPwHRhF=json({});
    
        if (name.pNext==NULL){
            return_zPwHRhF["null"]=true;
            return return_zPwHRhF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState2"]=[&]() {
    json return_DbzEGuG=json({});
    return_DbzEGuG=[&]() {
    json return_LtjxINk=json({});
    return serialize_uint32_t(name.extendedDynamicState2);}();return return_DbzEGuG;}();
result["members"]["extendedDynamicState2LogicOp"]=[&]() {
    json return_HvdTMde=json({});
    return_HvdTMde=[&]() {
    json return_DbImvpN=json({});
    return serialize_uint32_t(name.extendedDynamicState2LogicOp);}();return return_HvdTMde;}();
result["members"]["extendedDynamicState2PatchControlPoints"]=[&]() {
    json return_deYtGvY=json({});
    return_deYtGvY=[&]() {
    json return_MUOKbKt=json({});
    return serialize_uint32_t(name.extendedDynamicState2PatchControlPoints);}();return return_deYtGvY;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState2FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState2=deserialize_uint32_t(name["members"]["extendedDynamicState2"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2LogicOp=deserialize_uint32_t(name["members"]["extendedDynamicState2LogicOp"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState2PatchControlPoints=deserialize_uint32_t(name["members"]["extendedDynamicState2PatchControlPoints"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(VkPhysicalDeviceExtendedDynamicState3FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vLbpgyR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xzBEOkm=json({});
    
        if (name.pNext==NULL){
            return_xzBEOkm["null"]=true;
            return return_xzBEOkm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["extendedDynamicState3TessellationDomainOrigin"]=[&]() {
    json return_bGIvqDI=json({});
    return_bGIvqDI=[&]() {
    json return_gxgYgvK=json({});
    return serialize_uint32_t(name.extendedDynamicState3TessellationDomainOrigin);}();return return_bGIvqDI;}();
result["members"]["extendedDynamicState3DepthClampEnable"]=[&]() {
    json return_krCCQVb=json({});
    return_krCCQVb=[&]() {
    json return_IgZUCpZ=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClampEnable);}();return return_krCCQVb;}();
result["members"]["extendedDynamicState3PolygonMode"]=[&]() {
    json return_nPWbHRK=json({});
    return_nPWbHRK=[&]() {
    json return_zZrYAMe=json({});
    return serialize_uint32_t(name.extendedDynamicState3PolygonMode);}();return return_nPWbHRK;}();
result["members"]["extendedDynamicState3RasterizationSamples"]=[&]() {
    json return_gpRZBbP=json({});
    return_gpRZBbP=[&]() {
    json return_pKnaBNt=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationSamples);}();return return_gpRZBbP;}();
result["members"]["extendedDynamicState3SampleMask"]=[&]() {
    json return_RRxSlrW=json({});
    return_RRxSlrW=[&]() {
    json return_ZlofuNQ=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleMask);}();return return_RRxSlrW;}();
result["members"]["extendedDynamicState3AlphaToCoverageEnable"]=[&]() {
    json return_ApORnMq=json({});
    return_ApORnMq=[&]() {
    json return_TaZRTRb=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToCoverageEnable);}();return return_ApORnMq;}();
result["members"]["extendedDynamicState3AlphaToOneEnable"]=[&]() {
    json return_dquvtef=json({});
    return_dquvtef=[&]() {
    json return_igJgmih=json({});
    return serialize_uint32_t(name.extendedDynamicState3AlphaToOneEnable);}();return return_dquvtef;}();
result["members"]["extendedDynamicState3LogicOpEnable"]=[&]() {
    json return_ItMIfqQ=json({});
    return_ItMIfqQ=[&]() {
    json return_NstlynI=json({});
    return serialize_uint32_t(name.extendedDynamicState3LogicOpEnable);}();return return_ItMIfqQ;}();
result["members"]["extendedDynamicState3ColorBlendEnable"]=[&]() {
    json return_dZdPuRR=json({});
    return_dZdPuRR=[&]() {
    json return_PureFrl=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEnable);}();return return_dZdPuRR;}();
result["members"]["extendedDynamicState3ColorBlendEquation"]=[&]() {
    json return_NRzAmBz=json({});
    return_NRzAmBz=[&]() {
    json return_uJnVoqz=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendEquation);}();return return_NRzAmBz;}();
result["members"]["extendedDynamicState3ColorWriteMask"]=[&]() {
    json return_vaqhBEB=json({});
    return_vaqhBEB=[&]() {
    json return_aAcQEkI=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorWriteMask);}();return return_vaqhBEB;}();
result["members"]["extendedDynamicState3RasterizationStream"]=[&]() {
    json return_GtZwtvg=json({});
    return_GtZwtvg=[&]() {
    json return_VtKhLMZ=json({});
    return serialize_uint32_t(name.extendedDynamicState3RasterizationStream);}();return return_GtZwtvg;}();
result["members"]["extendedDynamicState3ConservativeRasterizationMode"]=[&]() {
    json return_hFmLPbA=json({});
    return_hFmLPbA=[&]() {
    json return_wosTGfz=json({});
    return serialize_uint32_t(name.extendedDynamicState3ConservativeRasterizationMode);}();return return_hFmLPbA;}();
result["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]=[&]() {
    json return_pSFYewl=json({});
    return_pSFYewl=[&]() {
    json return_ofJSfoR=json({});
    return serialize_uint32_t(name.extendedDynamicState3ExtraPrimitiveOverestimationSize);}();return return_pSFYewl;}();
result["members"]["extendedDynamicState3DepthClipEnable"]=[&]() {
    json return_vnYOcle=json({});
    return_vnYOcle=[&]() {
    json return_thWqBJI=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipEnable);}();return return_vnYOcle;}();
result["members"]["extendedDynamicState3SampleLocationsEnable"]=[&]() {
    json return_HevALlD=json({});
    return_HevALlD=[&]() {
    json return_tDtRVYd=json({});
    return serialize_uint32_t(name.extendedDynamicState3SampleLocationsEnable);}();return return_HevALlD;}();
result["members"]["extendedDynamicState3ColorBlendAdvanced"]=[&]() {
    json return_fyTuVct=json({});
    return_fyTuVct=[&]() {
    json return_SEkfOxd=json({});
    return serialize_uint32_t(name.extendedDynamicState3ColorBlendAdvanced);}();return return_fyTuVct;}();
result["members"]["extendedDynamicState3ProvokingVertexMode"]=[&]() {
    json return_HHwvlKR=json({});
    return_HHwvlKR=[&]() {
    json return_MlZVexC=json({});
    return serialize_uint32_t(name.extendedDynamicState3ProvokingVertexMode);}();return return_HHwvlKR;}();
result["members"]["extendedDynamicState3LineRasterizationMode"]=[&]() {
    json return_xbmqgAx=json({});
    return_xbmqgAx=[&]() {
    json return_nLMUzib=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineRasterizationMode);}();return return_xbmqgAx;}();
result["members"]["extendedDynamicState3LineStippleEnable"]=[&]() {
    json return_PfNcTEN=json({});
    return_PfNcTEN=[&]() {
    json return_piToxmU=json({});
    return serialize_uint32_t(name.extendedDynamicState3LineStippleEnable);}();return return_PfNcTEN;}();
result["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]=[&]() {
    json return_ejEbtLb=json({});
    return_ejEbtLb=[&]() {
    json return_qehhXJT=json({});
    return serialize_uint32_t(name.extendedDynamicState3DepthClipNegativeOneToOne);}();return return_ejEbtLb;}();
result["members"]["extendedDynamicState3ViewportWScalingEnable"]=[&]() {
    json return_pgmmAqk=json({});
    return_pgmmAqk=[&]() {
    json return_EVkkWBQ=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportWScalingEnable);}();return return_pgmmAqk;}();
result["members"]["extendedDynamicState3ViewportSwizzle"]=[&]() {
    json return_IIJIETB=json({});
    return_IIJIETB=[&]() {
    json return_CFCrbli=json({});
    return serialize_uint32_t(name.extendedDynamicState3ViewportSwizzle);}();return return_IIJIETB;}();
result["members"]["extendedDynamicState3CoverageToColorEnable"]=[&]() {
    json return_gBMAvRv=json({});
    return_gBMAvRv=[&]() {
    json return_sMlKghO=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorEnable);}();return return_gBMAvRv;}();
result["members"]["extendedDynamicState3CoverageToColorLocation"]=[&]() {
    json return_dRGeaZT=json({});
    return_dRGeaZT=[&]() {
    json return_NtWreaa=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageToColorLocation);}();return return_dRGeaZT;}();
result["members"]["extendedDynamicState3CoverageModulationMode"]=[&]() {
    json return_SteQsZY=json({});
    return_SteQsZY=[&]() {
    json return_MnlMpdP=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationMode);}();return return_SteQsZY;}();
result["members"]["extendedDynamicState3CoverageModulationTableEnable"]=[&]() {
    json return_TjBjibi=json({});
    return_TjBjibi=[&]() {
    json return_HrUTOll=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTableEnable);}();return return_TjBjibi;}();
result["members"]["extendedDynamicState3CoverageModulationTable"]=[&]() {
    json return_nCRimPg=json({});
    return_nCRimPg=[&]() {
    json return_BKjZTDt=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageModulationTable);}();return return_nCRimPg;}();
result["members"]["extendedDynamicState3CoverageReductionMode"]=[&]() {
    json return_lzyvsYF=json({});
    return_lzyvsYF=[&]() {
    json return_HbZYAoQ=json({});
    return serialize_uint32_t(name.extendedDynamicState3CoverageReductionMode);}();return return_lzyvsYF;}();
result["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]=[&]() {
    json return_FnYVaaL=json({});
    return_FnYVaaL=[&]() {
    json return_mwizZzY=json({});
    return serialize_uint32_t(name.extendedDynamicState3RepresentativeFragmentTestEnable);}();return return_FnYVaaL;}();
result["members"]["extendedDynamicState3ShadingRateImageEnable"]=[&]() {
    json return_BJvSldX=json({});
    return_BJvSldX=[&]() {
    json return_POnDokE=json({});
    return serialize_uint32_t(name.extendedDynamicState3ShadingRateImageEnable);}();return return_BJvSldX;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3FeaturesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3FeaturesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.extendedDynamicState3TessellationDomainOrigin=deserialize_uint32_t(name["members"]["extendedDynamicState3TessellationDomainOrigin"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClampEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClampEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3PolygonMode=deserialize_uint32_t(name["members"]["extendedDynamicState3PolygonMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationSamples=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationSamples"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleMask=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToCoverageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToCoverageEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3AlphaToOneEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3AlphaToOneEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LogicOpEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LogicOpEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendEquation=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendEquation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorWriteMask=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorWriteMask"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RasterizationStream=deserialize_uint32_t(name["members"]["extendedDynamicState3RasterizationStream"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ConservativeRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ConservativeRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ExtraPrimitiveOverestimationSize=deserialize_uint32_t(name["members"]["extendedDynamicState3ExtraPrimitiveOverestimationSize"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3SampleLocationsEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3SampleLocationsEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ColorBlendAdvanced=deserialize_uint32_t(name["members"]["extendedDynamicState3ColorBlendAdvanced"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ProvokingVertexMode=deserialize_uint32_t(name["members"]["extendedDynamicState3ProvokingVertexMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineRasterizationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3LineRasterizationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3LineStippleEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3LineStippleEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3DepthClipNegativeOneToOne=deserialize_uint32_t(name["members"]["extendedDynamicState3DepthClipNegativeOneToOne"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportWScalingEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportWScalingEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ViewportSwizzle=deserialize_uint32_t(name["members"]["extendedDynamicState3ViewportSwizzle"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageToColorLocation=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageToColorLocation"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTableEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTableEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageModulationTable=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageModulationTable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3CoverageReductionMode=deserialize_uint32_t(name["members"]["extendedDynamicState3CoverageReductionMode"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3RepresentativeFragmentTestEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3RepresentativeFragmentTestEnable"]);}();}();
[&]() {
[&]() {
result.extendedDynamicState3ShadingRateImageEnable=deserialize_uint32_t(name["members"]["extendedDynamicState3ShadingRateImageEnable"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(VkPhysicalDeviceExtendedDynamicState3PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XLmCSLh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CIfsEyt=json({});
    
        if (name.pNext==NULL){
            return_CIfsEyt["null"]=true;
            return return_CIfsEyt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicPrimitiveTopologyUnrestricted"]=[&]() {
    json return_lxywABt=json({});
    return_lxywABt=[&]() {
    json return_SMmbVZs=json({});
    return serialize_uint32_t(name.dynamicPrimitiveTopologyUnrestricted);}();return return_lxywABt;}();
return result;}

    VkPhysicalDeviceExtendedDynamicState3PropertiesEXT deserialize_VkPhysicalDeviceExtendedDynamicState3PropertiesEXT(json name){
        auto result=VkPhysicalDeviceExtendedDynamicState3PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicPrimitiveTopologyUnrestricted=deserialize_uint32_t(name["members"]["dynamicPrimitiveTopologyUnrestricted"]);}();}();
return result;}

    json serialize_VkColorBlendEquationEXT(VkColorBlendEquationEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcColorBlendFactor"]=[&]() {
    json return_FCtgdAJ=json({});
    return serialize_VkBlendFactor(name.srcColorBlendFactor);}();
result["members"]["dstColorBlendFactor"]=[&]() {
    json return_ymTyywp=json({});
    return serialize_VkBlendFactor(name.dstColorBlendFactor);}();
result["members"]["colorBlendOp"]=[&]() {
    json return_JtUROEW=json({});
    return serialize_VkBlendOp(name.colorBlendOp);}();
result["members"]["srcAlphaBlendFactor"]=[&]() {
    json return_JAMvDfN=json({});
    return serialize_VkBlendFactor(name.srcAlphaBlendFactor);}();
result["members"]["dstAlphaBlendFactor"]=[&]() {
    json return_uOtPPmW=json({});
    return serialize_VkBlendFactor(name.dstAlphaBlendFactor);}();
result["members"]["alphaBlendOp"]=[&]() {
    json return_iChwoIS=json({});
    return serialize_VkBlendOp(name.alphaBlendOp);}();
return result;}

    VkColorBlendEquationEXT deserialize_VkColorBlendEquationEXT(json name){
        auto result=VkColorBlendEquationEXT();
    
[&]() {
result.srcColorBlendFactor=deserialize_VkBlendFactor(name["members"]["srcColorBlendFactor"]);}();
[&]() {
result.dstColorBlendFactor=deserialize_VkBlendFactor(name["members"]["dstColorBlendFactor"]);}();
[&]() {
result.colorBlendOp=deserialize_VkBlendOp(name["members"]["colorBlendOp"]);}();
[&]() {
result.srcAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["srcAlphaBlendFactor"]);}();
[&]() {
result.dstAlphaBlendFactor=deserialize_VkBlendFactor(name["members"]["dstAlphaBlendFactor"]);}();
[&]() {
result.alphaBlendOp=deserialize_VkBlendOp(name["members"]["alphaBlendOp"]);}();
return result;}

    json serialize_VkColorBlendAdvancedEXT(VkColorBlendAdvancedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["advancedBlendOp"]=[&]() {
    json return_cwuUBjD=json({});
    return serialize_VkBlendOp(name.advancedBlendOp);}();
result["members"]["srcPremultiplied"]=[&]() {
    json return_xtfYvwX=json({});
    return_xtfYvwX=[&]() {
    json return_TAMtYkx=json({});
    return serialize_uint32_t(name.srcPremultiplied);}();return return_xtfYvwX;}();
result["members"]["dstPremultiplied"]=[&]() {
    json return_vovORTN=json({});
    return_vovORTN=[&]() {
    json return_axWvSJX=json({});
    return serialize_uint32_t(name.dstPremultiplied);}();return return_vovORTN;}();
result["members"]["blendOverlap"]=[&]() {
    json return_hLsbBEi=json({});
    return serialize_VkBlendOverlapEXT(name.blendOverlap);}();
result["members"]["clampResults"]=[&]() {
    json return_sOJBGPS=json({});
    return_sOJBGPS=[&]() {
    json return_QlwvTQr=json({});
    return serialize_uint32_t(name.clampResults);}();return return_sOJBGPS;}();
return result;}

    VkColorBlendAdvancedEXT deserialize_VkColorBlendAdvancedEXT(json name){
        auto result=VkColorBlendAdvancedEXT();
    
[&]() {
result.advancedBlendOp=deserialize_VkBlendOp(name["members"]["advancedBlendOp"]);}();
[&]() {
[&]() {
result.srcPremultiplied=deserialize_uint32_t(name["members"]["srcPremultiplied"]);}();}();
[&]() {
[&]() {
result.dstPremultiplied=deserialize_uint32_t(name["members"]["dstPremultiplied"]);}();}();
[&]() {
result.blendOverlap=deserialize_VkBlendOverlapEXT(name["members"]["blendOverlap"]);}();
[&]() {
[&]() {
result.clampResults=deserialize_uint32_t(name["members"]["clampResults"]);}();}();
return result;}

    json serialize_VkRenderPassTransformBeginInfoQCOM(VkRenderPassTransformBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OGRRCKt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LQXpqdO=json({});
    
        if (name.pNext==NULL){
            return_LQXpqdO["null"]=true;
            return return_LQXpqdO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_zcxMXVY=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkRenderPassTransformBeginInfoQCOM deserialize_VkRenderPassTransformBeginInfoQCOM(json name){
        auto result=VkRenderPassTransformBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCopyCommandTransformInfoQCOM(VkCopyCommandTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tDHPgbX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZsNKnZs=json({});
    
        if (name.pNext==NULL){
            return_ZsNKnZs["null"]=true;
            return return_ZsNKnZs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_XLrWooG=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
return result;}

    VkCopyCommandTransformInfoQCOM deserialize_VkCopyCommandTransformInfoQCOM(json name){
        auto result=VkCopyCommandTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cgUYvbv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cgUYvbv=NULL;
        }
    temp_cgUYvbv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cgUYvbv;}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(VkCommandBufferInheritanceRenderPassTransformInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HGmyTYZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qZiSdSj=json({});
    
        if (name.pNext==NULL){
            return_qZiSdSj["null"]=true;
            return return_qZiSdSj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["transform"]=[&]() {
    json return_fKcHxPE=json({});
    return serialize_VkSurfaceTransformFlagBitsKHR(name.transform);}();
result["members"]["renderArea"]=[&]() {
    json return_SrKWLpi=json({});
    return serialize_VkRect2D(name.renderArea);}();
return result;}

    VkCommandBufferInheritanceRenderPassTransformInfoQCOM deserialize_VkCommandBufferInheritanceRenderPassTransformInfoQCOM(json name){
        auto result=VkCommandBufferInheritanceRenderPassTransformInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.transform=deserialize_VkSurfaceTransformFlagBitsKHR(name["members"]["transform"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
return result;}

    json serialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(VkPhysicalDeviceDiagnosticsConfigFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kPjXgrZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mwcBwhv=json({});
    
        if (name.pNext==NULL){
            return_mwcBwhv["null"]=true;
            return return_mwcBwhv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["diagnosticsConfig"]=[&]() {
    json return_UVeiZAj=json({});
    return_UVeiZAj=[&]() {
    json return_ipqOqSa=json({});
    return serialize_uint32_t(name.diagnosticsConfig);}();return return_UVeiZAj;}();
return result;}

    VkPhysicalDeviceDiagnosticsConfigFeaturesNV deserialize_VkPhysicalDeviceDiagnosticsConfigFeaturesNV(json name){
        auto result=VkPhysicalDeviceDiagnosticsConfigFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.diagnosticsConfig=deserialize_uint32_t(name["members"]["diagnosticsConfig"]);}();}();
return result;}

    json serialize_VkDeviceDiagnosticsConfigCreateInfoNV(VkDeviceDiagnosticsConfigCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZMTRVuP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lLrGMCF=json({});
    
        if (name.pNext==NULL){
            return_lLrGMCF["null"]=true;
            return return_lLrGMCF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RoyoXZt=json({});
    return serialize_VkDeviceDiagnosticsConfigFlagsNV(name.flags);}();
return result;}

    VkDeviceDiagnosticsConfigCreateInfoNV deserialize_VkDeviceDiagnosticsConfigCreateInfoNV(json name){
        auto result=VkDeviceDiagnosticsConfigCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lhtBtYv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lhtBtYv=NULL;
        }
    temp_lhtBtYv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lhtBtYv;}();
[&]() {
result.flags=deserialize_VkDeviceDiagnosticsConfigFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YvBxGZv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SOxqjzB=json({});
    
        if (name.pNext==NULL){
            return_SOxqjzB["null"]=true;
            return return_SOxqjzB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_CGPLxRV=json({});
    return_CGPLxRV=[&]() {
    json return_aeBWXsD=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_CGPLxRV;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bdpVsGN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GkipblH=json({});
    
        if (name.pNext==NULL){
            return_GkipblH["null"]=true;
            return return_GkipblH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderZeroInitializeWorkgroupMemory"]=[&]() {
    json return_YltXcEy=json({});
    return_YltXcEy=[&]() {
    json return_ZkqLXdJ=json({});
    return serialize_uint32_t(name.shaderZeroInitializeWorkgroupMemory);}();return return_YltXcEy;}();
return result;}

    VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR deserialize_VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR(json name){
        auto result=VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderZeroInitializeWorkgroupMemory=deserialize_uint32_t(name["members"]["shaderZeroInitializeWorkgroupMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FDCpSBx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UEoddVe=json({});
    
        if (name.pNext==NULL){
            return_UEoddVe["null"]=true;
            return return_UEoddVe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderSubgroupUniformControlFlow"]=[&]() {
    json return_uFoLWcm=json({});
    return_uFoLWcm=[&]() {
    json return_mesxztd=json({});
    return serialize_uint32_t(name.shaderSubgroupUniformControlFlow);}();return return_uFoLWcm;}();
return result;}

    VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR deserialize_VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderSubgroupUniformControlFlow=deserialize_uint32_t(name["members"]["shaderSubgroupUniformControlFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2FeaturesEXT(VkPhysicalDeviceRobustness2FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cbHgbWu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hLVoGOh=json({});
    
        if (name.pNext==NULL){
            return_hLVoGOh["null"]=true;
            return return_hLVoGOh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustBufferAccess2"]=[&]() {
    json return_ZPeIniY=json({});
    return_ZPeIniY=[&]() {
    json return_HrKToTa=json({});
    return serialize_uint32_t(name.robustBufferAccess2);}();return return_ZPeIniY;}();
result["members"]["robustImageAccess2"]=[&]() {
    json return_LXvfMWe=json({});
    return_LXvfMWe=[&]() {
    json return_JStKcWf=json({});
    return serialize_uint32_t(name.robustImageAccess2);}();return return_LXvfMWe;}();
result["members"]["nullDescriptor"]=[&]() {
    json return_osZIHGV=json({});
    return_osZIHGV=[&]() {
    json return_zAraSTw=json({});
    return serialize_uint32_t(name.nullDescriptor);}();return return_osZIHGV;}();
return result;}

    VkPhysicalDeviceRobustness2FeaturesEXT deserialize_VkPhysicalDeviceRobustness2FeaturesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustBufferAccess2=deserialize_uint32_t(name["members"]["robustBufferAccess2"]);}();}();
[&]() {
[&]() {
result.robustImageAccess2=deserialize_uint32_t(name["members"]["robustImageAccess2"]);}();}();
[&]() {
[&]() {
result.nullDescriptor=deserialize_uint32_t(name["members"]["nullDescriptor"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRobustness2PropertiesEXT(VkPhysicalDeviceRobustness2PropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iOWqUVM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NDaNkBQ=json({});
    
        if (name.pNext==NULL){
            return_NDaNkBQ["null"]=true;
            return return_NDaNkBQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustStorageBufferAccessSizeAlignment"]=[&]() {
    json return_jhEvIaq=json({});
    return_jhEvIaq=[&]() {
    json return_WDkYilO=json({});
    return serialize_uint64_t(name.robustStorageBufferAccessSizeAlignment);}();return return_jhEvIaq;}();
result["members"]["robustUniformBufferAccessSizeAlignment"]=[&]() {
    json return_dbHHeQM=json({});
    return_dbHHeQM=[&]() {
    json return_frDVvZq=json({});
    return serialize_uint64_t(name.robustUniformBufferAccessSizeAlignment);}();return return_dbHHeQM;}();
return result;}

    VkPhysicalDeviceRobustness2PropertiesEXT deserialize_VkPhysicalDeviceRobustness2PropertiesEXT(json name){
        auto result=VkPhysicalDeviceRobustness2PropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustStorageBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustStorageBufferAccessSizeAlignment"]);}();}();
[&]() {
[&]() {
result.robustUniformBufferAccessSizeAlignment=deserialize_uint64_t(name["members"]["robustUniformBufferAccessSizeAlignment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeatures(VkPhysicalDeviceImageRobustnessFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vUExZfi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DCQfEsw=json({});
    
        if (name.pNext==NULL){
            return_DCQfEsw["null"]=true;
            return return_DCQfEsw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_oQCVtsc=json({});
    return_oQCVtsc=[&]() {
    json return_NQXZbwE=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_oQCVtsc;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeatures deserialize_VkPhysicalDeviceImageRobustnessFeatures(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(VkPhysicalDeviceImageRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LtqDBKQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dIfxwrg=json({});
    
        if (name.pNext==NULL){
            return_dIfxwrg["null"]=true;
            return return_dIfxwrg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["robustImageAccess"]=[&]() {
    json return_WfAfXdH=json({});
    return_WfAfXdH=[&]() {
    json return_AzlqbDh=json({});
    return serialize_uint32_t(name.robustImageAccess);}();return return_WfAfXdH;}();
return result;}

    VkPhysicalDeviceImageRobustnessFeaturesEXT deserialize_VkPhysicalDeviceImageRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.robustImageAccess=deserialize_uint32_t(name["members"]["robustImageAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NHtqVPW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kJeTvzT=json({});
    
        if (name.pNext==NULL){
            return_kJeTvzT["null"]=true;
            return return_kJeTvzT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["workgroupMemoryExplicitLayout"]=[&]() {
    json return_rqvEuRU=json({});
    return_rqvEuRU=[&]() {
    json return_TVgTzVn=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout);}();return return_rqvEuRU;}();
result["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]=[&]() {
    json return_nwkzPQd=json({});
    return_nwkzPQd=[&]() {
    json return_MUbhVfq=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayoutScalarBlockLayout);}();return return_nwkzPQd;}();
result["members"]["workgroupMemoryExplicitLayout8BitAccess"]=[&]() {
    json return_sjNbWnp=json({});
    return_sjNbWnp=[&]() {
    json return_oJoufMw=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout8BitAccess);}();return return_sjNbWnp;}();
result["members"]["workgroupMemoryExplicitLayout16BitAccess"]=[&]() {
    json return_FhxEYwD=json({});
    return_FhxEYwD=[&]() {
    json return_MvTgTuq=json({});
    return serialize_uint32_t(name.workgroupMemoryExplicitLayout16BitAccess);}();return return_FhxEYwD;}();
return result;}

    VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR deserialize_VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR(json name){
        auto result=VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayoutScalarBlockLayout=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayoutScalarBlockLayout"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout8BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout8BitAccess"]);}();}();
[&]() {
[&]() {
result.workgroupMemoryExplicitLayout16BitAccess=deserialize_uint32_t(name["members"]["workgroupMemoryExplicitLayout16BitAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDevice4444FormatsFeaturesEXT(VkPhysicalDevice4444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dtCkkOw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_siTasuB=json({});
    
        if (name.pNext==NULL){
            return_siTasuB["null"]=true;
            return return_siTasuB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatA4R4G4B4"]=[&]() {
    json return_umryqWk=json({});
    return_umryqWk=[&]() {
    json return_YHVVFqf=json({});
    return serialize_uint32_t(name.formatA4R4G4B4);}();return return_umryqWk;}();
result["members"]["formatA4B4G4R4"]=[&]() {
    json return_NTTuhbf=json({});
    return_NTTuhbf=[&]() {
    json return_dcXkPvR=json({});
    return serialize_uint32_t(name.formatA4B4G4R4);}();return return_NTTuhbf;}();
return result;}

    VkPhysicalDevice4444FormatsFeaturesEXT deserialize_VkPhysicalDevice4444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDevice4444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatA4R4G4B4=deserialize_uint32_t(name["members"]["formatA4R4G4B4"]);}();}();
[&]() {
[&]() {
result.formatA4B4G4R4=deserialize_uint32_t(name["members"]["formatA4B4G4R4"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(VkPhysicalDeviceSubpassShadingFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GhkcZnB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_epLOzfl=json({});
    
        if (name.pNext==NULL){
            return_epLOzfl["null"]=true;
            return return_epLOzfl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassShading"]=[&]() {
    json return_RredeAY=json({});
    return_RredeAY=[&]() {
    json return_UJMqrbB=json({});
    return serialize_uint32_t(name.subpassShading);}();return return_RredeAY;}();
return result;}

    VkPhysicalDeviceSubpassShadingFeaturesHUAWEI deserialize_VkPhysicalDeviceSubpassShadingFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceSubpassShadingFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassShading=deserialize_uint32_t(name["members"]["subpassShading"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aqUJnxz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zQZqHaa=json({});
    
        if (name.pNext==NULL){
            return_zQZqHaa["null"]=true;
            return return_zQZqHaa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["clustercullingShader"]=[&]() {
    json return_bTekWem=json({});
    return_bTekWem=[&]() {
    json return_TjsCcJf=json({});
    return serialize_uint32_t(name.clustercullingShader);}();return return_bTekWem;}();
result["members"]["multiviewClusterCullingShader"]=[&]() {
    json return_pTnPhWB=json({});
    return_pTnPhWB=[&]() {
    json return_uvuLtqx=json({});
    return serialize_uint32_t(name.multiviewClusterCullingShader);}();return return_pTnPhWB;}();
return result;}

    VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI deserialize_VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI(json name){
        auto result=VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.clustercullingShader=deserialize_uint32_t(name["members"]["clustercullingShader"]);}();}();
[&]() {
[&]() {
result.multiviewClusterCullingShader=deserialize_uint32_t(name["members"]["multiviewClusterCullingShader"]);}();}();
return result;}

    json serialize_VkBufferCopy2(VkBufferCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kVSCVzn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fpTJVsc=json({});
    
        if (name.pNext==NULL){
            return_fpTJVsc["null"]=true;
            return return_fpTJVsc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_UEbQCEu=json({});
    return_UEbQCEu=[&]() {
    json return_qIrQbFa=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_UEbQCEu;}();
result["members"]["dstOffset"]=[&]() {
    json return_OnXhaQP=json({});
    return_OnXhaQP=[&]() {
    json return_pvvwSPf=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_OnXhaQP;}();
result["members"]["size"]=[&]() {
    json return_mzUNMsI=json({});
    return_mzUNMsI=[&]() {
    json return_JbUQQSo=json({});
    return serialize_uint64_t(name.size);}();return return_mzUNMsI;}();
return result;}

    VkBufferCopy2 deserialize_VkBufferCopy2(json name){
        auto result=VkBufferCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YIXSQGk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YIXSQGk=NULL;
        }
    temp_YIXSQGk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YIXSQGk;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferCopy2KHR(VkBufferCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JYxulrz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HikzqgW=json({});
    
        if (name.pNext==NULL){
            return_HikzqgW["null"]=true;
            return return_HikzqgW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcOffset"]=[&]() {
    json return_uazwfTe=json({});
    return_uazwfTe=[&]() {
    json return_lhTtBmJ=json({});
    return serialize_uint64_t(name.srcOffset);}();return return_uazwfTe;}();
result["members"]["dstOffset"]=[&]() {
    json return_mpFZscK=json({});
    return_mpFZscK=[&]() {
    json return_eFRCKtE=json({});
    return serialize_uint64_t(name.dstOffset);}();return return_mpFZscK;}();
result["members"]["size"]=[&]() {
    json return_cNNwHKG=json({});
    return_cNNwHKG=[&]() {
    json return_KmFXRRx=json({});
    return serialize_uint64_t(name.size);}();return return_cNNwHKG;}();
return result;}

    VkBufferCopy2KHR deserialize_VkBufferCopy2KHR(json name){
        auto result=VkBufferCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dQmyMiU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dQmyMiU=NULL;
        }
    temp_dQmyMiU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dQmyMiU;}();
[&]() {
[&]() {
result.srcOffset=deserialize_uint64_t(name["members"]["srcOffset"]);}();}();
[&]() {
[&]() {
result.dstOffset=deserialize_uint64_t(name["members"]["dstOffset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkImageCopy2(VkImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xMAXamM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tWTkEmU=json({});
    
        if (name.pNext==NULL){
            return_tWTkEmU["null"]=true;
            return return_tWTkEmU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_ZMrlftU=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_FkHSDHP=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_oyMBBBa=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_UhvyyLS=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_neHcGsk=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2 deserialize_VkImageCopy2(json name){
        auto result=VkImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FCCZQmB;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FCCZQmB=NULL;
        }
    temp_FCCZQmB=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FCCZQmB;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageCopy2KHR(VkImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LTBCchk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ihXNfrA=json({});
    
        if (name.pNext==NULL){
            return_ihXNfrA["null"]=true;
            return return_ihXNfrA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_VIjSfRF=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_bCRYzfn=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_CwiwgDL=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_gITJOIE=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_otAMOgv=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageCopy2KHR deserialize_VkImageCopy2KHR(json name){
        auto result=VkImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tnNdipx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tnNdipx=NULL;
        }
    temp_tnNdipx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tnNdipx;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageBlit2(VkImageBlit2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MiAbofp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QEdYRMP=json({});
    
        if (name.pNext==NULL){
            return_QEdYRMP["null"]=true;
            return return_QEdYRMP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_KsIFWiE=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_eAiJjLL=json({});
    
        return_eAiJjLL["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_PVOZQPF=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_eAiJjLL["members"][std::to_string(i)].push_back(temp);
        }
        return return_eAiJjLL;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_OejhyKU=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_BKUYCnk=json({});
    
        return_BKUYCnk["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_HQQEgNo=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_BKUYCnk["members"][std::to_string(i)].push_back(temp);
        }
        return return_BKUYCnk;
        }();
return result;}

    VkImageBlit2 deserialize_VkImageBlit2(json name){
        auto result=VkImageBlit2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PwfItTK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PwfItTK=NULL;
        }
    temp_PwfItTK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PwfItTK;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int cAhuhVJ=0; cAhuhVJ < 2; cAhuhVJ++){
            [&]() {
result.srcOffsets[cAhuhVJ]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][cAhuhVJ]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int lhvSrxn=0; lhvSrxn < 2; lhvSrxn++){
            [&]() {
result.dstOffsets[lhvSrxn]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][lhvSrxn]);}();;
        }
        }();
return result;}

    json serialize_VkImageBlit2KHR(VkImageBlit2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YuNZkVV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GTgScUs=json({});
    
        if (name.pNext==NULL){
            return_GTgScUs["null"]=true;
            return return_GTgScUs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_uSGtvCB=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffsets"]=[&]() {
    json return_gScecaQ=json({});
    
        return_gScecaQ["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_ypMiwnf=json({});
    return serialize_VkOffset3D(name.srcOffsets[i]);}();
            return_gScecaQ["members"][std::to_string(i)].push_back(temp);
        }
        return return_gScecaQ;
        }();
result["members"]["dstSubresource"]=[&]() {
    json return_lGeRGvm=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffsets"]=[&]() {
    json return_CzvHTgd=json({});
    
        return_CzvHTgd["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_GArukRI=json({});
    return serialize_VkOffset3D(name.dstOffsets[i]);}();
            return_CzvHTgd["members"][std::to_string(i)].push_back(temp);
        }
        return return_CzvHTgd;
        }();
return result;}

    VkImageBlit2KHR deserialize_VkImageBlit2KHR(json name){
        auto result=VkImageBlit2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DEgaoeg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DEgaoeg=NULL;
        }
    temp_DEgaoeg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DEgaoeg;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {

        for (int xfFydvH=0; xfFydvH < 2; xfFydvH++){
            [&]() {
result.srcOffsets[xfFydvH]=deserialize_VkOffset3D(name["members"]["srcOffsets"]["members"][xfFydvH]);}();;
        }
        }();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {

        for (int NYSGFAM=0; NYSGFAM < 2; NYSGFAM++){
            [&]() {
result.dstOffsets[NYSGFAM]=deserialize_VkOffset3D(name["members"]["dstOffsets"]["members"][NYSGFAM]);}();;
        }
        }();
return result;}

    json serialize_VkBufferImageCopy2(VkBufferImageCopy2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tVqVLjT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YXmhIir=json({});
    
        if (name.pNext==NULL){
            return_YXmhIir["null"]=true;
            return return_YXmhIir;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_ilcXdRR=json({});
    return_ilcXdRR=[&]() {
    json return_ZyKHiwh=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_ilcXdRR;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_jbPJkfR=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_oVHgcfp=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_kGyQjnR=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_xssNFSi=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_UajxcBJ=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2 deserialize_VkBufferImageCopy2(json name){
        auto result=VkBufferImageCopy2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ipRKecg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ipRKecg=NULL;
        }
    temp_ipRKecg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ipRKecg;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkBufferImageCopy2KHR(VkBufferImageCopy2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GYjrtJV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oWULLOE=json({});
    
        if (name.pNext==NULL){
            return_oWULLOE["null"]=true;
            return return_oWULLOE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["bufferOffset"]=[&]() {
    json return_kbiYtfh=json({});
    return_kbiYtfh=[&]() {
    json return_faRJbXC=json({});
    return serialize_uint64_t(name.bufferOffset);}();return return_kbiYtfh;}();
result["members"]["bufferRowLength"]=[&]() {
    json return_cBkSsWU=json({});
    return serialize_uint32_t(name.bufferRowLength);}();
result["members"]["bufferImageHeight"]=[&]() {
    json return_CBUfaQX=json({});
    return serialize_uint32_t(name.bufferImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_yeoYKXH=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_ROIPtzz=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_EKdNVfd=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkBufferImageCopy2KHR deserialize_VkBufferImageCopy2KHR(json name){
        auto result=VkBufferImageCopy2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qzJRNxD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qzJRNxD=NULL;
        }
    temp_qzJRNxD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qzJRNxD;}();
[&]() {
[&]() {
result.bufferOffset=deserialize_uint64_t(name["members"]["bufferOffset"]);}();}();
[&]() {
result.bufferRowLength=deserialize_uint32_t(name["members"]["bufferRowLength"]);}();
[&]() {
result.bufferImageHeight=deserialize_uint32_t(name["members"]["bufferImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageResolve2(VkImageResolve2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BvXmbhv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IAQunYz=json({});
    
        if (name.pNext==NULL){
            return_IAQunYz["null"]=true;
            return return_IAQunYz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_HxNDBVS=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_nSrzbLq=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_KNArkqr=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_ZmemndY=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_LHzPoWk=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2 deserialize_VkImageResolve2(json name){
        auto result=VkImageResolve2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HNeWZWq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HNeWZWq=NULL;
        }
    temp_HNeWZWq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HNeWZWq;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkImageResolve2KHR(VkImageResolve2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JMvceUz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ZKzEmMs=json({});
    
        if (name.pNext==NULL){
            return_ZKzEmMs["null"]=true;
            return return_ZKzEmMs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcSubresource"]=[&]() {
    json return_BmsTsCC=json({});
    return serialize_VkImageSubresourceLayers(name.srcSubresource);}();
result["members"]["srcOffset"]=[&]() {
    json return_FddRAzV=json({});
    return serialize_VkOffset3D(name.srcOffset);}();
result["members"]["dstSubresource"]=[&]() {
    json return_OXqXvAG=json({});
    return serialize_VkImageSubresourceLayers(name.dstSubresource);}();
result["members"]["dstOffset"]=[&]() {
    json return_vjjemua=json({});
    return serialize_VkOffset3D(name.dstOffset);}();
result["members"]["extent"]=[&]() {
    json return_AKCyyQT=json({});
    return serialize_VkExtent3D(name.extent);}();
return result;}

    VkImageResolve2KHR deserialize_VkImageResolve2KHR(json name){
        auto result=VkImageResolve2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fOAQYlw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fOAQYlw=NULL;
        }
    temp_fOAQYlw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fOAQYlw;}();
[&]() {
result.srcSubresource=deserialize_VkImageSubresourceLayers(name["members"]["srcSubresource"]);}();
[&]() {
result.srcOffset=deserialize_VkOffset3D(name["members"]["srcOffset"]);}();
[&]() {
result.dstSubresource=deserialize_VkImageSubresourceLayers(name["members"]["dstSubresource"]);}();
[&]() {
result.dstOffset=deserialize_VkOffset3D(name["members"]["dstOffset"]);}();
[&]() {
result.extent=deserialize_VkExtent3D(name["members"]["extent"]);}();
return result;}

    json serialize_VkCopyBufferInfo2(VkCopyBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WCWchES=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GnuWnxJ=json({});
    
        if (name.pNext==NULL){
            return_GnuWnxJ["null"]=true;
            return return_GnuWnxJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_pEPToBA=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_QCIwoNu=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_nFPCQfF=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_uBholiH=json({});
    
        if (name.pRegions==NULL){
            return_uBholiH["null"]=true;
            return return_uBholiH;
        }
        
        return_uBholiH["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_qvefsVG=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_uBholiH["members"][std::to_string(i)].push_back(temp);
        }
        return return_uBholiH;
        }();
return result;}

    VkCopyBufferInfo2 deserialize_VkCopyBufferInfo2(json name){
        auto result=VkCopyBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XFXctVi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XFXctVi=NULL;
        }
    temp_XFXctVi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XFXctVi;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_SZNhQZe;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_SZNhQZe=NULL;
        }
    temp_SZNhQZe=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int ngUSTER=0; ngUSTER < result.regionCount; ngUSTER++){
            [&]() {
temp_SZNhQZe[ngUSTER]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][ngUSTER]);}();;
        }
        }();result.pRegions=temp_SZNhQZe;}();
return result;}

    json serialize_VkCopyBufferInfo2KHR(VkCopyBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fRFkbAZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VicGbtJ=json({});
    
        if (name.pNext==NULL){
            return_VicGbtJ["null"]=true;
            return return_VicGbtJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_WzEXIcX=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstBuffer"]=[&]() {
    json return_jbHrFtH=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_bzmiyOe=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_ltxHXFh=json({});
    
        if (name.pRegions==NULL){
            return_ltxHXFh["null"]=true;
            return return_ltxHXFh;
        }
        
        return_ltxHXFh["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_hwoLbvI=json({});
    return serialize_VkBufferCopy2(name.pRegions[i]);}();
            return_ltxHXFh["members"][std::to_string(i)].push_back(temp);
        }
        return return_ltxHXFh;
        }();
return result;}

    VkCopyBufferInfo2KHR deserialize_VkCopyBufferInfo2KHR(json name){
        auto result=VkCopyBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_dUsaHHb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_dUsaHHb=NULL;
        }
    temp_dUsaHHb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_dUsaHHb;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferCopy2* temp_SrGjKJL;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_SrGjKJL=NULL;
        }
    temp_SrGjKJL=(VkBufferCopy2*)malloc(result.regionCount*sizeof(VkBufferCopy2));
        for (int gJoQNCg=0; gJoQNCg < result.regionCount; gJoQNCg++){
            [&]() {
temp_SrGjKJL[gJoQNCg]=deserialize_VkBufferCopy2(name["members"]["pRegions"]["members"][gJoQNCg]);}();;
        }
        }();result.pRegions=temp_SrGjKJL;}();
return result;}

    json serialize_VkCopyImageInfo2(VkCopyImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iwCPKTb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mQwjkkg=json({});
    
        if (name.pNext==NULL){
            return_mQwjkkg["null"]=true;
            return return_mQwjkkg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_jFbTikM=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_kJjPqKE=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_ddplJnK=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_UZXFTSR=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_jpwGXYL=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_NMlDZee=json({});
    
        if (name.pRegions==NULL){
            return_NMlDZee["null"]=true;
            return return_NMlDZee;
        }
        
        return_NMlDZee["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_LNEEKZQ=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_NMlDZee["members"][std::to_string(i)].push_back(temp);
        }
        return return_NMlDZee;
        }();
return result;}

    VkCopyImageInfo2 deserialize_VkCopyImageInfo2(json name){
        auto result=VkCopyImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_RLohVSw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_RLohVSw=NULL;
        }
    temp_RLohVSw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_RLohVSw;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_JucCbbb;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_JucCbbb=NULL;
        }
    temp_JucCbbb=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int WssAIDQ=0; WssAIDQ < result.regionCount; WssAIDQ++){
            [&]() {
temp_JucCbbb[WssAIDQ]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][WssAIDQ]);}();;
        }
        }();result.pRegions=temp_JucCbbb;}();
return result;}

    json serialize_VkCopyImageInfo2KHR(VkCopyImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IGSShqE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SidjduN=json({});
    
        if (name.pNext==NULL){
            return_SidjduN["null"]=true;
            return return_SidjduN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_sQDKedf=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_TJmirQQ=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_PlKVuHa=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_yfgmAyQ=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_MiZjlbd=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_yJHhyRo=json({});
    
        if (name.pRegions==NULL){
            return_yJHhyRo["null"]=true;
            return return_yJHhyRo;
        }
        
        return_yJHhyRo["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_YKwAMDT=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_yJHhyRo["members"][std::to_string(i)].push_back(temp);
        }
        return return_yJHhyRo;
        }();
return result;}

    VkCopyImageInfo2KHR deserialize_VkCopyImageInfo2KHR(json name){
        auto result=VkCopyImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AJaIidM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AJaIidM=NULL;
        }
    temp_AJaIidM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AJaIidM;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_EYbnikp;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_EYbnikp=NULL;
        }
    temp_EYbnikp=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int tqvEzoT=0; tqvEzoT < result.regionCount; tqvEzoT++){
            [&]() {
temp_EYbnikp[tqvEzoT]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][tqvEzoT]);}();;
        }
        }();result.pRegions=temp_EYbnikp;}();
return result;}

    json serialize_VkBlitImageInfo2(VkBlitImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZgdXLTG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mnlUyUg=json({});
    
        if (name.pNext==NULL){
            return_mnlUyUg["null"]=true;
            return return_mnlUyUg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_TFBmUjd=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_dRNlfCs=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_NNdBtQZ=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_UEzloCb=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_EPZnyIG=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_bGgTzaV=json({});
    
        if (name.pRegions==NULL){
            return_bGgTzaV["null"]=true;
            return return_bGgTzaV;
        }
        
        return_bGgTzaV["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_xTVmqxl=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_bGgTzaV["members"][std::to_string(i)].push_back(temp);
        }
        return return_bGgTzaV;
        }();
result["members"]["filter"]=[&]() {
    json return_lJUQFoS=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2 deserialize_VkBlitImageInfo2(json name){
        auto result=VkBlitImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xOwkTsS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xOwkTsS=NULL;
        }
    temp_xOwkTsS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xOwkTsS;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_lPUshNt;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_lPUshNt=NULL;
        }
    temp_lPUshNt=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int XesmfIF=0; XesmfIF < result.regionCount; XesmfIF++){
            [&]() {
temp_lPUshNt[XesmfIF]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][XesmfIF]);}();;
        }
        }();result.pRegions=temp_lPUshNt;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkBlitImageInfo2KHR(VkBlitImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VMABySX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jLQbqlj=json({});
    
        if (name.pNext==NULL){
            return_jLQbqlj["null"]=true;
            return return_jLQbqlj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_bHSNYHp=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_QchIMWM=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_hyEmlVz=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_jRTVfhH=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_KVoIBQk=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_BIrcjrW=json({});
    
        if (name.pRegions==NULL){
            return_BIrcjrW["null"]=true;
            return return_BIrcjrW;
        }
        
        return_BIrcjrW["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_QAJEOSH=json({});
    return serialize_VkImageBlit2(name.pRegions[i]);}();
            return_BIrcjrW["members"][std::to_string(i)].push_back(temp);
        }
        return return_BIrcjrW;
        }();
result["members"]["filter"]=[&]() {
    json return_TzlyqIR=json({});
    return serialize_VkFilter(name.filter);}();
return result;}

    VkBlitImageInfo2KHR deserialize_VkBlitImageInfo2KHR(json name){
        auto result=VkBlitImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sHvUPyt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sHvUPyt=NULL;
        }
    temp_sHvUPyt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sHvUPyt;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageBlit2* temp_juAVyZz;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_juAVyZz=NULL;
        }
    temp_juAVyZz=(VkImageBlit2*)malloc(result.regionCount*sizeof(VkImageBlit2));
        for (int NHdwoeo=0; NHdwoeo < result.regionCount; NHdwoeo++){
            [&]() {
temp_juAVyZz[NHdwoeo]=deserialize_VkImageBlit2(name["members"]["pRegions"]["members"][NHdwoeo]);}();;
        }
        }();result.pRegions=temp_juAVyZz;}();
[&]() {
result.filter=deserialize_VkFilter(name["members"]["filter"]);}();
return result;}

    json serialize_VkCopyBufferToImageInfo2(VkCopyBufferToImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IeQqDoJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mPuoFDv=json({});
    
        if (name.pNext==NULL){
            return_mPuoFDv["null"]=true;
            return return_mPuoFDv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_IzOTwYg=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_zFSgZLX=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_tPEjJBk=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_coGCeHW=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_QPAvkEa=json({});
    
        if (name.pRegions==NULL){
            return_QPAvkEa["null"]=true;
            return return_QPAvkEa;
        }
        
        return_QPAvkEa["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_esfDyix=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_QPAvkEa["members"][std::to_string(i)].push_back(temp);
        }
        return return_QPAvkEa;
        }();
return result;}

    VkCopyBufferToImageInfo2 deserialize_VkCopyBufferToImageInfo2(json name){
        auto result=VkCopyBufferToImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_juSHwLK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_juSHwLK=NULL;
        }
    temp_juSHwLK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_juSHwLK;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_OPHYmEj;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_OPHYmEj=NULL;
        }
    temp_OPHYmEj=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int MbNZAiW=0; MbNZAiW < result.regionCount; MbNZAiW++){
            [&]() {
temp_OPHYmEj[MbNZAiW]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][MbNZAiW]);}();;
        }
        }();result.pRegions=temp_OPHYmEj;}();
return result;}

    json serialize_VkCopyBufferToImageInfo2KHR(VkCopyBufferToImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BXYKlJA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FiuQFQH=json({});
    
        if (name.pNext==NULL){
            return_FiuQFQH["null"]=true;
            return return_FiuQFQH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcBuffer"]=[&]() {
    json return_DmWcYeg=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["dstImage"]=[&]() {
    json return_ChTasaG=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_JoNeOyF=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_asiylUk=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_yRKKCOn=json({});
    
        if (name.pRegions==NULL){
            return_yRKKCOn["null"]=true;
            return return_yRKKCOn;
        }
        
        return_yRKKCOn["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_ILzOMMu=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_yRKKCOn["members"][std::to_string(i)].push_back(temp);
        }
        return return_yRKKCOn;
        }();
return result;}

    VkCopyBufferToImageInfo2KHR deserialize_VkCopyBufferToImageInfo2KHR(json name){
        auto result=VkCopyBufferToImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_bzTRubS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_bzTRubS=NULL;
        }
    temp_bzTRubS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_bzTRubS;}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_LCQPiol;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_LCQPiol=NULL;
        }
    temp_LCQPiol=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int wwnWnfK=0; wwnWnfK < result.regionCount; wwnWnfK++){
            [&]() {
temp_LCQPiol[wwnWnfK]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][wwnWnfK]);}();;
        }
        }();result.pRegions=temp_LCQPiol;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2(VkCopyImageToBufferInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YXnMoGO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XaxJyHd=json({});
    
        if (name.pNext==NULL){
            return_XaxJyHd["null"]=true;
            return return_XaxJyHd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_mwCjgky=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_ZZnBXBk=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_bAJNyCU=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_OgJefMH=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_yDWtdpA=json({});
    
        if (name.pRegions==NULL){
            return_yDWtdpA["null"]=true;
            return return_yDWtdpA;
        }
        
        return_yDWtdpA["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_ieggjPP=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_yDWtdpA["members"][std::to_string(i)].push_back(temp);
        }
        return return_yDWtdpA;
        }();
return result;}

    VkCopyImageToBufferInfo2 deserialize_VkCopyImageToBufferInfo2(json name){
        auto result=VkCopyImageToBufferInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FUedVpi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FUedVpi=NULL;
        }
    temp_FUedVpi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FUedVpi;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_ClbEIei;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_ClbEIei=NULL;
        }
    temp_ClbEIei=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int hsKfrhf=0; hsKfrhf < result.regionCount; hsKfrhf++){
            [&]() {
temp_ClbEIei[hsKfrhf]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][hsKfrhf]);}();;
        }
        }();result.pRegions=temp_ClbEIei;}();
return result;}

    json serialize_VkCopyImageToBufferInfo2KHR(VkCopyImageToBufferInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WmxExbd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WRVZOsw=json({});
    
        if (name.pNext==NULL){
            return_WRVZOsw["null"]=true;
            return return_WRVZOsw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_fgLKXzU=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_aumgyNH=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstBuffer"]=[&]() {
    json return_IGEhcSZ=json({});
    return serialize_VkBuffer(name.dstBuffer);}();
result["members"]["regionCount"]=[&]() {
    json return_BQpaFNw=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_KUImIWq=json({});
    
        if (name.pRegions==NULL){
            return_KUImIWq["null"]=true;
            return return_KUImIWq;
        }
        
        return_KUImIWq["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_miQIFXj=json({});
    return serialize_VkBufferImageCopy2(name.pRegions[i]);}();
            return_KUImIWq["members"][std::to_string(i)].push_back(temp);
        }
        return return_KUImIWq;
        }();
return result;}

    VkCopyImageToBufferInfo2KHR deserialize_VkCopyImageToBufferInfo2KHR(json name){
        auto result=VkCopyImageToBufferInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TuONdFw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TuONdFw=NULL;
        }
    temp_TuONdFw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TuONdFw;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstBuffer=deserialize_VkBuffer(name["members"]["dstBuffer"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkBufferImageCopy2* temp_lYkhlrn;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_lYkhlrn=NULL;
        }
    temp_lYkhlrn=(VkBufferImageCopy2*)malloc(result.regionCount*sizeof(VkBufferImageCopy2));
        for (int lDnAsJe=0; lDnAsJe < result.regionCount; lDnAsJe++){
            [&]() {
temp_lYkhlrn[lDnAsJe]=deserialize_VkBufferImageCopy2(name["members"]["pRegions"]["members"][lDnAsJe]);}();;
        }
        }();result.pRegions=temp_lYkhlrn;}();
return result;}

    json serialize_VkResolveImageInfo2(VkResolveImageInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hBxGrzP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rEYqsCE=json({});
    
        if (name.pNext==NULL){
            return_rEYqsCE["null"]=true;
            return return_rEYqsCE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_XChmVYl=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_QBxZDzl=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_STKJXlt=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_IpDwcmG=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_sXQgBYU=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_xNgERtd=json({});
    
        if (name.pRegions==NULL){
            return_xNgERtd["null"]=true;
            return return_xNgERtd;
        }
        
        return_xNgERtd["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_SxYlXar=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_xNgERtd["members"][std::to_string(i)].push_back(temp);
        }
        return return_xNgERtd;
        }();
return result;}

    VkResolveImageInfo2 deserialize_VkResolveImageInfo2(json name){
        auto result=VkResolveImageInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aTFrQeg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aTFrQeg=NULL;
        }
    temp_aTFrQeg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aTFrQeg;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_WvCWZFc;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_WvCWZFc=NULL;
        }
    temp_WvCWZFc=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int hHfHNWB=0; hHfHNWB < result.regionCount; hHfHNWB++){
            [&]() {
temp_WvCWZFc[hHfHNWB]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][hHfHNWB]);}();;
        }
        }();result.pRegions=temp_WvCWZFc;}();
return result;}

    json serialize_VkResolveImageInfo2KHR(VkResolveImageInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hPnkAjF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QrZBWji=json({});
    
        if (name.pNext==NULL){
            return_QrZBWji["null"]=true;
            return return_QrZBWji;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcImage"]=[&]() {
    json return_TRxuxUY=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_fHQHvPq=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_JFRTPlb=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_IhaWVVw=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_qxDQEdD=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_RFXZBQN=json({});
    
        if (name.pRegions==NULL){
            return_RFXZBQN["null"]=true;
            return return_RFXZBQN;
        }
        
        return_RFXZBQN["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_HjLdvEr=json({});
    return serialize_VkImageResolve2(name.pRegions[i]);}();
            return_RFXZBQN["members"][std::to_string(i)].push_back(temp);
        }
        return return_RFXZBQN;
        }();
return result;}

    VkResolveImageInfo2KHR deserialize_VkResolveImageInfo2KHR(json name){
        auto result=VkResolveImageInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pIRukYn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pIRukYn=NULL;
        }
    temp_pIRukYn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pIRukYn;}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageResolve2* temp_usGVbEg;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_usGVbEg=NULL;
        }
    temp_usGVbEg=(VkImageResolve2*)malloc(result.regionCount*sizeof(VkImageResolve2));
        for (int goJypna=0; goJypna < result.regionCount; goJypna++){
            [&]() {
temp_usGVbEg[goJypna]=deserialize_VkImageResolve2(name["members"]["pRegions"]["members"][goJypna]);}();;
        }
        }();result.pRegions=temp_usGVbEg;}();
return result;}

    json serialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dKfJrwE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HmETBfa=json({});
    
        if (name.pNext==NULL){
            return_HmETBfa["null"]=true;
            return return_HmETBfa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderImageInt64Atomics"]=[&]() {
    json return_MOfdpBI=json({});
    return_MOfdpBI=[&]() {
    json return_DDzcvcF=json({});
    return serialize_uint32_t(name.shaderImageInt64Atomics);}();return return_MOfdpBI;}();
result["members"]["sparseImageInt64Atomics"]=[&]() {
    json return_lnhXWuK=json({});
    return_lnhXWuK=[&]() {
    json return_HVYjIiy=json({});
    return serialize_uint32_t(name.sparseImageInt64Atomics);}();return return_lnhXWuK;}();
return result;}

    VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT deserialize_VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderImageInt64Atomics=deserialize_uint32_t(name["members"]["shaderImageInt64Atomics"]);}();}();
[&]() {
[&]() {
result.sparseImageInt64Atomics=deserialize_uint32_t(name["members"]["sparseImageInt64Atomics"]);}();}();
return result;}

    json serialize_VkFragmentShadingRateAttachmentInfoKHR(VkFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wpJRkvO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nwZGbFt=json({});
    
        if (name.pNext==NULL){
            return_nwZGbFt["null"]=true;
            return return_nwZGbFt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pFragmentShadingRateAttachment"]=[&]() {
    json return_sYcNZHN=json({});
    
        if (name.pFragmentShadingRateAttachment==NULL){
            return_sYcNZHN["null"]=true;
            return return_sYcNZHN;
        }
        return_sYcNZHN=[&]() {
    json return_HOOldZw=json({});
    return serialize_VkAttachmentReference2(*name.pFragmentShadingRateAttachment);}();
return return_sYcNZHN;}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_RpkhoBJ=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkFragmentShadingRateAttachmentInfoKHR deserialize_VkFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NWfCQJY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NWfCQJY=NULL;
        }
    temp_NWfCQJY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NWfCQJY;}();
[&]() {
VkAttachmentReference2* temp_THQAdxr;[&]() {

        if (name["members"]["pFragmentShadingRateAttachment"].contains("null")){
        temp_THQAdxr=NULL;
        }
    [&]() {
*(temp_THQAdxr)=deserialize_VkAttachmentReference2(name["members"]["pFragmentShadingRateAttachment"]);}();
}();result.pFragmentShadingRateAttachment=temp_THQAdxr;}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(VkPipelineFragmentShadingRateStateCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sSKozII=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RnpTiRO=json({});
    
        if (name.pNext==NULL){
            return_RnpTiRO["null"]=true;
            return return_RnpTiRO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentSize"]=[&]() {
    json return_IKhOdDL=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
result["members"]["combinerOps"]=[&]() {
    json return_RZpPvMy=json({});
    
        return_RZpPvMy["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_rJoaCwJ=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_RZpPvMy["members"][std::to_string(i)].push_back(temp);
        }
        return return_RZpPvMy;
        }();
return result;}

    VkPipelineFragmentShadingRateStateCreateInfoKHR deserialize_VkPipelineFragmentShadingRateStateCreateInfoKHR(json name){
        auto result=VkPipelineFragmentShadingRateStateCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_LrslpCz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_LrslpCz=NULL;
        }
    temp_LrslpCz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_LrslpCz;}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
[&]() {

        for (int jgPuLFC=0; jgPuLFC < 2; jgPuLFC++){
            [&]() {
result.combinerOps[jgPuLFC]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][jgPuLFC]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(VkPhysicalDeviceFragmentShadingRateFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bylrBVf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RWQqEAn=json({});
    
        if (name.pNext==NULL){
            return_RWQqEAn["null"]=true;
            return return_RWQqEAn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineFragmentShadingRate"]=[&]() {
    json return_AjnpebN=json({});
    return_AjnpebN=[&]() {
    json return_vGEKmwn=json({});
    return serialize_uint32_t(name.pipelineFragmentShadingRate);}();return return_AjnpebN;}();
result["members"]["primitiveFragmentShadingRate"]=[&]() {
    json return_JVZdBGJ=json({});
    return_JVZdBGJ=[&]() {
    json return_hxSTpBq=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRate);}();return return_JVZdBGJ;}();
result["members"]["attachmentFragmentShadingRate"]=[&]() {
    json return_dAFckJE=json({});
    return_dAFckJE=[&]() {
    json return_xjNtXBh=json({});
    return serialize_uint32_t(name.attachmentFragmentShadingRate);}();return return_dAFckJE;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateFeaturesKHR deserialize_VkPhysicalDeviceFragmentShadingRateFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineFragmentShadingRate=deserialize_uint32_t(name["members"]["pipelineFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.primitiveFragmentShadingRate=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRate"]);}();}();
[&]() {
[&]() {
result.attachmentFragmentShadingRate=deserialize_uint32_t(name["members"]["attachmentFragmentShadingRate"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(VkPhysicalDeviceFragmentShadingRatePropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yreumZE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gBgeqQP=json({});
    
        if (name.pNext==NULL){
            return_gBgeqQP["null"]=true;
            return return_gBgeqQP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_vtvNbnO=json({});
    return serialize_VkExtent2D(name.minFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSize"]=[&]() {
    json return_XlreHPu=json({});
    return serialize_VkExtent2D(name.maxFragmentShadingRateAttachmentTexelSize);}();
result["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]=[&]() {
    json return_tqROcVh=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateAttachmentTexelSizeAspectRatio);}();
result["members"]["primitiveFragmentShadingRateWithMultipleViewports"]=[&]() {
    json return_YeCLaYB=json({});
    return_YeCLaYB=[&]() {
    json return_sgpnYSc=json({});
    return serialize_uint32_t(name.primitiveFragmentShadingRateWithMultipleViewports);}();return return_YeCLaYB;}();
result["members"]["layeredShadingRateAttachments"]=[&]() {
    json return_eBhdrFm=json({});
    return_eBhdrFm=[&]() {
    json return_RlOBCdy=json({});
    return serialize_uint32_t(name.layeredShadingRateAttachments);}();return return_eBhdrFm;}();
result["members"]["fragmentShadingRateNonTrivialCombinerOps"]=[&]() {
    json return_cCBtlhj=json({});
    return_cCBtlhj=[&]() {
    json return_qjdWKZf=json({});
    return serialize_uint32_t(name.fragmentShadingRateNonTrivialCombinerOps);}();return return_cCBtlhj;}();
result["members"]["maxFragmentSize"]=[&]() {
    json return_vKEgJvp=json({});
    return serialize_VkExtent2D(name.maxFragmentSize);}();
result["members"]["maxFragmentSizeAspectRatio"]=[&]() {
    json return_IJIxsVH=json({});
    return serialize_uint32_t(name.maxFragmentSizeAspectRatio);}();
result["members"]["maxFragmentShadingRateCoverageSamples"]=[&]() {
    json return_ylAlTPl=json({});
    return serialize_uint32_t(name.maxFragmentShadingRateCoverageSamples);}();
result["members"]["maxFragmentShadingRateRasterizationSamples"]=[&]() {
    json return_NyMMNIz=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateRasterizationSamples);}();
result["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]=[&]() {
    json return_HZbuGDT=json({});
    return_HZbuGDT=[&]() {
    json return_ZKgMuyg=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderDepthStencilWrites);}();return return_HZbuGDT;}();
result["members"]["fragmentShadingRateWithSampleMask"]=[&]() {
    json return_deNOIdN=json({});
    return_deNOIdN=[&]() {
    json return_bsURcsb=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithSampleMask);}();return return_deNOIdN;}();
result["members"]["fragmentShadingRateWithShaderSampleMask"]=[&]() {
    json return_WbgNlCq=json({});
    return_WbgNlCq=[&]() {
    json return_cvgKjEu=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithShaderSampleMask);}();return return_WbgNlCq;}();
result["members"]["fragmentShadingRateWithConservativeRasterization"]=[&]() {
    json return_eSiYgHS=json({});
    return_eSiYgHS=[&]() {
    json return_tkGjxyw=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithConservativeRasterization);}();return return_eSiYgHS;}();
result["members"]["fragmentShadingRateWithFragmentShaderInterlock"]=[&]() {
    json return_vfWIPNv=json({});
    return_vfWIPNv=[&]() {
    json return_ThTvDGQ=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithFragmentShaderInterlock);}();return return_vfWIPNv;}();
result["members"]["fragmentShadingRateWithCustomSampleLocations"]=[&]() {
    json return_eTDnZUO=json({});
    return_eTDnZUO=[&]() {
    json return_aWAhBLL=json({});
    return serialize_uint32_t(name.fragmentShadingRateWithCustomSampleLocations);}();return return_eTDnZUO;}();
result["members"]["fragmentShadingRateStrictMultiplyCombiner"]=[&]() {
    json return_NCTgkDr=json({});
    return_NCTgkDr=[&]() {
    json return_EoUckxL=json({});
    return serialize_uint32_t(name.fragmentShadingRateStrictMultiplyCombiner);}();return return_NCTgkDr;}();
return result;}

    VkPhysicalDeviceFragmentShadingRatePropertiesKHR deserialize_VkPhysicalDeviceFragmentShadingRatePropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRatePropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.minFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["minFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["maxFragmentShadingRateAttachmentTexelSize"]);}();
[&]() {
result.maxFragmentShadingRateAttachmentTexelSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentShadingRateAttachmentTexelSizeAspectRatio"]);}();
[&]() {
[&]() {
result.primitiveFragmentShadingRateWithMultipleViewports=deserialize_uint32_t(name["members"]["primitiveFragmentShadingRateWithMultipleViewports"]);}();}();
[&]() {
[&]() {
result.layeredShadingRateAttachments=deserialize_uint32_t(name["members"]["layeredShadingRateAttachments"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateNonTrivialCombinerOps=deserialize_uint32_t(name["members"]["fragmentShadingRateNonTrivialCombinerOps"]);}();}();
[&]() {
result.maxFragmentSize=deserialize_VkExtent2D(name["members"]["maxFragmentSize"]);}();
[&]() {
result.maxFragmentSizeAspectRatio=deserialize_uint32_t(name["members"]["maxFragmentSizeAspectRatio"]);}();
[&]() {
result.maxFragmentShadingRateCoverageSamples=deserialize_uint32_t(name["members"]["maxFragmentShadingRateCoverageSamples"]);}();
[&]() {
result.maxFragmentShadingRateRasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateRasterizationSamples"]);}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderDepthStencilWrites=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderDepthStencilWrites"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithShaderSampleMask=deserialize_uint32_t(name["members"]["fragmentShadingRateWithShaderSampleMask"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithConservativeRasterization=deserialize_uint32_t(name["members"]["fragmentShadingRateWithConservativeRasterization"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithFragmentShaderInterlock=deserialize_uint32_t(name["members"]["fragmentShadingRateWithFragmentShaderInterlock"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateWithCustomSampleLocations=deserialize_uint32_t(name["members"]["fragmentShadingRateWithCustomSampleLocations"]);}();}();
[&]() {
[&]() {
result.fragmentShadingRateStrictMultiplyCombiner=deserialize_uint32_t(name["members"]["fragmentShadingRateStrictMultiplyCombiner"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateKHR(VkPhysicalDeviceFragmentShadingRateKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HcqFNcf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vFtYmxe=json({});
    
        if (name.pNext==NULL){
            return_vFtYmxe["null"]=true;
            return return_vFtYmxe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampleCounts"]=[&]() {
    json return_hosmzfa=json({});
    return serialize_VkSampleCountFlags(name.sampleCounts);}();
result["members"]["fragmentSize"]=[&]() {
    json return_gWssfpJ=json({});
    return serialize_VkExtent2D(name.fragmentSize);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateKHR deserialize_VkPhysicalDeviceFragmentShadingRateKHR(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.sampleCounts=deserialize_VkSampleCountFlags(name["members"]["sampleCounts"]);}();
[&]() {
result.fragmentSize=deserialize_VkExtent2D(name["members"]["fragmentSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(VkPhysicalDeviceShaderTerminateInvocationFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zoBaRjE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GdjfQau=json({});
    
        if (name.pNext==NULL){
            return_GdjfQau["null"]=true;
            return return_GdjfQau;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_xFSLUNR=json({});
    return_xFSLUNR=[&]() {
    json return_OYVqrmo=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_xFSLUNR;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeatures deserialize_VkPhysicalDeviceShaderTerminateInvocationFeatures(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FFHpJgX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uVYhkDV=json({});
    
        if (name.pNext==NULL){
            return_uVYhkDV["null"]=true;
            return return_uVYhkDV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTerminateInvocation"]=[&]() {
    json return_cWoNBPu=json({});
    return_cWoNBPu=[&]() {
    json return_ELSTffP=json({});
    return serialize_uint32_t(name.shaderTerminateInvocation);}();return return_cWoNBPu;}();
return result;}

    VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR deserialize_VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTerminateInvocation=deserialize_uint32_t(name["members"]["shaderTerminateInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_enIbcan=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GVcWepO=json({});
    
        if (name.pNext==NULL){
            return_GVcWepO["null"]=true;
            return return_GVcWepO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShadingRateEnums"]=[&]() {
    json return_AfUvlXP=json({});
    return_AfUvlXP=[&]() {
    json return_CvJvVCG=json({});
    return serialize_uint32_t(name.fragmentShadingRateEnums);}();return return_AfUvlXP;}();
result["members"]["supersampleFragmentShadingRates"]=[&]() {
    json return_usGAHBW=json({});
    return_usGAHBW=[&]() {
    json return_TOtDBXJ=json({});
    return serialize_uint32_t(name.supersampleFragmentShadingRates);}();return return_usGAHBW;}();
result["members"]["noInvocationFragmentShadingRates"]=[&]() {
    json return_JCtmrYI=json({});
    return_JCtmrYI=[&]() {
    json return_HkmocDl=json({});
    return serialize_uint32_t(name.noInvocationFragmentShadingRates);}();return return_JCtmrYI;}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShadingRateEnums=deserialize_uint32_t(name["members"]["fragmentShadingRateEnums"]);}();}();
[&]() {
[&]() {
result.supersampleFragmentShadingRates=deserialize_uint32_t(name["members"]["supersampleFragmentShadingRates"]);}();}();
[&]() {
[&]() {
result.noInvocationFragmentShadingRates=deserialize_uint32_t(name["members"]["noInvocationFragmentShadingRates"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UMmolBR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QNmhteV=json({});
    
        if (name.pNext==NULL){
            return_QNmhteV["null"]=true;
            return return_QNmhteV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxFragmentShadingRateInvocationCount"]=[&]() {
    json return_PiKIUMk=json({});
    return serialize_VkSampleCountFlagBits(name.maxFragmentShadingRateInvocationCount);}();
return result;}

    VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV deserialize_VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV(json name){
        auto result=VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxFragmentShadingRateInvocationCount=deserialize_VkSampleCountFlagBits(name["members"]["maxFragmentShadingRateInvocationCount"]);}();
return result;}

    json serialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(VkPipelineFragmentShadingRateEnumStateCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RmmEQLZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dLaSEDA=json({});
    
        if (name.pNext==NULL){
            return_dLaSEDA["null"]=true;
            return return_dLaSEDA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shadingRateType"]=[&]() {
    json return_hwDGemA=json({});
    return serialize_VkFragmentShadingRateTypeNV(name.shadingRateType);}();
result["members"]["shadingRate"]=[&]() {
    json return_JVdeXDm=json({});
    return serialize_VkFragmentShadingRateNV(name.shadingRate);}();
result["members"]["combinerOps"]=[&]() {
    json return_nPqDnJX=json({});
    
        return_nPqDnJX["members"]={};
        for(int i=0; i < 2; i++){
            json temp;
            temp=[&]() {
    json return_MNwRxET=json({});
    return serialize_VkFragmentShadingRateCombinerOpKHR(name.combinerOps[i]);}();
            return_nPqDnJX["members"][std::to_string(i)].push_back(temp);
        }
        return return_nPqDnJX;
        }();
return result;}

    VkPipelineFragmentShadingRateEnumStateCreateInfoNV deserialize_VkPipelineFragmentShadingRateEnumStateCreateInfoNV(json name){
        auto result=VkPipelineFragmentShadingRateEnumStateCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UOuooWP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UOuooWP=NULL;
        }
    temp_UOuooWP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UOuooWP;}();
[&]() {
result.shadingRateType=deserialize_VkFragmentShadingRateTypeNV(name["members"]["shadingRateType"]);}();
[&]() {
result.shadingRate=deserialize_VkFragmentShadingRateNV(name["members"]["shadingRate"]);}();
[&]() {

        for (int PLxXHHk=0; PLxXHHk < 2; PLxXHHk++){
            [&]() {
result.combinerOps[PLxXHHk]=deserialize_VkFragmentShadingRateCombinerOpKHR(name["members"]["combinerOps"]["members"][PLxXHHk]);}();;
        }
        }();
return result;}

    json serialize_VkAccelerationStructureBuildSizesInfoKHR(VkAccelerationStructureBuildSizesInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zjMGNdD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TnFLWDQ=json({});
    
        if (name.pNext==NULL){
            return_TnFLWDQ["null"]=true;
            return return_TnFLWDQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructureSize"]=[&]() {
    json return_UrnfzGJ=json({});
    return_UrnfzGJ=[&]() {
    json return_rxbsDVo=json({});
    return serialize_uint64_t(name.accelerationStructureSize);}();return return_UrnfzGJ;}();
result["members"]["updateScratchSize"]=[&]() {
    json return_VDgIvvi=json({});
    return_VDgIvvi=[&]() {
    json return_rYISxTe=json({});
    return serialize_uint64_t(name.updateScratchSize);}();return return_VDgIvvi;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_YoqAbMZ=json({});
    return_YoqAbMZ=[&]() {
    json return_jyjBOWo=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_YoqAbMZ;}();
return result;}

    VkAccelerationStructureBuildSizesInfoKHR deserialize_VkAccelerationStructureBuildSizesInfoKHR(json name){
        auto result=VkAccelerationStructureBuildSizesInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FVWAxpM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FVWAxpM=NULL;
        }
    temp_FVWAxpM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FVWAxpM;}();
[&]() {
[&]() {
result.accelerationStructureSize=deserialize_uint64_t(name["members"]["accelerationStructureSize"]);}();}();
[&]() {
[&]() {
result.updateScratchSize=deserialize_uint64_t(name["members"]["updateScratchSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(VkPhysicalDeviceImage2DViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QOOQHqD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GPXSZZS=json({});
    
        if (name.pNext==NULL){
            return_GPXSZZS["null"]=true;
            return return_GPXSZZS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image2DViewOf3D"]=[&]() {
    json return_KkwdEPJ=json({});
    return_KkwdEPJ=[&]() {
    json return_eMoSXqb=json({});
    return serialize_uint32_t(name.image2DViewOf3D);}();return return_KkwdEPJ;}();
result["members"]["sampler2DViewOf3D"]=[&]() {
    json return_LOBOsAm=json({});
    return_LOBOsAm=[&]() {
    json return_tGUJoej=json({});
    return serialize_uint32_t(name.sampler2DViewOf3D);}();return return_LOBOsAm;}();
return result;}

    VkPhysicalDeviceImage2DViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImage2DViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImage2DViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.image2DViewOf3D=deserialize_uint32_t(name["members"]["image2DViewOf3D"]);}();}();
[&]() {
[&]() {
result.sampler2DViewOf3D=deserialize_uint32_t(name["members"]["sampler2DViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_puZQCuj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vTvFGlD=json({});
    
        if (name.pNext==NULL){
            return_vTvFGlD["null"]=true;
            return return_vTvFGlD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSlicedViewOf3D"]=[&]() {
    json return_BgLAOQU=json({});
    return_BgLAOQU=[&]() {
    json return_eLQIewE=json({});
    return serialize_uint32_t(name.imageSlicedViewOf3D);}();return return_BgLAOQU;}();
return result;}

    VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT deserialize_VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageSlicedViewOf3D=deserialize_uint32_t(name["members"]["imageSlicedViewOf3D"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gniqgxa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LrOIReH=json({});
    
        if (name.pNext==NULL){
            return_LrOIReH["null"]=true;
            return return_LrOIReH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopDynamicState"]=[&]() {
    json return_IEckSoy=json({});
    return_IEckSoy=[&]() {
    json return_xyDAODn=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopDynamicState);}();return return_IEckSoy;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopDynamicState=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bVVZFdq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fvKPKav=json({});
    
        if (name.pNext==NULL){
            return_fvKPKav["null"]=true;
            return return_fvKPKav;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_EsWMLUK=json({});
    return_EsWMLUK=[&]() {
    json return_lSDgYOY=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_EsWMLUK;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IKQtwqa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BMuLEyQ=json({});
    
        if (name.pNext==NULL){
            return_BMuLEyQ["null"]=true;
            return return_BMuLEyQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorType"]=[&]() {
    json return_gPaxEqV=json({});
    return_gPaxEqV=[&]() {
    json return_mnWgIXs=json({});
    return serialize_uint32_t(name.mutableDescriptorType);}();return return_gPaxEqV;}();
return result;}

    VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE deserialize_VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.mutableDescriptorType=deserialize_uint32_t(name["members"]["mutableDescriptorType"]);}();}();
return result;}

    json serialize_VkMutableDescriptorTypeListEXT(VkMutableDescriptorTypeListEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_jejWibX=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_KUnfYnG=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_KUnfYnG["null"]=true;
            return return_KUnfYnG;
        }
        
        return_KUnfYnG["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_pxXrtbw=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_KUnfYnG["members"][std::to_string(i)].push_back(temp);
        }
        return return_KUnfYnG;
        }();
return result;}

    VkMutableDescriptorTypeListEXT deserialize_VkMutableDescriptorTypeListEXT(json name){
        auto result=VkMutableDescriptorTypeListEXT();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_daSkPJb;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_daSkPJb=NULL;
        }
    temp_daSkPJb=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int HuHjAwT=0; HuHjAwT < result.descriptorTypeCount; HuHjAwT++){
            [&]() {
temp_daSkPJb[HuHjAwT]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][HuHjAwT]);}();;
        }
        }();result.pDescriptorTypes=temp_daSkPJb;}();
return result;}

    json serialize_VkMutableDescriptorTypeListVALVE(VkMutableDescriptorTypeListVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["descriptorTypeCount"]=[&]() {
    json return_cgfLiLd=json({});
    return serialize_uint32_t(name.descriptorTypeCount);}();
result["members"]["pDescriptorTypes"]=[&]() {
    json return_pnXVNyk=json({});
    
        if (name.pDescriptorTypes==NULL){
            return_pnXVNyk["null"]=true;
            return return_pnXVNyk;
        }
        
        return_pnXVNyk["members"]={};
        for(int i=0; i < name.descriptorTypeCount; i++){
            json temp;
            temp=[&]() {
    json return_WSGAWad=json({});
    return serialize_VkDescriptorType(name.pDescriptorTypes[i]);}();
            return_pnXVNyk["members"][std::to_string(i)].push_back(temp);
        }
        return return_pnXVNyk;
        }();
return result;}

    VkMutableDescriptorTypeListVALVE deserialize_VkMutableDescriptorTypeListVALVE(json name){
        auto result=VkMutableDescriptorTypeListVALVE();
    
[&]() {
result.descriptorTypeCount=deserialize_uint32_t(name["members"]["descriptorTypeCount"]);}();
[&]() {
VkDescriptorType* temp_KskagyS;[&]() {

        if (name["members"]["pDescriptorTypes"].contains("null")){
        temp_KskagyS=NULL;
        }
    temp_KskagyS=(VkDescriptorType*)malloc(result.descriptorTypeCount*sizeof(VkDescriptorType));
        for (int SqCEMNE=0; SqCEMNE < result.descriptorTypeCount; SqCEMNE++){
            [&]() {
temp_KskagyS[SqCEMNE]=deserialize_VkDescriptorType(name["members"]["pDescriptorTypes"]["members"][SqCEMNE]);}();;
        }
        }();result.pDescriptorTypes=temp_KskagyS;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoEXT(VkMutableDescriptorTypeCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HfkudLU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pqacDVn=json({});
    
        if (name.pNext==NULL){
            return_pqacDVn["null"]=true;
            return return_pqacDVn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_nMlUsJI=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_zDLenLP=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_zDLenLP["null"]=true;
            return return_zDLenLP;
        }
        
        return_zDLenLP["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_qYUHeCb=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_zDLenLP["members"][std::to_string(i)].push_back(temp);
        }
        return return_zDLenLP;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoEXT deserialize_VkMutableDescriptorTypeCreateInfoEXT(json name){
        auto result=VkMutableDescriptorTypeCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kpHAaPa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kpHAaPa=NULL;
        }
    temp_kpHAaPa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kpHAaPa;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_nMKJXSo;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_nMKJXSo=NULL;
        }
    temp_nMKJXSo=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int qpaOqzb=0; qpaOqzb < result.mutableDescriptorTypeListCount; qpaOqzb++){
            [&]() {
temp_nMKJXSo[qpaOqzb]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][qpaOqzb]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_nMKJXSo;}();
return result;}

    json serialize_VkMutableDescriptorTypeCreateInfoVALVE(VkMutableDescriptorTypeCreateInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hcijSWe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FfdiEnc=json({});
    
        if (name.pNext==NULL){
            return_FfdiEnc["null"]=true;
            return return_FfdiEnc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mutableDescriptorTypeListCount"]=[&]() {
    json return_Hifqqzh=json({});
    return serialize_uint32_t(name.mutableDescriptorTypeListCount);}();
result["members"]["pMutableDescriptorTypeLists"]=[&]() {
    json return_PuifhpV=json({});
    
        if (name.pMutableDescriptorTypeLists==NULL){
            return_PuifhpV["null"]=true;
            return return_PuifhpV;
        }
        
        return_PuifhpV["members"]={};
        for(int i=0; i < name.mutableDescriptorTypeListCount; i++){
            json temp;
            temp=[&]() {
    json return_VKzMKKM=json({});
    return serialize_VkMutableDescriptorTypeListEXT(name.pMutableDescriptorTypeLists[i]);}();
            return_PuifhpV["members"][std::to_string(i)].push_back(temp);
        }
        return return_PuifhpV;
        }();
return result;}

    VkMutableDescriptorTypeCreateInfoVALVE deserialize_VkMutableDescriptorTypeCreateInfoVALVE(json name){
        auto result=VkMutableDescriptorTypeCreateInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SuQGIIU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SuQGIIU=NULL;
        }
    temp_SuQGIIU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SuQGIIU;}();
[&]() {
result.mutableDescriptorTypeListCount=deserialize_uint32_t(name["members"]["mutableDescriptorTypeListCount"]);}();
[&]() {
VkMutableDescriptorTypeListEXT* temp_EMWlwDW;[&]() {

        if (name["members"]["pMutableDescriptorTypeLists"].contains("null")){
        temp_EMWlwDW=NULL;
        }
    temp_EMWlwDW=(VkMutableDescriptorTypeListEXT*)malloc(result.mutableDescriptorTypeListCount*sizeof(VkMutableDescriptorTypeListEXT));
        for (int HaJTvKi=0; HaJTvKi < result.mutableDescriptorTypeListCount; HaJTvKi++){
            [&]() {
temp_EMWlwDW[HaJTvKi]=deserialize_VkMutableDescriptorTypeListEXT(name["members"]["pMutableDescriptorTypeLists"]["members"][HaJTvKi]);}();;
        }
        }();result.pMutableDescriptorTypeLists=temp_EMWlwDW;}();
return result;}

    json serialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(VkPhysicalDeviceDepthClipControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jKPSEkc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cnTrSfx=json({});
    
        if (name.pNext==NULL){
            return_cnTrSfx["null"]=true;
            return return_cnTrSfx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClipControl"]=[&]() {
    json return_aoJxRzQ=json({});
    return_aoJxRzQ=[&]() {
    json return_umfphCk=json({});
    return serialize_uint32_t(name.depthClipControl);}();return return_aoJxRzQ;}();
return result;}

    VkPhysicalDeviceDepthClipControlFeaturesEXT deserialize_VkPhysicalDeviceDepthClipControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClipControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClipControl=deserialize_uint32_t(name["members"]["depthClipControl"]);}();}();
return result;}

    json serialize_VkPipelineViewportDepthClipControlCreateInfoEXT(VkPipelineViewportDepthClipControlCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BJoftKm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yYnDGWO=json({});
    
        if (name.pNext==NULL){
            return_yYnDGWO["null"]=true;
            return return_yYnDGWO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["negativeOneToOne"]=[&]() {
    json return_KWFFBpR=json({});
    return_KWFFBpR=[&]() {
    json return_yuLxppS=json({});
    return serialize_uint32_t(name.negativeOneToOne);}();return return_KWFFBpR;}();
return result;}

    VkPipelineViewportDepthClipControlCreateInfoEXT deserialize_VkPipelineViewportDepthClipControlCreateInfoEXT(json name){
        auto result=VkPipelineViewportDepthClipControlCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MSTBLaO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MSTBLaO=NULL;
        }
    temp_MSTBLaO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MSTBLaO;}();
[&]() {
[&]() {
result.negativeOneToOne=deserialize_uint32_t(name["members"]["negativeOneToOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rJCOxeZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ggTFwdE=json({});
    
        if (name.pNext==NULL){
            return_ggTFwdE["null"]=true;
            return return_ggTFwdE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexInputDynamicState"]=[&]() {
    json return_iXjzDab=json({});
    return_iXjzDab=[&]() {
    json return_IzrjizW=json({});
    return serialize_uint32_t(name.vertexInputDynamicState);}();return return_iXjzDab;}();
return result;}

    VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT deserialize_VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT(json name){
        auto result=VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.vertexInputDynamicState=deserialize_uint32_t(name["members"]["vertexInputDynamicState"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(VkPhysicalDeviceExternalMemoryRDMAFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ilSPdAH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NlorQOT=json({});
    
        if (name.pNext==NULL){
            return_NlorQOT["null"]=true;
            return return_NlorQOT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["externalMemoryRDMA"]=[&]() {
    json return_dtsbvHN=json({});
    return_dtsbvHN=[&]() {
    json return_dIgXrMo=json({});
    return serialize_uint32_t(name.externalMemoryRDMA);}();return return_dtsbvHN;}();
return result;}

    VkPhysicalDeviceExternalMemoryRDMAFeaturesNV deserialize_VkPhysicalDeviceExternalMemoryRDMAFeaturesNV(json name){
        auto result=VkPhysicalDeviceExternalMemoryRDMAFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.externalMemoryRDMA=deserialize_uint32_t(name["members"]["externalMemoryRDMA"]);}();}();
return result;}

    json serialize_VkVertexInputBindingDescription2EXT(VkVertexInputBindingDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aAwfmjQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LngNzdU=json({});
    
        if (name.pNext==NULL){
            return_LngNzdU["null"]=true;
            return return_LngNzdU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["binding"]=[&]() {
    json return_LOCVBpf=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["stride"]=[&]() {
    json return_uPsOjCp=json({});
    return serialize_uint32_t(name.stride);}();
result["members"]["inputRate"]=[&]() {
    json return_pAgRQxI=json({});
    return serialize_VkVertexInputRate(name.inputRate);}();
result["members"]["divisor"]=[&]() {
    json return_AvdOCsd=json({});
    return serialize_uint32_t(name.divisor);}();
return result;}

    VkVertexInputBindingDescription2EXT deserialize_VkVertexInputBindingDescription2EXT(json name){
        auto result=VkVertexInputBindingDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.stride=deserialize_uint32_t(name["members"]["stride"]);}();
[&]() {
result.inputRate=deserialize_VkVertexInputRate(name["members"]["inputRate"]);}();
[&]() {
result.divisor=deserialize_uint32_t(name["members"]["divisor"]);}();
return result;}

    json serialize_VkVertexInputAttributeDescription2EXT(VkVertexInputAttributeDescription2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gGsDMez=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_weZZKTF=json({});
    
        if (name.pNext==NULL){
            return_weZZKTF["null"]=true;
            return return_weZZKTF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["location"]=[&]() {
    json return_bzqbaND=json({});
    return serialize_uint32_t(name.location);}();
result["members"]["binding"]=[&]() {
    json return_PHJFIHj=json({});
    return serialize_uint32_t(name.binding);}();
result["members"]["format"]=[&]() {
    json return_MqCwodU=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["offset"]=[&]() {
    json return_suFlbiJ=json({});
    return serialize_uint32_t(name.offset);}();
return result;}

    VkVertexInputAttributeDescription2EXT deserialize_VkVertexInputAttributeDescription2EXT(json name){
        auto result=VkVertexInputAttributeDescription2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.location=deserialize_uint32_t(name["members"]["location"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.offset=deserialize_uint32_t(name["members"]["offset"]);}();
return result;}

    json serialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(VkPhysicalDeviceColorWriteEnableFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ziIUfqf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Gnwytsw=json({});
    
        if (name.pNext==NULL){
            return_Gnwytsw["null"]=true;
            return return_Gnwytsw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorWriteEnable"]=[&]() {
    json return_stZseIz=json({});
    return_stZseIz=[&]() {
    json return_xFmgbLd=json({});
    return serialize_uint32_t(name.colorWriteEnable);}();return return_stZseIz;}();
return result;}

    VkPhysicalDeviceColorWriteEnableFeaturesEXT deserialize_VkPhysicalDeviceColorWriteEnableFeaturesEXT(json name){
        auto result=VkPhysicalDeviceColorWriteEnableFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.colorWriteEnable=deserialize_uint32_t(name["members"]["colorWriteEnable"]);}();}();
return result;}

    json serialize_VkPipelineColorWriteCreateInfoEXT(VkPipelineColorWriteCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eKSfhaF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hysVfZm=json({});
    
        if (name.pNext==NULL){
            return_hysVfZm["null"]=true;
            return return_hysVfZm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentCount"]=[&]() {
    json return_zbttlfr=json({});
    return serialize_uint32_t(name.attachmentCount);}();
result["members"]["pColorWriteEnables"]=[&]() {
    json return_CKpTHMx=json({});
    
        if (name.pColorWriteEnables==NULL){
            return_CKpTHMx["null"]=true;
            return return_CKpTHMx;
        }
        
        return_CKpTHMx["members"]={};
        for(int i=0; i < name.attachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_SQlHacp=json({});
    return_SQlHacp=[&]() {
    json return_WPLbUwS=json({});
    return serialize_uint32_t(name.pColorWriteEnables[i]);}();return return_SQlHacp;}();
            return_CKpTHMx["members"][std::to_string(i)].push_back(temp);
        }
        return return_CKpTHMx;
        }();
return result;}

    VkPipelineColorWriteCreateInfoEXT deserialize_VkPipelineColorWriteCreateInfoEXT(json name){
        auto result=VkPipelineColorWriteCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cuiNGYg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cuiNGYg=NULL;
        }
    temp_cuiNGYg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cuiNGYg;}();
[&]() {
result.attachmentCount=deserialize_uint32_t(name["members"]["attachmentCount"]);}();
[&]() {
VkBool32* temp_PTJxblg;[&]() {

        if (name["members"]["pColorWriteEnables"].contains("null")){
        temp_PTJxblg=NULL;
        }
    temp_PTJxblg=(VkBool32*)malloc(result.attachmentCount*sizeof(VkBool32));
        for (int cSGSNgM=0; cSGSNgM < result.attachmentCount; cSGSNgM++){
            [&]() {
[&]() {
temp_PTJxblg[cSGSNgM]=deserialize_uint32_t(name["members"]["pColorWriteEnables"]["members"][cSGSNgM]);}();}();;
        }
        }();result.pColorWriteEnables=temp_PTJxblg;}();
return result;}

    json serialize_VkMemoryBarrier2(VkMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wDXUtHN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eyjqzyi=json({});
    
        if (name.pNext==NULL){
            return_eyjqzyi["null"]=true;
            return return_eyjqzyi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_NFlUVKg=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_CDfFUAy=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_pDxCkqd=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_sTtvuyH=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2 deserialize_VkMemoryBarrier2(json name){
        auto result=VkMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FeXjEgw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FeXjEgw=NULL;
        }
    temp_FeXjEgw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FeXjEgw;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkMemoryBarrier2KHR(VkMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pnBHade=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OaOPPqm=json({});
    
        if (name.pNext==NULL){
            return_OaOPPqm["null"]=true;
            return return_OaOPPqm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_XUgTzsk=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_XgauimZ=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_oEeYuKQ=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_lqSNiUI=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
return result;}

    VkMemoryBarrier2KHR deserialize_VkMemoryBarrier2KHR(json name){
        auto result=VkMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lVuHrSW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lVuHrSW=NULL;
        }
    temp_lVuHrSW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lVuHrSW;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2(VkImageMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WhiHQeS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wlaFLYn=json({});
    
        if (name.pNext==NULL){
            return_wlaFLYn["null"]=true;
            return return_wlaFLYn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_tbByObZ=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_fCnxLCL=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_WIhyJbz=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_zHHYRCM=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_fKtADtq=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_nDCGaHj=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_MLIWmfe=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_OcpfktW=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_PzeAvqr=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_BXpezbO=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2 deserialize_VkImageMemoryBarrier2(json name){
        auto result=VkImageMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KlbFxgA;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KlbFxgA=NULL;
        }
    temp_KlbFxgA=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KlbFxgA;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkImageMemoryBarrier2KHR(VkImageMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kRTHCiD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KbhsmpP=json({});
    
        if (name.pNext==NULL){
            return_KbhsmpP["null"]=true;
            return return_KbhsmpP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_qqtXLkw=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_LTVdLXL=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_qhiXJBL=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_dmhMLor=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["oldLayout"]=[&]() {
    json return_hDlLutE=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_EMPVlWY=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_tatmpqM=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_oiSRYue=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["image"]=[&]() {
    json return_TIpROSf=json({});
    return serialize_VkImage(name.image);}();
result["members"]["subresourceRange"]=[&]() {
    json return_rSUFbTd=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkImageMemoryBarrier2KHR deserialize_VkImageMemoryBarrier2KHR(json name){
        auto result=VkImageMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_VdDkMim;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_VdDkMim=NULL;
        }
    temp_VdDkMim=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_VdDkMim;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkBufferMemoryBarrier2(VkBufferMemoryBarrier2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GbCjuPQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iNuOCUK=json({});
    
        if (name.pNext==NULL){
            return_iNuOCUK["null"]=true;
            return return_iNuOCUK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_kQLvHtZ=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_XPjyGeW=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_TlBWdZm=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_NWvqMKk=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_lnbjZIS=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_ZqcPMxw=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_wwdAfCv=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_sWJbSzm=json({});
    return_sWJbSzm=[&]() {
    json return_EAckzWB=json({});
    return serialize_uint64_t(name.offset);}();return return_sWJbSzm;}();
result["members"]["size"]=[&]() {
    json return_jsWhpZL=json({});
    return_jsWhpZL=[&]() {
    json return_sdKuBsX=json({});
    return serialize_uint64_t(name.size);}();return return_jsWhpZL;}();
return result;}

    VkBufferMemoryBarrier2 deserialize_VkBufferMemoryBarrier2(json name){
        auto result=VkBufferMemoryBarrier2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ooCXzjV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ooCXzjV=NULL;
        }
    temp_ooCXzjV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ooCXzjV;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkBufferMemoryBarrier2KHR(VkBufferMemoryBarrier2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dPMsqCb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gJObQBG=json({});
    
        if (name.pNext==NULL){
            return_gJObQBG["null"]=true;
            return return_gJObQBG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["srcStageMask"]=[&]() {
    json return_uVhjUqA=json({});
    return serialize_VkPipelineStageFlags2(name.srcStageMask);}();
result["members"]["srcAccessMask"]=[&]() {
    json return_QjUGiUV=json({});
    return serialize_VkAccessFlags2(name.srcAccessMask);}();
result["members"]["dstStageMask"]=[&]() {
    json return_gSladjm=json({});
    return serialize_VkPipelineStageFlags2(name.dstStageMask);}();
result["members"]["dstAccessMask"]=[&]() {
    json return_ydUdoeP=json({});
    return serialize_VkAccessFlags2(name.dstAccessMask);}();
result["members"]["srcQueueFamilyIndex"]=[&]() {
    json return_EnruIBY=json({});
    return serialize_uint32_t(name.srcQueueFamilyIndex);}();
result["members"]["dstQueueFamilyIndex"]=[&]() {
    json return_dRYnPpA=json({});
    return serialize_uint32_t(name.dstQueueFamilyIndex);}();
result["members"]["buffer"]=[&]() {
    json return_pXRcRIL=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_UhDtSZc=json({});
    return_UhDtSZc=[&]() {
    json return_QQMLJVz=json({});
    return serialize_uint64_t(name.offset);}();return return_UhDtSZc;}();
result["members"]["size"]=[&]() {
    json return_lkpMOLH=json({});
    return_lkpMOLH=[&]() {
    json return_qlQhLwH=json({});
    return serialize_uint64_t(name.size);}();return return_lkpMOLH;}();
return result;}

    VkBufferMemoryBarrier2KHR deserialize_VkBufferMemoryBarrier2KHR(json name){
        auto result=VkBufferMemoryBarrier2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ATwHIPo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ATwHIPo=NULL;
        }
    temp_ATwHIPo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ATwHIPo;}();
[&]() {
result.srcStageMask=deserialize_VkPipelineStageFlags2(name["members"]["srcStageMask"]);}();
[&]() {
result.srcAccessMask=deserialize_VkAccessFlags2(name["members"]["srcAccessMask"]);}();
[&]() {
result.dstStageMask=deserialize_VkPipelineStageFlags2(name["members"]["dstStageMask"]);}();
[&]() {
result.dstAccessMask=deserialize_VkAccessFlags2(name["members"]["dstAccessMask"]);}();
[&]() {
result.srcQueueFamilyIndex=deserialize_uint32_t(name["members"]["srcQueueFamilyIndex"]);}();
[&]() {
result.dstQueueFamilyIndex=deserialize_uint32_t(name["members"]["dstQueueFamilyIndex"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkDependencyInfo(VkDependencyInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SsJjBXj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CrtqwQR=json({});
    
        if (name.pNext==NULL){
            return_CrtqwQR["null"]=true;
            return return_CrtqwQR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_OZZaijK=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_EjfnxVO=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_dyuaqKA=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_dyuaqKA["null"]=true;
            return return_dyuaqKA;
        }
        
        return_dyuaqKA["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_mPMYAwS=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_dyuaqKA["members"][std::to_string(i)].push_back(temp);
        }
        return return_dyuaqKA;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_pmvyPzs=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_IgSbrLq=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_IgSbrLq["null"]=true;
            return return_IgSbrLq;
        }
        
        return_IgSbrLq["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_izCcjBN=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_IgSbrLq["members"][std::to_string(i)].push_back(temp);
        }
        return return_IgSbrLq;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_GULjWdx=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_YjKYoWF=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_YjKYoWF["null"]=true;
            return return_YjKYoWF;
        }
        
        return_YjKYoWF["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_hhdMTze=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_YjKYoWF["members"][std::to_string(i)].push_back(temp);
        }
        return return_YjKYoWF;
        }();
return result;}

    VkDependencyInfo deserialize_VkDependencyInfo(json name){
        auto result=VkDependencyInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ycBXQtD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ycBXQtD=NULL;
        }
    temp_ycBXQtD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ycBXQtD;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_ndSzbPd;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_ndSzbPd=NULL;
        }
    temp_ndSzbPd=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int KePrSor=0; KePrSor < result.memoryBarrierCount; KePrSor++){
            [&]() {
temp_ndSzbPd[KePrSor]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][KePrSor]);}();;
        }
        }();result.pMemoryBarriers=temp_ndSzbPd;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_LXvQHCe;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_LXvQHCe=NULL;
        }
    temp_LXvQHCe=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int khrAmOX=0; khrAmOX < result.bufferMemoryBarrierCount; khrAmOX++){
            [&]() {
temp_LXvQHCe[khrAmOX]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][khrAmOX]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_LXvQHCe;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_GNdgCLg;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_GNdgCLg=NULL;
        }
    temp_GNdgCLg=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int ERpbmNR=0; ERpbmNR < result.imageMemoryBarrierCount; ERpbmNR++){
            [&]() {
temp_GNdgCLg[ERpbmNR]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][ERpbmNR]);}();;
        }
        }();result.pImageMemoryBarriers=temp_GNdgCLg;}();
return result;}

    json serialize_VkDependencyInfoKHR(VkDependencyInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zSsYJCa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qHjsPAV=json({});
    
        if (name.pNext==NULL){
            return_qHjsPAV["null"]=true;
            return return_qHjsPAV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dependencyFlags"]=[&]() {
    json return_LAhrhbz=json({});
    return serialize_VkDependencyFlags(name.dependencyFlags);}();
result["members"]["memoryBarrierCount"]=[&]() {
    json return_stnmFXB=json({});
    return serialize_uint32_t(name.memoryBarrierCount);}();
result["members"]["pMemoryBarriers"]=[&]() {
    json return_pOptuoW=json({});
    
        if (name.pMemoryBarriers==NULL){
            return_pOptuoW["null"]=true;
            return return_pOptuoW;
        }
        
        return_pOptuoW["members"]={};
        for(int i=0; i < name.memoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_naoHxtx=json({});
    return serialize_VkMemoryBarrier2(name.pMemoryBarriers[i]);}();
            return_pOptuoW["members"][std::to_string(i)].push_back(temp);
        }
        return return_pOptuoW;
        }();
result["members"]["bufferMemoryBarrierCount"]=[&]() {
    json return_kmDvZSW=json({});
    return serialize_uint32_t(name.bufferMemoryBarrierCount);}();
result["members"]["pBufferMemoryBarriers"]=[&]() {
    json return_PNIaFmf=json({});
    
        if (name.pBufferMemoryBarriers==NULL){
            return_PNIaFmf["null"]=true;
            return return_PNIaFmf;
        }
        
        return_PNIaFmf["members"]={};
        for(int i=0; i < name.bufferMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_oPkBpOS=json({});
    return serialize_VkBufferMemoryBarrier2(name.pBufferMemoryBarriers[i]);}();
            return_PNIaFmf["members"][std::to_string(i)].push_back(temp);
        }
        return return_PNIaFmf;
        }();
result["members"]["imageMemoryBarrierCount"]=[&]() {
    json return_iOuALzy=json({});
    return serialize_uint32_t(name.imageMemoryBarrierCount);}();
result["members"]["pImageMemoryBarriers"]=[&]() {
    json return_IqaKUth=json({});
    
        if (name.pImageMemoryBarriers==NULL){
            return_IqaKUth["null"]=true;
            return return_IqaKUth;
        }
        
        return_IqaKUth["members"]={};
        for(int i=0; i < name.imageMemoryBarrierCount; i++){
            json temp;
            temp=[&]() {
    json return_DrWRUTK=json({});
    return serialize_VkImageMemoryBarrier2(name.pImageMemoryBarriers[i]);}();
            return_IqaKUth["members"][std::to_string(i)].push_back(temp);
        }
        return return_IqaKUth;
        }();
return result;}

    VkDependencyInfoKHR deserialize_VkDependencyInfoKHR(json name){
        auto result=VkDependencyInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fVjHZGr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fVjHZGr=NULL;
        }
    temp_fVjHZGr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fVjHZGr;}();
[&]() {
result.dependencyFlags=deserialize_VkDependencyFlags(name["members"]["dependencyFlags"]);}();
[&]() {
result.memoryBarrierCount=deserialize_uint32_t(name["members"]["memoryBarrierCount"]);}();
[&]() {
VkMemoryBarrier2* temp_IIBZXLn;[&]() {

        if (name["members"]["pMemoryBarriers"].contains("null")){
        temp_IIBZXLn=NULL;
        }
    temp_IIBZXLn=(VkMemoryBarrier2*)malloc(result.memoryBarrierCount*sizeof(VkMemoryBarrier2));
        for (int dJexxGo=0; dJexxGo < result.memoryBarrierCount; dJexxGo++){
            [&]() {
temp_IIBZXLn[dJexxGo]=deserialize_VkMemoryBarrier2(name["members"]["pMemoryBarriers"]["members"][dJexxGo]);}();;
        }
        }();result.pMemoryBarriers=temp_IIBZXLn;}();
[&]() {
result.bufferMemoryBarrierCount=deserialize_uint32_t(name["members"]["bufferMemoryBarrierCount"]);}();
[&]() {
VkBufferMemoryBarrier2* temp_dDsEvTo;[&]() {

        if (name["members"]["pBufferMemoryBarriers"].contains("null")){
        temp_dDsEvTo=NULL;
        }
    temp_dDsEvTo=(VkBufferMemoryBarrier2*)malloc(result.bufferMemoryBarrierCount*sizeof(VkBufferMemoryBarrier2));
        for (int bCymfpl=0; bCymfpl < result.bufferMemoryBarrierCount; bCymfpl++){
            [&]() {
temp_dDsEvTo[bCymfpl]=deserialize_VkBufferMemoryBarrier2(name["members"]["pBufferMemoryBarriers"]["members"][bCymfpl]);}();;
        }
        }();result.pBufferMemoryBarriers=temp_dDsEvTo;}();
[&]() {
result.imageMemoryBarrierCount=deserialize_uint32_t(name["members"]["imageMemoryBarrierCount"]);}();
[&]() {
VkImageMemoryBarrier2* temp_jIMrFmL;[&]() {

        if (name["members"]["pImageMemoryBarriers"].contains("null")){
        temp_jIMrFmL=NULL;
        }
    temp_jIMrFmL=(VkImageMemoryBarrier2*)malloc(result.imageMemoryBarrierCount*sizeof(VkImageMemoryBarrier2));
        for (int piNgpZx=0; piNgpZx < result.imageMemoryBarrierCount; piNgpZx++){
            [&]() {
temp_jIMrFmL[piNgpZx]=deserialize_VkImageMemoryBarrier2(name["members"]["pImageMemoryBarriers"]["members"][piNgpZx]);}();;
        }
        }();result.pImageMemoryBarriers=temp_jIMrFmL;}();
return result;}

    json serialize_VkSemaphoreSubmitInfo(VkSemaphoreSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cKjOFdz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NGLaZNT=json({});
    
        if (name.pNext==NULL){
            return_NGLaZNT["null"]=true;
            return return_NGLaZNT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_vWqpYfO=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_KkHzSSb=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_QtgqKGk=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_fSrbQVH=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfo deserialize_VkSemaphoreSubmitInfo(json name){
        auto result=VkSemaphoreSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FYTLquP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FYTLquP=NULL;
        }
    temp_FYTLquP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FYTLquP;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkSemaphoreSubmitInfoKHR(VkSemaphoreSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eslELmZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qVNXrfw=json({});
    
        if (name.pNext==NULL){
            return_qVNXrfw["null"]=true;
            return return_qVNXrfw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["semaphore"]=[&]() {
    json return_kQmUhbI=json({});
    return serialize_VkSemaphore(name.semaphore);}();
result["members"]["value"]=[&]() {
    json return_maUsQYF=json({});
    return serialize_uint64_t(name.value);}();
result["members"]["stageMask"]=[&]() {
    json return_SMYuwjF=json({});
    return serialize_VkPipelineStageFlags2(name.stageMask);}();
result["members"]["deviceIndex"]=[&]() {
    json return_RxOFUFV=json({});
    return serialize_uint32_t(name.deviceIndex);}();
return result;}

    VkSemaphoreSubmitInfoKHR deserialize_VkSemaphoreSubmitInfoKHR(json name){
        auto result=VkSemaphoreSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ffpFtll;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ffpFtll=NULL;
        }
    temp_ffpFtll=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ffpFtll;}();
[&]() {
result.semaphore=deserialize_VkSemaphore(name["members"]["semaphore"]);}();
[&]() {
result.value=deserialize_uint64_t(name["members"]["value"]);}();
[&]() {
result.stageMask=deserialize_VkPipelineStageFlags2(name["members"]["stageMask"]);}();
[&]() {
result.deviceIndex=deserialize_uint32_t(name["members"]["deviceIndex"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfo(VkCommandBufferSubmitInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oXapsnw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HLLPCbD=json({});
    
        if (name.pNext==NULL){
            return_HLLPCbD["null"]=true;
            return return_HLLPCbD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_nRLuDwc=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_wncshDd=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfo deserialize_VkCommandBufferSubmitInfo(json name){
        auto result=VkCommandBufferSubmitInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WKIgUWe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WKIgUWe=NULL;
        }
    temp_WKIgUWe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WKIgUWe;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkCommandBufferSubmitInfoKHR(VkCommandBufferSubmitInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YrTTPYm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oyhQkOc=json({});
    
        if (name.pNext==NULL){
            return_oyhQkOc["null"]=true;
            return return_oyhQkOc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["commandBuffer"]=[&]() {
    json return_DFpXfIU=json({});
    return serialize_VkCommandBuffer(name.commandBuffer);}();
result["members"]["deviceMask"]=[&]() {
    json return_zBlODfW=json({});
    return serialize_uint32_t(name.deviceMask);}();
return result;}

    VkCommandBufferSubmitInfoKHR deserialize_VkCommandBufferSubmitInfoKHR(json name){
        auto result=VkCommandBufferSubmitInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KFDJcdy;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KFDJcdy=NULL;
        }
    temp_KFDJcdy=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KFDJcdy;}();
[&]() {
result.commandBuffer=deserialize_VkCommandBuffer(name["members"]["commandBuffer"]);}();
[&]() {
result.deviceMask=deserialize_uint32_t(name["members"]["deviceMask"]);}();
return result;}

    json serialize_VkSubmitInfo2(VkSubmitInfo2 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HVKixji=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lmGvfDk=json({});
    
        if (name.pNext==NULL){
            return_lmGvfDk["null"]=true;
            return return_lmGvfDk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_bWtWttx=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_XGFuCLT=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_WKTCXfw=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_WKTCXfw["null"]=true;
            return return_WKTCXfw;
        }
        
        return_WKTCXfw["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_jVUEZJx=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_WKTCXfw["members"][std::to_string(i)].push_back(temp);
        }
        return return_WKTCXfw;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_XHRvJlx=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_klerSDE=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_klerSDE["null"]=true;
            return return_klerSDE;
        }
        
        return_klerSDE["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_DwKpzds=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_klerSDE["members"][std::to_string(i)].push_back(temp);
        }
        return return_klerSDE;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_zhNUDhv=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_nlhesBh=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_nlhesBh["null"]=true;
            return return_nlhesBh;
        }
        
        return_nlhesBh["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_XEKlZHz=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_nlhesBh["members"][std::to_string(i)].push_back(temp);
        }
        return return_nlhesBh;
        }();
return result;}

    VkSubmitInfo2 deserialize_VkSubmitInfo2(json name){
        auto result=VkSubmitInfo2();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_xnKURwP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_xnKURwP=NULL;
        }
    temp_xnKURwP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_xnKURwP;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_lRyqjDC;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_lRyqjDC=NULL;
        }
    temp_lRyqjDC=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int fitsXyN=0; fitsXyN < result.waitSemaphoreInfoCount; fitsXyN++){
            [&]() {
temp_lRyqjDC[fitsXyN]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][fitsXyN]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_lRyqjDC;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_dWxaZVh;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_dWxaZVh=NULL;
        }
    temp_dWxaZVh=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int XJLIHHe=0; XJLIHHe < result.commandBufferInfoCount; XJLIHHe++){
            [&]() {
temp_dWxaZVh[XJLIHHe]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][XJLIHHe]);}();;
        }
        }();result.pCommandBufferInfos=temp_dWxaZVh;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_WbCaoNe;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_WbCaoNe=NULL;
        }
    temp_WbCaoNe=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int UJTWVCH=0; UJTWVCH < result.signalSemaphoreInfoCount; UJTWVCH++){
            [&]() {
temp_WbCaoNe[UJTWVCH]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][UJTWVCH]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_WbCaoNe;}();
return result;}

    json serialize_VkSubmitInfo2KHR(VkSubmitInfo2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UjzeVfR=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oEjWDsA=json({});
    
        if (name.pNext==NULL){
            return_oEjWDsA["null"]=true;
            return return_oEjWDsA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_OcaMgka=json({});
    return serialize_VkSubmitFlags(name.flags);}();
result["members"]["waitSemaphoreInfoCount"]=[&]() {
    json return_PkvFuhT=json({});
    return serialize_uint32_t(name.waitSemaphoreInfoCount);}();
result["members"]["pWaitSemaphoreInfos"]=[&]() {
    json return_mgAsQhh=json({});
    
        if (name.pWaitSemaphoreInfos==NULL){
            return_mgAsQhh["null"]=true;
            return return_mgAsQhh;
        }
        
        return_mgAsQhh["members"]={};
        for(int i=0; i < name.waitSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_EozVwZm=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pWaitSemaphoreInfos[i]);}();
            return_mgAsQhh["members"][std::to_string(i)].push_back(temp);
        }
        return return_mgAsQhh;
        }();
result["members"]["commandBufferInfoCount"]=[&]() {
    json return_elWjZfl=json({});
    return serialize_uint32_t(name.commandBufferInfoCount);}();
result["members"]["pCommandBufferInfos"]=[&]() {
    json return_fyjLKSt=json({});
    
        if (name.pCommandBufferInfos==NULL){
            return_fyjLKSt["null"]=true;
            return return_fyjLKSt;
        }
        
        return_fyjLKSt["members"]={};
        for(int i=0; i < name.commandBufferInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_OWGWzRl=json({});
    return serialize_VkCommandBufferSubmitInfo(name.pCommandBufferInfos[i]);}();
            return_fyjLKSt["members"][std::to_string(i)].push_back(temp);
        }
        return return_fyjLKSt;
        }();
result["members"]["signalSemaphoreInfoCount"]=[&]() {
    json return_ZSUTDPA=json({});
    return serialize_uint32_t(name.signalSemaphoreInfoCount);}();
result["members"]["pSignalSemaphoreInfos"]=[&]() {
    json return_XuiYybj=json({});
    
        if (name.pSignalSemaphoreInfos==NULL){
            return_XuiYybj["null"]=true;
            return return_XuiYybj;
        }
        
        return_XuiYybj["members"]={};
        for(int i=0; i < name.signalSemaphoreInfoCount; i++){
            json temp;
            temp=[&]() {
    json return_wImeJld=json({});
    return serialize_VkSemaphoreSubmitInfo(name.pSignalSemaphoreInfos[i]);}();
            return_XuiYybj["members"][std::to_string(i)].push_back(temp);
        }
        return return_XuiYybj;
        }();
return result;}

    VkSubmitInfo2KHR deserialize_VkSubmitInfo2KHR(json name){
        auto result=VkSubmitInfo2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jkDtkvI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jkDtkvI=NULL;
        }
    temp_jkDtkvI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jkDtkvI;}();
[&]() {
result.flags=deserialize_VkSubmitFlags(name["members"]["flags"]);}();
[&]() {
result.waitSemaphoreInfoCount=deserialize_uint32_t(name["members"]["waitSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_qUWTaoK;[&]() {

        if (name["members"]["pWaitSemaphoreInfos"].contains("null")){
        temp_qUWTaoK=NULL;
        }
    temp_qUWTaoK=(VkSemaphoreSubmitInfo*)malloc(result.waitSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int jbPxutI=0; jbPxutI < result.waitSemaphoreInfoCount; jbPxutI++){
            [&]() {
temp_qUWTaoK[jbPxutI]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pWaitSemaphoreInfos"]["members"][jbPxutI]);}();;
        }
        }();result.pWaitSemaphoreInfos=temp_qUWTaoK;}();
[&]() {
result.commandBufferInfoCount=deserialize_uint32_t(name["members"]["commandBufferInfoCount"]);}();
[&]() {
VkCommandBufferSubmitInfo* temp_nsISzjb;[&]() {

        if (name["members"]["pCommandBufferInfos"].contains("null")){
        temp_nsISzjb=NULL;
        }
    temp_nsISzjb=(VkCommandBufferSubmitInfo*)malloc(result.commandBufferInfoCount*sizeof(VkCommandBufferSubmitInfo));
        for (int GMcmzCB=0; GMcmzCB < result.commandBufferInfoCount; GMcmzCB++){
            [&]() {
temp_nsISzjb[GMcmzCB]=deserialize_VkCommandBufferSubmitInfo(name["members"]["pCommandBufferInfos"]["members"][GMcmzCB]);}();;
        }
        }();result.pCommandBufferInfos=temp_nsISzjb;}();
[&]() {
result.signalSemaphoreInfoCount=deserialize_uint32_t(name["members"]["signalSemaphoreInfoCount"]);}();
[&]() {
VkSemaphoreSubmitInfo* temp_RTpRrpf;[&]() {

        if (name["members"]["pSignalSemaphoreInfos"].contains("null")){
        temp_RTpRrpf=NULL;
        }
    temp_RTpRrpf=(VkSemaphoreSubmitInfo*)malloc(result.signalSemaphoreInfoCount*sizeof(VkSemaphoreSubmitInfo));
        for (int yksfzNz=0; yksfzNz < result.signalSemaphoreInfoCount; yksfzNz++){
            [&]() {
temp_RTpRrpf[yksfzNz]=deserialize_VkSemaphoreSubmitInfo(name["members"]["pSignalSemaphoreInfos"]["members"][yksfzNz]);}();;
        }
        }();result.pSignalSemaphoreInfos=temp_RTpRrpf;}();
return result;}

    json serialize_VkQueueFamilyCheckpointProperties2NV(VkQueueFamilyCheckpointProperties2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ESbCgpw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_prOxDWG=json({});
    
        if (name.pNext==NULL){
            return_prOxDWG["null"]=true;
            return return_prOxDWG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["checkpointExecutionStageMask"]=[&]() {
    json return_uahhQxt=json({});
    return serialize_VkPipelineStageFlags2(name.checkpointExecutionStageMask);}();
return result;}

    VkQueueFamilyCheckpointProperties2NV deserialize_VkQueueFamilyCheckpointProperties2NV(json name){
        auto result=VkQueueFamilyCheckpointProperties2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.checkpointExecutionStageMask=deserialize_VkPipelineStageFlags2(name["members"]["checkpointExecutionStageMask"]);}();
return result;}

    json serialize_VkCheckpointData2NV(VkCheckpointData2NV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yNqpRrE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DHIRMSP=json({});
    
        if (name.pNext==NULL){
            return_DHIRMSP["null"]=true;
            return return_DHIRMSP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stage"]=[&]() {
    json return_pbQmkqe=json({});
    return serialize_VkPipelineStageFlags2(name.stage);}();
result["members"]["pCheckpointMarker"]=[&]() {
    json return_ylclGWg=json({});
    
        if (name.pCheckpointMarker==NULL){
            return_ylclGWg["null"]=true;
            return return_ylclGWg;
        }
        return serialize_void_p(name.pCheckpointMarker);
}();
return result;}

    VkCheckpointData2NV deserialize_VkCheckpointData2NV(json name){
        auto result=VkCheckpointData2NV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.stage=deserialize_VkPipelineStageFlags2(name["members"]["stage"]);}();
[&]() {

        if (name["members"]["pCheckpointMarker"].contains("null")){
        result.pCheckpointMarker=NULL;
        }
    result.pCheckpointMarker=deserialize_void_p(name["members"]["pCheckpointMarker"]);
}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2Features(VkPhysicalDeviceSynchronization2Features name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TMJQvzV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bDMZHYU=json({});
    
        if (name.pNext==NULL){
            return_bDMZHYU["null"]=true;
            return return_bDMZHYU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_junIlkW=json({});
    return_junIlkW=[&]() {
    json return_AddLytX=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_junIlkW;}();
return result;}

    VkPhysicalDeviceSynchronization2Features deserialize_VkPhysicalDeviceSynchronization2Features(json name){
        auto result=VkPhysicalDeviceSynchronization2Features();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceSynchronization2FeaturesKHR(VkPhysicalDeviceSynchronization2FeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_stWbPMW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GhjFIbS=json({});
    
        if (name.pNext==NULL){
            return_GhjFIbS["null"]=true;
            return return_GhjFIbS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["synchronization2"]=[&]() {
    json return_SbyPnEn=json({});
    return_SbyPnEn=[&]() {
    json return_hnrsPeq=json({});
    return serialize_uint32_t(name.synchronization2);}();return return_SbyPnEn;}();
return result;}

    VkPhysicalDeviceSynchronization2FeaturesKHR deserialize_VkPhysicalDeviceSynchronization2FeaturesKHR(json name){
        auto result=VkPhysicalDeviceSynchronization2FeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.synchronization2=deserialize_uint32_t(name["members"]["synchronization2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(VkPhysicalDeviceHostImageCopyFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cKrijZi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CvKqRKu=json({});
    
        if (name.pNext==NULL){
            return_CvKqRKu["null"]=true;
            return return_CvKqRKu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hostImageCopy"]=[&]() {
    json return_JzgjTUn=json({});
    return_JzgjTUn=[&]() {
    json return_LFXXvtb=json({});
    return serialize_uint32_t(name.hostImageCopy);}();return return_JzgjTUn;}();
return result;}

    VkPhysicalDeviceHostImageCopyFeaturesEXT deserialize_VkPhysicalDeviceHostImageCopyFeaturesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hostImageCopy=deserialize_uint32_t(name["members"]["hostImageCopy"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(VkPhysicalDeviceHostImageCopyPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fOoogIN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_riukQwo=json({});
    
        if (name.pNext==NULL){
            return_riukQwo["null"]=true;
            return return_riukQwo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["copySrcLayoutCount"]=[&]() {
    json return_FOKEFlM=json({});
    return serialize_uint32_t(name.copySrcLayoutCount);}();
result["members"]["pCopySrcLayouts"]=[&]() {
    json return_oShvHhF=json({});
    
        if (name.pCopySrcLayouts==NULL){
            return_oShvHhF["null"]=true;
            return return_oShvHhF;
        }
        
        return_oShvHhF["members"]={};
        for(int i=0; i < name.copySrcLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_WSjDMIr=json({});
    return serialize_VkImageLayout(name.pCopySrcLayouts[i]);}();
            return_oShvHhF["members"][std::to_string(i)].push_back(temp);
        }
        return return_oShvHhF;
        }();
result["members"]["copyDstLayoutCount"]=[&]() {
    json return_qhAbZfO=json({});
    return serialize_uint32_t(name.copyDstLayoutCount);}();
result["members"]["pCopyDstLayouts"]=[&]() {
    json return_PidEvJI=json({});
    
        if (name.pCopyDstLayouts==NULL){
            return_PidEvJI["null"]=true;
            return return_PidEvJI;
        }
        
        return_PidEvJI["members"]={};
        for(int i=0; i < name.copyDstLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_BbxMXeV=json({});
    return serialize_VkImageLayout(name.pCopyDstLayouts[i]);}();
            return_PidEvJI["members"][std::to_string(i)].push_back(temp);
        }
        return return_PidEvJI;
        }();
result["members"]["optimalTilingLayoutUUID"]=[&]() {
    json return_NxoULss=json({});
    
        return_NxoULss["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_eSxvuqI=json({});
    return serialize_uint8_t(name.optimalTilingLayoutUUID[i]);}();
            return_NxoULss["members"][std::to_string(i)].push_back(temp);
        }
        return return_NxoULss;
        }();
result["members"]["identicalMemoryTypeRequirements"]=[&]() {
    json return_mMYCicB=json({});
    return_mMYCicB=[&]() {
    json return_wiSHyxl=json({});
    return serialize_uint32_t(name.identicalMemoryTypeRequirements);}();return return_mMYCicB;}();
return result;}

    VkPhysicalDeviceHostImageCopyPropertiesEXT deserialize_VkPhysicalDeviceHostImageCopyPropertiesEXT(json name){
        auto result=VkPhysicalDeviceHostImageCopyPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.copySrcLayoutCount=deserialize_uint32_t(name["members"]["copySrcLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopySrcLayouts"].contains("null")){
        result.pCopySrcLayouts=NULL;
        }
    result.pCopySrcLayouts=(VkImageLayout*)malloc(result.copySrcLayoutCount*sizeof(VkImageLayout));
        for (int iNLLcdz=0; iNLLcdz < result.copySrcLayoutCount; iNLLcdz++){
            [&]() {
result.pCopySrcLayouts[iNLLcdz]=deserialize_VkImageLayout(name["members"]["pCopySrcLayouts"]["members"][iNLLcdz]);}();;
        }
        }();
[&]() {
result.copyDstLayoutCount=deserialize_uint32_t(name["members"]["copyDstLayoutCount"]);}();
[&]() {

        if (name["members"]["pCopyDstLayouts"].contains("null")){
        result.pCopyDstLayouts=NULL;
        }
    result.pCopyDstLayouts=(VkImageLayout*)malloc(result.copyDstLayoutCount*sizeof(VkImageLayout));
        for (int NZGpKXO=0; NZGpKXO < result.copyDstLayoutCount; NZGpKXO++){
            [&]() {
result.pCopyDstLayouts[NZGpKXO]=deserialize_VkImageLayout(name["members"]["pCopyDstLayouts"]["members"][NZGpKXO]);}();;
        }
        }();
[&]() {

        for (int uhKYnFv=0; uhKYnFv < VK_UUID_SIZE; uhKYnFv++){
            [&]() {
result.optimalTilingLayoutUUID[uhKYnFv]=deserialize_uint8_t(name["members"]["optimalTilingLayoutUUID"]["members"][uhKYnFv]);}();;
        }
        }();
[&]() {
[&]() {
result.identicalMemoryTypeRequirements=deserialize_uint32_t(name["members"]["identicalMemoryTypeRequirements"]);}();}();
return result;}

    json serialize_VkMemoryToImageCopyEXT(VkMemoryToImageCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cChHNjo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cIKAzWV=json({});
    
        if (name.pNext==NULL){
            return_cIKAzWV["null"]=true;
            return return_cIKAzWV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_VGKVCEE=json({});
    
        if (name.pHostPointer==NULL){
            return_VGKVCEE["null"]=true;
            return return_VGKVCEE;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_gYYUTIw=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_BXnalfe=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_krDtCTl=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_ECcWpHA=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_jOXSKxi=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkMemoryToImageCopyEXT deserialize_VkMemoryToImageCopyEXT(json name){
        auto result=VkMemoryToImageCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YAEFxEC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YAEFxEC=NULL;
        }
    temp_YAEFxEC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YAEFxEC;}();
[&]() {
void* temp_ariCGBg;[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        temp_ariCGBg=NULL;
        }
    temp_ariCGBg=deserialize_void_p(name["members"]["pHostPointer"]);
}();result.pHostPointer=temp_ariCGBg;}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkImageToMemoryCopyEXT(VkImageToMemoryCopyEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FdSpvIQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gBPYUhC=json({});
    
        if (name.pNext==NULL){
            return_gBPYUhC["null"]=true;
            return return_gBPYUhC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pHostPointer"]=[&]() {
    json return_dDYmeVY=json({});
    
        if (name.pHostPointer==NULL){
            return_dDYmeVY["null"]=true;
            return return_dDYmeVY;
        }
        return serialize_void_p(name.pHostPointer);
}();
result["members"]["memoryRowLength"]=[&]() {
    json return_VZKMFwY=json({});
    return serialize_uint32_t(name.memoryRowLength);}();
result["members"]["memoryImageHeight"]=[&]() {
    json return_SqrUBcY=json({});
    return serialize_uint32_t(name.memoryImageHeight);}();
result["members"]["imageSubresource"]=[&]() {
    json return_eFzYFsO=json({});
    return serialize_VkImageSubresourceLayers(name.imageSubresource);}();
result["members"]["imageOffset"]=[&]() {
    json return_zRdpLCG=json({});
    return serialize_VkOffset3D(name.imageOffset);}();
result["members"]["imageExtent"]=[&]() {
    json return_WVIbLYC=json({});
    return serialize_VkExtent3D(name.imageExtent);}();
return result;}

    VkImageToMemoryCopyEXT deserialize_VkImageToMemoryCopyEXT(json name){
        auto result=VkImageToMemoryCopyEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QeNIGHv;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QeNIGHv=NULL;
        }
    temp_QeNIGHv=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QeNIGHv;}();
[&]() {

        if (name["members"]["pHostPointer"].contains("null")){
        result.pHostPointer=NULL;
        }
    result.pHostPointer=deserialize_void_p(name["members"]["pHostPointer"]);
}();
[&]() {
result.memoryRowLength=deserialize_uint32_t(name["members"]["memoryRowLength"]);}();
[&]() {
result.memoryImageHeight=deserialize_uint32_t(name["members"]["memoryImageHeight"]);}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresourceLayers(name["members"]["imageSubresource"]);}();
[&]() {
result.imageOffset=deserialize_VkOffset3D(name["members"]["imageOffset"]);}();
[&]() {
result.imageExtent=deserialize_VkExtent3D(name["members"]["imageExtent"]);}();
return result;}

    json serialize_VkCopyMemoryToImageInfoEXT(VkCopyMemoryToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mcMOcrh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VbDOVer=json({});
    
        if (name.pNext==NULL){
            return_VbDOVer["null"]=true;
            return return_VbDOVer;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_XqoLqoS=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["dstImage"]=[&]() {
    json return_VMCUSxZ=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_gcqkYGn=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_BbweAHt=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_ZKqQIab=json({});
    
        if (name.pRegions==NULL){
            return_ZKqQIab["null"]=true;
            return return_ZKqQIab;
        }
        
        return_ZKqQIab["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_KpTaOrg=json({});
    return serialize_VkMemoryToImageCopyEXT(name.pRegions[i]);}();
            return_ZKqQIab["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZKqQIab;
        }();
return result;}

    VkCopyMemoryToImageInfoEXT deserialize_VkCopyMemoryToImageInfoEXT(json name){
        auto result=VkCopyMemoryToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ExNcOub;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ExNcOub=NULL;
        }
    temp_ExNcOub=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ExNcOub;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkMemoryToImageCopyEXT* temp_KZCKOJy;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_KZCKOJy=NULL;
        }
    temp_KZCKOJy=(VkMemoryToImageCopyEXT*)malloc(result.regionCount*sizeof(VkMemoryToImageCopyEXT));
        for (int xZAZaAU=0; xZAZaAU < result.regionCount; xZAZaAU++){
            [&]() {
temp_KZCKOJy[xZAZaAU]=deserialize_VkMemoryToImageCopyEXT(name["members"]["pRegions"]["members"][xZAZaAU]);}();;
        }
        }();result.pRegions=temp_KZCKOJy;}();
return result;}

    json serialize_VkCopyImageToMemoryInfoEXT(VkCopyImageToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HgYLLbv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rfeAMPc=json({});
    
        if (name.pNext==NULL){
            return_rfeAMPc["null"]=true;
            return return_rfeAMPc;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yPYzAnp=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_aybQNSQ=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_nAfCEPL=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_tCjcRHS=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_DiQEcoX=json({});
    
        if (name.pRegions==NULL){
            return_DiQEcoX["null"]=true;
            return return_DiQEcoX;
        }
        
        return_DiQEcoX["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_beIEdgY=json({});
    return serialize_VkImageToMemoryCopyEXT(name.pRegions[i]);}();
            return_DiQEcoX["members"][std::to_string(i)].push_back(temp);
        }
        return return_DiQEcoX;
        }();
return result;}

    VkCopyImageToMemoryInfoEXT deserialize_VkCopyImageToMemoryInfoEXT(json name){
        auto result=VkCopyImageToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_BtPfOzV;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_BtPfOzV=NULL;
        }
    temp_BtPfOzV=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_BtPfOzV;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageToMemoryCopyEXT* temp_iErhZkx;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_iErhZkx=NULL;
        }
    temp_iErhZkx=(VkImageToMemoryCopyEXT*)malloc(result.regionCount*sizeof(VkImageToMemoryCopyEXT));
        for (int XtEUTwn=0; XtEUTwn < result.regionCount; XtEUTwn++){
            [&]() {
temp_iErhZkx[XtEUTwn]=deserialize_VkImageToMemoryCopyEXT(name["members"]["pRegions"]["members"][XtEUTwn]);}();;
        }
        }();result.pRegions=temp_iErhZkx;}();
return result;}

    json serialize_VkCopyImageToImageInfoEXT(VkCopyImageToImageInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DcFpljc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fRYTpLV=json({});
    
        if (name.pNext==NULL){
            return_fRYTpLV["null"]=true;
            return return_fRYTpLV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_GZChvgM=json({});
    return serialize_VkHostImageCopyFlagsEXT(name.flags);}();
result["members"]["srcImage"]=[&]() {
    json return_VcDHyyB=json({});
    return serialize_VkImage(name.srcImage);}();
result["members"]["srcImageLayout"]=[&]() {
    json return_zXoxqVm=json({});
    return serialize_VkImageLayout(name.srcImageLayout);}();
result["members"]["dstImage"]=[&]() {
    json return_mZdzqGg=json({});
    return serialize_VkImage(name.dstImage);}();
result["members"]["dstImageLayout"]=[&]() {
    json return_LrzyEpC=json({});
    return serialize_VkImageLayout(name.dstImageLayout);}();
result["members"]["regionCount"]=[&]() {
    json return_AtKyxQb=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_ybwFfwN=json({});
    
        if (name.pRegions==NULL){
            return_ybwFfwN["null"]=true;
            return return_ybwFfwN;
        }
        
        return_ybwFfwN["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_CfrlVym=json({});
    return serialize_VkImageCopy2(name.pRegions[i]);}();
            return_ybwFfwN["members"][std::to_string(i)].push_back(temp);
        }
        return return_ybwFfwN;
        }();
return result;}

    VkCopyImageToImageInfoEXT deserialize_VkCopyImageToImageInfoEXT(json name){
        auto result=VkCopyImageToImageInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_vLVCfuS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_vLVCfuS=NULL;
        }
    temp_vLVCfuS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_vLVCfuS;}();
[&]() {
result.flags=deserialize_VkHostImageCopyFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.srcImage=deserialize_VkImage(name["members"]["srcImage"]);}();
[&]() {
result.srcImageLayout=deserialize_VkImageLayout(name["members"]["srcImageLayout"]);}();
[&]() {
result.dstImage=deserialize_VkImage(name["members"]["dstImage"]);}();
[&]() {
result.dstImageLayout=deserialize_VkImageLayout(name["members"]["dstImageLayout"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkImageCopy2* temp_TLmAdQm;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_TLmAdQm=NULL;
        }
    temp_TLmAdQm=(VkImageCopy2*)malloc(result.regionCount*sizeof(VkImageCopy2));
        for (int mQNRRiU=0; mQNRRiU < result.regionCount; mQNRRiU++){
            [&]() {
temp_TLmAdQm[mQNRRiU]=deserialize_VkImageCopy2(name["members"]["pRegions"]["members"][mQNRRiU]);}();;
        }
        }();result.pRegions=temp_TLmAdQm;}();
return result;}

    json serialize_VkHostImageLayoutTransitionInfoEXT(VkHostImageLayoutTransitionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tIeLSbN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NyjPMIV=json({});
    
        if (name.pNext==NULL){
            return_NyjPMIV["null"]=true;
            return return_NyjPMIV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_HcpFSGB=json({});
    return serialize_VkImage(name.image);}();
result["members"]["oldLayout"]=[&]() {
    json return_csSrUyR=json({});
    return serialize_VkImageLayout(name.oldLayout);}();
result["members"]["newLayout"]=[&]() {
    json return_lfWDcwf=json({});
    return serialize_VkImageLayout(name.newLayout);}();
result["members"]["subresourceRange"]=[&]() {
    json return_YpOmvhS=json({});
    return serialize_VkImageSubresourceRange(name.subresourceRange);}();
return result;}

    VkHostImageLayoutTransitionInfoEXT deserialize_VkHostImageLayoutTransitionInfoEXT(json name){
        auto result=VkHostImageLayoutTransitionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zDIwlhS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zDIwlhS=NULL;
        }
    temp_zDIwlhS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zDIwlhS;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
[&]() {
result.oldLayout=deserialize_VkImageLayout(name["members"]["oldLayout"]);}();
[&]() {
result.newLayout=deserialize_VkImageLayout(name["members"]["newLayout"]);}();
[&]() {
result.subresourceRange=deserialize_VkImageSubresourceRange(name["members"]["subresourceRange"]);}();
return result;}

    json serialize_VkSubresourceHostMemcpySizeEXT(VkSubresourceHostMemcpySizeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WyWpcql=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vTWrxKk=json({});
    
        if (name.pNext==NULL){
            return_vTWrxKk["null"]=true;
            return return_vTWrxKk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["size"]=[&]() {
    json return_ZnVBOQv=json({});
    return_ZnVBOQv=[&]() {
    json return_HJiCISG=json({});
    return serialize_uint64_t(name.size);}();return return_ZnVBOQv;}();
return result;}

    VkSubresourceHostMemcpySizeEXT deserialize_VkSubresourceHostMemcpySizeEXT(json name){
        auto result=VkSubresourceHostMemcpySizeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkHostImageCopyDevicePerformanceQueryEXT(VkHostImageCopyDevicePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZuXUibM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kzzNtnV=json({});
    
        if (name.pNext==NULL){
            return_kzzNtnV["null"]=true;
            return return_kzzNtnV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimalDeviceAccess"]=[&]() {
    json return_ZSasUqt=json({});
    return_ZSasUqt=[&]() {
    json return_kxVclgn=json({});
    return serialize_uint32_t(name.optimalDeviceAccess);}();return return_ZSasUqt;}();
result["members"]["identicalMemoryLayout"]=[&]() {
    json return_GXBaNJc=json({});
    return_GXBaNJc=[&]() {
    json return_VirgqUq=json({});
    return serialize_uint32_t(name.identicalMemoryLayout);}();return return_GXBaNJc;}();
return result;}

    VkHostImageCopyDevicePerformanceQueryEXT deserialize_VkHostImageCopyDevicePerformanceQueryEXT(json name){
        auto result=VkHostImageCopyDevicePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimalDeviceAccess=deserialize_uint32_t(name["members"]["optimalDeviceAccess"]);}();}();
[&]() {
[&]() {
result.identicalMemoryLayout=deserialize_uint32_t(name["members"]["identicalMemoryLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JrpJSWG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HgBuzIi=json({});
    
        if (name.pNext==NULL){
            return_HgBuzIi["null"]=true;
            return return_HgBuzIi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["primitivesGeneratedQuery"]=[&]() {
    json return_uFUTSqc=json({});
    return_uFUTSqc=[&]() {
    json return_ZySzuSy=json({});
    return serialize_uint32_t(name.primitivesGeneratedQuery);}();return return_uFUTSqc;}();
result["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]=[&]() {
    json return_tsTpWhT=json({});
    return_tsTpWhT=[&]() {
    json return_ZVyATpV=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithRasterizerDiscard);}();return return_tsTpWhT;}();
result["members"]["primitivesGeneratedQueryWithNonZeroStreams"]=[&]() {
    json return_sRGYnlD=json({});
    return_sRGYnlD=[&]() {
    json return_ILPDtFA=json({});
    return serialize_uint32_t(name.primitivesGeneratedQueryWithNonZeroStreams);}();return return_sRGYnlD;}();
return result;}

    VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT deserialize_VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT(json name){
        auto result=VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.primitivesGeneratedQuery=deserialize_uint32_t(name["members"]["primitivesGeneratedQuery"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithRasterizerDiscard=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithRasterizerDiscard"]);}();}();
[&]() {
[&]() {
result.primitivesGeneratedQueryWithNonZeroStreams=deserialize_uint32_t(name["members"]["primitivesGeneratedQueryWithNonZeroStreams"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(VkPhysicalDeviceLegacyDitheringFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DJXBosJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GEYyhFh=json({});
    
        if (name.pNext==NULL){
            return_GEYyhFh["null"]=true;
            return return_GEYyhFh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["legacyDithering"]=[&]() {
    json return_SaBZRqi=json({});
    return_SaBZRqi=[&]() {
    json return_QIPazJF=json({});
    return serialize_uint32_t(name.legacyDithering);}();return return_SaBZRqi;}();
return result;}

    VkPhysicalDeviceLegacyDitheringFeaturesEXT deserialize_VkPhysicalDeviceLegacyDitheringFeaturesEXT(json name){
        auto result=VkPhysicalDeviceLegacyDitheringFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.legacyDithering=deserialize_uint32_t(name["members"]["legacyDithering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tvHxkBw=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UOnEEkl=json({});
    
        if (name.pNext==NULL){
            return_UOnEEkl["null"]=true;
            return return_UOnEEkl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampled"]=[&]() {
    json return_aIqFhbw=json({});
    return_aIqFhbw=[&]() {
    json return_uLmxRuF=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampled);}();return return_aIqFhbw;}();
return result;}

    VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT deserialize_VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT(json name){
        auto result=VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampled=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampled"]);}();}();
return result;}

    json serialize_VkSubpassResolvePerformanceQueryEXT(VkSubpassResolvePerformanceQueryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_izRjHyt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PSGCNES=json({});
    
        if (name.pNext==NULL){
            return_PSGCNES["null"]=true;
            return return_PSGCNES;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["optimal"]=[&]() {
    json return_HznAuxZ=json({});
    return_HznAuxZ=[&]() {
    json return_jKxcFhd=json({});
    return serialize_uint32_t(name.optimal);}();return return_HznAuxZ;}();
return result;}

    VkSubpassResolvePerformanceQueryEXT deserialize_VkSubpassResolvePerformanceQueryEXT(json name){
        auto result=VkSubpassResolvePerformanceQueryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.optimal=deserialize_uint32_t(name["members"]["optimal"]);}();}();
return result;}

    json serialize_VkMultisampledRenderToSingleSampledInfoEXT(VkMultisampledRenderToSingleSampledInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hlSZwjl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KQXsqrM=json({});
    
        if (name.pNext==NULL){
            return_KQXsqrM["null"]=true;
            return return_KQXsqrM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multisampledRenderToSingleSampledEnable"]=[&]() {
    json return_XszwPez=json({});
    return_XszwPez=[&]() {
    json return_eBznWZc=json({});
    return serialize_uint32_t(name.multisampledRenderToSingleSampledEnable);}();return return_XszwPez;}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_agAaFHX=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkMultisampledRenderToSingleSampledInfoEXT deserialize_VkMultisampledRenderToSingleSampledInfoEXT(json name){
        auto result=VkMultisampledRenderToSingleSampledInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XydBZZI;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XydBZZI=NULL;
        }
    temp_XydBZZI=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XydBZZI;}();
[&]() {
[&]() {
result.multisampledRenderToSingleSampledEnable=deserialize_uint32_t(name["members"]["multisampledRenderToSingleSampledEnable"]);}();}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(VkPhysicalDevicePipelineProtectedAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_skcVMlj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DeYurFo=json({});
    
        if (name.pNext==NULL){
            return_DeYurFo["null"]=true;
            return return_DeYurFo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineProtectedAccess"]=[&]() {
    json return_cgccUFb=json({});
    return_cgccUFb=[&]() {
    json return_mJVqLHl=json({});
    return serialize_uint32_t(name.pipelineProtectedAccess);}();return return_cgccUFb;}();
return result;}

    VkPhysicalDevicePipelineProtectedAccessFeaturesEXT deserialize_VkPhysicalDevicePipelineProtectedAccessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineProtectedAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineProtectedAccess=deserialize_uint32_t(name["members"]["pipelineProtectedAccess"]);}();}();
return result;}

    json serialize_VkQueueFamilyVideoPropertiesKHR(VkQueueFamilyVideoPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YfUlaeM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vOnryUG=json({});
    
        if (name.pNext==NULL){
            return_vOnryUG["null"]=true;
            return return_vOnryUG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperations"]=[&]() {
    json return_hBRKpxb=json({});
    return serialize_VkVideoCodecOperationFlagsKHR(name.videoCodecOperations);}();
return result;}

    VkQueueFamilyVideoPropertiesKHR deserialize_VkQueueFamilyVideoPropertiesKHR(json name){
        auto result=VkQueueFamilyVideoPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.videoCodecOperations=deserialize_VkVideoCodecOperationFlagsKHR(name["members"]["videoCodecOperations"]);}();
return result;}

    json serialize_VkQueueFamilyQueryResultStatusPropertiesKHR(VkQueueFamilyQueryResultStatusPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qHrPUoS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qaSieEv=json({});
    
        if (name.pNext==NULL){
            return_qaSieEv["null"]=true;
            return return_qaSieEv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queryResultStatusSupport"]=[&]() {
    json return_FfFioSx=json({});
    return_FfFioSx=[&]() {
    json return_fKCWbZp=json({});
    return serialize_uint32_t(name.queryResultStatusSupport);}();return return_FfFioSx;}();
return result;}

    VkQueueFamilyQueryResultStatusPropertiesKHR deserialize_VkQueueFamilyQueryResultStatusPropertiesKHR(json name){
        auto result=VkQueueFamilyQueryResultStatusPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.queryResultStatusSupport=deserialize_uint32_t(name["members"]["queryResultStatusSupport"]);}();}();
return result;}

    json serialize_VkVideoProfileListInfoKHR(VkVideoProfileListInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rHjRHMc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IbxpnRQ=json({});
    
        if (name.pNext==NULL){
            return_IbxpnRQ["null"]=true;
            return return_IbxpnRQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["profileCount"]=[&]() {
    json return_ujjHfvv=json({});
    return serialize_uint32_t(name.profileCount);}();
result["members"]["pProfiles"]=[&]() {
    json return_TiulDIS=json({});
    
        if (name.pProfiles==NULL){
            return_TiulDIS["null"]=true;
            return return_TiulDIS;
        }
        
        return_TiulDIS["members"]={};
        for(int i=0; i < name.profileCount; i++){
            json temp;
            temp=[&]() {
    json return_hTDkhaJ=json({});
    return serialize_VkVideoProfileInfoKHR(name.pProfiles[i]);}();
            return_TiulDIS["members"][std::to_string(i)].push_back(temp);
        }
        return return_TiulDIS;
        }();
return result;}

    VkVideoProfileListInfoKHR deserialize_VkVideoProfileListInfoKHR(json name){
        auto result=VkVideoProfileListInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mEjmuWm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mEjmuWm=NULL;
        }
    temp_mEjmuWm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mEjmuWm;}();
[&]() {
result.profileCount=deserialize_uint32_t(name["members"]["profileCount"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_HKKGgMB;[&]() {

        if (name["members"]["pProfiles"].contains("null")){
        temp_HKKGgMB=NULL;
        }
    temp_HKKGgMB=(VkVideoProfileInfoKHR*)malloc(result.profileCount*sizeof(VkVideoProfileInfoKHR));
        for (int GCdJbaa=0; GCdJbaa < result.profileCount; GCdJbaa++){
            [&]() {
temp_HKKGgMB[GCdJbaa]=deserialize_VkVideoProfileInfoKHR(name["members"]["pProfiles"]["members"][GCdJbaa]);}();;
        }
        }();result.pProfiles=temp_HKKGgMB;}();
return result;}

    json serialize_VkPhysicalDeviceVideoFormatInfoKHR(VkPhysicalDeviceVideoFormatInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JioLypp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DwqERhX=json({});
    
        if (name.pNext==NULL){
            return_DwqERhX["null"]=true;
            return return_DwqERhX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageUsage"]=[&]() {
    json return_ggmNNYf=json({});
    return serialize_VkImageUsageFlags(name.imageUsage);}();
return result;}

    VkPhysicalDeviceVideoFormatInfoKHR deserialize_VkPhysicalDeviceVideoFormatInfoKHR(json name){
        auto result=VkPhysicalDeviceVideoFormatInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_PxnVBTd;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_PxnVBTd=NULL;
        }
    temp_PxnVBTd=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_PxnVBTd;}();
[&]() {
result.imageUsage=deserialize_VkImageUsageFlags(name["members"]["imageUsage"]);}();
return result;}

    json serialize_VkVideoFormatPropertiesKHR(VkVideoFormatPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oZRkaKV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KMCBcPT=json({});
    
        if (name.pNext==NULL){
            return_KMCBcPT["null"]=true;
            return return_KMCBcPT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_cFUWgon=json({});
    return serialize_VkFormat(name.format);}();
result["members"]["componentMapping"]=[&]() {
    json return_WrLfTdV=json({});
    return serialize_VkComponentMapping(name.componentMapping);}();
result["members"]["imageCreateFlags"]=[&]() {
    json return_UklPHGu=json({});
    return serialize_VkImageCreateFlags(name.imageCreateFlags);}();
result["members"]["imageType"]=[&]() {
    json return_rgwhpAP=json({});
    return serialize_VkImageType(name.imageType);}();
result["members"]["imageTiling"]=[&]() {
    json return_XwKdvpz=json({});
    return serialize_VkImageTiling(name.imageTiling);}();
result["members"]["imageUsageFlags"]=[&]() {
    json return_zbBGzeQ=json({});
    return serialize_VkImageUsageFlags(name.imageUsageFlags);}();
return result;}

    VkVideoFormatPropertiesKHR deserialize_VkVideoFormatPropertiesKHR(json name){
        auto result=VkVideoFormatPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
[&]() {
result.componentMapping=deserialize_VkComponentMapping(name["members"]["componentMapping"]);}();
[&]() {
result.imageCreateFlags=deserialize_VkImageCreateFlags(name["members"]["imageCreateFlags"]);}();
[&]() {
result.imageType=deserialize_VkImageType(name["members"]["imageType"]);}();
[&]() {
result.imageTiling=deserialize_VkImageTiling(name["members"]["imageTiling"]);}();
[&]() {
result.imageUsageFlags=deserialize_VkImageUsageFlags(name["members"]["imageUsageFlags"]);}();
return result;}

    json serialize_VkVideoProfileInfoKHR(VkVideoProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rnVnMGh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TaTotQM=json({});
    
        if (name.pNext==NULL){
            return_TaTotQM["null"]=true;
            return return_TaTotQM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoCodecOperation"]=[&]() {
    json return_WJuxqmR=json({});
    return serialize_VkVideoCodecOperationFlagBitsKHR(name.videoCodecOperation);}();
result["members"]["chromaSubsampling"]=[&]() {
    json return_MRgwCtd=json({});
    return serialize_VkVideoChromaSubsamplingFlagsKHR(name.chromaSubsampling);}();
result["members"]["lumaBitDepth"]=[&]() {
    json return_dDGKxHR=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.lumaBitDepth);}();
result["members"]["chromaBitDepth"]=[&]() {
    json return_VTTwhUl=json({});
    return serialize_VkVideoComponentBitDepthFlagsKHR(name.chromaBitDepth);}();
return result;}

    VkVideoProfileInfoKHR deserialize_VkVideoProfileInfoKHR(json name){
        auto result=VkVideoProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_AtCUtIM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_AtCUtIM=NULL;
        }
    temp_AtCUtIM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_AtCUtIM;}();
[&]() {
result.videoCodecOperation=deserialize_VkVideoCodecOperationFlagBitsKHR(name["members"]["videoCodecOperation"]);}();
[&]() {
result.chromaSubsampling=deserialize_VkVideoChromaSubsamplingFlagsKHR(name["members"]["chromaSubsampling"]);}();
[&]() {
result.lumaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["lumaBitDepth"]);}();
[&]() {
result.chromaBitDepth=deserialize_VkVideoComponentBitDepthFlagsKHR(name["members"]["chromaBitDepth"]);}();
return result;}

    json serialize_VkVideoCapabilitiesKHR(VkVideoCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ueVqcIC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YmGzYRq=json({});
    
        if (name.pNext==NULL){
            return_YmGzYRq["null"]=true;
            return return_YmGzYRq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_RsLjhXt=json({});
    return serialize_VkVideoCapabilityFlagsKHR(name.flags);}();
result["members"]["minBitstreamBufferOffsetAlignment"]=[&]() {
    json return_mFsJJaY=json({});
    return_mFsJJaY=[&]() {
    json return_eITEOFk=json({});
    return serialize_uint64_t(name.minBitstreamBufferOffsetAlignment);}();return return_mFsJJaY;}();
result["members"]["minBitstreamBufferSizeAlignment"]=[&]() {
    json return_SeuURWR=json({});
    return_SeuURWR=[&]() {
    json return_LUnvShc=json({});
    return serialize_uint64_t(name.minBitstreamBufferSizeAlignment);}();return return_SeuURWR;}();
result["members"]["pictureAccessGranularity"]=[&]() {
    json return_cLUPOYH=json({});
    return serialize_VkExtent2D(name.pictureAccessGranularity);}();
result["members"]["minCodedExtent"]=[&]() {
    json return_qMWxmyu=json({});
    return serialize_VkExtent2D(name.minCodedExtent);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_WZNSEuM=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_fKtqWuX=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_ELbVdam=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["stdHeaderVersion"]=[&]() {
    json return_AtzobEA=json({});
    return serialize_VkExtensionProperties(name.stdHeaderVersion);}();
return result;}

    VkVideoCapabilitiesKHR deserialize_VkVideoCapabilitiesKHR(json name){
        auto result=VkVideoCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoCapabilityFlagsKHR(name["members"]["flags"]);}();
[&]() {
[&]() {
result.minBitstreamBufferOffsetAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferOffsetAlignment"]);}();}();
[&]() {
[&]() {
result.minBitstreamBufferSizeAlignment=deserialize_uint64_t(name["members"]["minBitstreamBufferSizeAlignment"]);}();}();
[&]() {
result.pictureAccessGranularity=deserialize_VkExtent2D(name["members"]["pictureAccessGranularity"]);}();
[&]() {
result.minCodedExtent=deserialize_VkExtent2D(name["members"]["minCodedExtent"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
result.stdHeaderVersion=deserialize_VkExtensionProperties(name["members"]["stdHeaderVersion"]);}();
return result;}

    json serialize_VkVideoSessionMemoryRequirementsKHR(VkVideoSessionMemoryRequirementsKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nIWKgUy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SNHYmXv=json({});
    
        if (name.pNext==NULL){
            return_SNHYmXv["null"]=true;
            return return_SNHYmXv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_IjRahQu=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memoryRequirements"]=[&]() {
    json return_OvHAMIi=json({});
    return serialize_VkMemoryRequirements(name.memoryRequirements);}();
return result;}

    VkVideoSessionMemoryRequirementsKHR deserialize_VkVideoSessionMemoryRequirementsKHR(json name){
        auto result=VkVideoSessionMemoryRequirementsKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memoryRequirements=deserialize_VkMemoryRequirements(name["members"]["memoryRequirements"]);}();
return result;}

    json serialize_VkBindVideoSessionMemoryInfoKHR(VkBindVideoSessionMemoryInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oIAKquc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nmoeFOs=json({});
    
        if (name.pNext==NULL){
            return_nmoeFOs["null"]=true;
            return return_nmoeFOs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memoryBindIndex"]=[&]() {
    json return_PZAsMzb=json({});
    return serialize_uint32_t(name.memoryBindIndex);}();
result["members"]["memory"]=[&]() {
    json return_TRAiSmI=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["memoryOffset"]=[&]() {
    json return_WTNfvtA=json({});
    return_WTNfvtA=[&]() {
    json return_kdXKZJL=json({});
    return serialize_uint64_t(name.memoryOffset);}();return return_WTNfvtA;}();
result["members"]["memorySize"]=[&]() {
    json return_JVWsHhZ=json({});
    return_JVWsHhZ=[&]() {
    json return_IqQBDkL=json({});
    return serialize_uint64_t(name.memorySize);}();return return_JVWsHhZ;}();
return result;}

    VkBindVideoSessionMemoryInfoKHR deserialize_VkBindVideoSessionMemoryInfoKHR(json name){
        auto result=VkBindVideoSessionMemoryInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ttRgqQQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ttRgqQQ=NULL;
        }
    temp_ttRgqQQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ttRgqQQ;}();
[&]() {
result.memoryBindIndex=deserialize_uint32_t(name["members"]["memoryBindIndex"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.memoryOffset=deserialize_uint64_t(name["members"]["memoryOffset"]);}();}();
[&]() {
[&]() {
result.memorySize=deserialize_uint64_t(name["members"]["memorySize"]);}();}();
return result;}

    json serialize_VkVideoPictureResourceInfoKHR(VkVideoPictureResourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RaEeHlI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GdSEBBw=json({});
    
        if (name.pNext==NULL){
            return_GdSEBBw["null"]=true;
            return return_GdSEBBw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["codedOffset"]=[&]() {
    json return_pbWQLBo=json({});
    return serialize_VkOffset2D(name.codedOffset);}();
result["members"]["codedExtent"]=[&]() {
    json return_iEyfSJv=json({});
    return serialize_VkExtent2D(name.codedExtent);}();
result["members"]["baseArrayLayer"]=[&]() {
    json return_ILGjgjS=json({});
    return serialize_uint32_t(name.baseArrayLayer);}();
result["members"]["imageViewBinding"]=[&]() {
    json return_cndbdwl=json({});
    return serialize_VkImageView(name.imageViewBinding);}();
return result;}

    VkVideoPictureResourceInfoKHR deserialize_VkVideoPictureResourceInfoKHR(json name){
        auto result=VkVideoPictureResourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZKdRfQG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZKdRfQG=NULL;
        }
    temp_ZKdRfQG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZKdRfQG;}();
[&]() {
result.codedOffset=deserialize_VkOffset2D(name["members"]["codedOffset"]);}();
[&]() {
result.codedExtent=deserialize_VkExtent2D(name["members"]["codedExtent"]);}();
[&]() {
result.baseArrayLayer=deserialize_uint32_t(name["members"]["baseArrayLayer"]);}();
[&]() {
result.imageViewBinding=deserialize_VkImageView(name["members"]["imageViewBinding"]);}();
return result;}

    json serialize_VkVideoReferenceSlotInfoKHR(VkVideoReferenceSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rZmjLQm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cuzcGxv=json({});
    
        if (name.pNext==NULL){
            return_cuzcGxv["null"]=true;
            return return_cuzcGxv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["slotIndex"]=[&]() {
    json return_gTQTsPF=json({});
    return serialize_int32_t(name.slotIndex);}();
result["members"]["pPictureResource"]=[&]() {
    json return_idqztQS=json({});
    
        if (name.pPictureResource==NULL){
            return_idqztQS["null"]=true;
            return return_idqztQS;
        }
        return_idqztQS=[&]() {
    json return_oevppaF=json({});
    return serialize_VkVideoPictureResourceInfoKHR(*name.pPictureResource);}();
return return_idqztQS;}();
return result;}

    VkVideoReferenceSlotInfoKHR deserialize_VkVideoReferenceSlotInfoKHR(json name){
        auto result=VkVideoReferenceSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WsTsXAx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WsTsXAx=NULL;
        }
    temp_WsTsXAx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WsTsXAx;}();
[&]() {
result.slotIndex=deserialize_int32_t(name["members"]["slotIndex"]);}();
[&]() {
VkVideoPictureResourceInfoKHR* temp_WKwfnwr;[&]() {

        if (name["members"]["pPictureResource"].contains("null")){
        temp_WKwfnwr=NULL;
        }
    [&]() {
*(temp_WKwfnwr)=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["pPictureResource"]);}();
}();result.pPictureResource=temp_WKwfnwr;}();
return result;}

    json serialize_VkVideoDecodeCapabilitiesKHR(VkVideoDecodeCapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_lWxSnny=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qcpOKer=json({});
    
        if (name.pNext==NULL){
            return_qcpOKer["null"]=true;
            return return_qcpOKer;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_UtSTEXJ=json({});
    return serialize_VkVideoDecodeCapabilityFlagsKHR(name.flags);}();
return result;}

    VkVideoDecodeCapabilitiesKHR deserialize_VkVideoDecodeCapabilitiesKHR(json name){
        auto result=VkVideoDecodeCapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkVideoDecodeCapabilityFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoDecodeUsageInfoKHR(VkVideoDecodeUsageInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ylkmWlE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_loKXBqP=json({});
    
        if (name.pNext==NULL){
            return_loKXBqP["null"]=true;
            return return_loKXBqP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["videoUsageHints"]=[&]() {
    json return_BfKJczj=json({});
    return serialize_VkVideoDecodeUsageFlagsKHR(name.videoUsageHints);}();
return result;}

    VkVideoDecodeUsageInfoKHR deserialize_VkVideoDecodeUsageInfoKHR(json name){
        auto result=VkVideoDecodeUsageInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IvxUAkf;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IvxUAkf=NULL;
        }
    temp_IvxUAkf=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IvxUAkf;}();
[&]() {
result.videoUsageHints=deserialize_VkVideoDecodeUsageFlagsKHR(name["members"]["videoUsageHints"]);}();
return result;}

    json serialize_VkVideoDecodeInfoKHR(VkVideoDecodeInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dHYHViA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jgBBGBs=json({});
    
        if (name.pNext==NULL){
            return_jgBBGBs["null"]=true;
            return return_jgBBGBs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_mlWjgHe=json({});
    return serialize_VkVideoDecodeFlagsKHR(name.flags);}();
result["members"]["srcBuffer"]=[&]() {
    json return_IltXjce=json({});
    return serialize_VkBuffer(name.srcBuffer);}();
result["members"]["srcBufferOffset"]=[&]() {
    json return_taNcaBY=json({});
    return_taNcaBY=[&]() {
    json return_voxWdxz=json({});
    return serialize_uint64_t(name.srcBufferOffset);}();return return_taNcaBY;}();
result["members"]["srcBufferRange"]=[&]() {
    json return_uDUaccU=json({});
    return_uDUaccU=[&]() {
    json return_VBoLugZ=json({});
    return serialize_uint64_t(name.srcBufferRange);}();return return_uDUaccU;}();
result["members"]["dstPictureResource"]=[&]() {
    json return_WsmjUpj=json({});
    return serialize_VkVideoPictureResourceInfoKHR(name.dstPictureResource);}();
result["members"]["pSetupReferenceSlot"]=[&]() {
    json return_bhMKNKK=json({});
    
        if (name.pSetupReferenceSlot==NULL){
            return_bhMKNKK["null"]=true;
            return return_bhMKNKK;
        }
        return_bhMKNKK=[&]() {
    json return_ybpuKdM=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(*name.pSetupReferenceSlot);}();
return return_bhMKNKK;}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_MTTgIuf=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_fHWdLCA=json({});
    
        if (name.pReferenceSlots==NULL){
            return_fHWdLCA["null"]=true;
            return return_fHWdLCA;
        }
        
        return_fHWdLCA["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_qfMmPCv=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_fHWdLCA["members"][std::to_string(i)].push_back(temp);
        }
        return return_fHWdLCA;
        }();
return result;}

    VkVideoDecodeInfoKHR deserialize_VkVideoDecodeInfoKHR(json name){
        auto result=VkVideoDecodeInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NaQztSh;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NaQztSh=NULL;
        }
    temp_NaQztSh=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NaQztSh;}();
[&]() {
result.flags=deserialize_VkVideoDecodeFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.srcBuffer=deserialize_VkBuffer(name["members"]["srcBuffer"]);}();
[&]() {
[&]() {
result.srcBufferOffset=deserialize_uint64_t(name["members"]["srcBufferOffset"]);}();}();
[&]() {
[&]() {
result.srcBufferRange=deserialize_uint64_t(name["members"]["srcBufferRange"]);}();}();
[&]() {
result.dstPictureResource=deserialize_VkVideoPictureResourceInfoKHR(name["members"]["dstPictureResource"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_jlAZQnS;[&]() {

        if (name["members"]["pSetupReferenceSlot"].contains("null")){
        temp_jlAZQnS=NULL;
        }
    [&]() {
*(temp_jlAZQnS)=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pSetupReferenceSlot"]);}();
}();result.pSetupReferenceSlot=temp_jlAZQnS;}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_UGlylot;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_UGlylot=NULL;
        }
    temp_UGlylot=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int XAQUOKG=0; XAQUOKG < result.referenceSlotCount; XAQUOKG++){
            [&]() {
temp_UGlylot[XAQUOKG]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][XAQUOKG]);}();;
        }
        }();result.pReferenceSlots=temp_UGlylot;}();
return result;}

    json serialize_VkVideoDecodeH264ProfileInfoKHR(VkVideoDecodeH264ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hFZzZxc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uTnqDcE=json({});
    
        if (name.pNext==NULL){
            return_uTnqDcE["null"]=true;
            return return_uTnqDcE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_vcBDPlv=json({});
    return serialize_StdVideoH264ProfileIdc(name.stdProfileIdc);
}();
result["members"]["pictureLayout"]=[&]() {
    json return_ntjGYFu=json({});
    return serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name.pictureLayout);}();
return result;}

    VkVideoDecodeH264ProfileInfoKHR deserialize_VkVideoDecodeH264ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH264ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_luHnazi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_luHnazi=NULL;
        }
    temp_luHnazi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_luHnazi;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH264ProfileIdc(name["members"]["stdProfileIdc"]);
}();
[&]() {
result.pictureLayout=deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(name["members"]["pictureLayout"]);}();
return result;}

    json serialize_VkVideoDecodeH264CapabilitiesKHR(VkVideoDecodeH264CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dhHSiCY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gqZETUQ=json({});
    
        if (name.pNext==NULL){
            return_gqZETUQ["null"]=true;
            return return_gqZETUQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_fifdVga=json({});
    return serialize_StdVideoH264LevelIdc(name.maxLevelIdc);
}();
result["members"]["fieldOffsetGranularity"]=[&]() {
    json return_TbqEScV=json({});
    return serialize_VkOffset2D(name.fieldOffsetGranularity);}();
return result;}

    VkVideoDecodeH264CapabilitiesKHR deserialize_VkVideoDecodeH264CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH264CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH264LevelIdc(name["members"]["maxLevelIdc"]);
}();
[&]() {
result.fieldOffsetGranularity=deserialize_VkOffset2D(name["members"]["fieldOffsetGranularity"]);}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(VkVideoDecodeH264SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yQHCoEF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pCQOsez=json({});
    
        if (name.pNext==NULL){
            return_pCQOsez["null"]=true;
            return return_pCQOsez;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_zTwogRB=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_OBywOMW=json({});
    
        if (name.pStdSPSs==NULL){
            return_OBywOMW["null"]=true;
            return return_OBywOMW;
        }
        return serialize_StdVideoH264SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_DHswPDu=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_cCkvpxJ=json({});
    
        if (name.pStdPPSs==NULL){
            return_cCkvpxJ["null"]=true;
            return return_cCkvpxJ;
        }
        return serialize_StdVideoH264PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH264SessionParametersAddInfoKHR deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KrahcRs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KrahcRs=NULL;
        }
    temp_KrahcRs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KrahcRs;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH264SequenceParameterSet* temp_lDSlWRN;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_lDSlWRN=NULL;
        }
    temp_lDSlWRN=deserialize_StdVideoH264SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_lDSlWRN;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH264PictureParameterSet* temp_zauYnqH;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_zauYnqH=NULL;
        }
    temp_zauYnqH=deserialize_StdVideoH264PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_zauYnqH;}();
return result;}

    json serialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(VkVideoDecodeH264SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SoRgrkb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HHZtLLV=json({});
    
        if (name.pNext==NULL){
            return_HHZtLLV["null"]=true;
            return return_HHZtLLV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_AhXOien=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_pFDZJZA=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_awpbLOo=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_awpbLOo["null"]=true;
            return return_awpbLOo;
        }
        return_awpbLOo=[&]() {
    json return_rihsMzu=json({});
    return serialize_VkVideoDecodeH264SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_awpbLOo;}();
return result;}

    VkVideoDecodeH264SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH264SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH264SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CNOXLyx;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CNOXLyx=NULL;
        }
    temp_CNOXLyx=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CNOXLyx;}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH264SessionParametersAddInfoKHR* temp_lvQerbg;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_lvQerbg=NULL;
        }
    [&]() {
*(temp_lvQerbg)=deserialize_VkVideoDecodeH264SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_lvQerbg;}();
return result;}

    json serialize_VkVideoDecodeH264PictureInfoKHR(VkVideoDecodeH264PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IDaSJWN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zFdWkdq=json({});
    
        if (name.pNext==NULL){
            return_zFdWkdq["null"]=true;
            return return_zFdWkdq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_jcucxIb=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_jcucxIb["null"]=true;
            return return_jcucxIb;
        }
        return serialize_StdVideoDecodeH264PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceCount"]=[&]() {
    json return_BMqyANj=json({});
    return serialize_uint32_t(name.sliceCount);}();
result["members"]["pSliceOffsets"]=[&]() {
    json return_BVapLAv=json({});
    
        if (name.pSliceOffsets==NULL){
            return_BVapLAv["null"]=true;
            return return_BVapLAv;
        }
        
        return_BVapLAv["members"]={};
        for(int i=0; i < name.sliceCount; i++){
            json temp;
            temp=[&]() {
    json return_ojCKMnX=json({});
    return serialize_uint32_t(name.pSliceOffsets[i]);}();
            return_BVapLAv["members"][std::to_string(i)].push_back(temp);
        }
        return return_BVapLAv;
        }();
return result;}

    VkVideoDecodeH264PictureInfoKHR deserialize_VkVideoDecodeH264PictureInfoKHR(json name){
        auto result=VkVideoDecodeH264PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MDsONop;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MDsONop=NULL;
        }
    temp_MDsONop=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MDsONop;}();
[&]() {
StdVideoDecodeH264PictureInfo* temp_clYTRHs;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_clYTRHs=NULL;
        }
    temp_clYTRHs=deserialize_StdVideoDecodeH264PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_clYTRHs;}();
[&]() {
result.sliceCount=deserialize_uint32_t(name["members"]["sliceCount"]);}();
[&]() {
uint32_t* temp_izfMAid;[&]() {

        if (name["members"]["pSliceOffsets"].contains("null")){
        temp_izfMAid=NULL;
        }
    temp_izfMAid=(uint32_t*)malloc(result.sliceCount*sizeof(uint32_t));
        for (int BBrYstR=0; BBrYstR < result.sliceCount; BBrYstR++){
            [&]() {
temp_izfMAid[BBrYstR]=deserialize_uint32_t(name["members"]["pSliceOffsets"]["members"][BBrYstR]);}();;
        }
        }();result.pSliceOffsets=temp_izfMAid;}();
return result;}

    json serialize_VkVideoDecodeH264DpbSlotInfoKHR(VkVideoDecodeH264DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XhDOvJq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rmBvdyW=json({});
    
        if (name.pNext==NULL){
            return_rmBvdyW["null"]=true;
            return return_rmBvdyW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_FIoYlLf=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_FIoYlLf["null"]=true;
            return return_FIoYlLf;
        }
        return serialize_StdVideoDecodeH264ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH264DpbSlotInfoKHR deserialize_VkVideoDecodeH264DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH264DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tYfsnDu;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tYfsnDu=NULL;
        }
    temp_tYfsnDu=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tYfsnDu;}();
[&]() {
StdVideoDecodeH264ReferenceInfo* temp_MGOljeA;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_MGOljeA=NULL;
        }
    temp_MGOljeA=deserialize_StdVideoDecodeH264ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_MGOljeA;}();
return result;}

    json serialize_VkVideoDecodeH265ProfileInfoKHR(VkVideoDecodeH265ProfileInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tAxBlZJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WuaOIuw=json({});
    
        if (name.pNext==NULL){
            return_WuaOIuw["null"]=true;
            return return_WuaOIuw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdProfileIdc"]=[&]() {
    json return_RYmGJMM=json({});
    return serialize_StdVideoH265ProfileIdc(name.stdProfileIdc);
}();
return result;}

    VkVideoDecodeH265ProfileInfoKHR deserialize_VkVideoDecodeH265ProfileInfoKHR(json name){
        auto result=VkVideoDecodeH265ProfileInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ZfLwrgW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ZfLwrgW=NULL;
        }
    temp_ZfLwrgW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ZfLwrgW;}();
[&]() {
result.stdProfileIdc=deserialize_StdVideoH265ProfileIdc(name["members"]["stdProfileIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265CapabilitiesKHR(VkVideoDecodeH265CapabilitiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rDAnoSj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XlhYmSD=json({});
    
        if (name.pNext==NULL){
            return_XlhYmSD["null"]=true;
            return return_XlhYmSD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxLevelIdc"]=[&]() {
    json return_SLAbHcc=json({});
    return serialize_StdVideoH265LevelIdc(name.maxLevelIdc);
}();
return result;}

    VkVideoDecodeH265CapabilitiesKHR deserialize_VkVideoDecodeH265CapabilitiesKHR(json name){
        auto result=VkVideoDecodeH265CapabilitiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxLevelIdc=deserialize_StdVideoH265LevelIdc(name["members"]["maxLevelIdc"]);
}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(VkVideoDecodeH265SessionParametersAddInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NShfhLj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hyNPjCm=json({});
    
        if (name.pNext==NULL){
            return_hyNPjCm["null"]=true;
            return return_hyNPjCm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["stdVPSCount"]=[&]() {
    json return_tAgEcGa=json({});
    return serialize_uint32_t(name.stdVPSCount);}();
result["members"]["pStdVPSs"]=[&]() {
    json return_bxrGjNW=json({});
    
        if (name.pStdVPSs==NULL){
            return_bxrGjNW["null"]=true;
            return return_bxrGjNW;
        }
        return serialize_StdVideoH265VideoParameterSet_p(name.pStdVPSs);
}();
result["members"]["stdSPSCount"]=[&]() {
    json return_GzcPnIv=json({});
    return serialize_uint32_t(name.stdSPSCount);}();
result["members"]["pStdSPSs"]=[&]() {
    json return_QRESaxI=json({});
    
        if (name.pStdSPSs==NULL){
            return_QRESaxI["null"]=true;
            return return_QRESaxI;
        }
        return serialize_StdVideoH265SequenceParameterSet_p(name.pStdSPSs);
}();
result["members"]["stdPPSCount"]=[&]() {
    json return_EJALOQo=json({});
    return serialize_uint32_t(name.stdPPSCount);}();
result["members"]["pStdPPSs"]=[&]() {
    json return_Xldxutn=json({});
    
        if (name.pStdPPSs==NULL){
            return_Xldxutn["null"]=true;
            return return_Xldxutn;
        }
        return serialize_StdVideoH265PictureParameterSet_p(name.pStdPPSs);
}();
return result;}

    VkVideoDecodeH265SessionParametersAddInfoKHR deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersAddInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_mDbkQbQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_mDbkQbQ=NULL;
        }
    temp_mDbkQbQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_mDbkQbQ;}();
[&]() {
result.stdVPSCount=deserialize_uint32_t(name["members"]["stdVPSCount"]);}();
[&]() {
StdVideoH265VideoParameterSet* temp_BDMQUMw;[&]() {

        if (name["members"]["pStdVPSs"].contains("null")){
        temp_BDMQUMw=NULL;
        }
    temp_BDMQUMw=deserialize_StdVideoH265VideoParameterSet_p(name["members"]["pStdVPSs"]);
}();result.pStdVPSs=temp_BDMQUMw;}();
[&]() {
result.stdSPSCount=deserialize_uint32_t(name["members"]["stdSPSCount"]);}();
[&]() {
StdVideoH265SequenceParameterSet* temp_RFndvdF;[&]() {

        if (name["members"]["pStdSPSs"].contains("null")){
        temp_RFndvdF=NULL;
        }
    temp_RFndvdF=deserialize_StdVideoH265SequenceParameterSet_p(name["members"]["pStdSPSs"]);
}();result.pStdSPSs=temp_RFndvdF;}();
[&]() {
result.stdPPSCount=deserialize_uint32_t(name["members"]["stdPPSCount"]);}();
[&]() {
StdVideoH265PictureParameterSet* temp_LHWgaXu;[&]() {

        if (name["members"]["pStdPPSs"].contains("null")){
        temp_LHWgaXu=NULL;
        }
    temp_LHWgaXu=deserialize_StdVideoH265PictureParameterSet_p(name["members"]["pStdPPSs"]);
}();result.pStdPPSs=temp_LHWgaXu;}();
return result;}

    json serialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(VkVideoDecodeH265SessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MPZQyLN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YLkBknH=json({});
    
        if (name.pNext==NULL){
            return_YLkBknH["null"]=true;
            return return_YLkBknH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxStdVPSCount"]=[&]() {
    json return_UUlnGLt=json({});
    return serialize_uint32_t(name.maxStdVPSCount);}();
result["members"]["maxStdSPSCount"]=[&]() {
    json return_JVUAhLo=json({});
    return serialize_uint32_t(name.maxStdSPSCount);}();
result["members"]["maxStdPPSCount"]=[&]() {
    json return_BNwqYDf=json({});
    return serialize_uint32_t(name.maxStdPPSCount);}();
result["members"]["pParametersAddInfo"]=[&]() {
    json return_LTImTLK=json({});
    
        if (name.pParametersAddInfo==NULL){
            return_LTImTLK["null"]=true;
            return return_LTImTLK;
        }
        return_LTImTLK=[&]() {
    json return_hpWWkxP=json({});
    return serialize_VkVideoDecodeH265SessionParametersAddInfoKHR(*name.pParametersAddInfo);}();
return return_LTImTLK;}();
return result;}

    VkVideoDecodeH265SessionParametersCreateInfoKHR deserialize_VkVideoDecodeH265SessionParametersCreateInfoKHR(json name){
        auto result=VkVideoDecodeH265SessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uaROgeO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uaROgeO=NULL;
        }
    temp_uaROgeO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uaROgeO;}();
[&]() {
result.maxStdVPSCount=deserialize_uint32_t(name["members"]["maxStdVPSCount"]);}();
[&]() {
result.maxStdSPSCount=deserialize_uint32_t(name["members"]["maxStdSPSCount"]);}();
[&]() {
result.maxStdPPSCount=deserialize_uint32_t(name["members"]["maxStdPPSCount"]);}();
[&]() {
VkVideoDecodeH265SessionParametersAddInfoKHR* temp_DuKwHAW;[&]() {

        if (name["members"]["pParametersAddInfo"].contains("null")){
        temp_DuKwHAW=NULL;
        }
    [&]() {
*(temp_DuKwHAW)=deserialize_VkVideoDecodeH265SessionParametersAddInfoKHR(name["members"]["pParametersAddInfo"]);}();
}();result.pParametersAddInfo=temp_DuKwHAW;}();
return result;}

    json serialize_VkVideoDecodeH265PictureInfoKHR(VkVideoDecodeH265PictureInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_yLpPwln=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kaBoYat=json({});
    
        if (name.pNext==NULL){
            return_kaBoYat["null"]=true;
            return return_kaBoYat;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdPictureInfo"]=[&]() {
    json return_OWestom=json({});
    
        if (name.pStdPictureInfo==NULL){
            return_OWestom["null"]=true;
            return return_OWestom;
        }
        return serialize_StdVideoDecodeH265PictureInfo_p(name.pStdPictureInfo);
}();
result["members"]["sliceSegmentCount"]=[&]() {
    json return_iDgtbKm=json({});
    return serialize_uint32_t(name.sliceSegmentCount);}();
result["members"]["pSliceSegmentOffsets"]=[&]() {
    json return_nEySPyU=json({});
    
        if (name.pSliceSegmentOffsets==NULL){
            return_nEySPyU["null"]=true;
            return return_nEySPyU;
        }
        
        return_nEySPyU["members"]={};
        for(int i=0; i < name.sliceSegmentCount; i++){
            json temp;
            temp=[&]() {
    json return_YZqnAjW=json({});
    return serialize_uint32_t(name.pSliceSegmentOffsets[i]);}();
            return_nEySPyU["members"][std::to_string(i)].push_back(temp);
        }
        return return_nEySPyU;
        }();
return result;}

    VkVideoDecodeH265PictureInfoKHR deserialize_VkVideoDecodeH265PictureInfoKHR(json name){
        auto result=VkVideoDecodeH265PictureInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WpxKEAZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WpxKEAZ=NULL;
        }
    temp_WpxKEAZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WpxKEAZ;}();
[&]() {
StdVideoDecodeH265PictureInfo* temp_RZOlFGZ;[&]() {

        if (name["members"]["pStdPictureInfo"].contains("null")){
        temp_RZOlFGZ=NULL;
        }
    temp_RZOlFGZ=deserialize_StdVideoDecodeH265PictureInfo_p(name["members"]["pStdPictureInfo"]);
}();result.pStdPictureInfo=temp_RZOlFGZ;}();
[&]() {
result.sliceSegmentCount=deserialize_uint32_t(name["members"]["sliceSegmentCount"]);}();
[&]() {
uint32_t* temp_IGWfMSy;[&]() {

        if (name["members"]["pSliceSegmentOffsets"].contains("null")){
        temp_IGWfMSy=NULL;
        }
    temp_IGWfMSy=(uint32_t*)malloc(result.sliceSegmentCount*sizeof(uint32_t));
        for (int BTxeTIQ=0; BTxeTIQ < result.sliceSegmentCount; BTxeTIQ++){
            [&]() {
temp_IGWfMSy[BTxeTIQ]=deserialize_uint32_t(name["members"]["pSliceSegmentOffsets"]["members"][BTxeTIQ]);}();;
        }
        }();result.pSliceSegmentOffsets=temp_IGWfMSy;}();
return result;}

    json serialize_VkVideoDecodeH265DpbSlotInfoKHR(VkVideoDecodeH265DpbSlotInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KzEtLcB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QAywpHH=json({});
    
        if (name.pNext==NULL){
            return_QAywpHH["null"]=true;
            return return_QAywpHH;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pStdReferenceInfo"]=[&]() {
    json return_MFgnlrV=json({});
    
        if (name.pStdReferenceInfo==NULL){
            return_MFgnlrV["null"]=true;
            return return_MFgnlrV;
        }
        return serialize_StdVideoDecodeH265ReferenceInfo_p(name.pStdReferenceInfo);
}();
return result;}

    VkVideoDecodeH265DpbSlotInfoKHR deserialize_VkVideoDecodeH265DpbSlotInfoKHR(json name){
        auto result=VkVideoDecodeH265DpbSlotInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WOeiqfz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WOeiqfz=NULL;
        }
    temp_WOeiqfz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WOeiqfz;}();
[&]() {
StdVideoDecodeH265ReferenceInfo* temp_OWKONfk;[&]() {

        if (name["members"]["pStdReferenceInfo"].contains("null")){
        temp_OWKONfk=NULL;
        }
    temp_OWKONfk=deserialize_StdVideoDecodeH265ReferenceInfo_p(name["members"]["pStdReferenceInfo"]);
}();result.pStdReferenceInfo=temp_OWKONfk;}();
return result;}

    json serialize_VkVideoSessionCreateInfoKHR(VkVideoSessionCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JHgRCpN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PypftoB=json({});
    
        if (name.pNext==NULL){
            return_PypftoB["null"]=true;
            return return_PypftoB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["queueFamilyIndex"]=[&]() {
    json return_qIzJdCD=json({});
    return serialize_uint32_t(name.queueFamilyIndex);}();
result["members"]["flags"]=[&]() {
    json return_ohPJNDN=json({});
    return serialize_VkVideoSessionCreateFlagsKHR(name.flags);}();
result["members"]["pVideoProfile"]=[&]() {
    json return_QCnNsDg=json({});
    
        if (name.pVideoProfile==NULL){
            return_QCnNsDg["null"]=true;
            return return_QCnNsDg;
        }
        return_QCnNsDg=[&]() {
    json return_bRWnSMI=json({});
    return serialize_VkVideoProfileInfoKHR(*name.pVideoProfile);}();
return return_QCnNsDg;}();
result["members"]["pictureFormat"]=[&]() {
    json return_DSNSdVP=json({});
    return serialize_VkFormat(name.pictureFormat);}();
result["members"]["maxCodedExtent"]=[&]() {
    json return_HYdadZl=json({});
    return serialize_VkExtent2D(name.maxCodedExtent);}();
result["members"]["referencePictureFormat"]=[&]() {
    json return_PiHgciL=json({});
    return serialize_VkFormat(name.referencePictureFormat);}();
result["members"]["maxDpbSlots"]=[&]() {
    json return_YsfhodF=json({});
    return serialize_uint32_t(name.maxDpbSlots);}();
result["members"]["maxActiveReferencePictures"]=[&]() {
    json return_LHwKjmy=json({});
    return serialize_uint32_t(name.maxActiveReferencePictures);}();
result["members"]["pStdHeaderVersion"]=[&]() {
    json return_ZfeKMrm=json({});
    
        if (name.pStdHeaderVersion==NULL){
            return_ZfeKMrm["null"]=true;
            return return_ZfeKMrm;
        }
        return_ZfeKMrm=[&]() {
    json return_kIvcUXj=json({});
    return serialize_VkExtensionProperties(*name.pStdHeaderVersion);}();
return return_ZfeKMrm;}();
return result;}

    VkVideoSessionCreateInfoKHR deserialize_VkVideoSessionCreateInfoKHR(json name){
        auto result=VkVideoSessionCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NJWQixG;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NJWQixG=NULL;
        }
    temp_NJWQixG=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NJWQixG;}();
[&]() {
result.queueFamilyIndex=deserialize_uint32_t(name["members"]["queueFamilyIndex"]);}();
[&]() {
result.flags=deserialize_VkVideoSessionCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
VkVideoProfileInfoKHR* temp_CpjbLnF;[&]() {

        if (name["members"]["pVideoProfile"].contains("null")){
        temp_CpjbLnF=NULL;
        }
    [&]() {
*(temp_CpjbLnF)=deserialize_VkVideoProfileInfoKHR(name["members"]["pVideoProfile"]);}();
}();result.pVideoProfile=temp_CpjbLnF;}();
[&]() {
result.pictureFormat=deserialize_VkFormat(name["members"]["pictureFormat"]);}();
[&]() {
result.maxCodedExtent=deserialize_VkExtent2D(name["members"]["maxCodedExtent"]);}();
[&]() {
result.referencePictureFormat=deserialize_VkFormat(name["members"]["referencePictureFormat"]);}();
[&]() {
result.maxDpbSlots=deserialize_uint32_t(name["members"]["maxDpbSlots"]);}();
[&]() {
result.maxActiveReferencePictures=deserialize_uint32_t(name["members"]["maxActiveReferencePictures"]);}();
[&]() {
VkExtensionProperties* temp_xyLRSZj;[&]() {

        if (name["members"]["pStdHeaderVersion"].contains("null")){
        temp_xyLRSZj=NULL;
        }
    [&]() {
*(temp_xyLRSZj)=deserialize_VkExtensionProperties(name["members"]["pStdHeaderVersion"]);}();
}();result.pStdHeaderVersion=temp_xyLRSZj;}();
return result;}

    json serialize_VkVideoSessionParametersCreateInfoKHR(VkVideoSessionParametersCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nIauHBf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_heaFCqj=json({});
    
        if (name.pNext==NULL){
            return_heaFCqj["null"]=true;
            return return_heaFCqj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NEFTOwc=json({});
    return serialize_VkVideoSessionParametersCreateFlagsKHR(name.flags);}();
result["members"]["videoSessionParametersTemplate"]=[&]() {
    json return_OlDLbYW=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParametersTemplate);}();
result["members"]["videoSession"]=[&]() {
    json return_lnLgZIG=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
return result;}

    VkVideoSessionParametersCreateInfoKHR deserialize_VkVideoSessionParametersCreateInfoKHR(json name){
        auto result=VkVideoSessionParametersCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OCnYCNK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OCnYCNK=NULL;
        }
    temp_OCnYCNK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OCnYCNK;}();
[&]() {
result.flags=deserialize_VkVideoSessionParametersCreateFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSessionParametersTemplate=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParametersTemplate"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
return result;}

    json serialize_VkVideoSessionParametersUpdateInfoKHR(VkVideoSessionParametersUpdateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nsRibVi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iyexxQU=json({});
    
        if (name.pNext==NULL){
            return_iyexxQU["null"]=true;
            return return_iyexxQU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["updateSequenceCount"]=[&]() {
    json return_ohnnmcF=json({});
    return serialize_uint32_t(name.updateSequenceCount);}();
return result;}

    VkVideoSessionParametersUpdateInfoKHR deserialize_VkVideoSessionParametersUpdateInfoKHR(json name){
        auto result=VkVideoSessionParametersUpdateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_eEYnpyb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_eEYnpyb=NULL;
        }
    temp_eEYnpyb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_eEYnpyb;}();
[&]() {
result.updateSequenceCount=deserialize_uint32_t(name["members"]["updateSequenceCount"]);}();
return result;}

    json serialize_VkVideoBeginCodingInfoKHR(VkVideoBeginCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gyCQxRa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_HivDNRd=json({});
    
        if (name.pNext==NULL){
            return_HivDNRd["null"]=true;
            return return_HivDNRd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LehDDQo=json({});
    return serialize_VkVideoBeginCodingFlagsKHR(name.flags);}();
result["members"]["videoSession"]=[&]() {
    json return_oZBWpdI=json({});
    return serialize_VkVideoSessionKHR(name.videoSession);}();
result["members"]["videoSessionParameters"]=[&]() {
    json return_TDJAqeK=json({});
    return serialize_VkVideoSessionParametersKHR(name.videoSessionParameters);}();
result["members"]["referenceSlotCount"]=[&]() {
    json return_SjvpJrJ=json({});
    return serialize_uint32_t(name.referenceSlotCount);}();
result["members"]["pReferenceSlots"]=[&]() {
    json return_FVdcPbB=json({});
    
        if (name.pReferenceSlots==NULL){
            return_FVdcPbB["null"]=true;
            return return_FVdcPbB;
        }
        
        return_FVdcPbB["members"]={};
        for(int i=0; i < name.referenceSlotCount; i++){
            json temp;
            temp=[&]() {
    json return_dPuVECR=json({});
    return serialize_VkVideoReferenceSlotInfoKHR(name.pReferenceSlots[i]);}();
            return_FVdcPbB["members"][std::to_string(i)].push_back(temp);
        }
        return return_FVdcPbB;
        }();
return result;}

    VkVideoBeginCodingInfoKHR deserialize_VkVideoBeginCodingInfoKHR(json name){
        auto result=VkVideoBeginCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_SsuOsNE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_SsuOsNE=NULL;
        }
    temp_SsuOsNE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_SsuOsNE;}();
[&]() {
result.flags=deserialize_VkVideoBeginCodingFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.videoSession=deserialize_VkVideoSessionKHR(name["members"]["videoSession"]);}();
[&]() {
result.videoSessionParameters=deserialize_VkVideoSessionParametersKHR(name["members"]["videoSessionParameters"]);}();
[&]() {
result.referenceSlotCount=deserialize_uint32_t(name["members"]["referenceSlotCount"]);}();
[&]() {
VkVideoReferenceSlotInfoKHR* temp_dyDoNem;[&]() {

        if (name["members"]["pReferenceSlots"].contains("null")){
        temp_dyDoNem=NULL;
        }
    temp_dyDoNem=(VkVideoReferenceSlotInfoKHR*)malloc(result.referenceSlotCount*sizeof(VkVideoReferenceSlotInfoKHR));
        for (int neRQZYq=0; neRQZYq < result.referenceSlotCount; neRQZYq++){
            [&]() {
temp_dyDoNem[neRQZYq]=deserialize_VkVideoReferenceSlotInfoKHR(name["members"]["pReferenceSlots"]["members"][neRQZYq]);}();;
        }
        }();result.pReferenceSlots=temp_dyDoNem;}();
return result;}

    json serialize_VkVideoEndCodingInfoKHR(VkVideoEndCodingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZLAumMG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uuEmDlC=json({});
    
        if (name.pNext==NULL){
            return_uuEmDlC["null"]=true;
            return return_uuEmDlC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xHMUvGn=json({});
    return serialize_VkVideoEndCodingFlagsKHR(name.flags);}();
return result;}

    VkVideoEndCodingInfoKHR deserialize_VkVideoEndCodingInfoKHR(json name){
        auto result=VkVideoEndCodingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ggLVpwa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ggLVpwa=NULL;
        }
    temp_ggLVpwa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ggLVpwa;}();
[&]() {
result.flags=deserialize_VkVideoEndCodingFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkVideoCodingControlInfoKHR(VkVideoCodingControlInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gMsHmlH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vsZboLz=json({});
    
        if (name.pNext==NULL){
            return_vsZboLz["null"]=true;
            return return_vsZboLz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_oxuEzAC=json({});
    return serialize_VkVideoCodingControlFlagsKHR(name.flags);}();
return result;}

    VkVideoCodingControlInfoKHR deserialize_VkVideoCodingControlInfoKHR(json name){
        auto result=VkVideoCodingControlInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_gcFzgGe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_gcFzgGe=NULL;
        }
    temp_gcFzgGe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_gcFzgGe;}();
[&]() {
result.flags=deserialize_VkVideoCodingControlFlagsKHR(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(VkPhysicalDeviceInheritedViewportScissorFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qgFPNbP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FidytLM=json({});
    
        if (name.pNext==NULL){
            return_FidytLM["null"]=true;
            return return_FidytLM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["inheritedViewportScissor2D"]=[&]() {
    json return_CATeXDR=json({});
    return_CATeXDR=[&]() {
    json return_MQVckCN=json({});
    return serialize_uint32_t(name.inheritedViewportScissor2D);}();return return_CATeXDR;}();
return result;}

    VkPhysicalDeviceInheritedViewportScissorFeaturesNV deserialize_VkPhysicalDeviceInheritedViewportScissorFeaturesNV(json name){
        auto result=VkPhysicalDeviceInheritedViewportScissorFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.inheritedViewportScissor2D=deserialize_uint32_t(name["members"]["inheritedViewportScissor2D"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceViewportScissorInfoNV(VkCommandBufferInheritanceViewportScissorInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_bSozref=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aVXJrys=json({});
    
        if (name.pNext==NULL){
            return_aVXJrys["null"]=true;
            return return_aVXJrys;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewportScissor2D"]=[&]() {
    json return_cRxZVCR=json({});
    return_cRxZVCR=[&]() {
    json return_sylKGzC=json({});
    return serialize_uint32_t(name.viewportScissor2D);}();return return_cRxZVCR;}();
result["members"]["viewportDepthCount"]=[&]() {
    json return_jiUiNel=json({});
    return serialize_uint32_t(name.viewportDepthCount);}();
result["members"]["pViewportDepths"]=[&]() {
    json return_LHrjGTs=json({});
    
        if (name.pViewportDepths==NULL){
            return_LHrjGTs["null"]=true;
            return return_LHrjGTs;
        }
        return_LHrjGTs=[&]() {
    json return_aWKhwez=json({});
    return serialize_VkViewport(*name.pViewportDepths);}();
return return_LHrjGTs;}();
return result;}

    VkCommandBufferInheritanceViewportScissorInfoNV deserialize_VkCommandBufferInheritanceViewportScissorInfoNV(json name){
        auto result=VkCommandBufferInheritanceViewportScissorInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EVOOytl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EVOOytl=NULL;
        }
    temp_EVOOytl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EVOOytl;}();
[&]() {
[&]() {
result.viewportScissor2D=deserialize_uint32_t(name["members"]["viewportScissor2D"]);}();}();
[&]() {
result.viewportDepthCount=deserialize_uint32_t(name["members"]["viewportDepthCount"]);}();
[&]() {
VkViewport* temp_MEvGJfM;[&]() {

        if (name["members"]["pViewportDepths"].contains("null")){
        temp_MEvGJfM=NULL;
        }
    [&]() {
*(temp_MEvGJfM)=deserialize_VkViewport(name["members"]["pViewportDepths"]);}();
}();result.pViewportDepths=temp_MEvGJfM;}();
return result;}

    json serialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iBBFYUQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dSDIvbu=json({});
    
        if (name.pNext==NULL){
            return_dSDIvbu["null"]=true;
            return return_dSDIvbu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcr2plane444Formats"]=[&]() {
    json return_hRMGBBG=json({});
    return_hRMGBBG=[&]() {
    json return_SYuiCYH=json({});
    return serialize_uint32_t(name.ycbcr2plane444Formats);}();return return_hRMGBBG;}();
return result;}

    VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT deserialize_VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcr2plane444Formats=deserialize_uint32_t(name["members"]["ycbcr2plane444Formats"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(VkPhysicalDeviceProvokingVertexFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_butQDsI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_roYKczw=json({});
    
        if (name.pNext==NULL){
            return_roYKczw["null"]=true;
            return return_roYKczw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexLast"]=[&]() {
    json return_wwsuVkw=json({});
    return_wwsuVkw=[&]() {
    json return_POMIaSK=json({});
    return serialize_uint32_t(name.provokingVertexLast);}();return return_wwsuVkw;}();
result["members"]["transformFeedbackPreservesProvokingVertex"]=[&]() {
    json return_pgoLoIu=json({});
    return_pgoLoIu=[&]() {
    json return_YbUIIeo=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesProvokingVertex);}();return return_pgoLoIu;}();
return result;}

    VkPhysicalDeviceProvokingVertexFeaturesEXT deserialize_VkPhysicalDeviceProvokingVertexFeaturesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexLast=deserialize_uint32_t(name["members"]["provokingVertexLast"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(VkPhysicalDeviceProvokingVertexPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XICUOmy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KEDgfqu=json({});
    
        if (name.pNext==NULL){
            return_KEDgfqu["null"]=true;
            return return_KEDgfqu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexModePerPipeline"]=[&]() {
    json return_kZitMlt=json({});
    return_kZitMlt=[&]() {
    json return_WEkEhMB=json({});
    return serialize_uint32_t(name.provokingVertexModePerPipeline);}();return return_kZitMlt;}();
result["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]=[&]() {
    json return_RipPRZH=json({});
    return_RipPRZH=[&]() {
    json return_fwAknTN=json({});
    return serialize_uint32_t(name.transformFeedbackPreservesTriangleFanProvokingVertex);}();return return_RipPRZH;}();
return result;}

    VkPhysicalDeviceProvokingVertexPropertiesEXT deserialize_VkPhysicalDeviceProvokingVertexPropertiesEXT(json name){
        auto result=VkPhysicalDeviceProvokingVertexPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.provokingVertexModePerPipeline=deserialize_uint32_t(name["members"]["provokingVertexModePerPipeline"]);}();}();
[&]() {
[&]() {
result.transformFeedbackPreservesTriangleFanProvokingVertex=deserialize_uint32_t(name["members"]["transformFeedbackPreservesTriangleFanProvokingVertex"]);}();}();
return result;}

    json serialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(VkPipelineRasterizationProvokingVertexStateCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qQrmRuN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YNuKlZq=json({});
    
        if (name.pNext==NULL){
            return_YNuKlZq["null"]=true;
            return return_YNuKlZq;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["provokingVertexMode"]=[&]() {
    json return_TbGnJER=json({});
    return serialize_VkProvokingVertexModeEXT(name.provokingVertexMode);}();
return result;}

    VkPipelineRasterizationProvokingVertexStateCreateInfoEXT deserialize_VkPipelineRasterizationProvokingVertexStateCreateInfoEXT(json name){
        auto result=VkPipelineRasterizationProvokingVertexStateCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_nAEdbLe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_nAEdbLe=NULL;
        }
    temp_nAEdbLe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_nAEdbLe;}();
[&]() {
result.provokingVertexMode=deserialize_VkProvokingVertexModeEXT(name["members"]["provokingVertexMode"]);}();
return result;}

    json serialize_VkCuModuleCreateInfoNVX(VkCuModuleCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HJQpRTr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_csMDfhU=json({});
    
        if (name.pNext==NULL){
            return_csMDfhU["null"]=true;
            return return_csMDfhU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dataSize"]=[&]() {
    json return_VKkrzYc=json({});
    return serialize_size_t(name.dataSize);}();
result["members"]["pData"]=[&]() {
    json return_HVLQCYD=json({});
    
        if (name.pData==NULL){
            return_HVLQCYD["null"]=true;
            return return_HVLQCYD;
        }
        return serialize_void_p(name.pData);
}();
return result;}

    VkCuModuleCreateInfoNVX deserialize_VkCuModuleCreateInfoNVX(json name){
        auto result=VkCuModuleCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fSwOLlN;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fSwOLlN=NULL;
        }
    temp_fSwOLlN=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fSwOLlN;}();
[&]() {
result.dataSize=deserialize_size_t(name["members"]["dataSize"]);}();
[&]() {
void* temp_ZWTaBjL;[&]() {

        if (name["members"]["pData"].contains("null")){
        temp_ZWTaBjL=NULL;
        }
    temp_ZWTaBjL=deserialize_void_p(name["members"]["pData"]);
}();result.pData=temp_ZWTaBjL;}();
return result;}

    json serialize_VkCuFunctionCreateInfoNVX(VkCuFunctionCreateInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AgMCCDW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TIPQvub=json({});
    
        if (name.pNext==NULL){
            return_TIPQvub["null"]=true;
            return return_TIPQvub;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["module"]=[&]() {
    json return_hatPCpQ=json({});
    return serialize_VkCuModuleNVX(name.module);}();
result["members"]["pName"]=[&]() {
    json return_vwuIPMv=json({});
    
        if (name.pName==NULL){
            return_vwuIPMv["null"]=true;
            return return_vwuIPMv;
        }
        return serialize_char_p(name.pName);
}();
return result;}

    VkCuFunctionCreateInfoNVX deserialize_VkCuFunctionCreateInfoNVX(json name){
        auto result=VkCuFunctionCreateInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QYnbRDr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QYnbRDr=NULL;
        }
    temp_QYnbRDr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QYnbRDr;}();
[&]() {
result.module=deserialize_VkCuModuleNVX(name["members"]["module"]);}();
[&]() {
char* temp_NnOvYRY;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_NnOvYRY=NULL;
        }
    temp_NnOvYRY=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_NnOvYRY;}();
return result;}

    json serialize_VkCuLaunchInfoNVX(VkCuLaunchInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BZAtrbl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IgSRcQt=json({});
    
        if (name.pNext==NULL){
            return_IgSRcQt["null"]=true;
            return return_IgSRcQt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["function"]=[&]() {
    json return_rzAWevb=json({});
    return serialize_VkCuFunctionNVX(name.function);}();
result["members"]["gridDimX"]=[&]() {
    json return_ZIELSmu=json({});
    return serialize_uint32_t(name.gridDimX);}();
result["members"]["gridDimY"]=[&]() {
    json return_WedjYyt=json({});
    return serialize_uint32_t(name.gridDimY);}();
result["members"]["gridDimZ"]=[&]() {
    json return_vnTJrUZ=json({});
    return serialize_uint32_t(name.gridDimZ);}();
result["members"]["blockDimX"]=[&]() {
    json return_XEGYggi=json({});
    return serialize_uint32_t(name.blockDimX);}();
result["members"]["blockDimY"]=[&]() {
    json return_JQJrZEG=json({});
    return serialize_uint32_t(name.blockDimY);}();
result["members"]["blockDimZ"]=[&]() {
    json return_qOoDYPm=json({});
    return serialize_uint32_t(name.blockDimZ);}();
result["members"]["sharedMemBytes"]=[&]() {
    json return_HoywoVP=json({});
    return serialize_uint32_t(name.sharedMemBytes);}();
result["members"]["paramCount"]=[&]() {
    json return_EuuXzyH=json({});
    return serialize_size_t(name.paramCount);}();
result["members"]["pParams"]=[&]() {
    json return_UoGbHQb=json({});
    
        if (name.pParams==NULL){
            return_UoGbHQb["null"]=true;
            return return_UoGbHQb;
        }
        
        return_UoGbHQb["members"]={};
        for(int i=0; i < name.paramCount; i++){
            json temp;
            temp=[&]() {
    json return_RzYVmss=json({});
    
        if (name.pParams[i]==NULL){
            return_RzYVmss["null"]=true;
            return return_RzYVmss;
        }
        return serialize_void_p(name.pParams[i]);
}();
            return_UoGbHQb["members"][std::to_string(i)].push_back(temp);
        }
        return return_UoGbHQb;
        }();
result["members"]["extraCount"]=[&]() {
    json return_FVgorjL=json({});
    return serialize_size_t(name.extraCount);}();
result["members"]["pExtras"]=[&]() {
    json return_OnrTMLF=json({});
    
        if (name.pExtras==NULL){
            return_OnrTMLF["null"]=true;
            return return_OnrTMLF;
        }
        
        return_OnrTMLF["members"]={};
        for(int i=0; i < name.extraCount; i++){
            json temp;
            temp=[&]() {
    json return_qVKhBhI=json({});
    
        if (name.pExtras[i]==NULL){
            return_qVKhBhI["null"]=true;
            return return_qVKhBhI;
        }
        return serialize_void_p(name.pExtras[i]);
}();
            return_OnrTMLF["members"][std::to_string(i)].push_back(temp);
        }
        return return_OnrTMLF;
        }();
return result;}

    VkCuLaunchInfoNVX deserialize_VkCuLaunchInfoNVX(json name){
        auto result=VkCuLaunchInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_atlpkvM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_atlpkvM=NULL;
        }
    temp_atlpkvM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_atlpkvM;}();
[&]() {
result.function=deserialize_VkCuFunctionNVX(name["members"]["function"]);}();
[&]() {
result.gridDimX=deserialize_uint32_t(name["members"]["gridDimX"]);}();
[&]() {
result.gridDimY=deserialize_uint32_t(name["members"]["gridDimY"]);}();
[&]() {
result.gridDimZ=deserialize_uint32_t(name["members"]["gridDimZ"]);}();
[&]() {
result.blockDimX=deserialize_uint32_t(name["members"]["blockDimX"]);}();
[&]() {
result.blockDimY=deserialize_uint32_t(name["members"]["blockDimY"]);}();
[&]() {
result.blockDimZ=deserialize_uint32_t(name["members"]["blockDimZ"]);}();
[&]() {
result.sharedMemBytes=deserialize_uint32_t(name["members"]["sharedMemBytes"]);}();
[&]() {
result.paramCount=deserialize_size_t(name["members"]["paramCount"]);}();
[&]() {
void** temp_KWUCoVM;[&]() {

        if (name["members"]["pParams"].contains("null")){
        temp_KWUCoVM=NULL;
        }
    temp_KWUCoVM=(void**)malloc(result.paramCount*sizeof(void*));
        for (int yqQUGkm=0; yqQUGkm < result.paramCount; yqQUGkm++){
            [&]() {

        if (name["members"]["pParams"]["members"][yqQUGkm].contains("null")){
        temp_KWUCoVM[yqQUGkm]=NULL;
        }
    temp_KWUCoVM[yqQUGkm]=deserialize_void_p(name["members"]["pParams"]["members"][yqQUGkm]);
}();;
        }
        }();result.pParams=temp_KWUCoVM;}();
[&]() {
result.extraCount=deserialize_size_t(name["members"]["extraCount"]);}();
[&]() {
void** temp_HruBMrQ;[&]() {

        if (name["members"]["pExtras"].contains("null")){
        temp_HruBMrQ=NULL;
        }
    temp_HruBMrQ=(void**)malloc(result.extraCount*sizeof(void*));
        for (int PmytVPj=0; PmytVPj < result.extraCount; PmytVPj++){
            [&]() {

        if (name["members"]["pExtras"]["members"][PmytVPj].contains("null")){
        temp_HruBMrQ[PmytVPj]=NULL;
        }
    temp_HruBMrQ[PmytVPj]=deserialize_void_p(name["members"]["pExtras"]["members"][PmytVPj]);
}();;
        }
        }();result.pExtras=temp_HruBMrQ;}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(VkPhysicalDeviceDescriptorBufferFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_riKuwTs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pswWKTl=json({});
    
        if (name.pNext==NULL){
            return_pswWKTl["null"]=true;
            return return_pswWKTl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorBuffer"]=[&]() {
    json return_cjoFaTy=json({});
    return_cjoFaTy=[&]() {
    json return_yoWMAAF=json({});
    return serialize_uint32_t(name.descriptorBuffer);}();return return_cjoFaTy;}();
result["members"]["descriptorBufferCaptureReplay"]=[&]() {
    json return_nGgfshi=json({});
    return_nGgfshi=[&]() {
    json return_xLROYYK=json({});
    return serialize_uint32_t(name.descriptorBufferCaptureReplay);}();return return_nGgfshi;}();
result["members"]["descriptorBufferImageLayoutIgnored"]=[&]() {
    json return_XKLoxcc=json({});
    return_XKLoxcc=[&]() {
    json return_plFPeGN=json({});
    return serialize_uint32_t(name.descriptorBufferImageLayoutIgnored);}();return return_XKLoxcc;}();
result["members"]["descriptorBufferPushDescriptors"]=[&]() {
    json return_IaSfXQq=json({});
    return_IaSfXQq=[&]() {
    json return_jCoLVrs=json({});
    return serialize_uint32_t(name.descriptorBufferPushDescriptors);}();return return_IaSfXQq;}();
return result;}

    VkPhysicalDeviceDescriptorBufferFeaturesEXT deserialize_VkPhysicalDeviceDescriptorBufferFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorBuffer=deserialize_uint32_t(name["members"]["descriptorBuffer"]);}();}();
[&]() {
[&]() {
result.descriptorBufferCaptureReplay=deserialize_uint32_t(name["members"]["descriptorBufferCaptureReplay"]);}();}();
[&]() {
[&]() {
result.descriptorBufferImageLayoutIgnored=deserialize_uint32_t(name["members"]["descriptorBufferImageLayoutIgnored"]);}();}();
[&]() {
[&]() {
result.descriptorBufferPushDescriptors=deserialize_uint32_t(name["members"]["descriptorBufferPushDescriptors"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(VkPhysicalDeviceDescriptorBufferPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WkWgevA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EjAZKAE=json({});
    
        if (name.pNext==NULL){
            return_EjAZKAE["null"]=true;
            return return_EjAZKAE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDescriptorSingleArray"]=[&]() {
    json return_HTEQvdu=json({});
    return_HTEQvdu=[&]() {
    json return_wyciLnU=json({});
    return serialize_uint32_t(name.combinedImageSamplerDescriptorSingleArray);}();return return_HTEQvdu;}();
result["members"]["bufferlessPushDescriptors"]=[&]() {
    json return_juHUzks=json({});
    return_juHUzks=[&]() {
    json return_qTIxXii=json({});
    return serialize_uint32_t(name.bufferlessPushDescriptors);}();return return_juHUzks;}();
result["members"]["allowSamplerImageViewPostSubmitCreation"]=[&]() {
    json return_YyqXEmN=json({});
    return_YyqXEmN=[&]() {
    json return_cmiNbqu=json({});
    return serialize_uint32_t(name.allowSamplerImageViewPostSubmitCreation);}();return return_YyqXEmN;}();
result["members"]["descriptorBufferOffsetAlignment"]=[&]() {
    json return_FBDRqPv=json({});
    return_FBDRqPv=[&]() {
    json return_zFKhaXK=json({});
    return serialize_uint64_t(name.descriptorBufferOffsetAlignment);}();return return_FBDRqPv;}();
result["members"]["maxDescriptorBufferBindings"]=[&]() {
    json return_umEbSoj=json({});
    return serialize_uint32_t(name.maxDescriptorBufferBindings);}();
result["members"]["maxResourceDescriptorBufferBindings"]=[&]() {
    json return_TyMtRle=json({});
    return serialize_uint32_t(name.maxResourceDescriptorBufferBindings);}();
result["members"]["maxSamplerDescriptorBufferBindings"]=[&]() {
    json return_szPWoVb=json({});
    return serialize_uint32_t(name.maxSamplerDescriptorBufferBindings);}();
result["members"]["maxEmbeddedImmutableSamplerBindings"]=[&]() {
    json return_HhHrHxS=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplerBindings);}();
result["members"]["maxEmbeddedImmutableSamplers"]=[&]() {
    json return_oXEhAns=json({});
    return serialize_uint32_t(name.maxEmbeddedImmutableSamplers);}();
result["members"]["bufferCaptureReplayDescriptorDataSize"]=[&]() {
    json return_kJxOVIw=json({});
    return serialize_size_t(name.bufferCaptureReplayDescriptorDataSize);}();
result["members"]["imageCaptureReplayDescriptorDataSize"]=[&]() {
    json return_VkRYvgZ=json({});
    return serialize_size_t(name.imageCaptureReplayDescriptorDataSize);}();
result["members"]["imageViewCaptureReplayDescriptorDataSize"]=[&]() {
    json return_ByjBnDr=json({});
    return serialize_size_t(name.imageViewCaptureReplayDescriptorDataSize);}();
result["members"]["samplerCaptureReplayDescriptorDataSize"]=[&]() {
    json return_EmnHezU=json({});
    return serialize_size_t(name.samplerCaptureReplayDescriptorDataSize);}();
result["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]=[&]() {
    json return_VMaSlAd=json({});
    return serialize_size_t(name.accelerationStructureCaptureReplayDescriptorDataSize);}();
result["members"]["samplerDescriptorSize"]=[&]() {
    json return_jZuLaIx=json({});
    return serialize_size_t(name.samplerDescriptorSize);}();
result["members"]["combinedImageSamplerDescriptorSize"]=[&]() {
    json return_YrGkztL=json({});
    return serialize_size_t(name.combinedImageSamplerDescriptorSize);}();
result["members"]["sampledImageDescriptorSize"]=[&]() {
    json return_HzAmEqa=json({});
    return serialize_size_t(name.sampledImageDescriptorSize);}();
result["members"]["storageImageDescriptorSize"]=[&]() {
    json return_whdkLPY=json({});
    return serialize_size_t(name.storageImageDescriptorSize);}();
result["members"]["uniformTexelBufferDescriptorSize"]=[&]() {
    json return_JMSczIs=json({});
    return serialize_size_t(name.uniformTexelBufferDescriptorSize);}();
result["members"]["robustUniformTexelBufferDescriptorSize"]=[&]() {
    json return_UICxPYb=json({});
    return serialize_size_t(name.robustUniformTexelBufferDescriptorSize);}();
result["members"]["storageTexelBufferDescriptorSize"]=[&]() {
    json return_hqFcocE=json({});
    return serialize_size_t(name.storageTexelBufferDescriptorSize);}();
result["members"]["robustStorageTexelBufferDescriptorSize"]=[&]() {
    json return_AQHxydd=json({});
    return serialize_size_t(name.robustStorageTexelBufferDescriptorSize);}();
result["members"]["uniformBufferDescriptorSize"]=[&]() {
    json return_mTwtZyw=json({});
    return serialize_size_t(name.uniformBufferDescriptorSize);}();
result["members"]["robustUniformBufferDescriptorSize"]=[&]() {
    json return_tcrGGAD=json({});
    return serialize_size_t(name.robustUniformBufferDescriptorSize);}();
result["members"]["storageBufferDescriptorSize"]=[&]() {
    json return_UgYSmsm=json({});
    return serialize_size_t(name.storageBufferDescriptorSize);}();
result["members"]["robustStorageBufferDescriptorSize"]=[&]() {
    json return_vlIRZbX=json({});
    return serialize_size_t(name.robustStorageBufferDescriptorSize);}();
result["members"]["inputAttachmentDescriptorSize"]=[&]() {
    json return_tMZBCpn=json({});
    return serialize_size_t(name.inputAttachmentDescriptorSize);}();
result["members"]["accelerationStructureDescriptorSize"]=[&]() {
    json return_ULaipiB=json({});
    return serialize_size_t(name.accelerationStructureDescriptorSize);}();
result["members"]["maxSamplerDescriptorBufferRange"]=[&]() {
    json return_sNUtBoj=json({});
    return_sNUtBoj=[&]() {
    json return_piDPlBu=json({});
    return serialize_uint64_t(name.maxSamplerDescriptorBufferRange);}();return return_sNUtBoj;}();
result["members"]["maxResourceDescriptorBufferRange"]=[&]() {
    json return_zqBfRua=json({});
    return_zqBfRua=[&]() {
    json return_IGLBnBR=json({});
    return serialize_uint64_t(name.maxResourceDescriptorBufferRange);}();return return_zqBfRua;}();
result["members"]["samplerDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_yeXWmNk=json({});
    return_yeXWmNk=[&]() {
    json return_bNlOZUQ=json({});
    return serialize_uint64_t(name.samplerDescriptorBufferAddressSpaceSize);}();return return_yeXWmNk;}();
result["members"]["resourceDescriptorBufferAddressSpaceSize"]=[&]() {
    json return_YXopzeR=json({});
    return_YXopzeR=[&]() {
    json return_jYRezPK=json({});
    return serialize_uint64_t(name.resourceDescriptorBufferAddressSpaceSize);}();return return_YXopzeR;}();
result["members"]["descriptorBufferAddressSpaceSize"]=[&]() {
    json return_QIvTJEk=json({});
    return_QIvTJEk=[&]() {
    json return_qcuLuZV=json({});
    return serialize_uint64_t(name.descriptorBufferAddressSpaceSize);}();return return_QIvTJEk;}();
return result;}

    VkPhysicalDeviceDescriptorBufferPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.combinedImageSamplerDescriptorSingleArray=deserialize_uint32_t(name["members"]["combinedImageSamplerDescriptorSingleArray"]);}();}();
[&]() {
[&]() {
result.bufferlessPushDescriptors=deserialize_uint32_t(name["members"]["bufferlessPushDescriptors"]);}();}();
[&]() {
[&]() {
result.allowSamplerImageViewPostSubmitCreation=deserialize_uint32_t(name["members"]["allowSamplerImageViewPostSubmitCreation"]);}();}();
[&]() {
[&]() {
result.descriptorBufferOffsetAlignment=deserialize_uint64_t(name["members"]["descriptorBufferOffsetAlignment"]);}();}();
[&]() {
result.maxDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxDescriptorBufferBindings"]);}();
[&]() {
result.maxResourceDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxResourceDescriptorBufferBindings"]);}();
[&]() {
result.maxSamplerDescriptorBufferBindings=deserialize_uint32_t(name["members"]["maxSamplerDescriptorBufferBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplerBindings=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplerBindings"]);}();
[&]() {
result.maxEmbeddedImmutableSamplers=deserialize_uint32_t(name["members"]["maxEmbeddedImmutableSamplers"]);}();
[&]() {
result.bufferCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["bufferCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.imageViewCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["imageViewCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["samplerCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.accelerationStructureCaptureReplayDescriptorDataSize=deserialize_size_t(name["members"]["accelerationStructureCaptureReplayDescriptorDataSize"]);}();
[&]() {
result.samplerDescriptorSize=deserialize_size_t(name["members"]["samplerDescriptorSize"]);}();
[&]() {
result.combinedImageSamplerDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDescriptorSize"]);}();
[&]() {
result.sampledImageDescriptorSize=deserialize_size_t(name["members"]["sampledImageDescriptorSize"]);}();
[&]() {
result.storageImageDescriptorSize=deserialize_size_t(name["members"]["storageImageDescriptorSize"]);}();
[&]() {
result.uniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["uniformTexelBufferDescriptorSize"]);}();
[&]() {
result.robustUniformTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformTexelBufferDescriptorSize"]);}();
[&]() {
result.storageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["storageTexelBufferDescriptorSize"]);}();
[&]() {
result.robustStorageTexelBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageTexelBufferDescriptorSize"]);}();
[&]() {
result.uniformBufferDescriptorSize=deserialize_size_t(name["members"]["uniformBufferDescriptorSize"]);}();
[&]() {
result.robustUniformBufferDescriptorSize=deserialize_size_t(name["members"]["robustUniformBufferDescriptorSize"]);}();
[&]() {
result.storageBufferDescriptorSize=deserialize_size_t(name["members"]["storageBufferDescriptorSize"]);}();
[&]() {
result.robustStorageBufferDescriptorSize=deserialize_size_t(name["members"]["robustStorageBufferDescriptorSize"]);}();
[&]() {
result.inputAttachmentDescriptorSize=deserialize_size_t(name["members"]["inputAttachmentDescriptorSize"]);}();
[&]() {
result.accelerationStructureDescriptorSize=deserialize_size_t(name["members"]["accelerationStructureDescriptorSize"]);}();
[&]() {
[&]() {
result.maxSamplerDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxSamplerDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.maxResourceDescriptorBufferRange=deserialize_uint64_t(name["members"]["maxResourceDescriptorBufferRange"]);}();}();
[&]() {
[&]() {
result.samplerDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["samplerDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.resourceDescriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["resourceDescriptorBufferAddressSpaceSize"]);}();}();
[&]() {
[&]() {
result.descriptorBufferAddressSpaceSize=deserialize_uint64_t(name["members"]["descriptorBufferAddressSpaceSize"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eQFxtyj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iytoIgX=json({});
    
        if (name.pNext==NULL){
            return_iytoIgX["null"]=true;
            return return_iytoIgX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["combinedImageSamplerDensityMapDescriptorSize"]=[&]() {
    json return_ktGkZgE=json({});
    return serialize_size_t(name.combinedImageSamplerDensityMapDescriptorSize);}();
return result;}

    VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT deserialize_VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.combinedImageSamplerDensityMapDescriptorSize=deserialize_size_t(name["members"]["combinedImageSamplerDensityMapDescriptorSize"]);}();
return result;}

    json serialize_VkDescriptorAddressInfoEXT(VkDescriptorAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZSrVosX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ROCYxZz=json({});
    
        if (name.pNext==NULL){
            return_ROCYxZz["null"]=true;
            return return_ROCYxZz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_fHJqRRX=json({});
    return_fHJqRRX=[&]() {
    json return_yfqWAmm=json({});
    return serialize_uint64_t(name.address);}();return return_fHJqRRX;}();
result["members"]["range"]=[&]() {
    json return_ygSJaxD=json({});
    return_ygSJaxD=[&]() {
    json return_XfXXgdu=json({});
    return serialize_uint64_t(name.range);}();return return_ygSJaxD;}();
result["members"]["format"]=[&]() {
    json return_pdoCxwd=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkDescriptorAddressInfoEXT deserialize_VkDescriptorAddressInfoEXT(json name){
        auto result=VkDescriptorAddressInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
[&]() {
result.range=deserialize_uint64_t(name["members"]["range"]);}();}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingInfoEXT(VkDescriptorBufferBindingInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XXevSRi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MyXgStm=json({});
    
        if (name.pNext==NULL){
            return_MyXgStm["null"]=true;
            return return_MyXgStm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["address"]=[&]() {
    json return_BaUrGOr=json({});
    return_BaUrGOr=[&]() {
    json return_OEEASSk=json({});
    return serialize_uint64_t(name.address);}();return return_BaUrGOr;}();
result["members"]["usage"]=[&]() {
    json return_BPgFpiz=json({});
    return serialize_VkBufferUsageFlags(name.usage);}();
return result;}

    VkDescriptorBufferBindingInfoEXT deserialize_VkDescriptorBufferBindingInfoEXT(json name){
        auto result=VkDescriptorBufferBindingInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.address=deserialize_uint64_t(name["members"]["address"]);}();}();
[&]() {
result.usage=deserialize_VkBufferUsageFlags(name["members"]["usage"]);}();
return result;}

    json serialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(VkDescriptorBufferBindingPushDescriptorBufferHandleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XLhOBQQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vcalsVF=json({});
    
        if (name.pNext==NULL){
            return_vcalsVF["null"]=true;
            return return_vcalsVF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_cVdUlRU=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkDescriptorBufferBindingPushDescriptorBufferHandleEXT deserialize_VkDescriptorBufferBindingPushDescriptorBufferHandleEXT(json name){
        auto result=VkDescriptorBufferBindingPushDescriptorBufferHandleEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkDescriptorDataEXT(VkDescriptorDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["pSampler"]=[&]() {
    json return_raaAMHS=json({});
    
        if (name.pSampler==NULL){
            return_raaAMHS["null"]=true;
            return return_raaAMHS;
        }
        return_raaAMHS=[&]() {
    json return_quiuQxe=json({});
    return serialize_VkSampler(*name.pSampler);}();
return return_raaAMHS;}();
result["members"]["pCombinedImageSampler"]=[&]() {
    json return_DQTJrxW=json({});
    
        if (name.pCombinedImageSampler==NULL){
            return_DQTJrxW["null"]=true;
            return return_DQTJrxW;
        }
        return_DQTJrxW=[&]() {
    json return_TxYMuSB=json({});
    return serialize_VkDescriptorImageInfo(*name.pCombinedImageSampler);}();
return return_DQTJrxW;}();
result["members"]["pInputAttachmentImage"]=[&]() {
    json return_JYhagWn=json({});
    
        if (name.pInputAttachmentImage==NULL){
            return_JYhagWn["null"]=true;
            return return_JYhagWn;
        }
        return_JYhagWn=[&]() {
    json return_nTZypvP=json({});
    return serialize_VkDescriptorImageInfo(*name.pInputAttachmentImage);}();
return return_JYhagWn;}();
result["members"]["pSampledImage"]=[&]() {
    json return_BQxPiNY=json({});
    
        if (name.pSampledImage==NULL){
            return_BQxPiNY["null"]=true;
            return return_BQxPiNY;
        }
        return_BQxPiNY=[&]() {
    json return_xfDupmo=json({});
    return serialize_VkDescriptorImageInfo(*name.pSampledImage);}();
return return_BQxPiNY;}();
result["members"]["pStorageImage"]=[&]() {
    json return_oITpCjp=json({});
    
        if (name.pStorageImage==NULL){
            return_oITpCjp["null"]=true;
            return return_oITpCjp;
        }
        return_oITpCjp=[&]() {
    json return_eyVePBh=json({});
    return serialize_VkDescriptorImageInfo(*name.pStorageImage);}();
return return_oITpCjp;}();
result["members"]["pUniformTexelBuffer"]=[&]() {
    json return_fRWExNR=json({});
    
        if (name.pUniformTexelBuffer==NULL){
            return_fRWExNR["null"]=true;
            return return_fRWExNR;
        }
        return_fRWExNR=[&]() {
    json return_YsbEneB=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformTexelBuffer);}();
return return_fRWExNR;}();
result["members"]["pStorageTexelBuffer"]=[&]() {
    json return_XrdnVdp=json({});
    
        if (name.pStorageTexelBuffer==NULL){
            return_XrdnVdp["null"]=true;
            return return_XrdnVdp;
        }
        return_XrdnVdp=[&]() {
    json return_SEsUEGg=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageTexelBuffer);}();
return return_XrdnVdp;}();
result["members"]["pUniformBuffer"]=[&]() {
    json return_MokllZr=json({});
    
        if (name.pUniformBuffer==NULL){
            return_MokllZr["null"]=true;
            return return_MokllZr;
        }
        return_MokllZr=[&]() {
    json return_TkccEae=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pUniformBuffer);}();
return return_MokllZr;}();
result["members"]["pStorageBuffer"]=[&]() {
    json return_LyAHrQO=json({});
    
        if (name.pStorageBuffer==NULL){
            return_LyAHrQO["null"]=true;
            return return_LyAHrQO;
        }
        return_LyAHrQO=[&]() {
    json return_SHCxopz=json({});
    return serialize_VkDescriptorAddressInfoEXT(*name.pStorageBuffer);}();
return return_LyAHrQO;}();
result["members"]["accelerationStructure"]=[&]() {
    json return_FveyAyH=json({});
    return_FveyAyH=[&]() {
    json return_vLxselA=json({});
    return serialize_uint64_t(name.accelerationStructure);}();return return_FveyAyH;}();
return result;}

    VkDescriptorDataEXT deserialize_VkDescriptorDataEXT(json name){
        auto result=VkDescriptorDataEXT();
    
[&]() {
VkSampler* temp_xknjMFp;[&]() {

        if (name["members"]["pSampler"].contains("null")){
        temp_xknjMFp=NULL;
        }
    [&]() {
*(temp_xknjMFp)=deserialize_VkSampler(name["members"]["pSampler"]);}();
}();result.pSampler=temp_xknjMFp;}();
[&]() {
VkDescriptorImageInfo* temp_KAkTrYZ;[&]() {

        if (name["members"]["pCombinedImageSampler"].contains("null")){
        temp_KAkTrYZ=NULL;
        }
    [&]() {
*(temp_KAkTrYZ)=deserialize_VkDescriptorImageInfo(name["members"]["pCombinedImageSampler"]);}();
}();result.pCombinedImageSampler=temp_KAkTrYZ;}();
[&]() {
VkDescriptorImageInfo* temp_nwRCtIk;[&]() {

        if (name["members"]["pInputAttachmentImage"].contains("null")){
        temp_nwRCtIk=NULL;
        }
    [&]() {
*(temp_nwRCtIk)=deserialize_VkDescriptorImageInfo(name["members"]["pInputAttachmentImage"]);}();
}();result.pInputAttachmentImage=temp_nwRCtIk;}();
[&]() {
VkDescriptorImageInfo* temp_eSJCzyB;[&]() {

        if (name["members"]["pSampledImage"].contains("null")){
        temp_eSJCzyB=NULL;
        }
    [&]() {
*(temp_eSJCzyB)=deserialize_VkDescriptorImageInfo(name["members"]["pSampledImage"]);}();
}();result.pSampledImage=temp_eSJCzyB;}();
[&]() {
VkDescriptorImageInfo* temp_yZvTkJv;[&]() {

        if (name["members"]["pStorageImage"].contains("null")){
        temp_yZvTkJv=NULL;
        }
    [&]() {
*(temp_yZvTkJv)=deserialize_VkDescriptorImageInfo(name["members"]["pStorageImage"]);}();
}();result.pStorageImage=temp_yZvTkJv;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_HXJqaPj;[&]() {

        if (name["members"]["pUniformTexelBuffer"].contains("null")){
        temp_HXJqaPj=NULL;
        }
    [&]() {
*(temp_HXJqaPj)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformTexelBuffer"]);}();
}();result.pUniformTexelBuffer=temp_HXJqaPj;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_ZDIMuuG;[&]() {

        if (name["members"]["pStorageTexelBuffer"].contains("null")){
        temp_ZDIMuuG=NULL;
        }
    [&]() {
*(temp_ZDIMuuG)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageTexelBuffer"]);}();
}();result.pStorageTexelBuffer=temp_ZDIMuuG;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_MXVvgme;[&]() {

        if (name["members"]["pUniformBuffer"].contains("null")){
        temp_MXVvgme=NULL;
        }
    [&]() {
*(temp_MXVvgme)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pUniformBuffer"]);}();
}();result.pUniformBuffer=temp_MXVvgme;}();
[&]() {
VkDescriptorAddressInfoEXT* temp_gfdgBcZ;[&]() {

        if (name["members"]["pStorageBuffer"].contains("null")){
        temp_gfdgBcZ=NULL;
        }
    [&]() {
*(temp_gfdgBcZ)=deserialize_VkDescriptorAddressInfoEXT(name["members"]["pStorageBuffer"]);}();
}();result.pStorageBuffer=temp_gfdgBcZ;}();
[&]() {
[&]() {
result.accelerationStructure=deserialize_uint64_t(name["members"]["accelerationStructure"]);}();}();
return result;}

    json serialize_VkDescriptorGetInfoEXT(VkDescriptorGetInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hYkNhDO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WHSFIow=json({});
    
        if (name.pNext==NULL){
            return_WHSFIow["null"]=true;
            return return_WHSFIow;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_KqxWmNf=json({});
    return serialize_VkDescriptorType(name.type);}();
result["members"]["data"]=[&]() {
    json return_rDzLASq=json({});
    return serialize_VkDescriptorDataEXT(name.data);}();
return result;}

    VkDescriptorGetInfoEXT deserialize_VkDescriptorGetInfoEXT(json name){
        auto result=VkDescriptorGetInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_goaaJTk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_goaaJTk=NULL;
        }
    temp_goaaJTk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_goaaJTk;}();
[&]() {
result.type=deserialize_VkDescriptorType(name["members"]["type"]);}();
[&]() {
result.data=deserialize_VkDescriptorDataEXT(name["members"]["data"]);}();
return result;}

    json serialize_VkBufferCaptureDescriptorDataInfoEXT(VkBufferCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LVajCLo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_odYcskt=json({});
    
        if (name.pNext==NULL){
            return_odYcskt["null"]=true;
            return return_odYcskt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["buffer"]=[&]() {
    json return_aLRikxc=json({});
    return serialize_VkBuffer(name.buffer);}();
return result;}

    VkBufferCaptureDescriptorDataInfoEXT deserialize_VkBufferCaptureDescriptorDataInfoEXT(json name){
        auto result=VkBufferCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_pnxwqsC;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_pnxwqsC=NULL;
        }
    temp_pnxwqsC=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_pnxwqsC;}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
return result;}

    json serialize_VkImageCaptureDescriptorDataInfoEXT(VkImageCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ooquYhY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MHVTjhz=json({});
    
        if (name.pNext==NULL){
            return_MHVTjhz["null"]=true;
            return return_MHVTjhz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["image"]=[&]() {
    json return_rXRUERp=json({});
    return serialize_VkImage(name.image);}();
return result;}

    VkImageCaptureDescriptorDataInfoEXT deserialize_VkImageCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HoiEcdm;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HoiEcdm=NULL;
        }
    temp_HoiEcdm=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HoiEcdm;}();
[&]() {
result.image=deserialize_VkImage(name["members"]["image"]);}();
return result;}

    json serialize_VkImageViewCaptureDescriptorDataInfoEXT(VkImageViewCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_reNGIdx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cDzSEOi=json({});
    
        if (name.pNext==NULL){
            return_cDzSEOi["null"]=true;
            return return_cDzSEOi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_OVoBFei=json({});
    return serialize_VkImageView(name.imageView);}();
return result;}

    VkImageViewCaptureDescriptorDataInfoEXT deserialize_VkImageViewCaptureDescriptorDataInfoEXT(json name){
        auto result=VkImageViewCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_MjZbOxo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_MjZbOxo=NULL;
        }
    temp_MjZbOxo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_MjZbOxo;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
return result;}

    json serialize_VkSamplerCaptureDescriptorDataInfoEXT(VkSamplerCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pgoXgiE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FgOILbL=json({});
    
        if (name.pNext==NULL){
            return_FgOILbL["null"]=true;
            return return_FgOILbL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["sampler"]=[&]() {
    json return_vUyyvhU=json({});
    return serialize_VkSampler(name.sampler);}();
return result;}

    VkSamplerCaptureDescriptorDataInfoEXT deserialize_VkSamplerCaptureDescriptorDataInfoEXT(json name){
        auto result=VkSamplerCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_zAomPOO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_zAomPOO=NULL;
        }
    temp_zAomPOO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_zAomPOO;}();
[&]() {
result.sampler=deserialize_VkSampler(name["members"]["sampler"]);}();
return result;}

    json serialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(VkAccelerationStructureCaptureDescriptorDataInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CjmbypF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uTVvGRk=json({});
    
        if (name.pNext==NULL){
            return_uTVvGRk["null"]=true;
            return return_uTVvGRk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["accelerationStructure"]=[&]() {
    json return_vdQvcJk=json({});
    return serialize_VkAccelerationStructureKHR(name.accelerationStructure);}();
result["members"]["accelerationStructureNV"]=[&]() {
    json return_RHUtWgb=json({});
    return serialize_VkAccelerationStructureNV(name.accelerationStructureNV);}();
return result;}

    VkAccelerationStructureCaptureDescriptorDataInfoEXT deserialize_VkAccelerationStructureCaptureDescriptorDataInfoEXT(json name){
        auto result=VkAccelerationStructureCaptureDescriptorDataInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jMagQjY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jMagQjY=NULL;
        }
    temp_jMagQjY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jMagQjY;}();
[&]() {
result.accelerationStructure=deserialize_VkAccelerationStructureKHR(name["members"]["accelerationStructure"]);}();
[&]() {
result.accelerationStructureNV=deserialize_VkAccelerationStructureNV(name["members"]["accelerationStructureNV"]);}();
return result;}

    json serialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(VkOpaqueCaptureDescriptorDataCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SiUXSJc=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SkuFySe=json({});
    
        if (name.pNext==NULL){
            return_SkuFySe["null"]=true;
            return return_SkuFySe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opaqueCaptureDescriptorData"]=[&]() {
    json return_diyEAWF=json({});
    
        if (name.opaqueCaptureDescriptorData==NULL){
            return_diyEAWF["null"]=true;
            return return_diyEAWF;
        }
        return serialize_void_p(name.opaqueCaptureDescriptorData);
}();
return result;}

    VkOpaqueCaptureDescriptorDataCreateInfoEXT deserialize_VkOpaqueCaptureDescriptorDataCreateInfoEXT(json name){
        auto result=VkOpaqueCaptureDescriptorDataCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uvSEPyO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uvSEPyO=NULL;
        }
    temp_uvSEPyO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uvSEPyO;}();
[&]() {
void* temp_jJyTmTX;[&]() {

        if (name["members"]["opaqueCaptureDescriptorData"].contains("null")){
        temp_jJyTmTX=NULL;
        }
    temp_jJyTmTX=deserialize_void_p(name["members"]["opaqueCaptureDescriptorData"]);
}();result.opaqueCaptureDescriptorData=temp_jJyTmTX;}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(VkPhysicalDeviceShaderIntegerDotProductFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xTIStxb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zuUwQAo=json({});
    
        if (name.pNext==NULL){
            return_zuUwQAo["null"]=true;
            return return_zuUwQAo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_SNKmnCL=json({});
    return_SNKmnCL=[&]() {
    json return_bUSWwsY=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_SNKmnCL;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeatures deserialize_VkPhysicalDeviceShaderIntegerDotProductFeatures(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JuVQTkt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PhCItOd=json({});
    
        if (name.pNext==NULL){
            return_PhCItOd["null"]=true;
            return return_PhCItOd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderIntegerDotProduct"]=[&]() {
    json return_kZHKaBx=json({});
    return_kZHKaBx=[&]() {
    json return_hzPcmpV=json({});
    return serialize_uint32_t(name.shaderIntegerDotProduct);}();return return_kZHKaBx;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderIntegerDotProduct=deserialize_uint32_t(name["members"]["shaderIntegerDotProduct"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductProperties(VkPhysicalDeviceShaderIntegerDotProductProperties name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZpdOCOC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_zllwdha=json({});
    
        if (name.pNext==NULL){
            return_zllwdha["null"]=true;
            return return_zllwdha;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_EIrsrcP=json({});
    return_EIrsrcP=[&]() {
    json return_kBSSeFy=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_EIrsrcP;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_dxplhMp=json({});
    return_dxplhMp=[&]() {
    json return_pfZxLXU=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_dxplhMp;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_kpYqyAT=json({});
    return_kpYqyAT=[&]() {
    json return_FRQHrho=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_kpYqyAT;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_AYWqFJV=json({});
    return_AYWqFJV=[&]() {
    json return_qqlgNhY=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_AYWqFJV;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_sdTQqHc=json({});
    return_sdTQqHc=[&]() {
    json return_cosSqEL=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_sdTQqHc;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_FOZAFhu=json({});
    return_FOZAFhu=[&]() {
    json return_WPvkNCc=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_FOZAFhu;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_aKLdGcd=json({});
    return_aKLdGcd=[&]() {
    json return_SLJWSDV=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_aKLdGcd;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_tBTflav=json({});
    return_tBTflav=[&]() {
    json return_ZhvaSGi=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_tBTflav;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_ZePeKFK=json({});
    return_ZePeKFK=[&]() {
    json return_LwIolMS=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_ZePeKFK;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_XDqpJXe=json({});
    return_XDqpJXe=[&]() {
    json return_KBxXStF=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_XDqpJXe;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_WHgqDTY=json({});
    return_WHgqDTY=[&]() {
    json return_kIeblzH=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_WHgqDTY;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_VRxRlpc=json({});
    return_VRxRlpc=[&]() {
    json return_VnhTTLq=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_VRxRlpc;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_OTIEzKq=json({});
    return_OTIEzKq=[&]() {
    json return_UkKJxmE=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_OTIEzKq;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_FeiJVaz=json({});
    return_FeiJVaz=[&]() {
    json return_oCCyyjn=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_FeiJVaz;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_ahCYoro=json({});
    return_ahCYoro=[&]() {
    json return_KIUdtVD=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_ahCYoro;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_uHLXXSw=json({});
    return_uHLXXSw=[&]() {
    json return_iVoewSh=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_uHLXXSw;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_tTQvwQG=json({});
    return_tTQvwQG=[&]() {
    json return_XoelALl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_tTQvwQG;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_TmVEBnj=json({});
    return_TmVEBnj=[&]() {
    json return_hRSAJuU=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_TmVEBnj;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_GFGgRas=json({});
    return_GFGgRas=[&]() {
    json return_rfnCHcm=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_GFGgRas;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_CnMogwP=json({});
    return_CnMogwP=[&]() {
    json return_frcnONl=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_CnMogwP;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_xYQfixk=json({});
    return_xYQfixk=[&]() {
    json return_vOgyCFV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_xYQfixk;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_QXbyRul=json({});
    return_QXbyRul=[&]() {
    json return_QlvtqMB=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_QXbyRul;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_HdWUCMa=json({});
    return_HdWUCMa=[&]() {
    json return_becGBao=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_HdWUCMa;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_mIwbgKg=json({});
    return_mIwbgKg=[&]() {
    json return_Pzehmnd=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_mIwbgKg;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_svOPWBC=json({});
    return_svOPWBC=[&]() {
    json return_IMUEKXy=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_svOPWBC;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_oWIePoD=json({});
    return_oWIePoD=[&]() {
    json return_MdmtokN=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_oWIePoD;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_frJOrWu=json({});
    return_frJOrWu=[&]() {
    json return_eyRrPwh=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_frJOrWu;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_lmmUewf=json({});
    return_lmmUewf=[&]() {
    json return_IoiHmTP=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_lmmUewf;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_hwUlgWw=json({});
    return_hwUlgWw=[&]() {
    json return_tbGTpqQ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_hwUlgWw;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_JtWbxHW=json({});
    return_JtWbxHW=[&]() {
    json return_vRlijQi=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_JtWbxHW;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductProperties deserialize_VkPhysicalDeviceShaderIntegerDotProductProperties(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductProperties();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qAcbWoH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MSRzTuM=json({});
    
        if (name.pNext==NULL){
            return_MSRzTuM["null"]=true;
            return return_MSRzTuM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["integerDotProduct8BitUnsignedAccelerated"]=[&]() {
    json return_RWTMRVW=json({});
    return_RWTMRVW=[&]() {
    json return_fUdqnzw=json({});
    return serialize_uint32_t(name.integerDotProduct8BitUnsignedAccelerated);}();return return_RWTMRVW;}();
result["members"]["integerDotProduct8BitSignedAccelerated"]=[&]() {
    json return_LnVUdPa=json({});
    return_LnVUdPa=[&]() {
    json return_pwDbtzQ=json({});
    return serialize_uint32_t(name.integerDotProduct8BitSignedAccelerated);}();return return_LnVUdPa;}();
result["members"]["integerDotProduct8BitMixedSignednessAccelerated"]=[&]() {
    json return_xIgpCmv=json({});
    return_xIgpCmv=[&]() {
    json return_kasVumw=json({});
    return serialize_uint32_t(name.integerDotProduct8BitMixedSignednessAccelerated);}();return return_xIgpCmv;}();
result["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_XqYpMEa=json({});
    return_XqYpMEa=[&]() {
    json return_KVfUMLa=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedUnsignedAccelerated);}();return return_XqYpMEa;}();
result["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]=[&]() {
    json return_FOySoMr=json({});
    return_FOySoMr=[&]() {
    json return_wXymHLJ=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedSignedAccelerated);}();return return_FOySoMr;}();
result["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_nAMWvBX=json({});
    return_nAMWvBX=[&]() {
    json return_sNvDkkL=json({});
    return serialize_uint32_t(name.integerDotProduct4x8BitPackedMixedSignednessAccelerated);}();return return_nAMWvBX;}();
result["members"]["integerDotProduct16BitUnsignedAccelerated"]=[&]() {
    json return_FecOXpz=json({});
    return_FecOXpz=[&]() {
    json return_eLzXoAZ=json({});
    return serialize_uint32_t(name.integerDotProduct16BitUnsignedAccelerated);}();return return_FecOXpz;}();
result["members"]["integerDotProduct16BitSignedAccelerated"]=[&]() {
    json return_qFEPvzs=json({});
    return_qFEPvzs=[&]() {
    json return_UHEkTGF=json({});
    return serialize_uint32_t(name.integerDotProduct16BitSignedAccelerated);}();return return_qFEPvzs;}();
result["members"]["integerDotProduct16BitMixedSignednessAccelerated"]=[&]() {
    json return_lpXEtSJ=json({});
    return_lpXEtSJ=[&]() {
    json return_YPVTYou=json({});
    return serialize_uint32_t(name.integerDotProduct16BitMixedSignednessAccelerated);}();return return_lpXEtSJ;}();
result["members"]["integerDotProduct32BitUnsignedAccelerated"]=[&]() {
    json return_ToxOXla=json({});
    return_ToxOXla=[&]() {
    json return_oAUHbtE=json({});
    return serialize_uint32_t(name.integerDotProduct32BitUnsignedAccelerated);}();return return_ToxOXla;}();
result["members"]["integerDotProduct32BitSignedAccelerated"]=[&]() {
    json return_kEIWeRh=json({});
    return_kEIWeRh=[&]() {
    json return_jDBPIGl=json({});
    return serialize_uint32_t(name.integerDotProduct32BitSignedAccelerated);}();return return_kEIWeRh;}();
result["members"]["integerDotProduct32BitMixedSignednessAccelerated"]=[&]() {
    json return_MFOHzOm=json({});
    return_MFOHzOm=[&]() {
    json return_yNYzIvj=json({});
    return serialize_uint32_t(name.integerDotProduct32BitMixedSignednessAccelerated);}();return return_MFOHzOm;}();
result["members"]["integerDotProduct64BitUnsignedAccelerated"]=[&]() {
    json return_kfkrOyd=json({});
    return_kfkrOyd=[&]() {
    json return_CEgrbfk=json({});
    return serialize_uint32_t(name.integerDotProduct64BitUnsignedAccelerated);}();return return_kfkrOyd;}();
result["members"]["integerDotProduct64BitSignedAccelerated"]=[&]() {
    json return_fFVQteN=json({});
    return_fFVQteN=[&]() {
    json return_gYsgmCa=json({});
    return serialize_uint32_t(name.integerDotProduct64BitSignedAccelerated);}();return return_fFVQteN;}();
result["members"]["integerDotProduct64BitMixedSignednessAccelerated"]=[&]() {
    json return_kfTOTFx=json({});
    return_kfTOTFx=[&]() {
    json return_KsPeXoU=json({});
    return serialize_uint32_t(name.integerDotProduct64BitMixedSignednessAccelerated);}();return return_kfTOTFx;}();
result["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]=[&]() {
    json return_rnvMtvG=json({});
    return_rnvMtvG=[&]() {
    json return_YgVLhDs=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated);}();return return_rnvMtvG;}();
result["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]=[&]() {
    json return_TOXZbbG=json({});
    return_TOXZbbG=[&]() {
    json return_kzSytPY=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitSignedAccelerated);}();return return_TOXZbbG;}();
result["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]=[&]() {
    json return_jTBSTas=json({});
    return_jTBSTas=[&]() {
    json return_yOfZsxs=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated);}();return return_jTBSTas;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]=[&]() {
    json return_ErcdtcI=json({});
    return_ErcdtcI=[&]() {
    json return_XAMLhXc=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated);}();return return_ErcdtcI;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]=[&]() {
    json return_syIPsBm=json({});
    return_syIPsBm=[&]() {
    json return_DeGqRei=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated);}();return return_syIPsBm;}();
result["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]=[&]() {
    json return_zYxfMVh=json({});
    return_zYxfMVh=[&]() {
    json return_TVyQMzZ=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated);}();return return_zYxfMVh;}();
result["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]=[&]() {
    json return_oumftWA=json({});
    return_oumftWA=[&]() {
    json return_NHVEbxB=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated);}();return return_oumftWA;}();
result["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]=[&]() {
    json return_nhDTogp=json({});
    return_nhDTogp=[&]() {
    json return_owijHfV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitSignedAccelerated);}();return return_nhDTogp;}();
result["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]=[&]() {
    json return_tzcjual=json({});
    return_tzcjual=[&]() {
    json return_NGRuWGi=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated);}();return return_tzcjual;}();
result["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]=[&]() {
    json return_YiFyvDC=json({});
    return_YiFyvDC=[&]() {
    json return_PCEudDX=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated);}();return return_YiFyvDC;}();
result["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]=[&]() {
    json return_iLhSQEi=json({});
    return_iLhSQEi=[&]() {
    json return_hNofbrk=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitSignedAccelerated);}();return return_iLhSQEi;}();
result["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]=[&]() {
    json return_JfHgAup=json({});
    return_JfHgAup=[&]() {
    json return_FMyvBuN=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated);}();return return_JfHgAup;}();
result["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]=[&]() {
    json return_UkxuxKa=json({});
    return_UkxuxKa=[&]() {
    json return_aTrqcTR=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated);}();return return_UkxuxKa;}();
result["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]=[&]() {
    json return_NJgjVrQ=json({});
    return_NJgjVrQ=[&]() {
    json return_OXipYXh=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitSignedAccelerated);}();return return_NJgjVrQ;}();
result["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]=[&]() {
    json return_qzBeVGf=json({});
    return_qzBeVGf=[&]() {
    json return_rZedYwV=json({});
    return serialize_uint32_t(name.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated);}();return return_qzBeVGf;}();
return result;}

    VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR deserialize_VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR(json name){
        auto result=VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.integerDotProduct8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProduct64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProduct64BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitUnsignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitUnsignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitSignedAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitSignedAccelerated"]);}();}();
[&]() {
[&]() {
result.integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated=deserialize_uint32_t(name["members"]["integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDrmPropertiesEXT(VkPhysicalDeviceDrmPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gLvVVCQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_abbGSeQ=json({});
    
        if (name.pNext==NULL){
            return_abbGSeQ["null"]=true;
            return return_abbGSeQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["hasPrimary"]=[&]() {
    json return_MrtugTR=json({});
    return_MrtugTR=[&]() {
    json return_pjzrSjv=json({});
    return serialize_uint32_t(name.hasPrimary);}();return return_MrtugTR;}();
result["members"]["hasRender"]=[&]() {
    json return_jAYxWSt=json({});
    return_jAYxWSt=[&]() {
    json return_OxJDTwB=json({});
    return serialize_uint32_t(name.hasRender);}();return return_jAYxWSt;}();
result["members"]["primaryMajor"]=[&]() {
    json return_lUumgPJ=json({});
    return serialize_int64_t(name.primaryMajor);}();
result["members"]["primaryMinor"]=[&]() {
    json return_OfFQTQu=json({});
    return serialize_int64_t(name.primaryMinor);}();
result["members"]["renderMajor"]=[&]() {
    json return_uIPxEVT=json({});
    return serialize_int64_t(name.renderMajor);}();
result["members"]["renderMinor"]=[&]() {
    json return_rXmScUN=json({});
    return serialize_int64_t(name.renderMinor);}();
return result;}

    VkPhysicalDeviceDrmPropertiesEXT deserialize_VkPhysicalDeviceDrmPropertiesEXT(json name){
        auto result=VkPhysicalDeviceDrmPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.hasPrimary=deserialize_uint32_t(name["members"]["hasPrimary"]);}();}();
[&]() {
[&]() {
result.hasRender=deserialize_uint32_t(name["members"]["hasRender"]);}();}();
[&]() {
result.primaryMajor=deserialize_int64_t(name["members"]["primaryMajor"]);}();
[&]() {
result.primaryMinor=deserialize_int64_t(name["members"]["primaryMinor"]);}();
[&]() {
result.renderMajor=deserialize_int64_t(name["members"]["renderMajor"]);}();
[&]() {
result.renderMinor=deserialize_int64_t(name["members"]["renderMinor"]);}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SAHRZQB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VpyqYLm=json({});
    
        if (name.pNext==NULL){
            return_VpyqYLm["null"]=true;
            return return_VpyqYLm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_wqOwMmw=json({});
    return_wqOwMmw=[&]() {
    json return_AGsjUWa=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_wqOwMmw;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zvstfQq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UuiIMNY=json({});
    
        if (name.pNext==NULL){
            return_UuiIMNY["null"]=true;
            return return_UuiIMNY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["fragmentShaderBarycentric"]=[&]() {
    json return_YLRgcTr=json({});
    return_YLRgcTr=[&]() {
    json return_hdCOcuC=json({});
    return serialize_uint32_t(name.fragmentShaderBarycentric);}();return return_YLRgcTr;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV deserialize_VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.fragmentShaderBarycentric=deserialize_uint32_t(name["members"]["fragmentShaderBarycentric"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZUoZAti=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FiyhdTQ=json({});
    
        if (name.pNext==NULL){
            return_FiyhdTQ["null"]=true;
            return return_FiyhdTQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["triStripVertexOrderIndependentOfProvokingVertex"]=[&]() {
    json return_PsZjXvY=json({});
    return_PsZjXvY=[&]() {
    json return_YGNhKYV=json({});
    return serialize_uint32_t(name.triStripVertexOrderIndependentOfProvokingVertex);}();return return_PsZjXvY;}();
return result;}

    VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR deserialize_VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR(json name){
        auto result=VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.triStripVertexOrderIndependentOfProvokingVertex=deserialize_uint32_t(name["members"]["triStripVertexOrderIndependentOfProvokingVertex"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(VkPhysicalDeviceRayTracingMotionBlurFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IoFSDYq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QQJcITz=json({});
    
        if (name.pNext==NULL){
            return_QQJcITz["null"]=true;
            return return_QQJcITz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingMotionBlur"]=[&]() {
    json return_djcNnSO=json({});
    return_djcNnSO=[&]() {
    json return_xtpPdWY=json({});
    return serialize_uint32_t(name.rayTracingMotionBlur);}();return return_djcNnSO;}();
result["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]=[&]() {
    json return_cclzsjZ=json({});
    return_cclzsjZ=[&]() {
    json return_zRaOkqX=json({});
    return serialize_uint32_t(name.rayTracingMotionBlurPipelineTraceRaysIndirect);}();return return_cclzsjZ;}();
return result;}

    VkPhysicalDeviceRayTracingMotionBlurFeaturesNV deserialize_VkPhysicalDeviceRayTracingMotionBlurFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingMotionBlurFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingMotionBlur=deserialize_uint32_t(name["members"]["rayTracingMotionBlur"]);}();}();
[&]() {
[&]() {
result.rayTracingMotionBlurPipelineTraceRaysIndirect=deserialize_uint32_t(name["members"]["rayTracingMotionBlurPipelineTraceRaysIndirect"]);}();}();
return result;}

    json serialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(VkAccelerationStructureGeometryMotionTrianglesDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DUwOvHS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XkvldHM=json({});
    
        if (name.pNext==NULL){
            return_XkvldHM["null"]=true;
            return return_XkvldHM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["vertexData"]=[&]() {
    json return_bHtXvmQ=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.vertexData);}();
return result;}

    VkAccelerationStructureGeometryMotionTrianglesDataNV deserialize_VkAccelerationStructureGeometryMotionTrianglesDataNV(json name){
        auto result=VkAccelerationStructureGeometryMotionTrianglesDataNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_OqTmgfr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_OqTmgfr=NULL;
        }
    temp_OqTmgfr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_OqTmgfr;}();
[&]() {
result.vertexData=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["vertexData"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInfoNV(VkAccelerationStructureMotionInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eNhEVDn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QBdpZeh=json({});
    
        if (name.pNext==NULL){
            return_QBdpZeh["null"]=true;
            return return_QBdpZeh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxInstances"]=[&]() {
    json return_SOogkfv=json({});
    return serialize_uint32_t(name.maxInstances);}();
result["members"]["flags"]=[&]() {
    json return_RfHeLwd=json({});
    return serialize_VkAccelerationStructureMotionInfoFlagsNV(name.flags);}();
return result;}

    VkAccelerationStructureMotionInfoNV deserialize_VkAccelerationStructureMotionInfoNV(json name){
        auto result=VkAccelerationStructureMotionInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XxGuhRa;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XxGuhRa=NULL;
        }
    temp_XxGuhRa=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XxGuhRa;}();
[&]() {
result.maxInstances=deserialize_uint32_t(name["members"]["maxInstances"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInfoFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkSRTDataNV(VkSRTDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sx"]=[&]() {
    json return_rrmftAb=json({});
    return serialize_float(name.sx);}();
result["members"]["a"]=[&]() {
    json return_UxDtFsa=json({});
    return serialize_float(name.a);}();
result["members"]["b"]=[&]() {
    json return_YlncLVp=json({});
    return serialize_float(name.b);}();
result["members"]["pvx"]=[&]() {
    json return_DeQffPu=json({});
    return serialize_float(name.pvx);}();
result["members"]["sy"]=[&]() {
    json return_ICeLKbK=json({});
    return serialize_float(name.sy);}();
result["members"]["c"]=[&]() {
    json return_CvOEWcG=json({});
    return serialize_float(name.c);}();
result["members"]["pvy"]=[&]() {
    json return_zwonyuS=json({});
    return serialize_float(name.pvy);}();
result["members"]["sz"]=[&]() {
    json return_wIgZXas=json({});
    return serialize_float(name.sz);}();
result["members"]["pvz"]=[&]() {
    json return_NgPiJmg=json({});
    return serialize_float(name.pvz);}();
result["members"]["qx"]=[&]() {
    json return_KrJNbjn=json({});
    return serialize_float(name.qx);}();
result["members"]["qy"]=[&]() {
    json return_FCGSwBu=json({});
    return serialize_float(name.qy);}();
result["members"]["qz"]=[&]() {
    json return_tCSvgad=json({});
    return serialize_float(name.qz);}();
result["members"]["qw"]=[&]() {
    json return_maFssRK=json({});
    return serialize_float(name.qw);}();
result["members"]["tx"]=[&]() {
    json return_oKmoRpU=json({});
    return serialize_float(name.tx);}();
result["members"]["ty"]=[&]() {
    json return_YqancOe=json({});
    return serialize_float(name.ty);}();
result["members"]["tz"]=[&]() {
    json return_nOviKLg=json({});
    return serialize_float(name.tz);}();
return result;}

    VkSRTDataNV deserialize_VkSRTDataNV(json name){
        auto result=VkSRTDataNV();
    
[&]() {
result.sx=deserialize_float(name["members"]["sx"]);}();
[&]() {
result.a=deserialize_float(name["members"]["a"]);}();
[&]() {
result.b=deserialize_float(name["members"]["b"]);}();
[&]() {
result.pvx=deserialize_float(name["members"]["pvx"]);}();
[&]() {
result.sy=deserialize_float(name["members"]["sy"]);}();
[&]() {
result.c=deserialize_float(name["members"]["c"]);}();
[&]() {
result.pvy=deserialize_float(name["members"]["pvy"]);}();
[&]() {
result.sz=deserialize_float(name["members"]["sz"]);}();
[&]() {
result.pvz=deserialize_float(name["members"]["pvz"]);}();
[&]() {
result.qx=deserialize_float(name["members"]["qx"]);}();
[&]() {
result.qy=deserialize_float(name["members"]["qy"]);}();
[&]() {
result.qz=deserialize_float(name["members"]["qz"]);}();
[&]() {
result.qw=deserialize_float(name["members"]["qw"]);}();
[&]() {
result.tx=deserialize_float(name["members"]["tx"]);}();
[&]() {
result.ty=deserialize_float(name["members"]["ty"]);}();
[&]() {
result.tz=deserialize_float(name["members"]["tz"]);}();
return result;}

    json serialize_VkAccelerationStructureSRTMotionInstanceNV(VkAccelerationStructureSRTMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_glYLkio=json({});
    return serialize_VkSRTDataNV(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_zIoKnGt=json({});
    return serialize_VkSRTDataNV(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_vtBqTNv=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_LOhBlMn=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_CoWcPWg=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_IEJNzRY=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_aFuFGtp=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureSRTMotionInstanceNV deserialize_VkAccelerationStructureSRTMotionInstanceNV(json name){
        auto result=VkAccelerationStructureSRTMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkSRTDataNV(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkSRTDataNV(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMatrixMotionInstanceNV(VkAccelerationStructureMatrixMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["transformT0"]=[&]() {
    json return_hEakFop=json({});
    return serialize_VkTransformMatrixKHR(name.transformT0);}();
result["members"]["transformT1"]=[&]() {
    json return_DUlHLfE=json({});
    return serialize_VkTransformMatrixKHR(name.transformT1);}();
result["members"]["instanceCustomIndex"]=[&]() {
    json return_xPscTAN=json({});
    return serialize_uint32_t(name.instanceCustomIndex);}();
result["members"]["mask"]=[&]() {
    json return_opDAYaC=json({});
    return serialize_uint32_t(name.mask);}();
result["members"]["instanceShaderBindingTableRecordOffset"]=[&]() {
    json return_dNQqTTm=json({});
    return serialize_uint32_t(name.instanceShaderBindingTableRecordOffset);}();
result["members"]["flags"]=[&]() {
    json return_yNJFwCG=json({});
    return serialize_VkGeometryInstanceFlagsKHR(name.flags);}();
result["members"]["accelerationStructureReference"]=[&]() {
    json return_kPjXGLl=json({});
    return serialize_uint64_t(name.accelerationStructureReference);}();
return result;}

    VkAccelerationStructureMatrixMotionInstanceNV deserialize_VkAccelerationStructureMatrixMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMatrixMotionInstanceNV();
    
[&]() {
result.transformT0=deserialize_VkTransformMatrixKHR(name["members"]["transformT0"]);}();
[&]() {
result.transformT1=deserialize_VkTransformMatrixKHR(name["members"]["transformT1"]);}();
[&]() {
result.instanceCustomIndex=deserialize_uint32_t(name["members"]["instanceCustomIndex"]);}();
[&]() {
result.mask=deserialize_uint32_t(name["members"]["mask"]);}();
[&]() {
result.instanceShaderBindingTableRecordOffset=deserialize_uint32_t(name["members"]["instanceShaderBindingTableRecordOffset"]);}();
[&]() {
result.flags=deserialize_VkGeometryInstanceFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.accelerationStructureReference=deserialize_uint64_t(name["members"]["accelerationStructureReference"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceDataNV(VkAccelerationStructureMotionInstanceDataNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["staticInstance"]=[&]() {
    json return_MYyGZAJ=json({});
    return serialize_VkAccelerationStructureInstanceKHR(name.staticInstance);}();
result["members"]["matrixMotionInstance"]=[&]() {
    json return_ZRibNYf=json({});
    return serialize_VkAccelerationStructureMatrixMotionInstanceNV(name.matrixMotionInstance);}();
result["members"]["srtMotionInstance"]=[&]() {
    json return_mJToPex=json({});
    return serialize_VkAccelerationStructureSRTMotionInstanceNV(name.srtMotionInstance);}();
return result;}

    VkAccelerationStructureMotionInstanceDataNV deserialize_VkAccelerationStructureMotionInstanceDataNV(json name){
        auto result=VkAccelerationStructureMotionInstanceDataNV();
    
[&]() {
result.staticInstance=deserialize_VkAccelerationStructureInstanceKHR(name["members"]["staticInstance"]);}();
[&]() {
result.matrixMotionInstance=deserialize_VkAccelerationStructureMatrixMotionInstanceNV(name["members"]["matrixMotionInstance"]);}();
[&]() {
result.srtMotionInstance=deserialize_VkAccelerationStructureSRTMotionInstanceNV(name["members"]["srtMotionInstance"]);}();
return result;}

    json serialize_VkAccelerationStructureMotionInstanceNV(VkAccelerationStructureMotionInstanceNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["type"]=[&]() {
    json return_vPPpyZp=json({});
    return serialize_VkAccelerationStructureMotionInstanceTypeNV(name.type);}();
result["members"]["flags"]=[&]() {
    json return_mZStwSy=json({});
    return serialize_VkAccelerationStructureMotionInstanceFlagsNV(name.flags);}();
result["members"]["data"]=[&]() {
    json return_bDKZBHC=json({});
    return serialize_VkAccelerationStructureMotionInstanceDataNV(name.data);}();
return result;}

    VkAccelerationStructureMotionInstanceNV deserialize_VkAccelerationStructureMotionInstanceNV(json name){
        auto result=VkAccelerationStructureMotionInstanceNV();
    
[&]() {
result.type=deserialize_VkAccelerationStructureMotionInstanceTypeNV(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkAccelerationStructureMotionInstanceFlagsNV(name["members"]["flags"]);}();
[&]() {
result.data=deserialize_VkAccelerationStructureMotionInstanceDataNV(name["members"]["data"]);}();
return result;}

    json serialize_VkMemoryGetRemoteAddressInfoNV(VkMemoryGetRemoteAddressInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rCkZSYt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_akrTJgZ=json({});
    
        if (name.pNext==NULL){
            return_akrTJgZ["null"]=true;
            return return_akrTJgZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["memory"]=[&]() {
    json return_rTFBhbW=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["handleType"]=[&]() {
    json return_tXCYPsC=json({});
    return serialize_VkExternalMemoryHandleTypeFlagBits(name.handleType);}();
return result;}

    VkMemoryGetRemoteAddressInfoNV deserialize_VkMemoryGetRemoteAddressInfoNV(json name){
        auto result=VkMemoryGetRemoteAddressInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IUxyWOD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IUxyWOD=NULL;
        }
    temp_IUxyWOD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IUxyWOD;}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
result.handleType=deserialize_VkExternalMemoryHandleTypeFlagBits(name["members"]["handleType"]);}();
return result;}

    json serialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MZZWkaC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pwzysto=json({});
    
        if (name.pNext==NULL){
            return_pwzysto["null"]=true;
            return return_pwzysto;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["formatRgba10x6WithoutYCbCrSampler"]=[&]() {
    json return_kejsXHd=json({});
    return_kejsXHd=[&]() {
    json return_rhNLhfG=json({});
    return serialize_uint32_t(name.formatRgba10x6WithoutYCbCrSampler);}();return return_kejsXHd;}();
return result;}

    VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT deserialize_VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.formatRgba10x6WithoutYCbCrSampler=deserialize_uint32_t(name["members"]["formatRgba10x6WithoutYCbCrSampler"]);}();}();
return result;}

    json serialize_VkFormatProperties3(VkFormatProperties3 name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_OvFFXTr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XZUYVoZ=json({});
    
        if (name.pNext==NULL){
            return_XZUYVoZ["null"]=true;
            return return_XZUYVoZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_YovsrCe=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_CGnPPmr=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_oQsUWwD=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3 deserialize_VkFormatProperties3(json name){
        auto result=VkFormatProperties3();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkFormatProperties3KHR(VkFormatProperties3KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zOBhPWL=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DlHNyDi=json({});
    
        if (name.pNext==NULL){
            return_DlHNyDi["null"]=true;
            return return_DlHNyDi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearTilingFeatures"]=[&]() {
    json return_vUGDAFK=json({});
    return serialize_VkFormatFeatureFlags2(name.linearTilingFeatures);}();
result["members"]["optimalTilingFeatures"]=[&]() {
    json return_oakFuCv=json({});
    return serialize_VkFormatFeatureFlags2(name.optimalTilingFeatures);}();
result["members"]["bufferFeatures"]=[&]() {
    json return_SDrDbIA=json({});
    return serialize_VkFormatFeatureFlags2(name.bufferFeatures);}();
return result;}

    VkFormatProperties3KHR deserialize_VkFormatProperties3KHR(json name){
        auto result=VkFormatProperties3KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.linearTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["linearTilingFeatures"]);}();
[&]() {
result.optimalTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["optimalTilingFeatures"]);}();
[&]() {
result.bufferFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["bufferFeatures"]);}();
return result;}

    json serialize_VkDrmFormatModifierPropertiesList2EXT(VkDrmFormatModifierPropertiesList2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gEOUMsz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NkDOJtV=json({});
    
        if (name.pNext==NULL){
            return_NkDOJtV["null"]=true;
            return return_NkDOJtV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["drmFormatModifierCount"]=[&]() {
    json return_PYruCwR=json({});
    return serialize_uint32_t(name.drmFormatModifierCount);}();
result["members"]["pDrmFormatModifierProperties"]=[&]() {
    json return_SzhDMEM=json({});
    
        if (name.pDrmFormatModifierProperties==NULL){
            return_SzhDMEM["null"]=true;
            return return_SzhDMEM;
        }
        
        return_SzhDMEM["members"]={};
        for(int i=0; i < name.drmFormatModifierCount; i++){
            json temp;
            temp=[&]() {
    json return_iEchnYw=json({});
    return serialize_VkDrmFormatModifierProperties2EXT(name.pDrmFormatModifierProperties[i]);}();
            return_SzhDMEM["members"][std::to_string(i)].push_back(temp);
        }
        return return_SzhDMEM;
        }();
return result;}

    VkDrmFormatModifierPropertiesList2EXT deserialize_VkDrmFormatModifierPropertiesList2EXT(json name){
        auto result=VkDrmFormatModifierPropertiesList2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.drmFormatModifierCount=deserialize_uint32_t(name["members"]["drmFormatModifierCount"]);}();
[&]() {

        if (name["members"]["pDrmFormatModifierProperties"].contains("null")){
        result.pDrmFormatModifierProperties=NULL;
        }
    result.pDrmFormatModifierProperties=(VkDrmFormatModifierProperties2EXT*)malloc(result.drmFormatModifierCount*sizeof(VkDrmFormatModifierProperties2EXT));
        for (int bQpVWLE=0; bQpVWLE < result.drmFormatModifierCount; bQpVWLE++){
            [&]() {
result.pDrmFormatModifierProperties[bQpVWLE]=deserialize_VkDrmFormatModifierProperties2EXT(name["members"]["pDrmFormatModifierProperties"]["members"][bQpVWLE]);}();;
        }
        }();
return result;}

    json serialize_VkDrmFormatModifierProperties2EXT(VkDrmFormatModifierProperties2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["drmFormatModifier"]=[&]() {
    json return_RlluvMw=json({});
    return serialize_uint64_t(name.drmFormatModifier);}();
result["members"]["drmFormatModifierPlaneCount"]=[&]() {
    json return_yPBIcAu=json({});
    return serialize_uint32_t(name.drmFormatModifierPlaneCount);}();
result["members"]["drmFormatModifierTilingFeatures"]=[&]() {
    json return_ePcHtDb=json({});
    return serialize_VkFormatFeatureFlags2(name.drmFormatModifierTilingFeatures);}();
return result;}

    VkDrmFormatModifierProperties2EXT deserialize_VkDrmFormatModifierProperties2EXT(json name){
        auto result=VkDrmFormatModifierProperties2EXT();
    
[&]() {
result.drmFormatModifier=deserialize_uint64_t(name["members"]["drmFormatModifier"]);}();
[&]() {
result.drmFormatModifierPlaneCount=deserialize_uint32_t(name["members"]["drmFormatModifierPlaneCount"]);}();
[&]() {
result.drmFormatModifierTilingFeatures=deserialize_VkFormatFeatureFlags2(name["members"]["drmFormatModifierTilingFeatures"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfo(VkPipelineRenderingCreateInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qqHctlt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qDTEZAs=json({});
    
        if (name.pNext==NULL){
            return_qDTEZAs["null"]=true;
            return return_qDTEZAs;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_krNPNSC=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_cxqDFIM=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_PABzArR=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_PABzArR["null"]=true;
            return return_PABzArR;
        }
        
        return_PABzArR["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ScndSUC=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_PABzArR["members"][std::to_string(i)].push_back(temp);
        }
        return return_PABzArR;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_jUMsKey=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_xNzoLVq=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfo deserialize_VkPipelineRenderingCreateInfo(json name){
        auto result=VkPipelineRenderingCreateInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lZTQngl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lZTQngl=NULL;
        }
    temp_lZTQngl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lZTQngl;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_RijKxmH;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_RijKxmH=NULL;
        }
    temp_RijKxmH=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int InOLGRd=0; InOLGRd < result.colorAttachmentCount; InOLGRd++){
            [&]() {
temp_RijKxmH[InOLGRd]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][InOLGRd]);}();;
        }
        }();result.pColorAttachmentFormats=temp_RijKxmH;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkPipelineRenderingCreateInfoKHR(VkPipelineRenderingCreateInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FdcZUpm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_keODfxX=json({});
    
        if (name.pNext==NULL){
            return_keODfxX["null"]=true;
            return return_keODfxX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["viewMask"]=[&]() {
    json return_PXwKgso=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_iqIaPYI=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_EUTNuOl=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_EUTNuOl["null"]=true;
            return return_EUTNuOl;
        }
        
        return_EUTNuOl["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ugTXzrx=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_EUTNuOl["members"][std::to_string(i)].push_back(temp);
        }
        return return_EUTNuOl;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_VzgoeLo=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_CXqcpfx=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
return result;}

    VkPipelineRenderingCreateInfoKHR deserialize_VkPipelineRenderingCreateInfoKHR(json name){
        auto result=VkPipelineRenderingCreateInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_tfCfTcP;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_tfCfTcP=NULL;
        }
    temp_tfCfTcP=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_tfCfTcP;}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_utbybKv;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_utbybKv=NULL;
        }
    temp_utbybKv=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int aqOMKSg=0; aqOMKSg < result.colorAttachmentCount; aqOMKSg++){
            [&]() {
temp_utbybKv[aqOMKSg]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][aqOMKSg]);}();;
        }
        }();result.pColorAttachmentFormats=temp_utbybKv;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
return result;}

    json serialize_VkRenderingInfo(VkRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VhfGyhn=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IsTCwbi=json({});
    
        if (name.pNext==NULL){
            return_IsTCwbi["null"]=true;
            return return_IsTCwbi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_FIIHoXi=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_zjLqLeo=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_xjwACge=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_jIhxjKL=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_LNEjgcK=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_EOXYxjh=json({});
    
        if (name.pColorAttachments==NULL){
            return_EOXYxjh["null"]=true;
            return return_EOXYxjh;
        }
        
        return_EOXYxjh["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_lPrYFJX=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_EOXYxjh["members"][std::to_string(i)].push_back(temp);
        }
        return return_EOXYxjh;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_MJXTQWR=json({});
    
        if (name.pDepthAttachment==NULL){
            return_MJXTQWR["null"]=true;
            return return_MJXTQWR;
        }
        return_MJXTQWR=[&]() {
    json return_GBkVtZI=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_MJXTQWR;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_gtZgJMm=json({});
    
        if (name.pStencilAttachment==NULL){
            return_gtZgJMm["null"]=true;
            return return_gtZgJMm;
        }
        return_gtZgJMm=[&]() {
    json return_AYyIzLn=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_gtZgJMm;}();
return result;}

    VkRenderingInfo deserialize_VkRenderingInfo(json name){
        auto result=VkRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_QxWGxMt;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_QxWGxMt=NULL;
        }
    temp_QxWGxMt=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_QxWGxMt;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_srEqKNs;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_srEqKNs=NULL;
        }
    temp_srEqKNs=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int jKoiIOH=0; jKoiIOH < result.colorAttachmentCount; jKoiIOH++){
            [&]() {
temp_srEqKNs[jKoiIOH]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][jKoiIOH]);}();;
        }
        }();result.pColorAttachments=temp_srEqKNs;}();
[&]() {
VkRenderingAttachmentInfo* temp_GYbpXQP;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_GYbpXQP=NULL;
        }
    [&]() {
*(temp_GYbpXQP)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_GYbpXQP;}();
[&]() {
VkRenderingAttachmentInfo* temp_kUjSqLt;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_kUjSqLt=NULL;
        }
    [&]() {
*(temp_kUjSqLt)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_kUjSqLt;}();
return result;}

    json serialize_VkRenderingInfoKHR(VkRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aNdKKre=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DAqNikN=json({});
    
        if (name.pNext==NULL){
            return_DAqNikN["null"]=true;
            return return_DAqNikN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_amMfEKU=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["renderArea"]=[&]() {
    json return_IOhrdMQ=json({});
    return serialize_VkRect2D(name.renderArea);}();
result["members"]["layerCount"]=[&]() {
    json return_QYjvHnn=json({});
    return serialize_uint32_t(name.layerCount);}();
result["members"]["viewMask"]=[&]() {
    json return_Gzcjngw=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_yoEsbhg=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachments"]=[&]() {
    json return_CSUUHjd=json({});
    
        if (name.pColorAttachments==NULL){
            return_CSUUHjd["null"]=true;
            return return_CSUUHjd;
        }
        
        return_CSUUHjd["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_OsxKeWp=json({});
    return serialize_VkRenderingAttachmentInfo(name.pColorAttachments[i]);}();
            return_CSUUHjd["members"][std::to_string(i)].push_back(temp);
        }
        return return_CSUUHjd;
        }();
result["members"]["pDepthAttachment"]=[&]() {
    json return_lXLOzYv=json({});
    
        if (name.pDepthAttachment==NULL){
            return_lXLOzYv["null"]=true;
            return return_lXLOzYv;
        }
        return_lXLOzYv=[&]() {
    json return_iEysBDt=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pDepthAttachment);}();
return return_lXLOzYv;}();
result["members"]["pStencilAttachment"]=[&]() {
    json return_wTdqXPu=json({});
    
        if (name.pStencilAttachment==NULL){
            return_wTdqXPu["null"]=true;
            return return_wTdqXPu;
        }
        return_wTdqXPu=[&]() {
    json return_TGvqUHJ=json({});
    return serialize_VkRenderingAttachmentInfo(*name.pStencilAttachment);}();
return return_wTdqXPu;}();
return result;}

    VkRenderingInfoKHR deserialize_VkRenderingInfoKHR(json name){
        auto result=VkRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ooqOQss;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ooqOQss=NULL;
        }
    temp_ooqOQss=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ooqOQss;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.renderArea=deserialize_VkRect2D(name["members"]["renderArea"]);}();
[&]() {
result.layerCount=deserialize_uint32_t(name["members"]["layerCount"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkRenderingAttachmentInfo* temp_xIKlZXr;[&]() {

        if (name["members"]["pColorAttachments"].contains("null")){
        temp_xIKlZXr=NULL;
        }
    temp_xIKlZXr=(VkRenderingAttachmentInfo*)malloc(result.colorAttachmentCount*sizeof(VkRenderingAttachmentInfo));
        for (int QgnDqUD=0; QgnDqUD < result.colorAttachmentCount; QgnDqUD++){
            [&]() {
temp_xIKlZXr[QgnDqUD]=deserialize_VkRenderingAttachmentInfo(name["members"]["pColorAttachments"]["members"][QgnDqUD]);}();;
        }
        }();result.pColorAttachments=temp_xIKlZXr;}();
[&]() {
VkRenderingAttachmentInfo* temp_QVzBelh;[&]() {

        if (name["members"]["pDepthAttachment"].contains("null")){
        temp_QVzBelh=NULL;
        }
    [&]() {
*(temp_QVzBelh)=deserialize_VkRenderingAttachmentInfo(name["members"]["pDepthAttachment"]);}();
}();result.pDepthAttachment=temp_QVzBelh;}();
[&]() {
VkRenderingAttachmentInfo* temp_rCSzRsa;[&]() {

        if (name["members"]["pStencilAttachment"].contains("null")){
        temp_rCSzRsa=NULL;
        }
    [&]() {
*(temp_rCSzRsa)=deserialize_VkRenderingAttachmentInfo(name["members"]["pStencilAttachment"]);}();
}();result.pStencilAttachment=temp_rCSzRsa;}();
return result;}

    json serialize_VkRenderingAttachmentInfo(VkRenderingAttachmentInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sUTHzJk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DhMZiRm=json({});
    
        if (name.pNext==NULL){
            return_DhMZiRm["null"]=true;
            return return_DhMZiRm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_aiboIDu=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_Xuparno=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_XiynNWo=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_tRXmwIp=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_snWZrpc=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_NsQMisO=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_OYdzDrL=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_wdClYDJ=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfo deserialize_VkRenderingAttachmentInfo(json name){
        auto result=VkRenderingAttachmentInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KFRKhVj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KFRKhVj=NULL;
        }
    temp_KFRKhVj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KFRKhVj;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingAttachmentInfoKHR(VkRenderingAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ELMlmJk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mUiVBWP=json({});
    
        if (name.pNext==NULL){
            return_mUiVBWP["null"]=true;
            return return_mUiVBWP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_PMGrOfz=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_RaeXFVQ=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["resolveMode"]=[&]() {
    json return_XegGTQQ=json({});
    return serialize_VkResolveModeFlagBits(name.resolveMode);}();
result["members"]["resolveImageView"]=[&]() {
    json return_BdbjKTS=json({});
    return serialize_VkImageView(name.resolveImageView);}();
result["members"]["resolveImageLayout"]=[&]() {
    json return_UwCZTWq=json({});
    return serialize_VkImageLayout(name.resolveImageLayout);}();
result["members"]["loadOp"]=[&]() {
    json return_gUdPvSN=json({});
    return serialize_VkAttachmentLoadOp(name.loadOp);}();
result["members"]["storeOp"]=[&]() {
    json return_NpyWpwe=json({});
    return serialize_VkAttachmentStoreOp(name.storeOp);}();
result["members"]["clearValue"]=[&]() {
    json return_YRcsOQk=json({});
    return serialize_VkClearValue(name.clearValue);}();
return result;}

    VkRenderingAttachmentInfoKHR deserialize_VkRenderingAttachmentInfoKHR(json name){
        auto result=VkRenderingAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kseRjsz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kseRjsz=NULL;
        }
    temp_kseRjsz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kseRjsz;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.resolveMode=deserialize_VkResolveModeFlagBits(name["members"]["resolveMode"]);}();
[&]() {
result.resolveImageView=deserialize_VkImageView(name["members"]["resolveImageView"]);}();
[&]() {
result.resolveImageLayout=deserialize_VkImageLayout(name["members"]["resolveImageLayout"]);}();
[&]() {
result.loadOp=deserialize_VkAttachmentLoadOp(name["members"]["loadOp"]);}();
[&]() {
result.storeOp=deserialize_VkAttachmentStoreOp(name["members"]["storeOp"]);}();
[&]() {
result.clearValue=deserialize_VkClearValue(name["members"]["clearValue"]);}();
return result;}

    json serialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(VkRenderingFragmentShadingRateAttachmentInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_XBhjFbO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PUcAwLg=json({});
    
        if (name.pNext==NULL){
            return_PUcAwLg["null"]=true;
            return return_PUcAwLg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_WLTlodg=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_rssMXTL=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
result["members"]["shadingRateAttachmentTexelSize"]=[&]() {
    json return_SeccEkf=json({});
    return serialize_VkExtent2D(name.shadingRateAttachmentTexelSize);}();
return result;}

    VkRenderingFragmentShadingRateAttachmentInfoKHR deserialize_VkRenderingFragmentShadingRateAttachmentInfoKHR(json name){
        auto result=VkRenderingFragmentShadingRateAttachmentInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_EmIrOoW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_EmIrOoW=NULL;
        }
    temp_EmIrOoW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_EmIrOoW;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
[&]() {
result.shadingRateAttachmentTexelSize=deserialize_VkExtent2D(name["members"]["shadingRateAttachmentTexelSize"]);}();
return result;}

    json serialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(VkRenderingFragmentDensityMapAttachmentInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YmESoyB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AnLNUGU=json({});
    
        if (name.pNext==NULL){
            return_AnLNUGU["null"]=true;
            return return_AnLNUGU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageView"]=[&]() {
    json return_Xacbfmw=json({});
    return serialize_VkImageView(name.imageView);}();
result["members"]["imageLayout"]=[&]() {
    json return_eJLDybx=json({});
    return serialize_VkImageLayout(name.imageLayout);}();
return result;}

    VkRenderingFragmentDensityMapAttachmentInfoEXT deserialize_VkRenderingFragmentDensityMapAttachmentInfoEXT(json name){
        auto result=VkRenderingFragmentDensityMapAttachmentInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uErhKoc;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uErhKoc=NULL;
        }
    temp_uErhKoc=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uErhKoc;}();
[&]() {
result.imageView=deserialize_VkImageView(name["members"]["imageView"]);}();
[&]() {
result.imageLayout=deserialize_VkImageLayout(name["members"]["imageLayout"]);}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeatures(VkPhysicalDeviceDynamicRenderingFeatures name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FZitPuD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vWZNGRj=json({});
    
        if (name.pNext==NULL){
            return_vWZNGRj["null"]=true;
            return return_vWZNGRj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_frPdxKu=json({});
    return_frPdxKu=[&]() {
    json return_vMeDYAX=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_frPdxKu;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeatures deserialize_VkPhysicalDeviceDynamicRenderingFeatures(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeatures();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(VkPhysicalDeviceDynamicRenderingFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VSGWEgu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_Xrnzeak=json({});
    
        if (name.pNext==NULL){
            return_Xrnzeak["null"]=true;
            return return_Xrnzeak;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRendering"]=[&]() {
    json return_AFHvyfx=json({});
    return_AFHvyfx=[&]() {
    json return_nlxWcvh=json({});
    return serialize_uint32_t(name.dynamicRendering);}();return return_AFHvyfx;}();
return result;}

    VkPhysicalDeviceDynamicRenderingFeaturesKHR deserialize_VkPhysicalDeviceDynamicRenderingFeaturesKHR(json name){
        auto result=VkPhysicalDeviceDynamicRenderingFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRendering=deserialize_uint32_t(name["members"]["dynamicRendering"]);}();}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfo(VkCommandBufferInheritanceRenderingInfo name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_vaHIKXA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QWHrkRM=json({});
    
        if (name.pNext==NULL){
            return_QWHrkRM["null"]=true;
            return return_QWHrkRM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_njRRxdx=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_WIgKQZZ=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_ETQgvFo=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_BJHnkjj=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_EieNCpF=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_EieNCpF["null"]=true;
            return return_EieNCpF;
        }
        
        return_EieNCpF["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_xQdlxJQ=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_EieNCpF["members"][std::to_string(i)].push_back(temp);
        }
        return return_EieNCpF;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_xpRncFR=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_GiPekog=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_JydhiSV=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfo deserialize_VkCommandBufferInheritanceRenderingInfo(json name){
        auto result=VkCommandBufferInheritanceRenderingInfo();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_TsqOGuz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_TsqOGuz=NULL;
        }
    temp_TsqOGuz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_TsqOGuz;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_JbpxWwT;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_JbpxWwT=NULL;
        }
    temp_JbpxWwT=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int xIpcmeL=0; xIpcmeL < result.colorAttachmentCount; xIpcmeL++){
            [&]() {
temp_JbpxWwT[xIpcmeL]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][xIpcmeL]);}();;
        }
        }();result.pColorAttachmentFormats=temp_JbpxWwT;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkCommandBufferInheritanceRenderingInfoKHR(VkCommandBufferInheritanceRenderingInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ggKLeKU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jcxSrJx=json({});
    
        if (name.pNext==NULL){
            return_jcxSrJx["null"]=true;
            return return_jcxSrJx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_LynUEPh=json({});
    return serialize_VkRenderingFlags(name.flags);}();
result["members"]["viewMask"]=[&]() {
    json return_PFuQZLu=json({});
    return serialize_uint32_t(name.viewMask);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_otIDxCe=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_soUqihu=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentFormats"]=[&]() {
    json return_YupyPlv=json({});
    
        if (name.pColorAttachmentFormats==NULL){
            return_YupyPlv["null"]=true;
            return return_YupyPlv;
        }
        
        return_YupyPlv["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_ehhznTg=json({});
    return serialize_VkFormat(name.pColorAttachmentFormats[i]);}();
            return_YupyPlv["members"][std::to_string(i)].push_back(temp);
        }
        return return_YupyPlv;
        }();
result["members"]["depthAttachmentFormat"]=[&]() {
    json return_EMIiTqN=json({});
    return serialize_VkFormat(name.depthAttachmentFormat);}();
result["members"]["stencilAttachmentFormat"]=[&]() {
    json return_nUsYEiD=json({});
    return serialize_VkFormat(name.stencilAttachmentFormat);}();
result["members"]["rasterizationSamples"]=[&]() {
    json return_GFTiPiU=json({});
    return serialize_VkSampleCountFlagBits(name.rasterizationSamples);}();
return result;}

    VkCommandBufferInheritanceRenderingInfoKHR deserialize_VkCommandBufferInheritanceRenderingInfoKHR(json name){
        auto result=VkCommandBufferInheritanceRenderingInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_kcoZimg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_kcoZimg=NULL;
        }
    temp_kcoZimg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_kcoZimg;}();
[&]() {
result.flags=deserialize_VkRenderingFlags(name["members"]["flags"]);}();
[&]() {
result.viewMask=deserialize_uint32_t(name["members"]["viewMask"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkFormat* temp_TZrcHTf;[&]() {

        if (name["members"]["pColorAttachmentFormats"].contains("null")){
        temp_TZrcHTf=NULL;
        }
    temp_TZrcHTf=(VkFormat*)malloc(result.colorAttachmentCount*sizeof(VkFormat));
        for (int QRkswGW=0; QRkswGW < result.colorAttachmentCount; QRkswGW++){
            [&]() {
temp_TZrcHTf[QRkswGW]=deserialize_VkFormat(name["members"]["pColorAttachmentFormats"]["members"][QRkswGW]);}();;
        }
        }();result.pColorAttachmentFormats=temp_TZrcHTf;}();
[&]() {
result.depthAttachmentFormat=deserialize_VkFormat(name["members"]["depthAttachmentFormat"]);}();
[&]() {
result.stencilAttachmentFormat=deserialize_VkFormat(name["members"]["stencilAttachmentFormat"]);}();
[&]() {
result.rasterizationSamples=deserialize_VkSampleCountFlagBits(name["members"]["rasterizationSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoAMD(VkAttachmentSampleCountInfoAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zjDCVJz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sxNVniC=json({});
    
        if (name.pNext==NULL){
            return_sxNVniC["null"]=true;
            return return_sxNVniC;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_AnRVnaz=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_grrRcvA=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_grrRcvA["null"]=true;
            return return_grrRcvA;
        }
        
        return_grrRcvA["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_syetRzr=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_grrRcvA["members"][std::to_string(i)].push_back(temp);
        }
        return return_grrRcvA;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_aNtBtOj=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoAMD deserialize_VkAttachmentSampleCountInfoAMD(json name){
        auto result=VkAttachmentSampleCountInfoAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hAuRhxw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hAuRhxw=NULL;
        }
    temp_hAuRhxw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hAuRhxw;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_bOiycsi;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_bOiycsi=NULL;
        }
    temp_bOiycsi=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int ZvMAVIG=0; ZvMAVIG < result.colorAttachmentCount; ZvMAVIG++){
            [&]() {
temp_bOiycsi[ZvMAVIG]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][ZvMAVIG]);}();;
        }
        }();result.pColorAttachmentSamples=temp_bOiycsi;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkAttachmentSampleCountInfoNV(VkAttachmentSampleCountInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DJCnkgZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NiNAMeF=json({});
    
        if (name.pNext==NULL){
            return_NiNAMeF["null"]=true;
            return return_NiNAMeF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["colorAttachmentCount"]=[&]() {
    json return_FyzwKjP=json({});
    return serialize_uint32_t(name.colorAttachmentCount);}();
result["members"]["pColorAttachmentSamples"]=[&]() {
    json return_QIJaZCr=json({});
    
        if (name.pColorAttachmentSamples==NULL){
            return_QIJaZCr["null"]=true;
            return return_QIJaZCr;
        }
        
        return_QIJaZCr["members"]={};
        for(int i=0; i < name.colorAttachmentCount; i++){
            json temp;
            temp=[&]() {
    json return_VvYPdQH=json({});
    return serialize_VkSampleCountFlagBits(name.pColorAttachmentSamples[i]);}();
            return_QIJaZCr["members"][std::to_string(i)].push_back(temp);
        }
        return return_QIJaZCr;
        }();
result["members"]["depthStencilAttachmentSamples"]=[&]() {
    json return_lVQSUba=json({});
    return serialize_VkSampleCountFlagBits(name.depthStencilAttachmentSamples);}();
return result;}

    VkAttachmentSampleCountInfoNV deserialize_VkAttachmentSampleCountInfoNV(json name){
        auto result=VkAttachmentSampleCountInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_aOVFzwS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_aOVFzwS=NULL;
        }
    temp_aOVFzwS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_aOVFzwS;}();
[&]() {
result.colorAttachmentCount=deserialize_uint32_t(name["members"]["colorAttachmentCount"]);}();
[&]() {
VkSampleCountFlagBits* temp_eiDxZSA;[&]() {

        if (name["members"]["pColorAttachmentSamples"].contains("null")){
        temp_eiDxZSA=NULL;
        }
    temp_eiDxZSA=(VkSampleCountFlagBits*)malloc(result.colorAttachmentCount*sizeof(VkSampleCountFlagBits));
        for (int yhlfKQx=0; yhlfKQx < result.colorAttachmentCount; yhlfKQx++){
            [&]() {
temp_eiDxZSA[yhlfKQx]=deserialize_VkSampleCountFlagBits(name["members"]["pColorAttachmentSamples"]["members"][yhlfKQx]);}();;
        }
        }();result.pColorAttachmentSamples=temp_eiDxZSA;}();
[&]() {
result.depthStencilAttachmentSamples=deserialize_VkSampleCountFlagBits(name["members"]["depthStencilAttachmentSamples"]);}();
return result;}

    json serialize_VkMultiviewPerViewAttributesInfoNVX(VkMultiviewPerViewAttributesInfoNVX name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YVsVDir=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_sUjYDzU=json({});
    
        if (name.pNext==NULL){
            return_sUjYDzU["null"]=true;
            return return_sUjYDzU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewAttributes"]=[&]() {
    json return_THDkaYj=json({});
    return_THDkaYj=[&]() {
    json return_LdNGpAy=json({});
    return serialize_uint32_t(name.perViewAttributes);}();return return_THDkaYj;}();
result["members"]["perViewAttributesPositionXOnly"]=[&]() {
    json return_NZOhnXr=json({});
    return_NZOhnXr=[&]() {
    json return_FlLdWfm=json({});
    return serialize_uint32_t(name.perViewAttributesPositionXOnly);}();return return_NZOhnXr;}();
return result;}

    VkMultiviewPerViewAttributesInfoNVX deserialize_VkMultiviewPerViewAttributesInfoNVX(json name){
        auto result=VkMultiviewPerViewAttributesInfoNVX();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_yrwcJWk;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_yrwcJWk=NULL;
        }
    temp_yrwcJWk=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_yrwcJWk;}();
[&]() {
[&]() {
result.perViewAttributes=deserialize_uint32_t(name["members"]["perViewAttributes"]);}();}();
[&]() {
[&]() {
result.perViewAttributesPositionXOnly=deserialize_uint32_t(name["members"]["perViewAttributesPositionXOnly"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(VkPhysicalDeviceImageViewMinLodFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oQvgzYd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RpnbWqT=json({});
    
        if (name.pNext==NULL){
            return_RpnbWqT["null"]=true;
            return return_RpnbWqT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_IogmthO=json({});
    return_IogmthO=[&]() {
    json return_cPctCmM=json({});
    return serialize_uint32_t(name.minLod);}();return return_IogmthO;}();
return result;}

    VkPhysicalDeviceImageViewMinLodFeaturesEXT deserialize_VkPhysicalDeviceImageViewMinLodFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageViewMinLodFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.minLod=deserialize_uint32_t(name["members"]["minLod"]);}();}();
return result;}

    json serialize_VkImageViewMinLodCreateInfoEXT(VkImageViewMinLodCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_CHhoYIZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_BqbmVjD=json({});
    
        if (name.pNext==NULL){
            return_BqbmVjD["null"]=true;
            return return_BqbmVjD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["minLod"]=[&]() {
    json return_WmfxuvC=json({});
    return serialize_float(name.minLod);}();
return result;}

    VkImageViewMinLodCreateInfoEXT deserialize_VkImageViewMinLodCreateInfoEXT(json name){
        auto result=VkImageViewMinLodCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HtrCmfq;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HtrCmfq=NULL;
        }
    temp_HtrCmfq=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HtrCmfq;}();
[&]() {
result.minLod=deserialize_float(name["members"]["minLod"]);}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZVaFpEg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JEyhflt=json({});
    
        if (name.pNext==NULL){
            return_JEyhflt["null"]=true;
            return return_JEyhflt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_izdBHrw=json({});
    return_izdBHrw=[&]() {
    json return_IHnCbTk=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_izdBHrw;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_MuvVcRM=json({});
    return_MuvVcRM=[&]() {
    json return_cZVHJsg=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_MuvVcRM;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_kpwyWTR=json({});
    return_kpwyWTR=[&]() {
    json return_cQbHmRX=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_kpwyWTR;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aaWlrzg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lELiGsR=json({});
    
        if (name.pNext==NULL){
            return_lELiGsR["null"]=true;
            return return_lELiGsR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rasterizationOrderColorAttachmentAccess"]=[&]() {
    json return_iTgHHFL=json({});
    return_iTgHHFL=[&]() {
    json return_YqceLmv=json({});
    return serialize_uint32_t(name.rasterizationOrderColorAttachmentAccess);}();return return_iTgHHFL;}();
result["members"]["rasterizationOrderDepthAttachmentAccess"]=[&]() {
    json return_gQlQWct=json({});
    return_gQlQWct=[&]() {
    json return_HAkOVHN=json({});
    return serialize_uint32_t(name.rasterizationOrderDepthAttachmentAccess);}();return return_gQlQWct;}();
result["members"]["rasterizationOrderStencilAttachmentAccess"]=[&]() {
    json return_jEKmroL=json({});
    return_jEKmroL=[&]() {
    json return_jnlgpJI=json({});
    return serialize_uint32_t(name.rasterizationOrderStencilAttachmentAccess);}();return return_jEKmroL;}();
return result;}

    VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM deserialize_VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM(json name){
        auto result=VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rasterizationOrderColorAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderColorAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderDepthAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderDepthAttachmentAccess"]);}();}();
[&]() {
[&]() {
result.rasterizationOrderStencilAttachmentAccess=deserialize_uint32_t(name["members"]["rasterizationOrderStencilAttachmentAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(VkPhysicalDeviceLinearColorAttachmentFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YdVEFXN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LtqIKui=json({});
    
        if (name.pNext==NULL){
            return_LtqIKui["null"]=true;
            return return_LtqIKui;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["linearColorAttachment"]=[&]() {
    json return_EuORemm=json({});
    return_EuORemm=[&]() {
    json return_NKIriBK=json({});
    return serialize_uint32_t(name.linearColorAttachment);}();return return_EuORemm;}();
return result;}

    VkPhysicalDeviceLinearColorAttachmentFeaturesNV deserialize_VkPhysicalDeviceLinearColorAttachmentFeaturesNV(json name){
        auto result=VkPhysicalDeviceLinearColorAttachmentFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.linearColorAttachment=deserialize_uint32_t(name["members"]["linearColorAttachment"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HYTbjei=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rWJIvoZ=json({});
    
        if (name.pNext==NULL){
            return_rWJIvoZ["null"]=true;
            return return_rWJIvoZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibrary"]=[&]() {
    json return_SRNPTlf=json({});
    return_SRNPTlf=[&]() {
    json return_TwOvMWL=json({});
    return serialize_uint32_t(name.graphicsPipelineLibrary);}();return return_SRNPTlf;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibrary=deserialize_uint32_t(name["members"]["graphicsPipelineLibrary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WWKaNbP=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_lpwzPya=json({});
    
        if (name.pNext==NULL){
            return_lpwzPya["null"]=true;
            return return_lpwzPya;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["graphicsPipelineLibraryFastLinking"]=[&]() {
    json return_uLcgfZO=json({});
    return_uLcgfZO=[&]() {
    json return_iekFmNz=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryFastLinking);}();return return_uLcgfZO;}();
result["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]=[&]() {
    json return_XYxMtUz=json({});
    return_XYxMtUz=[&]() {
    json return_IJDIdaI=json({});
    return serialize_uint32_t(name.graphicsPipelineLibraryIndependentInterpolationDecoration);}();return return_XYxMtUz;}();
return result;}

    VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT deserialize_VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT(json name){
        auto result=VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.graphicsPipelineLibraryFastLinking=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryFastLinking"]);}();}();
[&]() {
[&]() {
result.graphicsPipelineLibraryIndependentInterpolationDecoration=deserialize_uint32_t(name["members"]["graphicsPipelineLibraryIndependentInterpolationDecoration"]);}();}();
return result;}

    json serialize_VkGraphicsPipelineLibraryCreateInfoEXT(VkGraphicsPipelineLibraryCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qSZUKbS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qArolYY=json({});
    
        if (name.pNext==NULL){
            return_qArolYY["null"]=true;
            return return_qArolYY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_TyLDyoA=json({});
    return serialize_VkGraphicsPipelineLibraryFlagsEXT(name.flags);}();
return result;}

    VkGraphicsPipelineLibraryCreateInfoEXT deserialize_VkGraphicsPipelineLibraryCreateInfoEXT(json name){
        auto result=VkGraphicsPipelineLibraryCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FFMsloE;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FFMsloE=NULL;
        }
    temp_FFMsloE=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FFMsloE;}();
[&]() {
result.flags=deserialize_VkGraphicsPipelineLibraryFlagsEXT(name["members"]["flags"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_olBLyvU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hrTCoOK=json({});
    
        if (name.pNext==NULL){
            return_hrTCoOK["null"]=true;
            return return_hrTCoOK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetHostMapping"]=[&]() {
    json return_uOVDUhC=json({});
    return_uOVDUhC=[&]() {
    json return_IMBqoOJ=json({});
    return serialize_uint32_t(name.descriptorSetHostMapping);}();return return_uOVDUhC;}();
return result;}

    VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE deserialize_VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE(json name){
        auto result=VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorSetHostMapping=deserialize_uint32_t(name["members"]["descriptorSetHostMapping"]);}();}();
return result;}

    json serialize_VkDescriptorSetBindingReferenceVALVE(VkDescriptorSetBindingReferenceVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xkzYKeh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IVWTQQW=json({});
    
        if (name.pNext==NULL){
            return_IVWTQQW["null"]=true;
            return return_IVWTQQW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorSetLayout"]=[&]() {
    json return_GPRkAqE=json({});
    return serialize_VkDescriptorSetLayout(name.descriptorSetLayout);}();
result["members"]["binding"]=[&]() {
    json return_xUlVTGQ=json({});
    return serialize_uint32_t(name.binding);}();
return result;}

    VkDescriptorSetBindingReferenceVALVE deserialize_VkDescriptorSetBindingReferenceVALVE(json name){
        auto result=VkDescriptorSetBindingReferenceVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jmussmg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jmussmg=NULL;
        }
    temp_jmussmg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jmussmg;}();
[&]() {
result.descriptorSetLayout=deserialize_VkDescriptorSetLayout(name["members"]["descriptorSetLayout"]);}();
[&]() {
result.binding=deserialize_uint32_t(name["members"]["binding"]);}();
return result;}

    json serialize_VkDescriptorSetLayoutHostMappingInfoVALVE(VkDescriptorSetLayoutHostMappingInfoVALVE name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ymkJWLv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CfFgLVk=json({});
    
        if (name.pNext==NULL){
            return_CfFgLVk["null"]=true;
            return return_CfFgLVk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorOffset"]=[&]() {
    json return_JWuicgD=json({});
    return serialize_size_t(name.descriptorOffset);}();
result["members"]["descriptorSize"]=[&]() {
    json return_iYxXiTN=json({});
    return serialize_uint32_t(name.descriptorSize);}();
return result;}

    VkDescriptorSetLayoutHostMappingInfoVALVE deserialize_VkDescriptorSetLayoutHostMappingInfoVALVE(json name){
        auto result=VkDescriptorSetLayoutHostMappingInfoVALVE();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.descriptorOffset=deserialize_size_t(name["members"]["descriptorOffset"]);}();
[&]() {
result.descriptorSize=deserialize_uint32_t(name["members"]["descriptorSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_sNHUvMa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gpGnDXV=json({});
    
        if (name.pNext==NULL){
            return_gpGnDXV["null"]=true;
            return return_gpGnDXV;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifier"]=[&]() {
    json return_UUwohWN=json({});
    return_UUwohWN=[&]() {
    json return_WQkomqC=json({});
    return serialize_uint32_t(name.shaderModuleIdentifier);}();return return_UUwohWN;}();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderModuleIdentifier=deserialize_uint32_t(name["members"]["shaderModuleIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gnRtvcV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OnFezGo=json({});
    
        if (name.pNext==NULL){
            return_OnFezGo["null"]=true;
            return return_OnFezGo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderModuleIdentifierAlgorithmUUID"]=[&]() {
    json return_HBuRzDc=json({});
    
        return_HBuRzDc["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_MwmowHw=json({});
    return serialize_uint8_t(name.shaderModuleIdentifierAlgorithmUUID[i]);}();
            return_HBuRzDc["members"][std::to_string(i)].push_back(temp);
        }
        return return_HBuRzDc;
        }();
return result;}

    VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT deserialize_VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int gOvVTOP=0; gOvVTOP < VK_UUID_SIZE; gOvVTOP++){
            [&]() {
result.shaderModuleIdentifierAlgorithmUUID[gOvVTOP]=deserialize_uint8_t(name["members"]["shaderModuleIdentifierAlgorithmUUID"]["members"][gOvVTOP]);}();;
        }
        }();
return result;}

    json serialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(VkPipelineShaderStageModuleIdentifierCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_siEwsan=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_RwLyjTD=json({});
    
        if (name.pNext==NULL){
            return_RwLyjTD["null"]=true;
            return return_RwLyjTD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_PfSHBrS=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["pIdentifier"]=[&]() {
    json return_EeWqKPg=json({});
    
        if (name.pIdentifier==NULL){
            return_EeWqKPg["null"]=true;
            return return_EeWqKPg;
        }
        
        return_EeWqKPg["members"]={};
        for(int i=0; i < name.identifierSize; i++){
            json temp;
            temp=[&]() {
    json return_RdoDTLR=json({});
    return serialize_uint8_t(name.pIdentifier[i]);}();
            return_EeWqKPg["members"][std::to_string(i)].push_back(temp);
        }
        return return_EeWqKPg;
        }();
return result;}

    VkPipelineShaderStageModuleIdentifierCreateInfoEXT deserialize_VkPipelineShaderStageModuleIdentifierCreateInfoEXT(json name){
        auto result=VkPipelineShaderStageModuleIdentifierCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_jSYWVAM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_jSYWVAM=NULL;
        }
    temp_jSYWVAM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_jSYWVAM;}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {
uint8_t* temp_NjUeGBN;[&]() {

        if (name["members"]["pIdentifier"].contains("null")){
        temp_NjUeGBN=NULL;
        }
    temp_NjUeGBN=(uint8_t*)malloc(result.identifierSize*sizeof(uint8_t));
        for (int dfVWHey=0; dfVWHey < result.identifierSize; dfVWHey++){
            [&]() {
temp_NjUeGBN[dfVWHey]=deserialize_uint8_t(name["members"]["pIdentifier"]["members"][dfVWHey]);}();;
        }
        }();result.pIdentifier=temp_NjUeGBN;}();
return result;}

    json serialize_VkShaderModuleIdentifierEXT(VkShaderModuleIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YtcgNUT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NoHgEMv=json({});
    
        if (name.pNext==NULL){
            return_NoHgEMv["null"]=true;
            return return_NoHgEMv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["identifierSize"]=[&]() {
    json return_YqBdIeQ=json({});
    return serialize_uint32_t(name.identifierSize);}();
result["members"]["identifier"]=[&]() {
    json return_YQIMyUU=json({});
    
        return_YQIMyUU["members"]={};
        for(int i=0; i < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; i++){
            json temp;
            temp=[&]() {
    json return_jYtLuSO=json({});
    return serialize_uint8_t(name.identifier[i]);}();
            return_YQIMyUU["members"][std::to_string(i)].push_back(temp);
        }
        return return_YQIMyUU;
        }();
return result;}

    VkShaderModuleIdentifierEXT deserialize_VkShaderModuleIdentifierEXT(json name){
        auto result=VkShaderModuleIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.identifierSize=deserialize_uint32_t(name["members"]["identifierSize"]);}();
[&]() {

        for (int dKAOwoY=0; dKAOwoY < VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT; dKAOwoY++){
            [&]() {
result.identifier[dKAOwoY]=deserialize_uint8_t(name["members"]["identifier"]["members"][dKAOwoY]);}();;
        }
        }();
return result;}

    json serialize_VkImageCompressionControlEXT(VkImageCompressionControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cLojwAK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QSxNGqg=json({});
    
        if (name.pNext==NULL){
            return_QSxNGqg["null"]=true;
            return return_QSxNGqg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_oQUaaFJ=json({});
    return serialize_VkImageCompressionFlagsEXT(name.flags);}();
result["members"]["compressionControlPlaneCount"]=[&]() {
    json return_OuTlwZR=json({});
    return serialize_uint32_t(name.compressionControlPlaneCount);}();
result["members"]["pFixedRateFlags"]=[&]() {
    json return_Oqwyqfc=json({});
    
        if (name.pFixedRateFlags==NULL){
            return_Oqwyqfc["null"]=true;
            return return_Oqwyqfc;
        }
        
        return_Oqwyqfc["members"]={};
        for(int i=0; i < name.compressionControlPlaneCount; i++){
            json temp;
            temp=[&]() {
    json return_NJviWXc=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.pFixedRateFlags[i]);}();
            return_Oqwyqfc["members"][std::to_string(i)].push_back(temp);
        }
        return return_Oqwyqfc;
        }();
return result;}

    VkImageCompressionControlEXT deserialize_VkImageCompressionControlEXT(json name){
        auto result=VkImageCompressionControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_KQPDPYi;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_KQPDPYi=NULL;
        }
    temp_KQPDPYi=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_KQPDPYi;}();
[&]() {
result.flags=deserialize_VkImageCompressionFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.compressionControlPlaneCount=deserialize_uint32_t(name["members"]["compressionControlPlaneCount"]);}();
[&]() {

        if (name["members"]["pFixedRateFlags"].contains("null")){
        result.pFixedRateFlags=NULL;
        }
    result.pFixedRateFlags=(VkImageCompressionFixedRateFlagsEXT*)malloc(result.compressionControlPlaneCount*sizeof(VkImageCompressionFixedRateFlagsEXT));
        for (int pKdroom=0; pKdroom < result.compressionControlPlaneCount; pKdroom++){
            [&]() {
result.pFixedRateFlags[pKdroom]=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["pFixedRateFlags"]["members"][pKdroom]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(VkPhysicalDeviceImageCompressionControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hqlCIpq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_QidIvYQ=json({});
    
        if (name.pNext==NULL){
            return_QidIvYQ["null"]=true;
            return return_QidIvYQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControl"]=[&]() {
    json return_byPSGoA=json({});
    return_byPSGoA=[&]() {
    json return_CfzjqBo=json({});
    return serialize_uint32_t(name.imageCompressionControl);}();return return_byPSGoA;}();
return result;}

    VkPhysicalDeviceImageCompressionControlFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControl=deserialize_uint32_t(name["members"]["imageCompressionControl"]);}();}();
return result;}

    json serialize_VkImageCompressionPropertiesEXT(VkImageCompressionPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QmDdgMu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_LxkFRUz=json({});
    
        if (name.pNext==NULL){
            return_LxkFRUz["null"]=true;
            return return_LxkFRUz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionFlags"]=[&]() {
    json return_wvHHNpg=json({});
    return serialize_VkImageCompressionFlagsEXT(name.imageCompressionFlags);}();
result["members"]["imageCompressionFixedRateFlags"]=[&]() {
    json return_zckZHIJ=json({});
    return serialize_VkImageCompressionFixedRateFlagsEXT(name.imageCompressionFixedRateFlags);}();
return result;}

    VkImageCompressionPropertiesEXT deserialize_VkImageCompressionPropertiesEXT(json name){
        auto result=VkImageCompressionPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageCompressionFlags=deserialize_VkImageCompressionFlagsEXT(name["members"]["imageCompressionFlags"]);}();
[&]() {
result.imageCompressionFixedRateFlags=deserialize_VkImageCompressionFixedRateFlagsEXT(name["members"]["imageCompressionFixedRateFlags"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_kNPRxlz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bqZZKED=json({});
    
        if (name.pNext==NULL){
            return_bqZZKED["null"]=true;
            return return_bqZZKED;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageCompressionControlSwapchain"]=[&]() {
    json return_yfOmLjY=json({});
    return_yfOmLjY=[&]() {
    json return_PMzOaLC=json({});
    return serialize_uint32_t(name.imageCompressionControlSwapchain);}();return return_yfOmLjY;}();
return result;}

    VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT deserialize_VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT(json name){
        auto result=VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.imageCompressionControlSwapchain=deserialize_uint32_t(name["members"]["imageCompressionControlSwapchain"]);}();}();
return result;}

    json serialize_VkImageSubresource2KHR(VkImageSubresource2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gxwQQpo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_kQiXXzG=json({});
    
        if (name.pNext==NULL){
            return_kQiXXzG["null"]=true;
            return return_kQiXXzG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_VCxxDUQ=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2KHR deserialize_VkImageSubresource2KHR(json name){
        auto result=VkImageSubresource2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkImageSubresource2EXT(VkImageSubresource2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tPVmwPB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ROltgGX=json({});
    
        if (name.pNext==NULL){
            return_ROltgGX["null"]=true;
            return return_ROltgGX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["imageSubresource"]=[&]() {
    json return_PhxZHXi=json({});
    return serialize_VkImageSubresource(name.imageSubresource);}();
return result;}

    VkImageSubresource2EXT deserialize_VkImageSubresource2EXT(json name){
        auto result=VkImageSubresource2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.imageSubresource=deserialize_VkImageSubresource(name["members"]["imageSubresource"]);}();
return result;}

    json serialize_VkSubresourceLayout2KHR(VkSubresourceLayout2KHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZvSuMIv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_afrFDNo=json({});
    
        if (name.pNext==NULL){
            return_afrFDNo["null"]=true;
            return return_afrFDNo;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_uDaETZV=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2KHR deserialize_VkSubresourceLayout2KHR(json name){
        auto result=VkSubresourceLayout2KHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkSubresourceLayout2EXT(VkSubresourceLayout2EXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tWWwnQB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ptJBANF=json({});
    
        if (name.pNext==NULL){
            return_ptJBANF["null"]=true;
            return return_ptJBANF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subresourceLayout"]=[&]() {
    json return_ADFYMqI=json({});
    return serialize_VkSubresourceLayout(name.subresourceLayout);}();
return result;}

    VkSubresourceLayout2EXT deserialize_VkSubresourceLayout2EXT(json name){
        auto result=VkSubresourceLayout2EXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.subresourceLayout=deserialize_VkSubresourceLayout(name["members"]["subresourceLayout"]);}();
return result;}

    json serialize_VkRenderPassCreationControlEXT(VkRenderPassCreationControlEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZzoKbSt=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bBMQHjf=json({});
    
        if (name.pNext==NULL){
            return_bBMQHjf["null"]=true;
            return return_bBMQHjf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["disallowMerging"]=[&]() {
    json return_NGUizAT=json({});
    return_NGUizAT=[&]() {
    json return_NicHdDF=json({});
    return serialize_uint32_t(name.disallowMerging);}();return return_NGUizAT;}();
return result;}

    VkRenderPassCreationControlEXT deserialize_VkRenderPassCreationControlEXT(json name){
        auto result=VkRenderPassCreationControlEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hTSNqtg;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hTSNqtg=NULL;
        }
    temp_hTSNqtg=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hTSNqtg;}();
[&]() {
[&]() {
result.disallowMerging=deserialize_uint32_t(name["members"]["disallowMerging"]);}();}();
return result;}

    json serialize_VkRenderPassCreationFeedbackInfoEXT(VkRenderPassCreationFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["postMergeSubpassCount"]=[&]() {
    json return_lXbBdYT=json({});
    return serialize_uint32_t(name.postMergeSubpassCount);}();
return result;}

    VkRenderPassCreationFeedbackInfoEXT deserialize_VkRenderPassCreationFeedbackInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackInfoEXT();
    
[&]() {
result.postMergeSubpassCount=deserialize_uint32_t(name["members"]["postMergeSubpassCount"]);}();
return result;}

    json serialize_VkRenderPassCreationFeedbackCreateInfoEXT(VkRenderPassCreationFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_DVDQOXK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WYEryOA=json({});
    
        if (name.pNext==NULL){
            return_WYEryOA["null"]=true;
            return return_WYEryOA;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pRenderPassFeedback"]=[&]() {
    json return_BzluiqZ=json({});
    
        if (name.pRenderPassFeedback==NULL){
            return_BzluiqZ["null"]=true;
            return return_BzluiqZ;
        }
        return_BzluiqZ=[&]() {
    json return_QjvWUYq=json({});
    return serialize_VkRenderPassCreationFeedbackInfoEXT(*name.pRenderPassFeedback);}();
return return_BzluiqZ;}();
return result;}

    VkRenderPassCreationFeedbackCreateInfoEXT deserialize_VkRenderPassCreationFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassCreationFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WMdWrMU;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WMdWrMU=NULL;
        }
    temp_WMdWrMU=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WMdWrMU;}();
[&]() {

        if (name["members"]["pRenderPassFeedback"].contains("null")){
        result.pRenderPassFeedback=NULL;
        }
    [&]() {
*(result.pRenderPassFeedback)=deserialize_VkRenderPassCreationFeedbackInfoEXT(name["members"]["pRenderPassFeedback"]);}();
}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackInfoEXT(VkRenderPassSubpassFeedbackInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["subpassMergeStatus"]=[&]() {
    json return_oMNtzpR=json({});
    return serialize_VkSubpassMergeStatusEXT(name.subpassMergeStatus);}();
result["members"]["description"]=[&]() {
    json return_YqybrZS=json({});
    
        return_YqybrZS["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_lmAkHJB=json({});
    return serialize_char(name.description[i]);}();
            return_YqybrZS["members"][std::to_string(i)].push_back(temp);
        }
        return return_YqybrZS;
        }();
result["members"]["postMergeIndex"]=[&]() {
    json return_WLEbQJk=json({});
    return serialize_uint32_t(name.postMergeIndex);}();
return result;}

    VkRenderPassSubpassFeedbackInfoEXT deserialize_VkRenderPassSubpassFeedbackInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackInfoEXT();
    
[&]() {
result.subpassMergeStatus=deserialize_VkSubpassMergeStatusEXT(name["members"]["subpassMergeStatus"]);}();
[&]() {

        for (int hFWOkoo=0; hFWOkoo < VK_MAX_DESCRIPTION_SIZE; hFWOkoo++){
            [&]() {
result.description[hFWOkoo]=deserialize_char(name["members"]["description"]["members"][hFWOkoo]);}();;
        }
        }();
[&]() {
result.postMergeIndex=deserialize_uint32_t(name["members"]["postMergeIndex"]);}();
return result;}

    json serialize_VkRenderPassSubpassFeedbackCreateInfoEXT(VkRenderPassSubpassFeedbackCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aXcVRyp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UibMItU=json({});
    
        if (name.pNext==NULL){
            return_UibMItU["null"]=true;
            return return_UibMItU;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pSubpassFeedback"]=[&]() {
    json return_oeuLFlv=json({});
    
        if (name.pSubpassFeedback==NULL){
            return_oeuLFlv["null"]=true;
            return return_oeuLFlv;
        }
        return_oeuLFlv=[&]() {
    json return_ZdeyIcc=json({});
    return serialize_VkRenderPassSubpassFeedbackInfoEXT(*name.pSubpassFeedback);}();
return return_oeuLFlv;}();
return result;}

    VkRenderPassSubpassFeedbackCreateInfoEXT deserialize_VkRenderPassSubpassFeedbackCreateInfoEXT(json name){
        auto result=VkRenderPassSubpassFeedbackCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_JJKaPvn;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_JJKaPvn=NULL;
        }
    temp_JJKaPvn=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_JJKaPvn;}();
[&]() {

        if (name["members"]["pSubpassFeedback"].contains("null")){
        result.pSubpassFeedback=NULL;
        }
    [&]() {
*(result.pSubpassFeedback)=deserialize_VkRenderPassSubpassFeedbackInfoEXT(name["members"]["pSubpassFeedback"]);}();
}();
return result;}

    json serialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SbCvDng=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GMBNWPP=json({});
    
        if (name.pNext==NULL){
            return_GMBNWPP["null"]=true;
            return return_GMBNWPP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["subpassMergeFeedback"]=[&]() {
    json return_KFfIJtm=json({});
    return_KFfIJtm=[&]() {
    json return_lRGbogR=json({});
    return serialize_uint32_t(name.subpassMergeFeedback);}();return return_KFfIJtm;}();
return result;}

    VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT deserialize_VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT(json name){
        auto result=VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.subpassMergeFeedback=deserialize_uint32_t(name["members"]["subpassMergeFeedback"]);}();}();
return result;}

    json serialize_VkMicromapBuildInfoEXT(VkMicromapBuildInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iczzumG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fDgeEuO=json({});
    
        if (name.pNext==NULL){
            return_fDgeEuO["null"]=true;
            return return_fDgeEuO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["type"]=[&]() {
    json return_hIdXuQy=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["flags"]=[&]() {
    json return_CmKUhAu=json({});
    return serialize_VkBuildMicromapFlagsEXT(name.flags);}();
result["members"]["mode"]=[&]() {
    json return_XEseMMF=json({});
    return serialize_VkBuildMicromapModeEXT(name.mode);}();
result["members"]["dstMicromap"]=[&]() {
    json return_yFItbNv=json({});
    return serialize_VkMicromapEXT(name.dstMicromap);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_boHySUT=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_CmvuSIe=json({});
    
        if (name.pUsageCounts==NULL){
            return_CmvuSIe["null"]=true;
            return return_CmvuSIe;
        }
        
        return_CmvuSIe["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_CyyNOrU=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_CmvuSIe["members"][std::to_string(i)].push_back(temp);
        }
        return return_CmvuSIe;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_YYJIWgY=json({});
    
        if (name.ppUsageCounts==NULL){
            return_YYJIWgY["null"]=true;
            return return_YYJIWgY;
        }
        
        return_YYJIWgY["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_knIWaYk=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_knIWaYk["null"]=true;
            return return_knIWaYk;
        }
        
        return_knIWaYk["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_AlhdueO=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_knIWaYk["members"][std::to_string(i)].push_back(temp);
        }
        return return_knIWaYk;
        }();
            return_YYJIWgY["members"][std::to_string(i)].push_back(temp);
        }
        return return_YYJIWgY;
        }();
result["members"]["data"]=[&]() {
    json return_sPKdPTV=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.data);}();
result["members"]["scratchData"]=[&]() {
    json return_zxCedEn=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.scratchData);}();
result["members"]["triangleArray"]=[&]() {
    json return_WICDOYi=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.triangleArray);}();
result["members"]["triangleArrayStride"]=[&]() {
    json return_ksfbzqq=json({});
    return_ksfbzqq=[&]() {
    json return_oMeemmt=json({});
    return serialize_uint64_t(name.triangleArrayStride);}();return return_ksfbzqq;}();
return result;}

    VkMicromapBuildInfoEXT deserialize_VkMicromapBuildInfoEXT(json name){
        auto result=VkMicromapBuildInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_UsTCapY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_UsTCapY=NULL;
        }
    temp_UsTCapY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_UsTCapY;}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
result.flags=deserialize_VkBuildMicromapFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.mode=deserialize_VkBuildMicromapModeEXT(name["members"]["mode"]);}();
[&]() {
result.dstMicromap=deserialize_VkMicromapEXT(name["members"]["dstMicromap"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_QvwXGke;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_QvwXGke=NULL;
        }
    temp_QvwXGke=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int DosTUxU=0; DosTUxU < result.usageCountsCount; DosTUxU++){
            [&]() {
temp_QvwXGke[DosTUxU]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][DosTUxU]);}();;
        }
        }();result.pUsageCounts=temp_QvwXGke;}();
[&]() {
VkMicromapUsageEXT** temp_RfNyTec;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_RfNyTec=NULL;
        }
    temp_RfNyTec=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int qdMPTfE=0; qdMPTfE < result.usageCountsCount; qdMPTfE++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][qdMPTfE].contains("null")){
        temp_RfNyTec[qdMPTfE]=NULL;
        }
    temp_RfNyTec[qdMPTfE]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int LPhwMzs=0; LPhwMzs < 1; LPhwMzs++){
            [&]() {
temp_RfNyTec[qdMPTfE][LPhwMzs]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][qdMPTfE]["members"][LPhwMzs]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_RfNyTec;}();
[&]() {
result.data=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["data"]);}();
[&]() {
result.scratchData=deserialize_VkDeviceOrHostAddressKHR(name["members"]["scratchData"]);}();
[&]() {
result.triangleArray=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["triangleArray"]);}();
[&]() {
[&]() {
result.triangleArrayStride=deserialize_uint64_t(name["members"]["triangleArrayStride"]);}();}();
return result;}

    json serialize_VkMicromapCreateInfoEXT(VkMicromapCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AxSSZNl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_waCQnSv=json({});
    
        if (name.pNext==NULL){
            return_waCQnSv["null"]=true;
            return return_waCQnSv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["createFlags"]=[&]() {
    json return_jOqQaFz=json({});
    return serialize_VkMicromapCreateFlagsEXT(name.createFlags);}();
result["members"]["buffer"]=[&]() {
    json return_VxvmuKY=json({});
    return serialize_VkBuffer(name.buffer);}();
result["members"]["offset"]=[&]() {
    json return_JygifXh=json({});
    return_JygifXh=[&]() {
    json return_hZWKbpA=json({});
    return serialize_uint64_t(name.offset);}();return return_JygifXh;}();
result["members"]["size"]=[&]() {
    json return_DdJaoFh=json({});
    return_DdJaoFh=[&]() {
    json return_IOGBxJC=json({});
    return serialize_uint64_t(name.size);}();return return_DdJaoFh;}();
result["members"]["type"]=[&]() {
    json return_SArRdEh=json({});
    return serialize_VkMicromapTypeEXT(name.type);}();
result["members"]["deviceAddress"]=[&]() {
    json return_celBOAA=json({});
    return_celBOAA=[&]() {
    json return_wIpxEhe=json({});
    return serialize_uint64_t(name.deviceAddress);}();return return_celBOAA;}();
return result;}

    VkMicromapCreateInfoEXT deserialize_VkMicromapCreateInfoEXT(json name){
        auto result=VkMicromapCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_rdpVtGO;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_rdpVtGO=NULL;
        }
    temp_rdpVtGO=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_rdpVtGO;}();
[&]() {
result.createFlags=deserialize_VkMicromapCreateFlagsEXT(name["members"]["createFlags"]);}();
[&]() {
result.buffer=deserialize_VkBuffer(name["members"]["buffer"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.type=deserialize_VkMicromapTypeEXT(name["members"]["type"]);}();
[&]() {
[&]() {
result.deviceAddress=deserialize_uint64_t(name["members"]["deviceAddress"]);}();}();
return result;}

    json serialize_VkMicromapVersionInfoEXT(VkMicromapVersionInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RfcbPpo=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gxaTjGN=json({});
    
        if (name.pNext==NULL){
            return_gxaTjGN["null"]=true;
            return return_gxaTjGN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pVersionData"]=[&]() {
    json return_tLNRDxT=json({});
    
        if (name.pVersionData==NULL){
            return_tLNRDxT["null"]=true;
            return return_tLNRDxT;
        }
        
        return_tLNRDxT["members"]={};
        for(int i=0; i < 2*VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_HYRVUNN=json({});
    return serialize_uint8_t(name.pVersionData[i]);}();
            return_tLNRDxT["members"][std::to_string(i)].push_back(temp);
        }
        return return_tLNRDxT;
        }();
return result;}

    VkMicromapVersionInfoEXT deserialize_VkMicromapVersionInfoEXT(json name){
        auto result=VkMicromapVersionInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NGAExCb;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NGAExCb=NULL;
        }
    temp_NGAExCb=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NGAExCb;}();
[&]() {
uint8_t* temp_bAJhmRO;[&]() {

        if (name["members"]["pVersionData"].contains("null")){
        temp_bAJhmRO=NULL;
        }
    temp_bAJhmRO=(uint8_t*)malloc(2*VK_UUID_SIZE*sizeof(uint8_t));
        for (int yYkPzCE=0; yYkPzCE < 2*VK_UUID_SIZE; yYkPzCE++){
            [&]() {
temp_bAJhmRO[yYkPzCE]=deserialize_uint8_t(name["members"]["pVersionData"]["members"][yYkPzCE]);}();;
        }
        }();result.pVersionData=temp_bAJhmRO;}();
return result;}

    json serialize_VkCopyMicromapInfoEXT(VkCopyMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YudiIaN=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vpYATTa=json({});
    
        if (name.pNext==NULL){
            return_vpYATTa["null"]=true;
            return return_vpYATTa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_kothkEp=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_mRJQsBG=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_VnBBUya=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapInfoEXT deserialize_VkCopyMicromapInfoEXT(json name){
        auto result=VkCopyMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_NiKrZeD;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_NiKrZeD=NULL;
        }
    temp_NiKrZeD=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_NiKrZeD;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMicromapToMemoryInfoEXT(VkCopyMicromapToMemoryInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tvDCbcx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_oJvrQOD=json({});
    
        if (name.pNext==NULL){
            return_oJvrQOD["null"]=true;
            return return_oJvrQOD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_UYGTlrF=json({});
    return serialize_VkMicromapEXT(name.src);}();
result["members"]["dst"]=[&]() {
    json return_tRCXBdy=json({});
    return serialize_VkDeviceOrHostAddressKHR(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_twoRGZv=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMicromapToMemoryInfoEXT deserialize_VkCopyMicromapToMemoryInfoEXT(json name){
        auto result=VkCopyMicromapToMemoryInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_ttiRmuZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_ttiRmuZ=NULL;
        }
    temp_ttiRmuZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_ttiRmuZ;}();
[&]() {
result.src=deserialize_VkMicromapEXT(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkDeviceOrHostAddressKHR(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkCopyMemoryToMicromapInfoEXT(VkCopyMemoryToMicromapInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oYpfefZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mUrDULa=json({});
    
        if (name.pNext==NULL){
            return_mUrDULa["null"]=true;
            return return_mUrDULa;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["src"]=[&]() {
    json return_BgHCDtE=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.src);}();
result["members"]["dst"]=[&]() {
    json return_jitjtIh=json({});
    return serialize_VkMicromapEXT(name.dst);}();
result["members"]["mode"]=[&]() {
    json return_WvlITUi=json({});
    return serialize_VkCopyMicromapModeEXT(name.mode);}();
return result;}

    VkCopyMemoryToMicromapInfoEXT deserialize_VkCopyMemoryToMicromapInfoEXT(json name){
        auto result=VkCopyMemoryToMicromapInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_uLIEAiF;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_uLIEAiF=NULL;
        }
    temp_uLIEAiF=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_uLIEAiF;}();
[&]() {
result.src=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["src"]);}();
[&]() {
result.dst=deserialize_VkMicromapEXT(name["members"]["dst"]);}();
[&]() {
result.mode=deserialize_VkCopyMicromapModeEXT(name["members"]["mode"]);}();
return result;}

    json serialize_VkMicromapBuildSizesInfoEXT(VkMicromapBuildSizesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_MWoVJEz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_emiYOWh=json({});
    
        if (name.pNext==NULL){
            return_emiYOWh["null"]=true;
            return return_emiYOWh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromapSize"]=[&]() {
    json return_wUCTjxI=json({});
    return_wUCTjxI=[&]() {
    json return_LjUHvCx=json({});
    return serialize_uint64_t(name.micromapSize);}();return return_wUCTjxI;}();
result["members"]["buildScratchSize"]=[&]() {
    json return_TmYRjPf=json({});
    return_TmYRjPf=[&]() {
    json return_IiFqpwp=json({});
    return serialize_uint64_t(name.buildScratchSize);}();return return_TmYRjPf;}();
result["members"]["discardable"]=[&]() {
    json return_SkXvJhn=json({});
    return_SkXvJhn=[&]() {
    json return_sNELyBl=json({});
    return serialize_uint32_t(name.discardable);}();return return_SkXvJhn;}();
return result;}

    VkMicromapBuildSizesInfoEXT deserialize_VkMicromapBuildSizesInfoEXT(json name){
        auto result=VkMicromapBuildSizesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_sIeeUpz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_sIeeUpz=NULL;
        }
    temp_sIeeUpz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_sIeeUpz;}();
[&]() {
[&]() {
result.micromapSize=deserialize_uint64_t(name["members"]["micromapSize"]);}();}();
[&]() {
[&]() {
result.buildScratchSize=deserialize_uint64_t(name["members"]["buildScratchSize"]);}();}();
[&]() {
[&]() {
result.discardable=deserialize_uint32_t(name["members"]["discardable"]);}();}();
return result;}

    json serialize_VkMicromapUsageEXT(VkMicromapUsageEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["count"]=[&]() {
    json return_juQkYFt=json({});
    return serialize_uint32_t(name.count);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_EpEHzGC=json({});
    return serialize_uint32_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_hCQAjUS=json({});
    return serialize_uint32_t(name.format);}();
return result;}

    VkMicromapUsageEXT deserialize_VkMicromapUsageEXT(json name){
        auto result=VkMicromapUsageEXT();
    
[&]() {
result.count=deserialize_uint32_t(name["members"]["count"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint32_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint32_t(name["members"]["format"]);}();
return result;}

    json serialize_VkMicromapTriangleEXT(VkMicromapTriangleEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["dataOffset"]=[&]() {
    json return_YgorYGz=json({});
    return serialize_uint32_t(name.dataOffset);}();
result["members"]["subdivisionLevel"]=[&]() {
    json return_DsmERvv=json({});
    return serialize_uint16_t(name.subdivisionLevel);}();
result["members"]["format"]=[&]() {
    json return_JMXncms=json({});
    return serialize_uint16_t(name.format);}();
return result;}

    VkMicromapTriangleEXT deserialize_VkMicromapTriangleEXT(json name){
        auto result=VkMicromapTriangleEXT();
    
[&]() {
result.dataOffset=deserialize_uint32_t(name["members"]["dataOffset"]);}();
[&]() {
result.subdivisionLevel=deserialize_uint16_t(name["members"]["subdivisionLevel"]);}();
[&]() {
result.format=deserialize_uint16_t(name["members"]["format"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(VkPhysicalDeviceOpacityMicromapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WdTiTYS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DcSPvoy=json({});
    
        if (name.pNext==NULL){
            return_DcSPvoy["null"]=true;
            return return_DcSPvoy;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["micromap"]=[&]() {
    json return_pcpkcmT=json({});
    return_pcpkcmT=[&]() {
    json return_FWqFoAA=json({});
    return serialize_uint32_t(name.micromap);}();return return_pcpkcmT;}();
result["members"]["micromapCaptureReplay"]=[&]() {
    json return_mrEeysg=json({});
    return_mrEeysg=[&]() {
    json return_jDdVnFj=json({});
    return serialize_uint32_t(name.micromapCaptureReplay);}();return return_mrEeysg;}();
result["members"]["micromapHostCommands"]=[&]() {
    json return_ybtUJZz=json({});
    return_ybtUJZz=[&]() {
    json return_zTrMWxi=json({});
    return serialize_uint32_t(name.micromapHostCommands);}();return return_ybtUJZz;}();
return result;}

    VkPhysicalDeviceOpacityMicromapFeaturesEXT deserialize_VkPhysicalDeviceOpacityMicromapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.micromap=deserialize_uint32_t(name["members"]["micromap"]);}();}();
[&]() {
[&]() {
result.micromapCaptureReplay=deserialize_uint32_t(name["members"]["micromapCaptureReplay"]);}();}();
[&]() {
[&]() {
result.micromapHostCommands=deserialize_uint32_t(name["members"]["micromapHostCommands"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(VkPhysicalDeviceOpacityMicromapPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_usxdEMU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XDFbrPR=json({});
    
        if (name.pNext==NULL){
            return_XDFbrPR["null"]=true;
            return return_XDFbrPR;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxOpacity2StateSubdivisionLevel"]=[&]() {
    json return_ypKvrUk=json({});
    return serialize_uint32_t(name.maxOpacity2StateSubdivisionLevel);}();
result["members"]["maxOpacity4StateSubdivisionLevel"]=[&]() {
    json return_MTwLpye=json({});
    return serialize_uint32_t(name.maxOpacity4StateSubdivisionLevel);}();
return result;}

    VkPhysicalDeviceOpacityMicromapPropertiesEXT deserialize_VkPhysicalDeviceOpacityMicromapPropertiesEXT(json name){
        auto result=VkPhysicalDeviceOpacityMicromapPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxOpacity2StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity2StateSubdivisionLevel"]);}();
[&]() {
result.maxOpacity4StateSubdivisionLevel=deserialize_uint32_t(name["members"]["maxOpacity4StateSubdivisionLevel"]);}();
return result;}

    json serialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(VkAccelerationStructureTrianglesOpacityMicromapEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_pWeTMIb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SydUMIm=json({});
    
        if (name.pNext==NULL){
            return_SydUMIm["null"]=true;
            return return_SydUMIm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["indexType"]=[&]() {
    json return_DEsGBQS=json({});
    return serialize_VkIndexType(name.indexType);}();
result["members"]["indexBuffer"]=[&]() {
    json return_zyenoYk=json({});
    return serialize_VkDeviceOrHostAddressConstKHR(name.indexBuffer);}();
result["members"]["indexStride"]=[&]() {
    json return_EoErpTo=json({});
    return_EoErpTo=[&]() {
    json return_JyVfsMc=json({});
    return serialize_uint64_t(name.indexStride);}();return return_EoErpTo;}();
result["members"]["baseTriangle"]=[&]() {
    json return_WKiQyet=json({});
    return serialize_uint32_t(name.baseTriangle);}();
result["members"]["usageCountsCount"]=[&]() {
    json return_yGgdvPT=json({});
    return serialize_uint32_t(name.usageCountsCount);}();
result["members"]["pUsageCounts"]=[&]() {
    json return_zrRJegX=json({});
    
        if (name.pUsageCounts==NULL){
            return_zrRJegX["null"]=true;
            return return_zrRJegX;
        }
        
        return_zrRJegX["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_waTGdfk=json({});
    return serialize_VkMicromapUsageEXT(name.pUsageCounts[i]);}();
            return_zrRJegX["members"][std::to_string(i)].push_back(temp);
        }
        return return_zrRJegX;
        }();
result["members"]["ppUsageCounts"]=[&]() {
    json return_cdNVCDi=json({});
    
        if (name.ppUsageCounts==NULL){
            return_cdNVCDi["null"]=true;
            return return_cdNVCDi;
        }
        
        return_cdNVCDi["members"]={};
        for(int i=0; i < name.usageCountsCount; i++){
            json temp;
            temp=[&]() {
    json return_HHpakMp=json({});
    
        if (name.ppUsageCounts[i]==NULL){
            return_HHpakMp["null"]=true;
            return return_HHpakMp;
        }
        
        return_HHpakMp["members"]={};
        for(int i=0; i < 1; i++){
            json temp;
            temp=[&]() {
    json return_FdslNPw=json({});
    return serialize_VkMicromapUsageEXT(name.ppUsageCounts[i][i]);}();
            return_HHpakMp["members"][std::to_string(i)].push_back(temp);
        }
        return return_HHpakMp;
        }();
            return_cdNVCDi["members"][std::to_string(i)].push_back(temp);
        }
        return return_cdNVCDi;
        }();
result["members"]["micromap"]=[&]() {
    json return_hFliGhB=json({});
    return serialize_VkMicromapEXT(name.micromap);}();
return result;}

    VkAccelerationStructureTrianglesOpacityMicromapEXT deserialize_VkAccelerationStructureTrianglesOpacityMicromapEXT(json name){
        auto result=VkAccelerationStructureTrianglesOpacityMicromapEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.indexType=deserialize_VkIndexType(name["members"]["indexType"]);}();
[&]() {
result.indexBuffer=deserialize_VkDeviceOrHostAddressConstKHR(name["members"]["indexBuffer"]);}();
[&]() {
[&]() {
result.indexStride=deserialize_uint64_t(name["members"]["indexStride"]);}();}();
[&]() {
result.baseTriangle=deserialize_uint32_t(name["members"]["baseTriangle"]);}();
[&]() {
result.usageCountsCount=deserialize_uint32_t(name["members"]["usageCountsCount"]);}();
[&]() {
VkMicromapUsageEXT* temp_trqkFFR;[&]() {

        if (name["members"]["pUsageCounts"].contains("null")){
        temp_trqkFFR=NULL;
        }
    temp_trqkFFR=(VkMicromapUsageEXT*)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT));
        for (int LAHZseM=0; LAHZseM < result.usageCountsCount; LAHZseM++){
            [&]() {
temp_trqkFFR[LAHZseM]=deserialize_VkMicromapUsageEXT(name["members"]["pUsageCounts"]["members"][LAHZseM]);}();;
        }
        }();result.pUsageCounts=temp_trqkFFR;}();
[&]() {
VkMicromapUsageEXT** temp_QfKnbSV;[&]() {

        if (name["members"]["ppUsageCounts"].contains("null")){
        temp_QfKnbSV=NULL;
        }
    temp_QfKnbSV=(VkMicromapUsageEXT**)malloc(result.usageCountsCount*sizeof(VkMicromapUsageEXT*));
        for (int XmoNvkm=0; XmoNvkm < result.usageCountsCount; XmoNvkm++){
            [&]() {

        if (name["members"]["ppUsageCounts"]["members"][XmoNvkm].contains("null")){
        temp_QfKnbSV[XmoNvkm]=NULL;
        }
    temp_QfKnbSV[XmoNvkm]=(VkMicromapUsageEXT*)malloc(1*sizeof(VkMicromapUsageEXT));
        for (int PfcISex=0; PfcISex < 1; PfcISex++){
            [&]() {
temp_QfKnbSV[XmoNvkm][PfcISex]=deserialize_VkMicromapUsageEXT(name["members"]["ppUsageCounts"]["members"][XmoNvkm]["members"][PfcISex]);}();;
        }
        }();;
        }
        }();result.ppUsageCounts=temp_QfKnbSV;}();
[&]() {
result.micromap=deserialize_VkMicromapEXT(name["members"]["micromap"]);}();
return result;}

    json serialize_VkPipelinePropertiesIdentifierEXT(VkPipelinePropertiesIdentifierEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ltGEodE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_gNiNJXx=json({});
    
        if (name.pNext==NULL){
            return_gNiNJXx["null"]=true;
            return return_gNiNJXx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineIdentifier"]=[&]() {
    json return_nGjVdkO=json({});
    
        return_nGjVdkO["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_SRZwdKl=json({});
    return serialize_uint8_t(name.pipelineIdentifier[i]);}();
            return_nGjVdkO["members"][std::to_string(i)].push_back(temp);
        }
        return return_nGjVdkO;
        }();
return result;}

    VkPipelinePropertiesIdentifierEXT deserialize_VkPipelinePropertiesIdentifierEXT(json name){
        auto result=VkPipelinePropertiesIdentifierEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int uyPaXgI=0; uyPaXgI < VK_UUID_SIZE; uyPaXgI++){
            [&]() {
result.pipelineIdentifier[uyPaXgI]=deserialize_uint8_t(name["members"]["pipelineIdentifier"]["members"][uyPaXgI]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(VkPhysicalDevicePipelinePropertiesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YoNdPoJ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GeIQHIu=json({});
    
        if (name.pNext==NULL){
            return_GeIQHIu["null"]=true;
            return return_GeIQHIu;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelinePropertiesIdentifier"]=[&]() {
    json return_wwwJSpU=json({});
    return_wwwJSpU=[&]() {
    json return_oFfPWeW=json({});
    return serialize_uint32_t(name.pipelinePropertiesIdentifier);}();return return_wwwJSpU;}();
return result;}

    VkPhysicalDevicePipelinePropertiesFeaturesEXT deserialize_VkPhysicalDevicePipelinePropertiesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelinePropertiesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelinePropertiesIdentifier=deserialize_uint32_t(name["members"]["pipelinePropertiesIdentifier"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TxAxQtI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_tZefpql=json({});
    
        if (name.pNext==NULL){
            return_tZefpql["null"]=true;
            return return_tZefpql;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderEarlyAndLateFragmentTests"]=[&]() {
    json return_oqKcanK=json({});
    return_oqKcanK=[&]() {
    json return_JNPTtNs=json({});
    return serialize_uint32_t(name.shaderEarlyAndLateFragmentTests);}();return return_oqKcanK;}();
return result;}

    VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD deserialize_VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD(json name){
        auto result=VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderEarlyAndLateFragmentTests=deserialize_uint32_t(name["members"]["shaderEarlyAndLateFragmentTests"]);}();}();
return result;}

    json serialize_VkExternalMemoryAcquireUnmodifiedEXT(VkExternalMemoryAcquireUnmodifiedEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_eBuSKTe=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aHPnNjM=json({});
    
        if (name.pNext==NULL){
            return_aHPnNjM["null"]=true;
            return return_aHPnNjM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["acquireUnmodifiedMemory"]=[&]() {
    json return_NravDRA=json({});
    return_NravDRA=[&]() {
    json return_HMgyRlT=json({});
    return serialize_uint32_t(name.acquireUnmodifiedMemory);}();return return_NravDRA;}();
return result;}

    VkExternalMemoryAcquireUnmodifiedEXT deserialize_VkExternalMemoryAcquireUnmodifiedEXT(json name){
        auto result=VkExternalMemoryAcquireUnmodifiedEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_YXvCrHR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_YXvCrHR=NULL;
        }
    temp_YXvCrHR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_YXvCrHR;}();
[&]() {
[&]() {
result.acquireUnmodifiedMemory=deserialize_uint32_t(name["members"]["acquireUnmodifiedMemory"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KXDrdTZ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mtmylQh=json({});
    
        if (name.pNext==NULL){
            return_mtmylQh["null"]=true;
            return return_mtmylQh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["nonSeamlessCubeMap"]=[&]() {
    json return_ZEfBasF=json({});
    return_ZEfBasF=[&]() {
    json return_PImbfzk=json({});
    return serialize_uint32_t(name.nonSeamlessCubeMap);}();return return_ZEfBasF;}();
return result;}

    VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT deserialize_VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT(json name){
        auto result=VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.nonSeamlessCubeMap=deserialize_uint32_t(name["members"]["nonSeamlessCubeMap"]);}();}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(VkPhysicalDevicePipelineRobustnessFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ukwLWoh=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JHPdiWv=json({});
    
        if (name.pNext==NULL){
            return_JHPdiWv["null"]=true;
            return return_JHPdiWv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineRobustness"]=[&]() {
    json return_FKGKlHY=json({});
    return_FKGKlHY=[&]() {
    json return_wwSodzO=json({});
    return serialize_uint32_t(name.pipelineRobustness);}();return return_FKGKlHY;}();
return result;}

    VkPhysicalDevicePipelineRobustnessFeaturesEXT deserialize_VkPhysicalDevicePipelineRobustnessFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineRobustness=deserialize_uint32_t(name["members"]["pipelineRobustness"]);}();}();
return result;}

    json serialize_VkPipelineRobustnessCreateInfoEXT(VkPipelineRobustnessCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oNOMMLH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qThTfQB=json({});
    
        if (name.pNext==NULL){
            return_qThTfQB["null"]=true;
            return return_qThTfQB;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["storageBuffers"]=[&]() {
    json return_cUidaNp=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.storageBuffers);}();
result["members"]["uniformBuffers"]=[&]() {
    json return_etDOeKZ=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.uniformBuffers);}();
result["members"]["vertexInputs"]=[&]() {
    json return_ZYQOHNG=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.vertexInputs);}();
result["members"]["images"]=[&]() {
    json return_zqZERJS=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.images);}();
return result;}

    VkPipelineRobustnessCreateInfoEXT deserialize_VkPipelineRobustnessCreateInfoEXT(json name){
        auto result=VkPipelineRobustnessCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_HswnZrR;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_HswnZrR=NULL;
        }
    temp_HswnZrR=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_HswnZrR;}();
[&]() {
result.storageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["storageBuffers"]);}();
[&]() {
result.uniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["uniformBuffers"]);}();
[&]() {
result.vertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["vertexInputs"]);}();
[&]() {
result.images=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["images"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(VkPhysicalDevicePipelineRobustnessPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_GnLcqcj=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WbCXMPt=json({});
    
        if (name.pNext==NULL){
            return_WbCXMPt["null"]=true;
            return return_WbCXMPt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["defaultRobustnessStorageBuffers"]=[&]() {
    json return_HsEXoRO=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessStorageBuffers);}();
result["members"]["defaultRobustnessUniformBuffers"]=[&]() {
    json return_UNoZYDN=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessUniformBuffers);}();
result["members"]["defaultRobustnessVertexInputs"]=[&]() {
    json return_QkIzxGI=json({});
    return serialize_VkPipelineRobustnessBufferBehaviorEXT(name.defaultRobustnessVertexInputs);}();
result["members"]["defaultRobustnessImages"]=[&]() {
    json return_ZChWhrM=json({});
    return serialize_VkPipelineRobustnessImageBehaviorEXT(name.defaultRobustnessImages);}();
return result;}

    VkPhysicalDevicePipelineRobustnessPropertiesEXT deserialize_VkPhysicalDevicePipelineRobustnessPropertiesEXT(json name){
        auto result=VkPhysicalDevicePipelineRobustnessPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.defaultRobustnessStorageBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessStorageBuffers"]);}();
[&]() {
result.defaultRobustnessUniformBuffers=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessUniformBuffers"]);}();
[&]() {
result.defaultRobustnessVertexInputs=deserialize_VkPipelineRobustnessBufferBehaviorEXT(name["members"]["defaultRobustnessVertexInputs"]);}();
[&]() {
result.defaultRobustnessImages=deserialize_VkPipelineRobustnessImageBehaviorEXT(name["members"]["defaultRobustnessImages"]);}();
return result;}

    json serialize_VkImageViewSampleWeightCreateInfoQCOM(VkImageViewSampleWeightCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LUugoCr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_euEPSGW=json({});
    
        if (name.pNext==NULL){
            return_euEPSGW["null"]=true;
            return return_euEPSGW;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["filterCenter"]=[&]() {
    json return_UHnkocB=json({});
    return serialize_VkOffset2D(name.filterCenter);}();
result["members"]["filterSize"]=[&]() {
    json return_DwsOYJD=json({});
    return serialize_VkExtent2D(name.filterSize);}();
result["members"]["numPhases"]=[&]() {
    json return_ZUkoVaS=json({});
    return serialize_uint32_t(name.numPhases);}();
return result;}

    VkImageViewSampleWeightCreateInfoQCOM deserialize_VkImageViewSampleWeightCreateInfoQCOM(json name){
        auto result=VkImageViewSampleWeightCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_qKYbjWl;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_qKYbjWl=NULL;
        }
    temp_qKYbjWl=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_qKYbjWl;}();
[&]() {
result.filterCenter=deserialize_VkOffset2D(name["members"]["filterCenter"]);}();
[&]() {
result.filterSize=deserialize_VkExtent2D(name["members"]["filterSize"]);}();
[&]() {
result.numPhases=deserialize_uint32_t(name["members"]["numPhases"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(VkPhysicalDeviceImageProcessingFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_zvofbIC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hXTvKQJ=json({});
    
        if (name.pNext==NULL){
            return_hXTvKQJ["null"]=true;
            return return_hXTvKQJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureSampleWeighted"]=[&]() {
    json return_gHAvYFM=json({});
    return_gHAvYFM=[&]() {
    json return_qNpjeHg=json({});
    return serialize_uint32_t(name.textureSampleWeighted);}();return return_gHAvYFM;}();
result["members"]["textureBoxFilter"]=[&]() {
    json return_KvOhbER=json({});
    return_KvOhbER=[&]() {
    json return_pheJLJC=json({});
    return serialize_uint32_t(name.textureBoxFilter);}();return return_KvOhbER;}();
result["members"]["textureBlockMatch"]=[&]() {
    json return_yQdqtWf=json({});
    return_yQdqtWf=[&]() {
    json return_iqMbVYg=json({});
    return serialize_uint32_t(name.textureBlockMatch);}();return return_yQdqtWf;}();
return result;}

    VkPhysicalDeviceImageProcessingFeaturesQCOM deserialize_VkPhysicalDeviceImageProcessingFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureSampleWeighted=deserialize_uint32_t(name["members"]["textureSampleWeighted"]);}();}();
[&]() {
[&]() {
result.textureBoxFilter=deserialize_uint32_t(name["members"]["textureBoxFilter"]);}();}();
[&]() {
[&]() {
result.textureBlockMatch=deserialize_uint32_t(name["members"]["textureBlockMatch"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(VkPhysicalDeviceImageProcessingPropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TKocIdS=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SUzrmau=json({});
    
        if (name.pNext==NULL){
            return_SUzrmau["null"]=true;
            return return_SUzrmau;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxWeightFilterPhases"]=[&]() {
    json return_mBlLRrZ=json({});
    return serialize_uint32_t(name.maxWeightFilterPhases);}();
result["members"]["maxWeightFilterDimension"]=[&]() {
    json return_vPpgfAr=json({});
    return serialize_VkExtent2D(name.maxWeightFilterDimension);}();
result["members"]["maxBlockMatchRegion"]=[&]() {
    json return_tXFjmah=json({});
    return serialize_VkExtent2D(name.maxBlockMatchRegion);}();
result["members"]["maxBoxFilterBlockSize"]=[&]() {
    json return_WQUicCU=json({});
    return serialize_VkExtent2D(name.maxBoxFilterBlockSize);}();
return result;}

    VkPhysicalDeviceImageProcessingPropertiesQCOM deserialize_VkPhysicalDeviceImageProcessingPropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessingPropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxWeightFilterPhases=deserialize_uint32_t(name["members"]["maxWeightFilterPhases"]);}();
[&]() {
result.maxWeightFilterDimension=deserialize_VkExtent2D(name["members"]["maxWeightFilterDimension"]);}();
[&]() {
result.maxBlockMatchRegion=deserialize_VkExtent2D(name["members"]["maxBlockMatchRegion"]);}();
[&]() {
result.maxBoxFilterBlockSize=deserialize_VkExtent2D(name["members"]["maxBoxFilterBlockSize"]);}();
return result;}

    json serialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(VkPhysicalDeviceTilePropertiesFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_edePFeX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aSpUCiw=json({});
    
        if (name.pNext==NULL){
            return_aSpUCiw["null"]=true;
            return return_aSpUCiw;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileProperties"]=[&]() {
    json return_yKAYcTi=json({});
    return_yKAYcTi=[&]() {
    json return_GyLsNUd=json({});
    return serialize_uint32_t(name.tileProperties);}();return return_yKAYcTi;}();
return result;}

    VkPhysicalDeviceTilePropertiesFeaturesQCOM deserialize_VkPhysicalDeviceTilePropertiesFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceTilePropertiesFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.tileProperties=deserialize_uint32_t(name["members"]["tileProperties"]);}();}();
return result;}

    json serialize_VkTilePropertiesQCOM(VkTilePropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_JlXaSNa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EsZZBYS=json({});
    
        if (name.pNext==NULL){
            return_EsZZBYS["null"]=true;
            return return_EsZZBYS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["tileSize"]=[&]() {
    json return_MmszKze=json({});
    return serialize_VkExtent3D(name.tileSize);}();
result["members"]["apronSize"]=[&]() {
    json return_EWNsHpN=json({});
    return serialize_VkExtent2D(name.apronSize);}();
result["members"]["origin"]=[&]() {
    json return_WnoLfkO=json({});
    return serialize_VkOffset2D(name.origin);}();
return result;}

    VkTilePropertiesQCOM deserialize_VkTilePropertiesQCOM(json name){
        auto result=VkTilePropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.tileSize=deserialize_VkExtent3D(name["members"]["tileSize"]);}();
[&]() {
result.apronSize=deserialize_VkExtent2D(name["members"]["apronSize"]);}();
[&]() {
result.origin=deserialize_VkOffset2D(name["members"]["origin"]);}();
return result;}

    json serialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(VkPhysicalDeviceAmigoProfilingFeaturesSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_VweYHoM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ffRKpLF=json({});
    
        if (name.pNext==NULL){
            return_ffRKpLF["null"]=true;
            return return_ffRKpLF;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["amigoProfiling"]=[&]() {
    json return_MhNicuK=json({});
    return_MhNicuK=[&]() {
    json return_hEdyaYL=json({});
    return serialize_uint32_t(name.amigoProfiling);}();return return_MhNicuK;}();
return result;}

    VkPhysicalDeviceAmigoProfilingFeaturesSEC deserialize_VkPhysicalDeviceAmigoProfilingFeaturesSEC(json name){
        auto result=VkPhysicalDeviceAmigoProfilingFeaturesSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.amigoProfiling=deserialize_uint32_t(name["members"]["amigoProfiling"]);}();}();
return result;}

    json serialize_VkAmigoProfilingSubmitInfoSEC(VkAmigoProfilingSubmitInfoSEC name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_oaozuSK=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SAaxkVG=json({});
    
        if (name.pNext==NULL){
            return_SAaxkVG["null"]=true;
            return return_SAaxkVG;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["firstDrawTimestamp"]=[&]() {
    json return_tpTZknN=json({});
    return serialize_uint64_t(name.firstDrawTimestamp);}();
result["members"]["swapBufferTimestamp"]=[&]() {
    json return_eSFkiNy=json({});
    return serialize_uint64_t(name.swapBufferTimestamp);}();
return result;}

    VkAmigoProfilingSubmitInfoSEC deserialize_VkAmigoProfilingSubmitInfoSEC(json name){
        auto result=VkAmigoProfilingSubmitInfoSEC();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FqgFeKS;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FqgFeKS=NULL;
        }
    temp_FqgFeKS=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FqgFeKS;}();
[&]() {
result.firstDrawTimestamp=deserialize_uint64_t(name["members"]["firstDrawTimestamp"]);}();
[&]() {
result.swapBufferTimestamp=deserialize_uint64_t(name["members"]["swapBufferTimestamp"]);}();
return result;}

    json serialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dpOhUXb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_rMReisZ=json({});
    
        if (name.pNext==NULL){
            return_rMReisZ["null"]=true;
            return return_rMReisZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["attachmentFeedbackLoopLayout"]=[&]() {
    json return_pXGZqWr=json({});
    return_pXGZqWr=[&]() {
    json return_zDiUidw=json({});
    return serialize_uint32_t(name.attachmentFeedbackLoopLayout);}();return return_pXGZqWr;}();
return result;}

    VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT deserialize_VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.attachmentFeedbackLoopLayout=deserialize_uint32_t(name["members"]["attachmentFeedbackLoopLayout"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(VkPhysicalDeviceDepthClampZeroOneFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KsYpNBr=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_UWToMri=json({});
    
        if (name.pNext==NULL){
            return_UWToMri["null"]=true;
            return return_UWToMri;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthClampZeroOne"]=[&]() {
    json return_UYEYLWv=json({});
    return_UYEYLWv=[&]() {
    json return_FSRzqHD=json({});
    return serialize_uint32_t(name.depthClampZeroOne);}();return return_UYEYLWv;}();
return result;}

    VkPhysicalDeviceDepthClampZeroOneFeaturesEXT deserialize_VkPhysicalDeviceDepthClampZeroOneFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthClampZeroOneFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthClampZeroOne=deserialize_uint32_t(name["members"]["depthClampZeroOne"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(VkPhysicalDeviceAddressBindingReportFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_rsqtOIO=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XshyUlg=json({});
    
        if (name.pNext==NULL){
            return_XshyUlg["null"]=true;
            return return_XshyUlg;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["reportAddressBinding"]=[&]() {
    json return_PBigUtu=json({});
    return_PBigUtu=[&]() {
    json return_lnipdxy=json({});
    return serialize_uint32_t(name.reportAddressBinding);}();return return_PBigUtu;}();
return result;}

    VkPhysicalDeviceAddressBindingReportFeaturesEXT deserialize_VkPhysicalDeviceAddressBindingReportFeaturesEXT(json name){
        auto result=VkPhysicalDeviceAddressBindingReportFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.reportAddressBinding=deserialize_uint32_t(name["members"]["reportAddressBinding"]);}();}();
return result;}

    json serialize_VkDeviceAddressBindingCallbackDataEXT(VkDeviceAddressBindingCallbackDataEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ancgVeQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ybSBZHI=json({});
    
        if (name.pNext==NULL){
            return_ybSBZHI["null"]=true;
            return return_ybSBZHI;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ewwZVUl=json({});
    return serialize_VkDeviceAddressBindingFlagsEXT(name.flags);}();
result["members"]["baseAddress"]=[&]() {
    json return_MqWsjXq=json({});
    return_MqWsjXq=[&]() {
    json return_iVuuSjg=json({});
    return serialize_uint64_t(name.baseAddress);}();return return_MqWsjXq;}();
result["members"]["size"]=[&]() {
    json return_JJpXSel=json({});
    return_JJpXSel=[&]() {
    json return_aUJtBbx=json({});
    return serialize_uint64_t(name.size);}();return return_JJpXSel;}();
result["members"]["bindingType"]=[&]() {
    json return_meZpoTF=json({});
    return serialize_VkDeviceAddressBindingTypeEXT(name.bindingType);}();
return result;}

    VkDeviceAddressBindingCallbackDataEXT deserialize_VkDeviceAddressBindingCallbackDataEXT(json name){
        auto result=VkDeviceAddressBindingCallbackDataEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDeviceAddressBindingFlagsEXT(name["members"]["flags"]);}();
[&]() {
[&]() {
result.baseAddress=deserialize_uint64_t(name["members"]["baseAddress"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
[&]() {
result.bindingType=deserialize_VkDeviceAddressBindingTypeEXT(name["members"]["bindingType"]);}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowFeaturesNV(VkPhysicalDeviceOpticalFlowFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aWAwosi=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GNAtZHk=json({});
    
        if (name.pNext==NULL){
            return_GNAtZHk["null"]=true;
            return return_GNAtZHk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["opticalFlow"]=[&]() {
    json return_hHHEFkT=json({});
    return_hHHEFkT=[&]() {
    json return_khpFppB=json({});
    return serialize_uint32_t(name.opticalFlow);}();return return_hHHEFkT;}();
return result;}

    VkPhysicalDeviceOpticalFlowFeaturesNV deserialize_VkPhysicalDeviceOpticalFlowFeaturesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.opticalFlow=deserialize_uint32_t(name["members"]["opticalFlow"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceOpticalFlowPropertiesNV(VkPhysicalDeviceOpticalFlowPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_IQBndYG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_uhBdiyv=json({});
    
        if (name.pNext==NULL){
            return_uhBdiyv["null"]=true;
            return return_uhBdiyv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedOutputGridSizes"]=[&]() {
    json return_hpDbvZp=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedOutputGridSizes);}();
result["members"]["supportedHintGridSizes"]=[&]() {
    json return_emQNvmQ=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.supportedHintGridSizes);}();
result["members"]["hintSupported"]=[&]() {
    json return_BWgUDuj=json({});
    return_BWgUDuj=[&]() {
    json return_MIlVIcw=json({});
    return serialize_uint32_t(name.hintSupported);}();return return_BWgUDuj;}();
result["members"]["costSupported"]=[&]() {
    json return_QwUHYqb=json({});
    return_QwUHYqb=[&]() {
    json return_sYFbIiM=json({});
    return serialize_uint32_t(name.costSupported);}();return return_QwUHYqb;}();
result["members"]["bidirectionalFlowSupported"]=[&]() {
    json return_dsTFVHe=json({});
    return_dsTFVHe=[&]() {
    json return_taOJqpe=json({});
    return serialize_uint32_t(name.bidirectionalFlowSupported);}();return return_dsTFVHe;}();
result["members"]["globalFlowSupported"]=[&]() {
    json return_YveKDAS=json({});
    return_YveKDAS=[&]() {
    json return_NuNBNTM=json({});
    return serialize_uint32_t(name.globalFlowSupported);}();return return_YveKDAS;}();
result["members"]["minWidth"]=[&]() {
    json return_nXXKRmk=json({});
    return serialize_uint32_t(name.minWidth);}();
result["members"]["minHeight"]=[&]() {
    json return_fWNbQGw=json({});
    return serialize_uint32_t(name.minHeight);}();
result["members"]["maxWidth"]=[&]() {
    json return_rCzIhAj=json({});
    return serialize_uint32_t(name.maxWidth);}();
result["members"]["maxHeight"]=[&]() {
    json return_psZwpFJ=json({});
    return serialize_uint32_t(name.maxHeight);}();
result["members"]["maxNumRegionsOfInterest"]=[&]() {
    json return_ykWPGly=json({});
    return serialize_uint32_t(name.maxNumRegionsOfInterest);}();
return result;}

    VkPhysicalDeviceOpticalFlowPropertiesNV deserialize_VkPhysicalDeviceOpticalFlowPropertiesNV(json name){
        auto result=VkPhysicalDeviceOpticalFlowPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedOutputGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedOutputGridSizes"]);}();
[&]() {
result.supportedHintGridSizes=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["supportedHintGridSizes"]);}();
[&]() {
[&]() {
result.hintSupported=deserialize_uint32_t(name["members"]["hintSupported"]);}();}();
[&]() {
[&]() {
result.costSupported=deserialize_uint32_t(name["members"]["costSupported"]);}();}();
[&]() {
[&]() {
result.bidirectionalFlowSupported=deserialize_uint32_t(name["members"]["bidirectionalFlowSupported"]);}();}();
[&]() {
[&]() {
result.globalFlowSupported=deserialize_uint32_t(name["members"]["globalFlowSupported"]);}();}();
[&]() {
result.minWidth=deserialize_uint32_t(name["members"]["minWidth"]);}();
[&]() {
result.minHeight=deserialize_uint32_t(name["members"]["minHeight"]);}();
[&]() {
result.maxWidth=deserialize_uint32_t(name["members"]["maxWidth"]);}();
[&]() {
result.maxHeight=deserialize_uint32_t(name["members"]["maxHeight"]);}();
[&]() {
result.maxNumRegionsOfInterest=deserialize_uint32_t(name["members"]["maxNumRegionsOfInterest"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatInfoNV(VkOpticalFlowImageFormatInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gHdKEXY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eUiAfzp=json({});
    
        if (name.pNext==NULL){
            return_eUiAfzp["null"]=true;
            return return_eUiAfzp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["usage"]=[&]() {
    json return_fpmEZcd=json({});
    return serialize_VkOpticalFlowUsageFlagsNV(name.usage);}();
return result;}

    VkOpticalFlowImageFormatInfoNV deserialize_VkOpticalFlowImageFormatInfoNV(json name){
        auto result=VkOpticalFlowImageFormatInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_iWtKRIr;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_iWtKRIr=NULL;
        }
    temp_iWtKRIr=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_iWtKRIr;}();
[&]() {
result.usage=deserialize_VkOpticalFlowUsageFlagsNV(name["members"]["usage"]);}();
return result;}

    json serialize_VkOpticalFlowImageFormatPropertiesNV(VkOpticalFlowImageFormatPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BhrDzHa=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_PwuaCBN=json({});
    
        if (name.pNext==NULL){
            return_PwuaCBN["null"]=true;
            return return_PwuaCBN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["format"]=[&]() {
    json return_SobyGld=json({});
    return serialize_VkFormat(name.format);}();
return result;}

    VkOpticalFlowImageFormatPropertiesNV deserialize_VkOpticalFlowImageFormatPropertiesNV(json name){
        auto result=VkOpticalFlowImageFormatPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_hfFsHhY;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_hfFsHhY=NULL;
        }
    temp_hfFsHhY=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_hfFsHhY;}();
[&]() {
result.format=deserialize_VkFormat(name["members"]["format"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreateInfoNV(VkOpticalFlowSessionCreateInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_weDlMYb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_GRkSZFi=json({});
    
        if (name.pNext==NULL){
            return_GRkSZFi["null"]=true;
            return return_GRkSZFi;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["width"]=[&]() {
    json return_dgQlGSy=json({});
    return serialize_uint32_t(name.width);}();
result["members"]["height"]=[&]() {
    json return_RWoigMj=json({});
    return serialize_uint32_t(name.height);}();
result["members"]["imageFormat"]=[&]() {
    json return_YzpnuQf=json({});
    return serialize_VkFormat(name.imageFormat);}();
result["members"]["flowVectorFormat"]=[&]() {
    json return_FjjOAwp=json({});
    return serialize_VkFormat(name.flowVectorFormat);}();
result["members"]["costFormat"]=[&]() {
    json return_jOGpjya=json({});
    return serialize_VkFormat(name.costFormat);}();
result["members"]["outputGridSize"]=[&]() {
    json return_sgljBxo=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.outputGridSize);}();
result["members"]["hintGridSize"]=[&]() {
    json return_WzuLdZN=json({});
    return serialize_VkOpticalFlowGridSizeFlagsNV(name.hintGridSize);}();
result["members"]["performanceLevel"]=[&]() {
    json return_qUIJuhe=json({});
    return serialize_VkOpticalFlowPerformanceLevelNV(name.performanceLevel);}();
result["members"]["flags"]=[&]() {
    json return_JYxvguh=json({});
    return serialize_VkOpticalFlowSessionCreateFlagsNV(name.flags);}();
return result;}

    VkOpticalFlowSessionCreateInfoNV deserialize_VkOpticalFlowSessionCreateInfoNV(json name){
        auto result=VkOpticalFlowSessionCreateInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.width=deserialize_uint32_t(name["members"]["width"]);}();
[&]() {
result.height=deserialize_uint32_t(name["members"]["height"]);}();
[&]() {
result.imageFormat=deserialize_VkFormat(name["members"]["imageFormat"]);}();
[&]() {
result.flowVectorFormat=deserialize_VkFormat(name["members"]["flowVectorFormat"]);}();
[&]() {
result.costFormat=deserialize_VkFormat(name["members"]["costFormat"]);}();
[&]() {
result.outputGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["outputGridSize"]);}();
[&]() {
result.hintGridSize=deserialize_VkOpticalFlowGridSizeFlagsNV(name["members"]["hintGridSize"]);}();
[&]() {
result.performanceLevel=deserialize_VkOpticalFlowPerformanceLevelNV(name["members"]["performanceLevel"]);}();
[&]() {
result.flags=deserialize_VkOpticalFlowSessionCreateFlagsNV(name["members"]["flags"]);}();
return result;}

    json serialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(VkOpticalFlowSessionCreatePrivateDataInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_murtlIg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ApjAWJX=json({});
    
        if (name.pNext==NULL){
            return_ApjAWJX["null"]=true;
            return return_ApjAWJX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["id"]=[&]() {
    json return_frJHeYg=json({});
    return serialize_uint32_t(name.id);}();
result["members"]["size"]=[&]() {
    json return_YwPHlDd=json({});
    return serialize_uint32_t(name.size);}();
result["members"]["pPrivateData"]=[&]() {
    json return_ESEpXau=json({});
    
        if (name.pPrivateData==NULL){
            return_ESEpXau["null"]=true;
            return return_ESEpXau;
        }
        return serialize_void_p(name.pPrivateData);
}();
return result;}

    VkOpticalFlowSessionCreatePrivateDataInfoNV deserialize_VkOpticalFlowSessionCreatePrivateDataInfoNV(json name){
        auto result=VkOpticalFlowSessionCreatePrivateDataInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.id=deserialize_uint32_t(name["members"]["id"]);}();
[&]() {
result.size=deserialize_uint32_t(name["members"]["size"]);}();
[&]() {
void* temp_zDmCwwm;[&]() {

        if (name["members"]["pPrivateData"].contains("null")){
        temp_zDmCwwm=NULL;
        }
    temp_zDmCwwm=deserialize_void_p(name["members"]["pPrivateData"]);
}();result.pPrivateData=temp_zDmCwwm;}();
return result;}

    json serialize_VkOpticalFlowExecuteInfoNV(VkOpticalFlowExecuteInfoNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_HTFFwYY=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jJpGPjb=json({});
    
        if (name.pNext==NULL){
            return_jJpGPjb["null"]=true;
            return return_jJpGPjb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_xCdmvYD=json({});
    return serialize_VkOpticalFlowExecuteFlagsNV(name.flags);}();
result["members"]["regionCount"]=[&]() {
    json return_KDubMdX=json({});
    return serialize_uint32_t(name.regionCount);}();
result["members"]["pRegions"]=[&]() {
    json return_bnShONh=json({});
    
        if (name.pRegions==NULL){
            return_bnShONh["null"]=true;
            return return_bnShONh;
        }
        
        return_bnShONh["members"]={};
        for(int i=0; i < name.regionCount; i++){
            json temp;
            temp=[&]() {
    json return_SZZBrke=json({});
    return serialize_VkRect2D(name.pRegions[i]);}();
            return_bnShONh["members"][std::to_string(i)].push_back(temp);
        }
        return return_bnShONh;
        }();
return result;}

    VkOpticalFlowExecuteInfoNV deserialize_VkOpticalFlowExecuteInfoNV(json name){
        auto result=VkOpticalFlowExecuteInfoNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkOpticalFlowExecuteFlagsNV(name["members"]["flags"]);}();
[&]() {
result.regionCount=deserialize_uint32_t(name["members"]["regionCount"]);}();
[&]() {
VkRect2D* temp_dNXSKXJ;[&]() {

        if (name["members"]["pRegions"].contains("null")){
        temp_dNXSKXJ=NULL;
        }
    temp_dNXSKXJ=(VkRect2D*)malloc(result.regionCount*sizeof(VkRect2D));
        for (int XLUCGUr=0; XLUCGUr < result.regionCount; XLUCGUr++){
            [&]() {
temp_dNXSKXJ[XLUCGUr]=deserialize_VkRect2D(name["members"]["pRegions"]["members"][XLUCGUr]);}();;
        }
        }();result.pRegions=temp_dNXSKXJ;}();
return result;}

    json serialize_VkPhysicalDeviceFaultFeaturesEXT(VkPhysicalDeviceFaultFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dDKImne=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_bXbHtXe=json({});
    
        if (name.pNext==NULL){
            return_bXbHtXe["null"]=true;
            return return_bXbHtXe;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["deviceFault"]=[&]() {
    json return_iFdquYh=json({});
    return_iFdquYh=[&]() {
    json return_itbPSbh=json({});
    return serialize_uint32_t(name.deviceFault);}();return return_iFdquYh;}();
result["members"]["deviceFaultVendorBinary"]=[&]() {
    json return_GSYDiMi=json({});
    return_GSYDiMi=[&]() {
    json return_VrPsFoc=json({});
    return serialize_uint32_t(name.deviceFaultVendorBinary);}();return return_GSYDiMi;}();
return result;}

    VkPhysicalDeviceFaultFeaturesEXT deserialize_VkPhysicalDeviceFaultFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFaultFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.deviceFault=deserialize_uint32_t(name["members"]["deviceFault"]);}();}();
[&]() {
[&]() {
result.deviceFaultVendorBinary=deserialize_uint32_t(name["members"]["deviceFaultVendorBinary"]);}();}();
return result;}

    json serialize_VkDeviceFaultAddressInfoEXT(VkDeviceFaultAddressInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["addressType"]=[&]() {
    json return_YCiiBbQ=json({});
    return serialize_VkDeviceFaultAddressTypeEXT(name.addressType);}();
result["members"]["reportedAddress"]=[&]() {
    json return_DBgsYdI=json({});
    return_DBgsYdI=[&]() {
    json return_RVZEvzj=json({});
    return serialize_uint64_t(name.reportedAddress);}();return return_DBgsYdI;}();
result["members"]["addressPrecision"]=[&]() {
    json return_rcTEdpe=json({});
    return_rcTEdpe=[&]() {
    json return_lqJozSJ=json({});
    return serialize_uint64_t(name.addressPrecision);}();return return_rcTEdpe;}();
return result;}

    VkDeviceFaultAddressInfoEXT deserialize_VkDeviceFaultAddressInfoEXT(json name){
        auto result=VkDeviceFaultAddressInfoEXT();
    
[&]() {
result.addressType=deserialize_VkDeviceFaultAddressTypeEXT(name["members"]["addressType"]);}();
[&]() {
[&]() {
result.reportedAddress=deserialize_uint64_t(name["members"]["reportedAddress"]);}();}();
[&]() {
[&]() {
result.addressPrecision=deserialize_uint64_t(name["members"]["addressPrecision"]);}();}();
return result;}

    json serialize_VkDeviceFaultVendorInfoEXT(VkDeviceFaultVendorInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["description"]=[&]() {
    json return_saocHaC=json({});
    
        return_saocHaC["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_KIOwDLW=json({});
    return serialize_char(name.description[i]);}();
            return_saocHaC["members"][std::to_string(i)].push_back(temp);
        }
        return return_saocHaC;
        }();
result["members"]["vendorFaultCode"]=[&]() {
    json return_yHwQVeL=json({});
    return serialize_uint64_t(name.vendorFaultCode);}();
result["members"]["vendorFaultData"]=[&]() {
    json return_KOZHDpE=json({});
    return serialize_uint64_t(name.vendorFaultData);}();
return result;}

    VkDeviceFaultVendorInfoEXT deserialize_VkDeviceFaultVendorInfoEXT(json name){
        auto result=VkDeviceFaultVendorInfoEXT();
    
[&]() {

        for (int nmuZSXx=0; nmuZSXx < VK_MAX_DESCRIPTION_SIZE; nmuZSXx++){
            [&]() {
result.description[nmuZSXx]=deserialize_char(name["members"]["description"]["members"][nmuZSXx]);}();;
        }
        }();
[&]() {
result.vendorFaultCode=deserialize_uint64_t(name["members"]["vendorFaultCode"]);}();
[&]() {
result.vendorFaultData=deserialize_uint64_t(name["members"]["vendorFaultData"]);}();
return result;}

    json serialize_VkDeviceFaultCountsEXT(VkDeviceFaultCountsEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iRZBgKF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_yEcsJgT=json({});
    
        if (name.pNext==NULL){
            return_yEcsJgT["null"]=true;
            return return_yEcsJgT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["addressInfoCount"]=[&]() {
    json return_RiYMynj=json({});
    return serialize_uint32_t(name.addressInfoCount);}();
result["members"]["vendorInfoCount"]=[&]() {
    json return_BgGySxH=json({});
    return serialize_uint32_t(name.vendorInfoCount);}();
result["members"]["vendorBinarySize"]=[&]() {
    json return_SFKHdZg=json({});
    return_SFKHdZg=[&]() {
    json return_tMKMoev=json({});
    return serialize_uint64_t(name.vendorBinarySize);}();return return_SFKHdZg;}();
return result;}

    VkDeviceFaultCountsEXT deserialize_VkDeviceFaultCountsEXT(json name){
        auto result=VkDeviceFaultCountsEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.addressInfoCount=deserialize_uint32_t(name["members"]["addressInfoCount"]);}();
[&]() {
result.vendorInfoCount=deserialize_uint32_t(name["members"]["vendorInfoCount"]);}();
[&]() {
[&]() {
result.vendorBinarySize=deserialize_uint64_t(name["members"]["vendorBinarySize"]);}();}();
return result;}

    json serialize_VkDeviceFaultInfoEXT(VkDeviceFaultInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AfddnLB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_iszWmkm=json({});
    
        if (name.pNext==NULL){
            return_iszWmkm["null"]=true;
            return return_iszWmkm;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["description"]=[&]() {
    json return_arbqxJO=json({});
    
        return_arbqxJO["members"]={};
        for(int i=0; i < VK_MAX_DESCRIPTION_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_mBCqbEn=json({});
    return serialize_char(name.description[i]);}();
            return_arbqxJO["members"][std::to_string(i)].push_back(temp);
        }
        return return_arbqxJO;
        }();
result["members"]["pAddressInfos"]=[&]() {
    json return_wYBXoxx=json({});
    
        if (name.pAddressInfos==NULL){
            return_wYBXoxx["null"]=true;
            return return_wYBXoxx;
        }
        return_wYBXoxx=[&]() {
    json return_tqpnfLi=json({});
    return serialize_VkDeviceFaultAddressInfoEXT(*name.pAddressInfos);}();
return return_wYBXoxx;}();
result["members"]["pVendorInfos"]=[&]() {
    json return_SIPJrnW=json({});
    
        if (name.pVendorInfos==NULL){
            return_SIPJrnW["null"]=true;
            return return_SIPJrnW;
        }
        return_SIPJrnW=[&]() {
    json return_EoSoOMk=json({});
    return serialize_VkDeviceFaultVendorInfoEXT(*name.pVendorInfos);}();
return return_SIPJrnW;}();
result["members"]["pVendorBinaryData"]=[&]() {
    json return_moXlzxu=json({});
    
        if (name.pVendorBinaryData==NULL){
            return_moXlzxu["null"]=true;
            return return_moXlzxu;
        }
        return serialize_void_p(name.pVendorBinaryData);
}();
return result;}

    VkDeviceFaultInfoEXT deserialize_VkDeviceFaultInfoEXT(json name){
        auto result=VkDeviceFaultInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int hxaWQvS=0; hxaWQvS < VK_MAX_DESCRIPTION_SIZE; hxaWQvS++){
            [&]() {
result.description[hxaWQvS]=deserialize_char(name["members"]["description"]["members"][hxaWQvS]);}();;
        }
        }();
[&]() {

        if (name["members"]["pAddressInfos"].contains("null")){
        result.pAddressInfos=NULL;
        }
    [&]() {
*(result.pAddressInfos)=deserialize_VkDeviceFaultAddressInfoEXT(name["members"]["pAddressInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorInfos"].contains("null")){
        result.pVendorInfos=NULL;
        }
    [&]() {
*(result.pVendorInfos)=deserialize_VkDeviceFaultVendorInfoEXT(name["members"]["pVendorInfos"]);}();
}();
[&]() {

        if (name["members"]["pVendorBinaryData"].contains("null")){
        result.pVendorBinaryData=NULL;
        }
    result.pVendorBinaryData=deserialize_void_p(name["members"]["pVendorBinaryData"]);
}();
return result;}

    json serialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(VkDeviceFaultVendorBinaryHeaderVersionOneEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["headerSize"]=[&]() {
    json return_zPKFaAv=json({});
    return serialize_uint32_t(name.headerSize);}();
result["members"]["headerVersion"]=[&]() {
    json return_waJcqgL=json({});
    return serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name.headerVersion);}();
result["members"]["vendorID"]=[&]() {
    json return_ldkDKmk=json({});
    return serialize_uint32_t(name.vendorID);}();
result["members"]["deviceID"]=[&]() {
    json return_LdwRGEB=json({});
    return serialize_uint32_t(name.deviceID);}();
result["members"]["driverVersion"]=[&]() {
    json return_DJoSPcn=json({});
    return serialize_uint32_t(name.driverVersion);}();
result["members"]["pipelineCacheUUID"]=[&]() {
    json return_TzxfTeh=json({});
    
        return_TzxfTeh["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_Dwzyunf=json({});
    return serialize_uint8_t(name.pipelineCacheUUID[i]);}();
            return_TzxfTeh["members"][std::to_string(i)].push_back(temp);
        }
        return return_TzxfTeh;
        }();
result["members"]["applicationNameOffset"]=[&]() {
    json return_tDZhyxR=json({});
    return serialize_uint32_t(name.applicationNameOffset);}();
result["members"]["applicationVersion"]=[&]() {
    json return_TfRJdYl=json({});
    return serialize_uint32_t(name.applicationVersion);}();
result["members"]["engineNameOffset"]=[&]() {
    json return_vLrlMaR=json({});
    return serialize_uint32_t(name.engineNameOffset);}();
result["members"]["engineVersion"]=[&]() {
    json return_tLPKBuC=json({});
    return serialize_uint32_t(name.engineVersion);}();
result["members"]["apiVersion"]=[&]() {
    json return_ATIRJaK=json({});
    return serialize_uint32_t(name.apiVersion);}();
return result;}

    VkDeviceFaultVendorBinaryHeaderVersionOneEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionOneEXT(json name){
        auto result=VkDeviceFaultVendorBinaryHeaderVersionOneEXT();
    
[&]() {
result.headerSize=deserialize_uint32_t(name["members"]["headerSize"]);}();
[&]() {
result.headerVersion=deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(name["members"]["headerVersion"]);}();
[&]() {
result.vendorID=deserialize_uint32_t(name["members"]["vendorID"]);}();
[&]() {
result.deviceID=deserialize_uint32_t(name["members"]["deviceID"]);}();
[&]() {
result.driverVersion=deserialize_uint32_t(name["members"]["driverVersion"]);}();
[&]() {

        for (int cZaDrtU=0; cZaDrtU < VK_UUID_SIZE; cZaDrtU++){
            [&]() {
result.pipelineCacheUUID[cZaDrtU]=deserialize_uint8_t(name["members"]["pipelineCacheUUID"]["members"][cZaDrtU]);}();;
        }
        }();
[&]() {
result.applicationNameOffset=deserialize_uint32_t(name["members"]["applicationNameOffset"]);}();
[&]() {
result.applicationVersion=deserialize_uint32_t(name["members"]["applicationVersion"]);}();
[&]() {
result.engineNameOffset=deserialize_uint32_t(name["members"]["engineNameOffset"]);}();
[&]() {
result.engineVersion=deserialize_uint32_t(name["members"]["engineVersion"]);}();
[&]() {
result.apiVersion=deserialize_uint32_t(name["members"]["apiVersion"]);}();
return result;}

    json serialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_nXfrGYD=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OcPIfWZ=json({});
    
        if (name.pNext==NULL){
            return_OcPIfWZ["null"]=true;
            return return_OcPIfWZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pipelineLibraryGroupHandles"]=[&]() {
    json return_mhzjxmh=json({});
    return_mhzjxmh=[&]() {
    json return_tnNJYgr=json({});
    return serialize_uint32_t(name.pipelineLibraryGroupHandles);}();return return_mhzjxmh;}();
return result;}

    VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT deserialize_VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT(json name){
        auto result=VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.pipelineLibraryGroupHandles=deserialize_uint32_t(name["members"]["pipelineLibraryGroupHandles"]);}();}();
return result;}

    json serialize_VkDepthBiasInfoEXT(VkDepthBiasInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fxAGOeV=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MJEyJtM=json({});
    
        if (name.pNext==NULL){
            return_MJEyJtM["null"]=true;
            return return_MJEyJtM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasConstantFactor"]=[&]() {
    json return_udLigKF=json({});
    return serialize_float(name.depthBiasConstantFactor);}();
result["members"]["depthBiasClamp"]=[&]() {
    json return_YPZYfgE=json({});
    return serialize_float(name.depthBiasClamp);}();
result["members"]["depthBiasSlopeFactor"]=[&]() {
    json return_gWMcXII=json({});
    return serialize_float(name.depthBiasSlopeFactor);}();
return result;}

    VkDepthBiasInfoEXT deserialize_VkDepthBiasInfoEXT(json name){
        auto result=VkDepthBiasInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_DuvfLZX;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_DuvfLZX=NULL;
        }
    temp_DuvfLZX=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_DuvfLZX;}();
[&]() {
result.depthBiasConstantFactor=deserialize_float(name["members"]["depthBiasConstantFactor"]);}();
[&]() {
result.depthBiasClamp=deserialize_float(name["members"]["depthBiasClamp"]);}();
[&]() {
result.depthBiasSlopeFactor=deserialize_float(name["members"]["depthBiasSlopeFactor"]);}();
return result;}

    json serialize_VkDepthBiasRepresentationInfoEXT(VkDepthBiasRepresentationInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_WKkjaaT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qUhbJBp=json({});
    
        if (name.pNext==NULL){
            return_qUhbJBp["null"]=true;
            return return_qUhbJBp;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasRepresentation"]=[&]() {
    json return_tqETPtK=json({});
    return serialize_VkDepthBiasRepresentationEXT(name.depthBiasRepresentation);}();
result["members"]["depthBiasExact"]=[&]() {
    json return_lUWXZjw=json({});
    return_lUWXZjw=[&]() {
    json return_dmrpGZq=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_lUWXZjw;}();
return result;}

    VkDepthBiasRepresentationInfoEXT deserialize_VkDepthBiasRepresentationInfoEXT(json name){
        auto result=VkDepthBiasRepresentationInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_CEcYECW;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_CEcYECW=NULL;
        }
    temp_CEcYECW=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_CEcYECW;}();
[&]() {
result.depthBiasRepresentation=deserialize_VkDepthBiasRepresentationEXT(name["members"]["depthBiasRepresentation"]);}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkDecompressMemoryRegionNV(VkDecompressMemoryRegionNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["srcAddress"]=[&]() {
    json return_XGFEKii=json({});
    return_XGFEKii=[&]() {
    json return_uquDbqh=json({});
    return serialize_uint64_t(name.srcAddress);}();return return_XGFEKii;}();
result["members"]["dstAddress"]=[&]() {
    json return_MCFEccV=json({});
    return_MCFEccV=[&]() {
    json return_VpRZQkP=json({});
    return serialize_uint64_t(name.dstAddress);}();return return_MCFEccV;}();
result["members"]["compressedSize"]=[&]() {
    json return_wxFfKgC=json({});
    return_wxFfKgC=[&]() {
    json return_WLkiyqi=json({});
    return serialize_uint64_t(name.compressedSize);}();return return_wxFfKgC;}();
result["members"]["decompressedSize"]=[&]() {
    json return_oHIAwgV=json({});
    return_oHIAwgV=[&]() {
    json return_RFVaZQM=json({});
    return serialize_uint64_t(name.decompressedSize);}();return return_oHIAwgV;}();
result["members"]["decompressionMethod"]=[&]() {
    json return_EuUevGz=json({});
    return serialize_VkMemoryDecompressionMethodFlagsNV(name.decompressionMethod);}();
return result;}

    VkDecompressMemoryRegionNV deserialize_VkDecompressMemoryRegionNV(json name){
        auto result=VkDecompressMemoryRegionNV();
    
[&]() {
[&]() {
result.srcAddress=deserialize_uint64_t(name["members"]["srcAddress"]);}();}();
[&]() {
[&]() {
result.dstAddress=deserialize_uint64_t(name["members"]["dstAddress"]);}();}();
[&]() {
[&]() {
result.compressedSize=deserialize_uint64_t(name["members"]["compressedSize"]);}();}();
[&]() {
[&]() {
result.decompressedSize=deserialize_uint64_t(name["members"]["decompressedSize"]);}();}();
[&]() {
result.decompressionMethod=deserialize_VkMemoryDecompressionMethodFlagsNV(name["members"]["decompressionMethod"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_dVxefwv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_VobLBWT=json({});
    
        if (name.pNext==NULL){
            return_VobLBWT["null"]=true;
            return return_VobLBWT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreMask"]=[&]() {
    json return_DGSOclT=json({});
    return serialize_uint64_t(name.shaderCoreMask);}();
result["members"]["shaderCoreCount"]=[&]() {
    json return_FdhgPYk=json({});
    return serialize_uint32_t(name.shaderCoreCount);}();
result["members"]["shaderWarpsPerCore"]=[&]() {
    json return_kEiINKG=json({});
    return serialize_uint32_t(name.shaderWarpsPerCore);}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.shaderCoreMask=deserialize_uint64_t(name["members"]["shaderCoreMask"]);}();
[&]() {
result.shaderCoreCount=deserialize_uint32_t(name["members"]["shaderCoreCount"]);}();
[&]() {
result.shaderWarpsPerCore=deserialize_uint32_t(name["members"]["shaderWarpsPerCore"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qKxGBco=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_eEiqRvl=json({});
    
        if (name.pNext==NULL){
            return_eEiqRvl["null"]=true;
            return return_eEiqRvl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderCoreBuiltins"]=[&]() {
    json return_JRVpiVu=json({});
    return_JRVpiVu=[&]() {
    json return_jnwJyeD=json({});
    return serialize_uint32_t(name.shaderCoreBuiltins);}();return return_JRVpiVu;}();
return result;}

    VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM deserialize_VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM(json name){
        auto result=VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderCoreBuiltins=deserialize_uint32_t(name["members"]["shaderCoreBuiltins"]);}();}();
return result;}

    json serialize_VkFrameBoundaryEXT(VkFrameBoundaryEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jSyPmPF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_IjdePrN=json({});
    
        if (name.pNext==NULL){
            return_IjdePrN["null"]=true;
            return return_IjdePrN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_alNszwZ=json({});
    return serialize_VkFrameBoundaryFlagsEXT(name.flags);}();
result["members"]["frameID"]=[&]() {
    json return_aHUXgti=json({});
    return serialize_uint64_t(name.frameID);}();
result["members"]["imageCount"]=[&]() {
    json return_JWiPKiU=json({});
    return serialize_uint32_t(name.imageCount);}();
result["members"]["pImages"]=[&]() {
    json return_aOpimGH=json({});
    
        if (name.pImages==NULL){
            return_aOpimGH["null"]=true;
            return return_aOpimGH;
        }
        
        return_aOpimGH["members"]={};
        for(int i=0; i < name.imageCount; i++){
            json temp;
            temp=[&]() {
    json return_xxLMZeK=json({});
    return serialize_VkImage(name.pImages[i]);}();
            return_aOpimGH["members"][std::to_string(i)].push_back(temp);
        }
        return return_aOpimGH;
        }();
result["members"]["bufferCount"]=[&]() {
    json return_EZlfWNz=json({});
    return serialize_uint32_t(name.bufferCount);}();
result["members"]["pBuffers"]=[&]() {
    json return_kJgXikU=json({});
    
        if (name.pBuffers==NULL){
            return_kJgXikU["null"]=true;
            return return_kJgXikU;
        }
        
        return_kJgXikU["members"]={};
        for(int i=0; i < name.bufferCount; i++){
            json temp;
            temp=[&]() {
    json return_HPmnURM=json({});
    return serialize_VkBuffer(name.pBuffers[i]);}();
            return_kJgXikU["members"][std::to_string(i)].push_back(temp);
        }
        return return_kJgXikU;
        }();
result["members"]["tagName"]=[&]() {
    json return_mLYmQKP=json({});
    return serialize_uint64_t(name.tagName);}();
result["members"]["tagSize"]=[&]() {
    json return_fuopuWz=json({});
    return serialize_size_t(name.tagSize);}();
result["members"]["pTag"]=[&]() {
    json return_DMVOzHP=json({});
    
        if (name.pTag==NULL){
            return_DMVOzHP["null"]=true;
            return return_DMVOzHP;
        }
        return serialize_void_p(name.pTag);
}();
return result;}

    VkFrameBoundaryEXT deserialize_VkFrameBoundaryEXT(json name){
        auto result=VkFrameBoundaryEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_alPcxeQ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_alPcxeQ=NULL;
        }
    temp_alPcxeQ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_alPcxeQ;}();
[&]() {
result.flags=deserialize_VkFrameBoundaryFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.frameID=deserialize_uint64_t(name["members"]["frameID"]);}();
[&]() {
result.imageCount=deserialize_uint32_t(name["members"]["imageCount"]);}();
[&]() {
VkImage* temp_ROdhpJJ;[&]() {

        if (name["members"]["pImages"].contains("null")){
        temp_ROdhpJJ=NULL;
        }
    temp_ROdhpJJ=(VkImage*)malloc(result.imageCount*sizeof(VkImage));
        for (int tnIVmRL=0; tnIVmRL < result.imageCount; tnIVmRL++){
            [&]() {
temp_ROdhpJJ[tnIVmRL]=deserialize_VkImage(name["members"]["pImages"]["members"][tnIVmRL]);}();;
        }
        }();result.pImages=temp_ROdhpJJ;}();
[&]() {
result.bufferCount=deserialize_uint32_t(name["members"]["bufferCount"]);}();
[&]() {
VkBuffer* temp_MvfCpOm;[&]() {

        if (name["members"]["pBuffers"].contains("null")){
        temp_MvfCpOm=NULL;
        }
    temp_MvfCpOm=(VkBuffer*)malloc(result.bufferCount*sizeof(VkBuffer));
        for (int dYsDsPv=0; dYsDsPv < result.bufferCount; dYsDsPv++){
            [&]() {
temp_MvfCpOm[dYsDsPv]=deserialize_VkBuffer(name["members"]["pBuffers"]["members"][dYsDsPv]);}();;
        }
        }();result.pBuffers=temp_MvfCpOm;}();
[&]() {
result.tagName=deserialize_uint64_t(name["members"]["tagName"]);}();
[&]() {
result.tagSize=deserialize_size_t(name["members"]["tagSize"]);}();
[&]() {
void* temp_uJyvUtJ;[&]() {

        if (name["members"]["pTag"].contains("null")){
        temp_uJyvUtJ=NULL;
        }
    temp_uJyvUtJ=deserialize_void_p(name["members"]["pTag"]);
}();result.pTag=temp_uJyvUtJ;}();
return result;}

    json serialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(VkPhysicalDeviceFrameBoundaryFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_NnsnlyX=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_SJTRSuZ=json({});
    
        if (name.pNext==NULL){
            return_SJTRSuZ["null"]=true;
            return return_SJTRSuZ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["frameBoundary"]=[&]() {
    json return_DHMcMcI=json({});
    return_DHMcMcI=[&]() {
    json return_zvhDVRY=json({});
    return serialize_uint32_t(name.frameBoundary);}();return return_DHMcMcI;}();
return result;}

    VkPhysicalDeviceFrameBoundaryFeaturesEXT deserialize_VkPhysicalDeviceFrameBoundaryFeaturesEXT(json name){
        auto result=VkPhysicalDeviceFrameBoundaryFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.frameBoundary=deserialize_uint32_t(name["members"]["frameBoundary"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jMDIYQg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OaVMjPN=json({});
    
        if (name.pNext==NULL){
            return_OaVMjPN["null"]=true;
            return return_OaVMjPN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["dynamicRenderingUnusedAttachments"]=[&]() {
    json return_BeVUWzq=json({});
    return_BeVUWzq=[&]() {
    json return_obuQWOR=json({});
    return serialize_uint32_t(name.dynamicRenderingUnusedAttachments);}();return return_BeVUWzq;}();
return result;}

    VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT deserialize_VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.dynamicRenderingUnusedAttachments=deserialize_uint32_t(name["members"]["dynamicRenderingUnusedAttachments"]);}();}();
return result;}

    json serialize_VkSurfacePresentModeEXT(VkSurfacePresentModeEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_wrbLYBm=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_dcYluLS=json({});
    
        if (name.pNext==NULL){
            return_dcYluLS["null"]=true;
            return return_dcYluLS;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentMode"]=[&]() {
    json return_zGMoOJt=json({});
    return serialize_VkPresentModeKHR(name.presentMode);}();
return result;}

    VkSurfacePresentModeEXT deserialize_VkSurfacePresentModeEXT(json name){
        auto result=VkSurfacePresentModeEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentMode=deserialize_VkPresentModeKHR(name["members"]["presentMode"]);}();
return result;}

    json serialize_VkSurfacePresentScalingCapabilitiesEXT(VkSurfacePresentScalingCapabilitiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_cLqqMYx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aeVHoXl=json({});
    
        if (name.pNext==NULL){
            return_aeVHoXl["null"]=true;
            return return_aeVHoXl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["supportedPresentScaling"]=[&]() {
    json return_bDWlGso=json({});
    return serialize_VkPresentScalingFlagsEXT(name.supportedPresentScaling);}();
result["members"]["supportedPresentGravityX"]=[&]() {
    json return_DinxWmo=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityX);}();
result["members"]["supportedPresentGravityY"]=[&]() {
    json return_zgQzibN=json({});
    return serialize_VkPresentGravityFlagsEXT(name.supportedPresentGravityY);}();
result["members"]["minScaledImageExtent"]=[&]() {
    json return_IjwxFOt=json({});
    return serialize_VkExtent2D(name.minScaledImageExtent);}();
result["members"]["maxScaledImageExtent"]=[&]() {
    json return_VMCxOmw=json({});
    return serialize_VkExtent2D(name.maxScaledImageExtent);}();
return result;}

    VkSurfacePresentScalingCapabilitiesEXT deserialize_VkSurfacePresentScalingCapabilitiesEXT(json name){
        auto result=VkSurfacePresentScalingCapabilitiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.supportedPresentScaling=deserialize_VkPresentScalingFlagsEXT(name["members"]["supportedPresentScaling"]);}();
[&]() {
result.supportedPresentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityX"]);}();
[&]() {
result.supportedPresentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["supportedPresentGravityY"]);}();
[&]() {
result.minScaledImageExtent=deserialize_VkExtent2D(name["members"]["minScaledImageExtent"]);}();
[&]() {
result.maxScaledImageExtent=deserialize_VkExtent2D(name["members"]["maxScaledImageExtent"]);}();
return result;}

    json serialize_VkSurfacePresentModeCompatibilityEXT(VkSurfacePresentModeCompatibilityEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PXcnlPU=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_NMkbzYd=json({});
    
        if (name.pNext==NULL){
            return_NMkbzYd["null"]=true;
            return return_NMkbzYd;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_dnEwJRm=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_FKOLqrl=json({});
    
        if (name.pPresentModes==NULL){
            return_FKOLqrl["null"]=true;
            return return_FKOLqrl;
        }
        
        return_FKOLqrl["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_CtVwEEP=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_FKOLqrl["members"][std::to_string(i)].push_back(temp);
        }
        return return_FKOLqrl;
        }();
return result;}

    VkSurfacePresentModeCompatibilityEXT deserialize_VkSurfacePresentModeCompatibilityEXT(json name){
        auto result=VkSurfacePresentModeCompatibilityEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        result.pPresentModes=NULL;
        }
    result.pPresentModes=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int hiBPVEh=0; hiBPVEh < result.presentModeCount; hiBPVEh++){
            [&]() {
result.pPresentModes[hiBPVEh]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][hiBPVEh]);}();;
        }
        }();
return result;}

    json serialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_hhBxKRW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_JIyGjsN=json({});
    
        if (name.pNext==NULL){
            return_JIyGjsN["null"]=true;
            return return_JIyGjsN;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainMaintenance1"]=[&]() {
    json return_DlwIidx=json({});
    return_DlwIidx=[&]() {
    json return_rRwwHJL=json({});
    return serialize_uint32_t(name.swapchainMaintenance1);}();return return_DlwIidx;}();
return result;}

    VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT deserialize_VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT(json name){
        auto result=VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.swapchainMaintenance1=deserialize_uint32_t(name["members"]["swapchainMaintenance1"]);}();}();
return result;}

    json serialize_VkSwapchainPresentFenceInfoEXT(VkSwapchainPresentFenceInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_alBfcCd=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AkptkBD=json({});
    
        if (name.pNext==NULL){
            return_AkptkBD["null"]=true;
            return return_AkptkBD;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_iKPWsLc=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pFences"]=[&]() {
    json return_VBbvlvX=json({});
    
        if (name.pFences==NULL){
            return_VBbvlvX["null"]=true;
            return return_VBbvlvX;
        }
        
        return_VBbvlvX["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_VJdAaBb=json({});
    return serialize_VkFence(name.pFences[i]);}();
            return_VBbvlvX["members"][std::to_string(i)].push_back(temp);
        }
        return return_VBbvlvX;
        }();
return result;}

    VkSwapchainPresentFenceInfoEXT deserialize_VkSwapchainPresentFenceInfoEXT(json name){
        auto result=VkSwapchainPresentFenceInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_knjUrBe;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_knjUrBe=NULL;
        }
    temp_knjUrBe=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_knjUrBe;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkFence* temp_aZvCBDR;[&]() {

        if (name["members"]["pFences"].contains("null")){
        temp_aZvCBDR=NULL;
        }
    temp_aZvCBDR=(VkFence*)malloc(result.swapchainCount*sizeof(VkFence));
        for (int OIbbIwy=0; OIbbIwy < result.swapchainCount; OIbbIwy++){
            [&]() {
temp_aZvCBDR[OIbbIwy]=deserialize_VkFence(name["members"]["pFences"]["members"][OIbbIwy]);}();;
        }
        }();result.pFences=temp_aZvCBDR;}();
return result;}

    json serialize_VkSwapchainPresentModesCreateInfoEXT(VkSwapchainPresentModesCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mZUOAqv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_EjRqOgz=json({});
    
        if (name.pNext==NULL){
            return_EjRqOgz["null"]=true;
            return return_EjRqOgz;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["presentModeCount"]=[&]() {
    json return_amUaknh=json({});
    return serialize_uint32_t(name.presentModeCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_vNatuTd=json({});
    
        if (name.pPresentModes==NULL){
            return_vNatuTd["null"]=true;
            return return_vNatuTd;
        }
        
        return_vNatuTd["members"]={};
        for(int i=0; i < name.presentModeCount; i++){
            json temp;
            temp=[&]() {
    json return_DJwbWze=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_vNatuTd["members"][std::to_string(i)].push_back(temp);
        }
        return return_vNatuTd;
        }();
return result;}

    VkSwapchainPresentModesCreateInfoEXT deserialize_VkSwapchainPresentModesCreateInfoEXT(json name){
        auto result=VkSwapchainPresentModesCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_FbScAIz;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_FbScAIz=NULL;
        }
    temp_FbScAIz=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_FbScAIz;}();
[&]() {
result.presentModeCount=deserialize_uint32_t(name["members"]["presentModeCount"]);}();
[&]() {
VkPresentModeKHR* temp_eQDGfFu;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_eQDGfFu=NULL;
        }
    temp_eQDGfFu=(VkPresentModeKHR*)malloc(result.presentModeCount*sizeof(VkPresentModeKHR));
        for (int pFlwPSP=0; pFlwPSP < result.presentModeCount; pFlwPSP++){
            [&]() {
temp_eQDGfFu[pFlwPSP]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][pFlwPSP]);}();;
        }
        }();result.pPresentModes=temp_eQDGfFu;}();
return result;}

    json serialize_VkSwapchainPresentModeInfoEXT(VkSwapchainPresentModeInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_xBhYsjs=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aiPuycE=json({});
    
        if (name.pNext==NULL){
            return_aiPuycE["null"]=true;
            return return_aiPuycE;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchainCount"]=[&]() {
    json return_oFBxjuG=json({});
    return serialize_uint32_t(name.swapchainCount);}();
result["members"]["pPresentModes"]=[&]() {
    json return_Sqmxpkn=json({});
    
        if (name.pPresentModes==NULL){
            return_Sqmxpkn["null"]=true;
            return return_Sqmxpkn;
        }
        
        return_Sqmxpkn["members"]={};
        for(int i=0; i < name.swapchainCount; i++){
            json temp;
            temp=[&]() {
    json return_lOPJOgY=json({});
    return serialize_VkPresentModeKHR(name.pPresentModes[i]);}();
            return_Sqmxpkn["members"][std::to_string(i)].push_back(temp);
        }
        return return_Sqmxpkn;
        }();
return result;}

    VkSwapchainPresentModeInfoEXT deserialize_VkSwapchainPresentModeInfoEXT(json name){
        auto result=VkSwapchainPresentModeInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lLRFdgj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lLRFdgj=NULL;
        }
    temp_lLRFdgj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lLRFdgj;}();
[&]() {
result.swapchainCount=deserialize_uint32_t(name["members"]["swapchainCount"]);}();
[&]() {
VkPresentModeKHR* temp_dyxzWGY;[&]() {

        if (name["members"]["pPresentModes"].contains("null")){
        temp_dyxzWGY=NULL;
        }
    temp_dyxzWGY=(VkPresentModeKHR*)malloc(result.swapchainCount*sizeof(VkPresentModeKHR));
        for (int ipbpxPr=0; ipbpxPr < result.swapchainCount; ipbpxPr++){
            [&]() {
temp_dyxzWGY[ipbpxPr]=deserialize_VkPresentModeKHR(name["members"]["pPresentModes"]["members"][ipbpxPr]);}();;
        }
        }();result.pPresentModes=temp_dyxzWGY;}();
return result;}

    json serialize_VkSwapchainPresentScalingCreateInfoEXT(VkSwapchainPresentScalingCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ziPqaCz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AXvmoWK=json({});
    
        if (name.pNext==NULL){
            return_AXvmoWK["null"]=true;
            return return_AXvmoWK;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["scalingBehavior"]=[&]() {
    json return_rWHgzXZ=json({});
    return serialize_VkPresentScalingFlagsEXT(name.scalingBehavior);}();
result["members"]["presentGravityX"]=[&]() {
    json return_KRBwtTT=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityX);}();
result["members"]["presentGravityY"]=[&]() {
    json return_PkmNBJY=json({});
    return serialize_VkPresentGravityFlagsEXT(name.presentGravityY);}();
return result;}

    VkSwapchainPresentScalingCreateInfoEXT deserialize_VkSwapchainPresentScalingCreateInfoEXT(json name){
        auto result=VkSwapchainPresentScalingCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cXuooYK;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cXuooYK=NULL;
        }
    temp_cXuooYK=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cXuooYK;}();
[&]() {
result.scalingBehavior=deserialize_VkPresentScalingFlagsEXT(name["members"]["scalingBehavior"]);}();
[&]() {
result.presentGravityX=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityX"]);}();
[&]() {
result.presentGravityY=deserialize_VkPresentGravityFlagsEXT(name["members"]["presentGravityY"]);}();
return result;}

    json serialize_VkReleaseSwapchainImagesInfoEXT(VkReleaseSwapchainImagesInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_aaYAZTI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_WTjSGZh=json({});
    
        if (name.pNext==NULL){
            return_WTjSGZh["null"]=true;
            return return_WTjSGZh;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["swapchain"]=[&]() {
    json return_PpjvKTv=json({});
    return serialize_VkSwapchainKHR(name.swapchain);}();
result["members"]["imageIndexCount"]=[&]() {
    json return_gLnuOPc=json({});
    return serialize_uint32_t(name.imageIndexCount);}();
result["members"]["pImageIndices"]=[&]() {
    json return_tdUsxzx=json({});
    
        if (name.pImageIndices==NULL){
            return_tdUsxzx["null"]=true;
            return return_tdUsxzx;
        }
        
        return_tdUsxzx["members"]={};
        for(int i=0; i < name.imageIndexCount; i++){
            json temp;
            temp=[&]() {
    json return_rIVXnpr=json({});
    return serialize_uint32_t(name.pImageIndices[i]);}();
            return_tdUsxzx["members"][std::to_string(i)].push_back(temp);
        }
        return return_tdUsxzx;
        }();
return result;}

    VkReleaseSwapchainImagesInfoEXT deserialize_VkReleaseSwapchainImagesInfoEXT(json name){
        auto result=VkReleaseSwapchainImagesInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_IKYNyWs;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_IKYNyWs=NULL;
        }
    temp_IKYNyWs=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_IKYNyWs;}();
[&]() {
result.swapchain=deserialize_VkSwapchainKHR(name["members"]["swapchain"]);}();
[&]() {
result.imageIndexCount=deserialize_uint32_t(name["members"]["imageIndexCount"]);}();
[&]() {
uint32_t* temp_QdrRQQu;[&]() {

        if (name["members"]["pImageIndices"].contains("null")){
        temp_QdrRQQu=NULL;
        }
    temp_QdrRQQu=(uint32_t*)malloc(result.imageIndexCount*sizeof(uint32_t));
        for (int VRgUZyh=0; VRgUZyh < result.imageIndexCount; VRgUZyh++){
            [&]() {
temp_QdrRQQu[VRgUZyh]=deserialize_uint32_t(name["members"]["pImageIndices"]["members"][VRgUZyh]);}();;
        }
        }();result.pImageIndices=temp_QdrRQQu;}();
return result;}

    json serialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(VkPhysicalDeviceDepthBiasControlFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_LrGZpJk=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_xbaAmnO=json({});
    
        if (name.pNext==NULL){
            return_xbaAmnO["null"]=true;
            return return_xbaAmnO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["depthBiasControl"]=[&]() {
    json return_Gjdshlb=json({});
    return_Gjdshlb=[&]() {
    json return_ydnrghg=json({});
    return serialize_uint32_t(name.depthBiasControl);}();return return_Gjdshlb;}();
result["members"]["leastRepresentableValueForceUnormRepresentation"]=[&]() {
    json return_FmiwpVf=json({});
    return_FmiwpVf=[&]() {
    json return_hQFsITw=json({});
    return serialize_uint32_t(name.leastRepresentableValueForceUnormRepresentation);}();return return_FmiwpVf;}();
result["members"]["floatRepresentation"]=[&]() {
    json return_plZzJtt=json({});
    return_plZzJtt=[&]() {
    json return_UGzlzmQ=json({});
    return serialize_uint32_t(name.floatRepresentation);}();return return_plZzJtt;}();
result["members"]["depthBiasExact"]=[&]() {
    json return_asPmAge=json({});
    return_asPmAge=[&]() {
    json return_TFQMacu=json({});
    return serialize_uint32_t(name.depthBiasExact);}();return return_asPmAge;}();
return result;}

    VkPhysicalDeviceDepthBiasControlFeaturesEXT deserialize_VkPhysicalDeviceDepthBiasControlFeaturesEXT(json name){
        auto result=VkPhysicalDeviceDepthBiasControlFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.depthBiasControl=deserialize_uint32_t(name["members"]["depthBiasControl"]);}();}();
[&]() {
[&]() {
result.leastRepresentableValueForceUnormRepresentation=deserialize_uint32_t(name["members"]["leastRepresentableValueForceUnormRepresentation"]);}();}();
[&]() {
[&]() {
result.floatRepresentation=deserialize_uint32_t(name["members"]["floatRepresentation"]);}();}();
[&]() {
[&]() {
result.depthBiasExact=deserialize_uint32_t(name["members"]["depthBiasExact"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_mGUmldz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pVhEHsJ=json({});
    
        if (name.pNext==NULL){
            return_pVhEHsJ["null"]=true;
            return return_pVhEHsJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorder"]=[&]() {
    json return_bGTjhCA=json({});
    return_bGTjhCA=[&]() {
    json return_ilWwrDo=json({});
    return serialize_uint32_t(name.rayTracingInvocationReorder);}();return return_bGTjhCA;}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingInvocationReorder=deserialize_uint32_t(name["members"]["rayTracingInvocationReorder"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BbAFvCF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_wUdOcEl=json({});
    
        if (name.pNext==NULL){
            return_wUdOcEl["null"]=true;
            return return_wUdOcEl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingInvocationReorderReorderingHint"]=[&]() {
    json return_OteplUZ=json({});
    return serialize_VkRayTracingInvocationReorderModeNV(name.rayTracingInvocationReorderReorderingHint);}();
return result;}

    VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV deserialize_VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV(json name){
        auto result=VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.rayTracingInvocationReorderReorderingHint=deserialize_VkRayTracingInvocationReorderModeNV(name["members"]["rayTracingInvocationReorderReorderingHint"]);}();
return result;}

    json serialize_VkDirectDriverLoadingInfoLUNARG(VkDirectDriverLoadingInfoLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_gKMjKer=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OhqzVhn=json({});
    
        if (name.pNext==NULL){
            return_OhqzVhn["null"]=true;
            return return_OhqzVhn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_NoczkVr=json({});
    return serialize_VkDirectDriverLoadingFlagsLUNARG(name.flags);}();
result["members"]["pfnGetInstanceProcAddr"]=[&]() {
    json return_cNOBKBY=json({});
    
        #ifdef CLIENT
        return serialize_PFN_vkGetInstanceProcAddrLUNARG(name.pfnGetInstanceProcAddr);
        #endif
        }();
return result;}

    VkDirectDriverLoadingInfoLUNARG deserialize_VkDirectDriverLoadingInfoLUNARG(json name){
        auto result=VkDirectDriverLoadingInfoLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.flags=deserialize_VkDirectDriverLoadingFlagsLUNARG(name["members"]["flags"]);}();
[&]() {

        #ifndef CLIENT
        result.pfnGetInstanceProcAddr=deserialize_PFN_vkGetInstanceProcAddrLUNARG(name["members"]["pfnGetInstanceProcAddr"]);
        #endif
        }();
return result;}

    json serialize_VkDirectDriverLoadingListLUNARG(VkDirectDriverLoadingListLUNARG name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_QhJRlPq=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_XYzieKY=json({});
    
        if (name.pNext==NULL){
            return_XYzieKY["null"]=true;
            return return_XYzieKY;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["mode"]=[&]() {
    json return_VoUQKtE=json({});
    return serialize_VkDirectDriverLoadingModeLUNARG(name.mode);}();
result["members"]["driverCount"]=[&]() {
    json return_hCpUBLH=json({});
    return serialize_uint32_t(name.driverCount);}();
result["members"]["pDrivers"]=[&]() {
    json return_qjfewMm=json({});
    
        if (name.pDrivers==NULL){
            return_qjfewMm["null"]=true;
            return return_qjfewMm;
        }
        
        return_qjfewMm["members"]={};
        for(int i=0; i < name.driverCount; i++){
            json temp;
            temp=[&]() {
    json return_vRnNQVg=json({});
    return serialize_VkDirectDriverLoadingInfoLUNARG(name.pDrivers[i]);}();
            return_qjfewMm["members"][std::to_string(i)].push_back(temp);
        }
        return return_qjfewMm;
        }();
return result;}

    VkDirectDriverLoadingListLUNARG deserialize_VkDirectDriverLoadingListLUNARG(json name){
        auto result=VkDirectDriverLoadingListLUNARG();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.mode=deserialize_VkDirectDriverLoadingModeLUNARG(name["members"]["mode"]);}();
[&]() {
result.driverCount=deserialize_uint32_t(name["members"]["driverCount"]);}();
[&]() {
VkDirectDriverLoadingInfoLUNARG* temp_KvUmABB;[&]() {

        if (name["members"]["pDrivers"].contains("null")){
        temp_KvUmABB=NULL;
        }
    temp_KvUmABB=(VkDirectDriverLoadingInfoLUNARG*)malloc(result.driverCount*sizeof(VkDirectDriverLoadingInfoLUNARG));
        for (int qlcJTgn=0; qlcJTgn < result.driverCount; qlcJTgn++){
            [&]() {
temp_KvUmABB[qlcJTgn]=deserialize_VkDirectDriverLoadingInfoLUNARG(name["members"]["pDrivers"]["members"][qlcJTgn]);}();;
        }
        }();result.pDrivers=temp_KvUmABB;}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_RyatjXp=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_fqMAqOP=json({});
    
        if (name.pNext==NULL){
            return_fqMAqOP["null"]=true;
            return return_fqMAqOP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewViewports"]=[&]() {
    json return_MdOXtbe=json({});
    return_MdOXtbe=[&]() {
    json return_AjkAgvC=json({});
    return serialize_uint32_t(name.multiviewPerViewViewports);}();return return_MdOXtbe;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewViewports=deserialize_uint32_t(name["members"]["multiviewPerViewViewports"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_PgUgOYM=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ErpkmNv=json({});
    
        if (name.pNext==NULL){
            return_ErpkmNv["null"]=true;
            return return_ErpkmNv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["rayTracingPositionFetch"]=[&]() {
    json return_HZQvHxv=json({});
    return_HZQvHxv=[&]() {
    json return_IiyoteT=json({});
    return serialize_uint32_t(name.rayTracingPositionFetch);}();return return_HZQvHxv;}();
return result;}

    VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR deserialize_VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR(json name){
        auto result=VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.rayTracingPositionFetch=deserialize_uint32_t(name["members"]["rayTracingPositionFetch"]);}();}();
return result;}

    json serialize_VkDeviceImageSubresourceInfoKHR(VkDeviceImageSubresourceInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tdqMZyA=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pHYcspT=json({});
    
        if (name.pNext==NULL){
            return_pHYcspT["null"]=true;
            return return_pHYcspT;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pCreateInfo"]=[&]() {
    json return_UnTTzca=json({});
    
        if (name.pCreateInfo==NULL){
            return_UnTTzca["null"]=true;
            return return_UnTTzca;
        }
        return_UnTTzca=[&]() {
    json return_oLjXkGf=json({});
    return serialize_VkImageCreateInfo(*name.pCreateInfo);}();
return return_UnTTzca;}();
result["members"]["pSubresource"]=[&]() {
    json return_BAlLyKp=json({});
    
        if (name.pSubresource==NULL){
            return_BAlLyKp["null"]=true;
            return return_BAlLyKp;
        }
        return_BAlLyKp=[&]() {
    json return_oZvOYao=json({});
    return serialize_VkImageSubresource2KHR(*name.pSubresource);}();
return return_BAlLyKp;}();
return result;}

    VkDeviceImageSubresourceInfoKHR deserialize_VkDeviceImageSubresourceInfoKHR(json name){
        auto result=VkDeviceImageSubresourceInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cFeosfo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cFeosfo=NULL;
        }
    temp_cFeosfo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cFeosfo;}();
[&]() {
VkImageCreateInfo* temp_GOPDUKq;[&]() {

        if (name["members"]["pCreateInfo"].contains("null")){
        temp_GOPDUKq=NULL;
        }
    [&]() {
*(temp_GOPDUKq)=deserialize_VkImageCreateInfo(name["members"]["pCreateInfo"]);}();
}();result.pCreateInfo=temp_GOPDUKq;}();
[&]() {
VkImageSubresource2KHR* temp_NwPOknJ;[&]() {

        if (name["members"]["pSubresource"].contains("null")){
        temp_NwPOknJ=NULL;
        }
    [&]() {
*(temp_NwPOknJ)=deserialize_VkImageSubresource2KHR(name["members"]["pSubresource"]);}();
}();result.pSubresource=temp_NwPOknJ;}();
return result;}

    json serialize_VkPhysicalDeviceShaderCorePropertiesARM(VkPhysicalDeviceShaderCorePropertiesARM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_TweIalg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_KqtQgfk=json({});
    
        if (name.pNext==NULL){
            return_KqtQgfk["null"]=true;
            return return_KqtQgfk;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pixelRate"]=[&]() {
    json return_ZYqPoDd=json({});
    return serialize_uint32_t(name.pixelRate);}();
result["members"]["texelRate"]=[&]() {
    json return_rAUljgD=json({});
    return serialize_uint32_t(name.texelRate);}();
result["members"]["fmaRate"]=[&]() {
    json return_KrNqbVI=json({});
    return serialize_uint32_t(name.fmaRate);}();
return result;}

    VkPhysicalDeviceShaderCorePropertiesARM deserialize_VkPhysicalDeviceShaderCorePropertiesARM(json name){
        auto result=VkPhysicalDeviceShaderCorePropertiesARM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.pixelRate=deserialize_uint32_t(name["members"]["pixelRate"]);}();
[&]() {
result.texelRate=deserialize_uint32_t(name["members"]["texelRate"]);}();
[&]() {
result.fmaRate=deserialize_uint32_t(name["members"]["fmaRate"]);}();
return result;}

    json serialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jQcWANg=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_aHDmtgj=json({});
    
        if (name.pNext==NULL){
            return_aHDmtgj["null"]=true;
            return return_aHDmtgj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["multiviewPerViewRenderAreas"]=[&]() {
    json return_wzCtnkz=json({});
    return_wzCtnkz=[&]() {
    json return_RkzXDrb=json({});
    return serialize_uint32_t(name.multiviewPerViewRenderAreas);}();return return_wzCtnkz;}();
return result;}

    VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM deserialize_VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.multiviewPerViewRenderAreas=deserialize_uint32_t(name["members"]["multiviewPerViewRenderAreas"]);}();}();
return result;}

    json serialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_iItIKtG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qxQMVGt=json({});
    
        if (name.pNext==NULL){
            return_qxQMVGt["null"]=true;
            return return_qxQMVGt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["perViewRenderAreaCount"]=[&]() {
    json return_GQXxuJh=json({});
    return serialize_uint32_t(name.perViewRenderAreaCount);}();
result["members"]["pPerViewRenderAreas"]=[&]() {
    json return_zpCrkKY=json({});
    
        if (name.pPerViewRenderAreas==NULL){
            return_zpCrkKY["null"]=true;
            return return_zpCrkKY;
        }
        
        return_zpCrkKY["members"]={};
        for(int i=0; i < name.perViewRenderAreaCount; i++){
            json temp;
            temp=[&]() {
    json return_ySmAvnQ=json({});
    return serialize_VkRect2D(name.pPerViewRenderAreas[i]);}();
            return_zpCrkKY["members"][std::to_string(i)].push_back(temp);
        }
        return return_zpCrkKY;
        }();
return result;}

    VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM deserialize_VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM(json name){
        auto result=VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fMMEuRJ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fMMEuRJ=NULL;
        }
    temp_fMMEuRJ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fMMEuRJ;}();
[&]() {
result.perViewRenderAreaCount=deserialize_uint32_t(name["members"]["perViewRenderAreaCount"]);}();
[&]() {
VkRect2D* temp_QQXoBrB;[&]() {

        if (name["members"]["pPerViewRenderAreas"].contains("null")){
        temp_QQXoBrB=NULL;
        }
    temp_QQXoBrB=(VkRect2D*)malloc(result.perViewRenderAreaCount*sizeof(VkRect2D));
        for (int xHFumvK=0; xHFumvK < result.perViewRenderAreaCount; xHFumvK++){
            [&]() {
temp_QQXoBrB[xHFumvK]=deserialize_VkRect2D(name["members"]["pPerViewRenderAreas"]["members"][xHFumvK]);}();;
        }
        }();result.pPerViewRenderAreas=temp_QQXoBrB;}();
return result;}

    json serialize_VkQueryLowLatencySupportNV(VkQueryLowLatencySupportNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_FajFUtW=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mSIILWX=json({});
    
        if (name.pNext==NULL){
            return_mSIILWX["null"]=true;
            return return_mSIILWX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["pQueriedLowLatencyData"]=[&]() {
    json return_rAUCoGb=json({});
    
        if (name.pQueriedLowLatencyData==NULL){
            return_rAUCoGb["null"]=true;
            return return_rAUCoGb;
        }
        return serialize_void_p(name.pQueriedLowLatencyData);
}();
return result;}

    VkQueryLowLatencySupportNV deserialize_VkQueryLowLatencySupportNV(json name){
        auto result=VkQueryLowLatencySupportNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_GlZAotM;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_GlZAotM=NULL;
        }
    temp_GlZAotM=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_GlZAotM;}();
[&]() {

        if (name["members"]["pQueriedLowLatencyData"].contains("null")){
        result.pQueriedLowLatencyData=NULL;
        }
    result.pQueriedLowLatencyData=deserialize_void_p(name["members"]["pQueriedLowLatencyData"]);
}();
return result;}

    json serialize_VkMemoryMapInfoKHR(VkMemoryMapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jcGjNoF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_pXleZrX=json({});
    
        if (name.pNext==NULL){
            return_pXleZrX["null"]=true;
            return return_pXleZrX;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_ojBeeJr=json({});
    return serialize_VkMemoryMapFlags(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_pmfrbwt=json({});
    return serialize_VkDeviceMemory(name.memory);}();
result["members"]["offset"]=[&]() {
    json return_fMdWnOi=json({});
    return_fMdWnOi=[&]() {
    json return_lDpfgSL=json({});
    return serialize_uint64_t(name.offset);}();return return_fMdWnOi;}();
result["members"]["size"]=[&]() {
    json return_DeGvlZp=json({});
    return_DeGvlZp=[&]() {
    json return_qiSgely=json({});
    return serialize_uint64_t(name.size);}();return return_DeGvlZp;}();
return result;}

    VkMemoryMapInfoKHR deserialize_VkMemoryMapInfoKHR(json name){
        auto result=VkMemoryMapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_XAqDhIp;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_XAqDhIp=NULL;
        }
    temp_XAqDhIp=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_XAqDhIp;}();
[&]() {
result.flags=deserialize_VkMemoryMapFlags(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
[&]() {
[&]() {
result.offset=deserialize_uint64_t(name["members"]["offset"]);}();}();
[&]() {
[&]() {
result.size=deserialize_uint64_t(name["members"]["size"]);}();}();
return result;}

    json serialize_VkMemoryUnmapInfoKHR(VkMemoryUnmapInfoKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_smiVvYf=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_vWWKRyM=json({});
    
        if (name.pNext==NULL){
            return_vWWKRyM["null"]=true;
            return return_vWWKRyM;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_JkCgeny=json({});
    return serialize_VkMemoryUnmapFlagsKHR(name.flags);}();
result["members"]["memory"]=[&]() {
    json return_HziUdXY=json({});
    return serialize_VkDeviceMemory(name.memory);}();
return result;}

    VkMemoryUnmapInfoKHR deserialize_VkMemoryUnmapInfoKHR(json name){
        auto result=VkMemoryUnmapInfoKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_fwfqSPo;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_fwfqSPo=NULL;
        }
    temp_fwfqSPo=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_fwfqSPo;}();
[&]() {
result.flags=deserialize_VkMemoryUnmapFlagsKHR(name["members"]["flags"]);}();
[&]() {
result.memory=deserialize_VkDeviceMemory(name["members"]["memory"]);}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectFeaturesEXT(VkPhysicalDeviceShaderObjectFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_UFIAeGI=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_OJbvWQf=json({});
    
        if (name.pNext==NULL){
            return_OJbvWQf["null"]=true;
            return return_OJbvWQf;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderObject"]=[&]() {
    json return_ujBBags=json({});
    return_ujBBags=[&]() {
    json return_yuuBuZM=json({});
    return serialize_uint32_t(name.shaderObject);}();return return_ujBBags;}();
return result;}

    VkPhysicalDeviceShaderObjectFeaturesEXT deserialize_VkPhysicalDeviceShaderObjectFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderObject=deserialize_uint32_t(name["members"]["shaderObject"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderObjectPropertiesEXT(VkPhysicalDeviceShaderObjectPropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ogmbICC=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_AwDlGIP=json({});
    
        if (name.pNext==NULL){
            return_AwDlGIP["null"]=true;
            return return_AwDlGIP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderBinaryUUID"]=[&]() {
    json return_qTXpGYk=json({});
    
        return_qTXpGYk["members"]={};
        for(int i=0; i < VK_UUID_SIZE; i++){
            json temp;
            temp=[&]() {
    json return_HcGkGGq=json({});
    return serialize_uint8_t(name.shaderBinaryUUID[i]);}();
            return_qTXpGYk["members"][std::to_string(i)].push_back(temp);
        }
        return return_qTXpGYk;
        }();
result["members"]["shaderBinaryVersion"]=[&]() {
    json return_yfsbKnE=json({});
    return serialize_uint32_t(name.shaderBinaryVersion);}();
return result;}

    VkPhysicalDeviceShaderObjectPropertiesEXT deserialize_VkPhysicalDeviceShaderObjectPropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderObjectPropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {

        for (int OGwuftS=0; OGwuftS < VK_UUID_SIZE; OGwuftS++){
            [&]() {
result.shaderBinaryUUID[OGwuftS]=deserialize_uint8_t(name["members"]["shaderBinaryUUID"]["members"][OGwuftS]);}();;
        }
        }();
[&]() {
result.shaderBinaryVersion=deserialize_uint32_t(name["members"]["shaderBinaryVersion"]);}();
return result;}

    json serialize_VkShaderCreateInfoEXT(VkShaderCreateInfoEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_SvsgVaF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_htKoLrP=json({});
    
        if (name.pNext==NULL){
            return_htKoLrP["null"]=true;
            return return_htKoLrP;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["flags"]=[&]() {
    json return_yLIWokH=json({});
    return serialize_VkShaderCreateFlagsEXT(name.flags);}();
result["members"]["stage"]=[&]() {
    json return_qNhiHPH=json({});
    return serialize_VkShaderStageFlagBits(name.stage);}();
result["members"]["nextStage"]=[&]() {
    json return_PSdevcW=json({});
    return serialize_VkShaderStageFlags(name.nextStage);}();
result["members"]["codeType"]=[&]() {
    json return_ImmuwDe=json({});
    return serialize_VkShaderCodeTypeEXT(name.codeType);}();
result["members"]["codeSize"]=[&]() {
    json return_lXBlIRc=json({});
    return serialize_size_t(name.codeSize);}();
result["members"]["pCode"]=[&]() {
    json return_vKQyJRb=json({});
    
        if (name.pCode==NULL){
            return_vKQyJRb["null"]=true;
            return return_vKQyJRb;
        }
        return serialize_void_p(name.pCode);
}();
result["members"]["pName"]=[&]() {
    json return_lSbTTLL=json({});
    
        if (name.pName==NULL){
            return_lSbTTLL["null"]=true;
            return return_lSbTTLL;
        }
        return serialize_char_p(name.pName);
}();
result["members"]["setLayoutCount"]=[&]() {
    json return_JknLLlc=json({});
    return serialize_uint32_t(name.setLayoutCount);}();
result["members"]["pSetLayouts"]=[&]() {
    json return_ZJYJHCx=json({});
    
        if (name.pSetLayouts==NULL){
            return_ZJYJHCx["null"]=true;
            return return_ZJYJHCx;
        }
        
        return_ZJYJHCx["members"]={};
        for(int i=0; i < name.setLayoutCount; i++){
            json temp;
            temp=[&]() {
    json return_SolEFMO=json({});
    return serialize_VkDescriptorSetLayout(name.pSetLayouts[i]);}();
            return_ZJYJHCx["members"][std::to_string(i)].push_back(temp);
        }
        return return_ZJYJHCx;
        }();
result["members"]["pushConstantRangeCount"]=[&]() {
    json return_gNPrwLa=json({});
    return serialize_uint32_t(name.pushConstantRangeCount);}();
result["members"]["pPushConstantRanges"]=[&]() {
    json return_BfGappw=json({});
    
        if (name.pPushConstantRanges==NULL){
            return_BfGappw["null"]=true;
            return return_BfGappw;
        }
        
        return_BfGappw["members"]={};
        for(int i=0; i < name.pushConstantRangeCount; i++){
            json temp;
            temp=[&]() {
    json return_pvBpJDv=json({});
    return serialize_VkPushConstantRange(name.pPushConstantRanges[i]);}();
            return_BfGappw["members"][std::to_string(i)].push_back(temp);
        }
        return return_BfGappw;
        }();
result["members"]["pSpecializationInfo"]=[&]() {
    json return_fLGUoWp=json({});
    
        if (name.pSpecializationInfo==NULL){
            return_fLGUoWp["null"]=true;
            return return_fLGUoWp;
        }
        return_fLGUoWp=[&]() {
    json return_nQcHlTm=json({});
    return serialize_VkSpecializationInfo(*name.pSpecializationInfo);}();
return return_fLGUoWp;}();
return result;}

    VkShaderCreateInfoEXT deserialize_VkShaderCreateInfoEXT(json name){
        auto result=VkShaderCreateInfoEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lKfKbZH;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lKfKbZH=NULL;
        }
    temp_lKfKbZH=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lKfKbZH;}();
[&]() {
result.flags=deserialize_VkShaderCreateFlagsEXT(name["members"]["flags"]);}();
[&]() {
result.stage=deserialize_VkShaderStageFlagBits(name["members"]["stage"]);}();
[&]() {
result.nextStage=deserialize_VkShaderStageFlags(name["members"]["nextStage"]);}();
[&]() {
result.codeType=deserialize_VkShaderCodeTypeEXT(name["members"]["codeType"]);}();
[&]() {
result.codeSize=deserialize_size_t(name["members"]["codeSize"]);}();
[&]() {
void* temp_lXdiNLM;[&]() {

        if (name["members"]["pCode"].contains("null")){
        temp_lXdiNLM=NULL;
        }
    temp_lXdiNLM=deserialize_void_p(name["members"]["pCode"]);
}();result.pCode=temp_lXdiNLM;}();
[&]() {
char* temp_ohuUzSg;[&]() {

        if (name["members"]["pName"].contains("null")){
        temp_ohuUzSg=NULL;
        }
    temp_ohuUzSg=deserialize_char_p(name["members"]["pName"]);
}();result.pName=temp_ohuUzSg;}();
[&]() {
result.setLayoutCount=deserialize_uint32_t(name["members"]["setLayoutCount"]);}();
[&]() {
VkDescriptorSetLayout* temp_tRFfZnq;[&]() {

        if (name["members"]["pSetLayouts"].contains("null")){
        temp_tRFfZnq=NULL;
        }
    temp_tRFfZnq=(VkDescriptorSetLayout*)malloc(result.setLayoutCount*sizeof(VkDescriptorSetLayout));
        for (int KoWUKya=0; KoWUKya < result.setLayoutCount; KoWUKya++){
            [&]() {
temp_tRFfZnq[KoWUKya]=deserialize_VkDescriptorSetLayout(name["members"]["pSetLayouts"]["members"][KoWUKya]);}();;
        }
        }();result.pSetLayouts=temp_tRFfZnq;}();
[&]() {
result.pushConstantRangeCount=deserialize_uint32_t(name["members"]["pushConstantRangeCount"]);}();
[&]() {
VkPushConstantRange* temp_cHWsRMo;[&]() {

        if (name["members"]["pPushConstantRanges"].contains("null")){
        temp_cHWsRMo=NULL;
        }
    temp_cHWsRMo=(VkPushConstantRange*)malloc(result.pushConstantRangeCount*sizeof(VkPushConstantRange));
        for (int kclfNbR=0; kclfNbR < result.pushConstantRangeCount; kclfNbR++){
            [&]() {
temp_cHWsRMo[kclfNbR]=deserialize_VkPushConstantRange(name["members"]["pPushConstantRanges"]["members"][kclfNbR]);}();;
        }
        }();result.pPushConstantRanges=temp_cHWsRMo;}();
[&]() {
VkSpecializationInfo* temp_ifgPqRf;[&]() {

        if (name["members"]["pSpecializationInfo"].contains("null")){
        temp_ifgPqRf=NULL;
        }
    [&]() {
*(temp_ifgPqRf)=deserialize_VkSpecializationInfo(name["members"]["pSpecializationInfo"]);}();
}();result.pSpecializationInfo=temp_ifgPqRf;}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(VkPhysicalDeviceShaderTileImageFeaturesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ILjiSyv=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_mcRJkNn=json({});
    
        if (name.pNext==NULL){
            return_mcRJkNn["null"]=true;
            return return_mcRJkNn;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageColorReadAccess"]=[&]() {
    json return_nbROtwi=json({});
    return_nbROtwi=[&]() {
    json return_UDHoOVL=json({});
    return serialize_uint32_t(name.shaderTileImageColorReadAccess);}();return return_nbROtwi;}();
result["members"]["shaderTileImageDepthReadAccess"]=[&]() {
    json return_yekSHjp=json({});
    return_yekSHjp=[&]() {
    json return_AjolFuR=json({});
    return serialize_uint32_t(name.shaderTileImageDepthReadAccess);}();return return_yekSHjp;}();
result["members"]["shaderTileImageStencilReadAccess"]=[&]() {
    json return_ZxpsRbK=json({});
    return_ZxpsRbK=[&]() {
    json return_EogkUnq=json({});
    return serialize_uint32_t(name.shaderTileImageStencilReadAccess);}();return return_ZxpsRbK;}();
return result;}

    VkPhysicalDeviceShaderTileImageFeaturesEXT deserialize_VkPhysicalDeviceShaderTileImageFeaturesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImageFeaturesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageColorReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageColorReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageDepthReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageDepthReadAccess"]);}();}();
[&]() {
[&]() {
result.shaderTileImageStencilReadAccess=deserialize_uint32_t(name["members"]["shaderTileImageStencilReadAccess"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(VkPhysicalDeviceShaderTileImagePropertiesEXT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_szapspE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hREeTJL=json({});
    
        if (name.pNext==NULL){
            return_hREeTJL["null"]=true;
            return return_hREeTJL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["shaderTileImageCoherentReadAccelerated"]=[&]() {
    json return_dWSOlWh=json({});
    return_dWSOlWh=[&]() {
    json return_SwOVsSK=json({});
    return serialize_uint32_t(name.shaderTileImageCoherentReadAccelerated);}();return return_dWSOlWh;}();
result["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]=[&]() {
    json return_MdypbYh=json({});
    return_MdypbYh=[&]() {
    json return_jDXNFog=json({});
    return serialize_uint32_t(name.shaderTileImageReadSampleFromPixelRateInvocation);}();return return_MdypbYh;}();
result["members"]["shaderTileImageReadFromHelperInvocation"]=[&]() {
    json return_tLqIaCG=json({});
    return_tLqIaCG=[&]() {
    json return_hNGZKXH=json({});
    return serialize_uint32_t(name.shaderTileImageReadFromHelperInvocation);}();return return_tLqIaCG;}();
return result;}

    VkPhysicalDeviceShaderTileImagePropertiesEXT deserialize_VkPhysicalDeviceShaderTileImagePropertiesEXT(json name){
        auto result=VkPhysicalDeviceShaderTileImagePropertiesEXT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.shaderTileImageCoherentReadAccelerated=deserialize_uint32_t(name["members"]["shaderTileImageCoherentReadAccelerated"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadSampleFromPixelRateInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadSampleFromPixelRateInvocation"]);}();}();
[&]() {
[&]() {
result.shaderTileImageReadFromHelperInvocation=deserialize_uint32_t(name["members"]["shaderTileImageReadFromHelperInvocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(VkPhysicalDeviceCooperativeMatrixFeaturesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_auBIxnx=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_MYNeClJ=json({});
    
        if (name.pNext==NULL){
            return_MYNeClJ["null"]=true;
            return return_MYNeClJ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrix"]=[&]() {
    json return_XogJWRt=json({});
    return_XogJWRt=[&]() {
    json return_qInvVwG=json({});
    return serialize_uint32_t(name.cooperativeMatrix);}();return return_XogJWRt;}();
result["members"]["cooperativeMatrixRobustBufferAccess"]=[&]() {
    json return_MrDXmYR=json({});
    return_MrDXmYR=[&]() {
    json return_aerbWGV=json({});
    return serialize_uint32_t(name.cooperativeMatrixRobustBufferAccess);}();return return_MrDXmYR;}();
return result;}

    VkPhysicalDeviceCooperativeMatrixFeaturesKHR deserialize_VkPhysicalDeviceCooperativeMatrixFeaturesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixFeaturesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cooperativeMatrix=deserialize_uint32_t(name["members"]["cooperativeMatrix"]);}();}();
[&]() {
[&]() {
result.cooperativeMatrixRobustBufferAccess=deserialize_uint32_t(name["members"]["cooperativeMatrixRobustBufferAccess"]);}();}();
return result;}

    json serialize_VkCooperativeMatrixPropertiesKHR(VkCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EiCOLKQ=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_qroLOhv=json({});
    
        if (name.pNext==NULL){
            return_qroLOhv["null"]=true;
            return return_qroLOhv;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["MSize"]=[&]() {
    json return_BGZlXFk=json({});
    return serialize_uint32_t(name.MSize);}();
result["members"]["NSize"]=[&]() {
    json return_LsQuPBy=json({});
    return serialize_uint32_t(name.NSize);}();
result["members"]["KSize"]=[&]() {
    json return_QuWHAVl=json({});
    return serialize_uint32_t(name.KSize);}();
result["members"]["AType"]=[&]() {
    json return_GMlltkY=json({});
    return serialize_VkComponentTypeKHR(name.AType);}();
result["members"]["BType"]=[&]() {
    json return_RJXNWQC=json({});
    return serialize_VkComponentTypeKHR(name.BType);}();
result["members"]["CType"]=[&]() {
    json return_IayOaoK=json({});
    return serialize_VkComponentTypeKHR(name.CType);}();
result["members"]["ResultType"]=[&]() {
    json return_BIPTgqb=json({});
    return serialize_VkComponentTypeKHR(name.ResultType);}();
result["members"]["saturatingAccumulation"]=[&]() {
    json return_WWPErHq=json({});
    return_WWPErHq=[&]() {
    json return_IxYWBYI=json({});
    return serialize_uint32_t(name.saturatingAccumulation);}();return return_WWPErHq;}();
result["members"]["scope"]=[&]() {
    json return_XhsvpLl=json({});
    return serialize_VkScopeKHR(name.scope);}();
return result;}

    VkCooperativeMatrixPropertiesKHR deserialize_VkCooperativeMatrixPropertiesKHR(json name){
        auto result=VkCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.MSize=deserialize_uint32_t(name["members"]["MSize"]);}();
[&]() {
result.NSize=deserialize_uint32_t(name["members"]["NSize"]);}();
[&]() {
result.KSize=deserialize_uint32_t(name["members"]["KSize"]);}();
[&]() {
result.AType=deserialize_VkComponentTypeKHR(name["members"]["AType"]);}();
[&]() {
result.BType=deserialize_VkComponentTypeKHR(name["members"]["BType"]);}();
[&]() {
result.CType=deserialize_VkComponentTypeKHR(name["members"]["CType"]);}();
[&]() {
result.ResultType=deserialize_VkComponentTypeKHR(name["members"]["ResultType"]);}();
[&]() {
[&]() {
result.saturatingAccumulation=deserialize_uint32_t(name["members"]["saturatingAccumulation"]);}();}();
[&]() {
result.scope=deserialize_VkScopeKHR(name["members"]["scope"]);}();
return result;}

    json serialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(VkPhysicalDeviceCooperativeMatrixPropertiesKHR name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_fvCXCRB=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_FtxktpQ=json({});
    
        if (name.pNext==NULL){
            return_FtxktpQ["null"]=true;
            return return_FtxktpQ;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cooperativeMatrixSupportedStages"]=[&]() {
    json return_rKfsBhW=json({});
    return serialize_VkShaderStageFlags(name.cooperativeMatrixSupportedStages);}();
return result;}

    VkPhysicalDeviceCooperativeMatrixPropertiesKHR deserialize_VkPhysicalDeviceCooperativeMatrixPropertiesKHR(json name){
        auto result=VkPhysicalDeviceCooperativeMatrixPropertiesKHR();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.cooperativeMatrixSupportedStages=deserialize_VkShaderStageFlags(name["members"]["cooperativeMatrixSupportedStages"]);}();
return result;}

    json serialize_VkPhysicalDeviceCubicClampFeaturesQCOM(VkPhysicalDeviceCubicClampFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_tFyZOXF=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_jitGTfx=json({});
    
        if (name.pNext==NULL){
            return_jitGTfx["null"]=true;
            return return_jitGTfx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicRangeClamp"]=[&]() {
    json return_nGIZyQF=json({});
    return_nGIZyQF=[&]() {
    json return_sYTJubQ=json({});
    return serialize_uint32_t(name.cubicRangeClamp);}();return return_nGIZyQF;}();
return result;}

    VkPhysicalDeviceCubicClampFeaturesQCOM deserialize_VkPhysicalDeviceCubicClampFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicClampFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.cubicRangeClamp=deserialize_uint32_t(name["members"]["cubicRangeClamp"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(VkPhysicalDeviceYcbcrDegammaFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_ZLYAvda=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_DWbYLkx=json({});
    
        if (name.pNext==NULL){
            return_DWbYLkx["null"]=true;
            return return_DWbYLkx;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["ycbcrDegamma"]=[&]() {
    json return_Kzbazgy=json({});
    return_Kzbazgy=[&]() {
    json return_ACPcAZv=json({});
    return serialize_uint32_t(name.ycbcrDegamma);}();return return_Kzbazgy;}();
return result;}

    VkPhysicalDeviceYcbcrDegammaFeaturesQCOM deserialize_VkPhysicalDeviceYcbcrDegammaFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceYcbcrDegammaFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.ycbcrDegamma=deserialize_uint32_t(name["members"]["ycbcrDegamma"]);}();}();
return result;}

    json serialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_YhGOPRT=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_hSrcKUO=json({});
    
        if (name.pNext==NULL){
            return_hSrcKUO["null"]=true;
            return return_hSrcKUO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["enableYDegamma"]=[&]() {
    json return_yxGdTSd=json({});
    return_yxGdTSd=[&]() {
    json return_WvgVDIQ=json({});
    return serialize_uint32_t(name.enableYDegamma);}();return return_yxGdTSd;}();
result["members"]["enableCbCrDegamma"]=[&]() {
    json return_tXICLxM=json({});
    return_tXICLxM=[&]() {
    json return_YjRbLPS=json({});
    return serialize_uint32_t(name.enableCbCrDegamma);}();return return_tXICLxM;}();
return result;}

    VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM deserialize_VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM(json name){
        auto result=VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.enableYDegamma=deserialize_uint32_t(name["members"]["enableYDegamma"]);}();}();
[&]() {
[&]() {
result.enableCbCrDegamma=deserialize_uint32_t(name["members"]["enableCbCrDegamma"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(VkPhysicalDeviceCubicWeightsFeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_EnTPsZy=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_nzsqXjO=json({});
    
        if (name.pNext==NULL){
            return_nzsqXjO["null"]=true;
            return return_nzsqXjO;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["selectableCubicWeights"]=[&]() {
    json return_nYVWrtr=json({});
    return_nYVWrtr=[&]() {
    json return_SDRUtrS=json({});
    return serialize_uint32_t(name.selectableCubicWeights);}();return return_nYVWrtr;}();
return result;}

    VkPhysicalDeviceCubicWeightsFeaturesQCOM deserialize_VkPhysicalDeviceCubicWeightsFeaturesQCOM(json name){
        auto result=VkPhysicalDeviceCubicWeightsFeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.selectableCubicWeights=deserialize_uint32_t(name["members"]["selectableCubicWeights"]);}();}();
return result;}

    json serialize_VkSamplerCubicWeightsCreateInfoQCOM(VkSamplerCubicWeightsCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_AsgHWcl=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TZdvgnl=json({});
    
        if (name.pNext==NULL){
            return_TZdvgnl["null"]=true;
            return return_TZdvgnl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_GNZRqOp=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkSamplerCubicWeightsCreateInfoQCOM deserialize_VkSamplerCubicWeightsCreateInfoQCOM(json name){
        auto result=VkSamplerCubicWeightsCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_cWrZhfZ;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_cWrZhfZ=NULL;
        }
    temp_cWrZhfZ=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_cWrZhfZ;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkBlitImageCubicWeightsInfoQCOM(VkBlitImageCubicWeightsInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_exVpodH=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_TyBtdEL=json({});
    
        if (name.pNext==NULL){
            return_TyBtdEL["null"]=true;
            return return_TyBtdEL;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["cubicWeights"]=[&]() {
    json return_uPUPJMs=json({});
    return serialize_VkCubicFilterWeightsQCOM(name.cubicWeights);}();
return result;}

    VkBlitImageCubicWeightsInfoQCOM deserialize_VkBlitImageCubicWeightsInfoQCOM(json name){
        auto result=VkBlitImageCubicWeightsInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_lWPiGkw;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_lWPiGkw=NULL;
        }
    temp_lWPiGkw=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_lWPiGkw;}();
[&]() {
result.cubicWeights=deserialize_VkCubicFilterWeightsQCOM(name["members"]["cubicWeights"]);}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(VkPhysicalDeviceImageProcessing2FeaturesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_BZJsuVb=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_cXoHHzb=json({});
    
        if (name.pNext==NULL){
            return_cXoHHzb["null"]=true;
            return return_cXoHHzb;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["textureBlockMatch2"]=[&]() {
    json return_InMbMfc=json({});
    return_InMbMfc=[&]() {
    json return_QAfZqzG=json({});
    return serialize_uint32_t(name.textureBlockMatch2);}();return return_InMbMfc;}();
return result;}

    VkPhysicalDeviceImageProcessing2FeaturesQCOM deserialize_VkPhysicalDeviceImageProcessing2FeaturesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2FeaturesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.textureBlockMatch2=deserialize_uint32_t(name["members"]["textureBlockMatch2"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(VkPhysicalDeviceImageProcessing2PropertiesQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_qpXQpFz=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CHXjxab=json({});
    
        if (name.pNext==NULL){
            return_CHXjxab["null"]=true;
            return return_CHXjxab;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["maxBlockMatchWindow"]=[&]() {
    json return_dsVZjhm=json({});
    return serialize_VkExtent2D(name.maxBlockMatchWindow);}();
return result;}

    VkPhysicalDeviceImageProcessing2PropertiesQCOM deserialize_VkPhysicalDeviceImageProcessing2PropertiesQCOM(json name){
        auto result=VkPhysicalDeviceImageProcessing2PropertiesQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.maxBlockMatchWindow=deserialize_VkExtent2D(name["members"]["maxBlockMatchWindow"]);}();
return result;}

    json serialize_VkSamplerBlockMatchWindowCreateInfoQCOM(VkSamplerBlockMatchWindowCreateInfoQCOM name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_jSWasvu=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_YprDxwj=json({});
    
        if (name.pNext==NULL){
            return_YprDxwj["null"]=true;
            return return_YprDxwj;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["windowExtent"]=[&]() {
    json return_pXPBQxO=json({});
    return serialize_VkExtent2D(name.windowExtent);}();
result["members"]["windowCompareMode"]=[&]() {
    json return_EWuAHxL=json({});
    return serialize_VkBlockMatchWindowCompareModeQCOM(name.windowCompareMode);}();
return result;}

    VkSamplerBlockMatchWindowCreateInfoQCOM deserialize_VkSamplerBlockMatchWindowCreateInfoQCOM(json name){
        auto result=VkSamplerBlockMatchWindowCreateInfoQCOM();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {
void* temp_WoQKibj;[&]() {

        if (name["members"]["pNext"].contains("null")){
        temp_WoQKibj=NULL;
        }
    temp_WoQKibj=deserialize_void_p(name["members"]["pNext"]);
}();result.pNext=temp_WoQKibj;}();
[&]() {
result.windowExtent=deserialize_VkExtent2D(name["members"]["windowExtent"]);}();
[&]() {
result.windowCompareMode=deserialize_VkBlockMatchWindowCompareModeQCOM(name["members"]["windowCompareMode"]);}();
return result;}

    json serialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_KrgFPzG=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_CwVlxNl=json({});
    
        if (name.pNext==NULL){
            return_CwVlxNl["null"]=true;
            return return_CwVlxNl;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["descriptorPoolOverallocation"]=[&]() {
    json return_tzrdREJ=json({});
    return_tzrdREJ=[&]() {
    json return_MAcYwJi=json({});
    return serialize_uint32_t(name.descriptorPoolOverallocation);}();return return_tzrdREJ;}();
return result;}

    VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV deserialize_VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV(json name){
        auto result=VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
[&]() {
result.descriptorPoolOverallocation=deserialize_uint32_t(name["members"]["descriptorPoolOverallocation"]);}();}();
return result;}

    json serialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(VkPhysicalDeviceLayeredDriverPropertiesMSFT name){
        json result=json({});
        result["members"]=json({});
    
result["members"]["sType"]=[&]() {
    json return_uPNsJKE=json({});
    return serialize_VkStructureType(name.sType);}();
result["members"]["pNext"]=[&]() {
    json return_ejXAdKt=json({});
    
        if (name.pNext==NULL){
            return_ejXAdKt["null"]=true;
            return return_ejXAdKt;
        }
        return serialize_void_p(name.pNext);
}();
result["members"]["underlyingAPI"]=[&]() {
    json return_QqcajcB=json({});
    return serialize_VkLayeredDriverUnderlyingApiMSFT(name.underlyingAPI);}();
return result;}

    VkPhysicalDeviceLayeredDriverPropertiesMSFT deserialize_VkPhysicalDeviceLayeredDriverPropertiesMSFT(json name){
        auto result=VkPhysicalDeviceLayeredDriverPropertiesMSFT();
    
[&]() {
result.sType=deserialize_VkStructureType(name["members"]["sType"]);}();
[&]() {

        if (name["members"]["pNext"].contains("null")){
        result.pNext=NULL;
        }
    result.pNext=deserialize_void_p(name["members"]["pNext"]);
}();
[&]() {
result.underlyingAPI=deserialize_VkLayeredDriverUnderlyingApiMSFT(name["members"]["underlyingAPI"]);}();
return result;}

            json serialize_int(int name){
                return json::object({{"value",name}});
            };
        

            int deserialize_int(json name){
                return name["value"].get<int>();
            };
        

            json serialize_void_p(const void* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            void* deserialize_void_p(json name){
                return (void*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char_p(const char* name){
                return json::object({ {"value",(char *)name}, {"ptr",(uintptr_t)name} });
            };
        

            char* deserialize_char_p(json name){
                return (char*)name["value"].get<std::string>().c_str();
            };
        

            json serialize_char(char name){
                return json::object({{"value",name}});
            };
        

            char deserialize_char(json name){
                return name["value"].get<char>();
            };
        

            json serialize_float(float name){
                return json::object({{"value",name}});
            };
        

            float deserialize_float(json name){
                return name["value"].get<float>();
            };
        

            json serialize_double(double name){
                return json::object({{"value",name}});
            };
        

            double deserialize_double(json name){
                return name["value"].get<double>();
            };
        

            json serialize_int8_t(int8_t name){
                return json::object({{"value",name}});
            };
        

            int8_t deserialize_int8_t(json name){
                return name["value"].get<int8_t>();
            };
        

            json serialize_uint8_t(uint8_t name){
                return json::object({{"value",name}});
            };
        

            uint8_t deserialize_uint8_t(json name){
                return name["value"].get<uint8_t>();
            };
        

            json serialize_int16_t(int16_t name){
                return json::object({{"value",name}});
            };
        

            int16_t deserialize_int16_t(json name){
                return name["value"].get<int16_t>();
            };
        

            json serialize_uint16_t(uint16_t name){
                return json::object({{"value",name}});
            };
        

            uint16_t deserialize_uint16_t(json name){
                return name["value"].get<uint16_t>();
            };
        

            json serialize_uint32_t(uint32_t name){
                return json::object({{"value",name}});
            };
        

            uint32_t deserialize_uint32_t(json name){
                return name["value"].get<uint32_t>();
            };
        

            json serialize_uint64_t(uint64_t name){
                return json::object({{"value",name}});
            };
        

            uint64_t deserialize_uint64_t(json name){
                return name["value"].get<uint64_t>();
            };
        

            json serialize_int32_t(int32_t name){
                return json::object({{"value",name}});
            };
        

            int32_t deserialize_int32_t(json name){
                return name["value"].get<int32_t>();
            };
        

            json serialize_int64_t(int64_t name){
                return json::object({{"value",name}});
            };
        

            int64_t deserialize_int64_t(json name){
                return name["value"].get<int64_t>();
            };
        

            json serialize_size_t(size_t name){
                return json::object({{"value",name}});
            };
        

            size_t deserialize_size_t(json name){
                return name["value"].get<size_t>();
            };
        

            json serialize_VkFramebufferCreateFlags(VkFramebufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlags deserialize_VkFramebufferCreateFlags(json name){
                return name["value"].get<VkFramebufferCreateFlags>();
            };
        

            json serialize_VkQueryPoolCreateFlags(VkQueryPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolCreateFlags deserialize_VkQueryPoolCreateFlags(json name){
                return name["value"].get<VkQueryPoolCreateFlags>();
            };
        

            json serialize_VkRenderPassCreateFlags(VkRenderPassCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlags deserialize_VkRenderPassCreateFlags(json name){
                return name["value"].get<VkRenderPassCreateFlags>();
            };
        

            json serialize_VkSamplerCreateFlags(VkSamplerCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlags deserialize_VkSamplerCreateFlags(json name){
                return name["value"].get<VkSamplerCreateFlags>();
            };
        

            json serialize_VkPipelineLayoutCreateFlags(VkPipelineLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlags deserialize_VkPipelineLayoutCreateFlags(json name){
                return name["value"].get<VkPipelineLayoutCreateFlags>();
            };
        

            json serialize_VkPipelineCacheCreateFlags(VkPipelineCacheCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlags deserialize_VkPipelineCacheCreateFlags(json name){
                return name["value"].get<VkPipelineCacheCreateFlags>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlags(VkPipelineDepthStencilStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlags deserialize_VkPipelineDepthStencilStateCreateFlags(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlags>();
            };
        

            json serialize_VkPipelineDynamicStateCreateFlags(VkPipelineDynamicStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDynamicStateCreateFlags deserialize_VkPipelineDynamicStateCreateFlags(json name){
                return name["value"].get<VkPipelineDynamicStateCreateFlags>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlags(VkPipelineColorBlendStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlags deserialize_VkPipelineColorBlendStateCreateFlags(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlags>();
            };
        

            json serialize_VkPipelineMultisampleStateCreateFlags(VkPipelineMultisampleStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineMultisampleStateCreateFlags deserialize_VkPipelineMultisampleStateCreateFlags(json name){
                return name["value"].get<VkPipelineMultisampleStateCreateFlags>();
            };
        

            json serialize_VkPipelineRasterizationStateCreateFlags(VkPipelineRasterizationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateCreateFlags deserialize_VkPipelineRasterizationStateCreateFlags(json name){
                return name["value"].get<VkPipelineRasterizationStateCreateFlags>();
            };
        

            json serialize_VkPipelineViewportStateCreateFlags(VkPipelineViewportStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportStateCreateFlags deserialize_VkPipelineViewportStateCreateFlags(json name){
                return name["value"].get<VkPipelineViewportStateCreateFlags>();
            };
        

            json serialize_VkPipelineTessellationStateCreateFlags(VkPipelineTessellationStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineTessellationStateCreateFlags deserialize_VkPipelineTessellationStateCreateFlags(json name){
                return name["value"].get<VkPipelineTessellationStateCreateFlags>();
            };
        

            json serialize_VkPipelineInputAssemblyStateCreateFlags(VkPipelineInputAssemblyStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineInputAssemblyStateCreateFlags deserialize_VkPipelineInputAssemblyStateCreateFlags(json name){
                return name["value"].get<VkPipelineInputAssemblyStateCreateFlags>();
            };
        

            json serialize_VkPipelineVertexInputStateCreateFlags(VkPipelineVertexInputStateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineVertexInputStateCreateFlags deserialize_VkPipelineVertexInputStateCreateFlags(json name){
                return name["value"].get<VkPipelineVertexInputStateCreateFlags>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlags(VkPipelineShaderStageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlags deserialize_VkPipelineShaderStageCreateFlags(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlags>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlags(VkDescriptorSetLayoutCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlags deserialize_VkDescriptorSetLayoutCreateFlags(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlags>();
            };
        

            json serialize_VkBufferViewCreateFlags(VkBufferViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferViewCreateFlags deserialize_VkBufferViewCreateFlags(json name){
                return name["value"].get<VkBufferViewCreateFlags>();
            };
        

            json serialize_VkInstanceCreateFlags(VkInstanceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlags deserialize_VkInstanceCreateFlags(json name){
                return name["value"].get<VkInstanceCreateFlags>();
            };
        

            json serialize_VkDeviceCreateFlags(VkDeviceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceCreateFlags deserialize_VkDeviceCreateFlags(json name){
                return name["value"].get<VkDeviceCreateFlags>();
            };
        

            json serialize_VkDeviceQueueCreateFlags(VkDeviceQueueCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlags deserialize_VkDeviceQueueCreateFlags(json name){
                return name["value"].get<VkDeviceQueueCreateFlags>();
            };
        

            json serialize_VkQueueFlags(VkQueueFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlags deserialize_VkQueueFlags(json name){
                return name["value"].get<VkQueueFlags>();
            };
        

            json serialize_VkMemoryPropertyFlags(VkMemoryPropertyFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlags deserialize_VkMemoryPropertyFlags(json name){
                return name["value"].get<VkMemoryPropertyFlags>();
            };
        

            json serialize_VkMemoryHeapFlags(VkMemoryHeapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlags deserialize_VkMemoryHeapFlags(json name){
                return name["value"].get<VkMemoryHeapFlags>();
            };
        

            json serialize_VkAccessFlags(VkAccessFlags name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags deserialize_VkAccessFlags(json name){
                return name["value"].get<VkAccessFlags>();
            };
        

            json serialize_VkBufferUsageFlags(VkBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags deserialize_VkBufferUsageFlags(json name){
                return name["value"].get<VkBufferUsageFlags>();
            };
        

            json serialize_VkBufferCreateFlags(VkBufferCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlags deserialize_VkBufferCreateFlags(json name){
                return name["value"].get<VkBufferCreateFlags>();
            };
        

            json serialize_VkShaderStageFlags(VkShaderStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlags deserialize_VkShaderStageFlags(json name){
                return name["value"].get<VkShaderStageFlags>();
            };
        

            json serialize_VkImageUsageFlags(VkImageUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlags deserialize_VkImageUsageFlags(json name){
                return name["value"].get<VkImageUsageFlags>();
            };
        

            json serialize_VkImageCreateFlags(VkImageCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlags deserialize_VkImageCreateFlags(json name){
                return name["value"].get<VkImageCreateFlags>();
            };
        

            json serialize_VkImageViewCreateFlags(VkImageViewCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlags deserialize_VkImageViewCreateFlags(json name){
                return name["value"].get<VkImageViewCreateFlags>();
            };
        

            json serialize_VkPipelineCreateFlags(VkPipelineCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags deserialize_VkPipelineCreateFlags(json name){
                return name["value"].get<VkPipelineCreateFlags>();
            };
        

            json serialize_VkColorComponentFlags(VkColorComponentFlags name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlags deserialize_VkColorComponentFlags(json name){
                return name["value"].get<VkColorComponentFlags>();
            };
        

            json serialize_VkFenceCreateFlags(VkFenceCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlags deserialize_VkFenceCreateFlags(json name){
                return name["value"].get<VkFenceCreateFlags>();
            };
        

            json serialize_VkSemaphoreCreateFlags(VkSemaphoreCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreCreateFlags deserialize_VkSemaphoreCreateFlags(json name){
                return name["value"].get<VkSemaphoreCreateFlags>();
            };
        

            json serialize_VkFormatFeatureFlags(VkFormatFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags deserialize_VkFormatFeatureFlags(json name){
                return name["value"].get<VkFormatFeatureFlags>();
            };
        

            json serialize_VkQueryControlFlags(VkQueryControlFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlags deserialize_VkQueryControlFlags(json name){
                return name["value"].get<VkQueryControlFlags>();
            };
        

            json serialize_VkQueryResultFlags(VkQueryResultFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlags deserialize_VkQueryResultFlags(json name){
                return name["value"].get<VkQueryResultFlags>();
            };
        

            json serialize_VkShaderModuleCreateFlags(VkShaderModuleCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkShaderModuleCreateFlags deserialize_VkShaderModuleCreateFlags(json name){
                return name["value"].get<VkShaderModuleCreateFlags>();
            };
        

            json serialize_VkEventCreateFlags(VkEventCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlags deserialize_VkEventCreateFlags(json name){
                return name["value"].get<VkEventCreateFlags>();
            };
        

            json serialize_VkCommandPoolCreateFlags(VkCommandPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlags deserialize_VkCommandPoolCreateFlags(json name){
                return name["value"].get<VkCommandPoolCreateFlags>();
            };
        

            json serialize_VkCommandPoolResetFlags(VkCommandPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlags deserialize_VkCommandPoolResetFlags(json name){
                return name["value"].get<VkCommandPoolResetFlags>();
            };
        

            json serialize_VkCommandBufferResetFlags(VkCommandBufferResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlags deserialize_VkCommandBufferResetFlags(json name){
                return name["value"].get<VkCommandBufferResetFlags>();
            };
        

            json serialize_VkCommandBufferUsageFlags(VkCommandBufferUsageFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlags deserialize_VkCommandBufferUsageFlags(json name){
                return name["value"].get<VkCommandBufferUsageFlags>();
            };
        

            json serialize_VkQueryPipelineStatisticFlags(VkQueryPipelineStatisticFlags name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlags deserialize_VkQueryPipelineStatisticFlags(json name){
                return name["value"].get<VkQueryPipelineStatisticFlags>();
            };
        

            json serialize_VkMemoryMapFlags(VkMemoryMapFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryMapFlags deserialize_VkMemoryMapFlags(json name){
                return name["value"].get<VkMemoryMapFlags>();
            };
        

            json serialize_VkMemoryUnmapFlagsKHR(VkMemoryUnmapFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryUnmapFlagsKHR deserialize_VkMemoryUnmapFlagsKHR(json name){
                return name["value"].get<VkMemoryUnmapFlagsKHR>();
            };
        

            json serialize_VkImageAspectFlags(VkImageAspectFlags name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlags deserialize_VkImageAspectFlags(json name){
                return name["value"].get<VkImageAspectFlags>();
            };
        

            json serialize_VkSparseMemoryBindFlags(VkSparseMemoryBindFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlags deserialize_VkSparseMemoryBindFlags(json name){
                return name["value"].get<VkSparseMemoryBindFlags>();
            };
        

            json serialize_VkSparseImageFormatFlags(VkSparseImageFormatFlags name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlags deserialize_VkSparseImageFormatFlags(json name){
                return name["value"].get<VkSparseImageFormatFlags>();
            };
        

            json serialize_VkSubpassDescriptionFlags(VkSubpassDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlags deserialize_VkSubpassDescriptionFlags(json name){
                return name["value"].get<VkSubpassDescriptionFlags>();
            };
        

            json serialize_VkPipelineStageFlags(VkPipelineStageFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags deserialize_VkPipelineStageFlags(json name){
                return name["value"].get<VkPipelineStageFlags>();
            };
        

            json serialize_VkSampleCountFlags(VkSampleCountFlags name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlags deserialize_VkSampleCountFlags(json name){
                return name["value"].get<VkSampleCountFlags>();
            };
        

            json serialize_VkAttachmentDescriptionFlags(VkAttachmentDescriptionFlags name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlags deserialize_VkAttachmentDescriptionFlags(json name){
                return name["value"].get<VkAttachmentDescriptionFlags>();
            };
        

            json serialize_VkStencilFaceFlags(VkStencilFaceFlags name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlags deserialize_VkStencilFaceFlags(json name){
                return name["value"].get<VkStencilFaceFlags>();
            };
        

            json serialize_VkCullModeFlags(VkCullModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlags deserialize_VkCullModeFlags(json name){
                return name["value"].get<VkCullModeFlags>();
            };
        

            json serialize_VkDescriptorPoolCreateFlags(VkDescriptorPoolCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlags deserialize_VkDescriptorPoolCreateFlags(json name){
                return name["value"].get<VkDescriptorPoolCreateFlags>();
            };
        

            json serialize_VkDescriptorPoolResetFlags(VkDescriptorPoolResetFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolResetFlags deserialize_VkDescriptorPoolResetFlags(json name){
                return name["value"].get<VkDescriptorPoolResetFlags>();
            };
        

            json serialize_VkDependencyFlags(VkDependencyFlags name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlags deserialize_VkDependencyFlags(json name){
                return name["value"].get<VkDependencyFlags>();
            };
        

            json serialize_VkSubgroupFeatureFlags(VkSubgroupFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlags deserialize_VkSubgroupFeatureFlags(json name){
                return name["value"].get<VkSubgroupFeatureFlags>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagsNV(VkIndirectCommandsLayoutUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagsNV deserialize_VkIndirectCommandsLayoutUsageFlagsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagsNV>();
            };
        

            json serialize_VkIndirectStateFlagsNV(VkIndirectStateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagsNV deserialize_VkIndirectStateFlagsNV(json name){
                return name["value"].get<VkIndirectStateFlagsNV>();
            };
        

            json serialize_VkGeometryFlagsKHR(VkGeometryFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsKHR deserialize_VkGeometryFlagsKHR(json name){
                return name["value"].get<VkGeometryFlagsKHR>();
            };
        

            json serialize_VkGeometryFlagsNV(VkGeometryFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagsNV deserialize_VkGeometryFlagsNV(json name){
                return name["value"].get<VkGeometryFlagsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagsKHR(VkGeometryInstanceFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsKHR deserialize_VkGeometryInstanceFlagsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagsNV(VkGeometryInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagsNV deserialize_VkGeometryInstanceFlagsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsKHR(VkBuildAccelerationStructureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsKHR deserialize_VkBuildAccelerationStructureFlagsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagsNV(VkBuildAccelerationStructureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagsNV deserialize_VkBuildAccelerationStructureFlagsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagsNV>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlags(VkPrivateDataSlotCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlags deserialize_VkPrivateDataSlotCreateFlags(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlags>();
            };
        

            json serialize_VkPrivateDataSlotCreateFlagsEXT(VkPrivateDataSlotCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPrivateDataSlotCreateFlagsEXT deserialize_VkPrivateDataSlotCreateFlagsEXT(json name){
                return name["value"].get<VkPrivateDataSlotCreateFlagsEXT>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagsKHR(VkAccelerationStructureCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagsKHR deserialize_VkAccelerationStructureCreateFlagsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagsKHR>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlags(VkDescriptorUpdateTemplateCreateFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlags deserialize_VkDescriptorUpdateTemplateCreateFlags(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlags>();
            };
        

            json serialize_VkDescriptorUpdateTemplateCreateFlagsKHR(VkDescriptorUpdateTemplateCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateCreateFlagsKHR deserialize_VkDescriptorUpdateTemplateCreateFlagsKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateCreateFlagsKHR>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlags(VkPipelineCreationFeedbackFlags name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlags deserialize_VkPipelineCreationFeedbackFlags(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlags>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagsEXT(VkPipelineCreationFeedbackFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagsEXT deserialize_VkPipelineCreationFeedbackFlagsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagsEXT>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagsKHR(VkPerformanceCounterDescriptionFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagsKHR deserialize_VkPerformanceCounterDescriptionFlagsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagsKHR(VkAcquireProfilingLockFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagsKHR deserialize_VkAcquireProfilingLockFlagsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlags(VkSemaphoreWaitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlags deserialize_VkSemaphoreWaitFlags(json name){
                return name["value"].get<VkSemaphoreWaitFlags>();
            };
        

            json serialize_VkSemaphoreWaitFlagsKHR(VkSemaphoreWaitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagsKHR deserialize_VkSemaphoreWaitFlagsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagsKHR>();
            };
        

            json serialize_VkPipelineCompilerControlFlagsAMD(VkPipelineCompilerControlFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagsAMD deserialize_VkPipelineCompilerControlFlagsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagsAMD(VkShaderCorePropertiesFlagsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagsAMD deserialize_VkShaderCorePropertiesFlagsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagsAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagsNV(VkDeviceDiagnosticsConfigFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagsNV deserialize_VkDeviceDiagnosticsConfigFlagsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagsNV>();
            };
        

            json serialize_VkAccessFlags2(VkAccessFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2 deserialize_VkAccessFlags2(json name){
                return name["value"].get<VkAccessFlags2>();
            };
        

            json serialize_VkAccessFlags2KHR(VkAccessFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlags2KHR deserialize_VkAccessFlags2KHR(json name){
                return name["value"].get<VkAccessFlags2KHR>();
            };
        

            json serialize_VkPipelineStageFlags2(VkPipelineStageFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2 deserialize_VkPipelineStageFlags2(json name){
                return name["value"].get<VkPipelineStageFlags2>();
            };
        

            json serialize_VkPipelineStageFlags2KHR(VkPipelineStageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlags2KHR deserialize_VkPipelineStageFlags2KHR(json name){
                return name["value"].get<VkPipelineStageFlags2KHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInfoFlagsNV(VkAccelerationStructureMotionInfoFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInfoFlagsNV deserialize_VkAccelerationStructureMotionInfoFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInfoFlagsNV>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceFlagsNV(VkAccelerationStructureMotionInstanceFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceFlagsNV deserialize_VkAccelerationStructureMotionInstanceFlagsNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceFlagsNV>();
            };
        

            json serialize_VkFormatFeatureFlags2(VkFormatFeatureFlags2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2 deserialize_VkFormatFeatureFlags2(json name){
                return name["value"].get<VkFormatFeatureFlags2>();
            };
        

            json serialize_VkFormatFeatureFlags2KHR(VkFormatFeatureFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlags2KHR deserialize_VkFormatFeatureFlags2KHR(json name){
                return name["value"].get<VkFormatFeatureFlags2KHR>();
            };
        

            json serialize_VkRenderingFlags(VkRenderingFlags name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlags deserialize_VkRenderingFlags(json name){
                return name["value"].get<VkRenderingFlags>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagsNV(VkMemoryDecompressionMethodFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagsNV deserialize_VkMemoryDecompressionMethodFlagsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagsNV>();
            };
        

            json serialize_VkRenderingFlagsKHR(VkRenderingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagsKHR deserialize_VkRenderingFlagsKHR(json name){
                return name["value"].get<VkRenderingFlagsKHR>();
            };
        

            json serialize_VkBuildMicromapFlagsEXT(VkBuildMicromapFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagsEXT deserialize_VkBuildMicromapFlagsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagsEXT(VkMicromapCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagsEXT deserialize_VkMicromapCreateFlagsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagsEXT>();
            };
        

            json serialize_VkDirectDriverLoadingFlagsLUNARG(VkDirectDriverLoadingFlagsLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingFlagsLUNARG deserialize_VkDirectDriverLoadingFlagsLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingFlagsLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlags2KHR(VkPipelineCreateFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlags2KHR deserialize_VkPipelineCreateFlags2KHR(json name){
                return name["value"].get<VkPipelineCreateFlags2KHR>();
            };
        

            json serialize_VkBufferUsageFlags2KHR(VkBufferUsageFlags2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlags2KHR deserialize_VkBufferUsageFlags2KHR(json name){
                return name["value"].get<VkBufferUsageFlags2KHR>();
            };
        

            json serialize_VkCompositeAlphaFlagsKHR(VkCompositeAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagsKHR deserialize_VkCompositeAlphaFlagsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagsKHR(VkDisplayPlaneAlphaFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagsKHR deserialize_VkDisplayPlaneAlphaFlagsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagsKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagsKHR(VkSurfaceTransformFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagsKHR deserialize_VkSurfaceTransformFlagsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagsKHR(VkSwapchainCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagsKHR deserialize_VkSwapchainCreateFlagsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagsKHR>();
            };
        

            json serialize_VkDisplayModeCreateFlagsKHR(VkDisplayModeCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayModeCreateFlagsKHR deserialize_VkDisplayModeCreateFlagsKHR(json name){
                return name["value"].get<VkDisplayModeCreateFlagsKHR>();
            };
        

            json serialize_VkDisplaySurfaceCreateFlagsKHR(VkDisplaySurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplaySurfaceCreateFlagsKHR deserialize_VkDisplaySurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkDisplaySurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXlibSurfaceCreateFlagsKHR(VkXlibSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXlibSurfaceCreateFlagsKHR deserialize_VkXlibSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXlibSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkXcbSurfaceCreateFlagsKHR(VkXcbSurfaceCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkXcbSurfaceCreateFlagsKHR deserialize_VkXcbSurfaceCreateFlagsKHR(json name){
                return name["value"].get<VkXcbSurfaceCreateFlagsKHR>();
            };
        

            json serialize_VkHeadlessSurfaceCreateFlagsEXT(VkHeadlessSurfaceCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHeadlessSurfaceCreateFlagsEXT deserialize_VkHeadlessSurfaceCreateFlagsEXT(json name){
                return name["value"].get<VkHeadlessSurfaceCreateFlagsEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlags(VkPeerMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlags deserialize_VkPeerMemoryFeatureFlags(json name){
                return name["value"].get<VkPeerMemoryFeatureFlags>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagsKHR(VkPeerMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagsKHR deserialize_VkPeerMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlags(VkMemoryAllocateFlags name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlags deserialize_VkMemoryAllocateFlags(json name){
                return name["value"].get<VkMemoryAllocateFlags>();
            };
        

            json serialize_VkMemoryAllocateFlagsKHR(VkMemoryAllocateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagsKHR deserialize_VkMemoryAllocateFlagsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagsKHR(VkDeviceGroupPresentModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagsKHR deserialize_VkDeviceGroupPresentModeFlagsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagsKHR>();
            };
        

            json serialize_VkDebugReportFlagsEXT(VkDebugReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagsEXT deserialize_VkDebugReportFlagsEXT(json name){
                return name["value"].get<VkDebugReportFlagsEXT>();
            };
        

            json serialize_VkCommandPoolTrimFlags(VkCommandPoolTrimFlags name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlags deserialize_VkCommandPoolTrimFlags(json name){
                return name["value"].get<VkCommandPoolTrimFlags>();
            };
        

            json serialize_VkCommandPoolTrimFlagsKHR(VkCommandPoolTrimFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolTrimFlagsKHR deserialize_VkCommandPoolTrimFlagsKHR(json name){
                return name["value"].get<VkCommandPoolTrimFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsNV(VkExternalMemoryHandleTypeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsNV deserialize_VkExternalMemoryHandleTypeFlagsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsNV(VkExternalMemoryFeatureFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsNV deserialize_VkExternalMemoryFeatureFlagsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsNV>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlags(VkExternalMemoryHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlags deserialize_VkExternalMemoryHandleTypeFlags(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlags>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagsKHR(VkExternalMemoryHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagsKHR deserialize_VkExternalMemoryHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlags(VkExternalMemoryFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlags deserialize_VkExternalMemoryFeatureFlags(json name){
                return name["value"].get<VkExternalMemoryFeatureFlags>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagsKHR(VkExternalMemoryFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagsKHR deserialize_VkExternalMemoryFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlags(VkExternalSemaphoreHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlags deserialize_VkExternalSemaphoreHandleTypeFlags(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlags>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagsKHR(VkExternalSemaphoreHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagsKHR deserialize_VkExternalSemaphoreHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlags(VkExternalSemaphoreFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlags deserialize_VkExternalSemaphoreFeatureFlags(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlags>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagsKHR(VkExternalSemaphoreFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagsKHR deserialize_VkExternalSemaphoreFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlags(VkSemaphoreImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlags deserialize_VkSemaphoreImportFlags(json name){
                return name["value"].get<VkSemaphoreImportFlags>();
            };
        

            json serialize_VkSemaphoreImportFlagsKHR(VkSemaphoreImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagsKHR deserialize_VkSemaphoreImportFlagsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlags(VkExternalFenceHandleTypeFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlags deserialize_VkExternalFenceHandleTypeFlags(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlags>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagsKHR(VkExternalFenceHandleTypeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagsKHR deserialize_VkExternalFenceHandleTypeFlagsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlags(VkExternalFenceFeatureFlags name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlags deserialize_VkExternalFenceFeatureFlags(json name){
                return name["value"].get<VkExternalFenceFeatureFlags>();
            };
        

            json serialize_VkExternalFenceFeatureFlagsKHR(VkExternalFenceFeatureFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagsKHR deserialize_VkExternalFenceFeatureFlagsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagsKHR>();
            };
        

            json serialize_VkFenceImportFlags(VkFenceImportFlags name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlags deserialize_VkFenceImportFlags(json name){
                return name["value"].get<VkFenceImportFlags>();
            };
        

            json serialize_VkFenceImportFlagsKHR(VkFenceImportFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagsKHR deserialize_VkFenceImportFlagsKHR(json name){
                return name["value"].get<VkFenceImportFlagsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagsEXT(VkSurfaceCounterFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagsEXT deserialize_VkSurfaceCounterFlagsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagsEXT>();
            };
        

            json serialize_VkPipelineViewportSwizzleStateCreateFlagsNV(VkPipelineViewportSwizzleStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineViewportSwizzleStateCreateFlagsNV deserialize_VkPipelineViewportSwizzleStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineViewportSwizzleStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(VkPipelineDiscardRectangleStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDiscardRectangleStateCreateFlagsEXT deserialize_VkPipelineDiscardRectangleStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineDiscardRectangleStateCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineCoverageToColorStateCreateFlagsNV(VkPipelineCoverageToColorStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageToColorStateCreateFlagsNV deserialize_VkPipelineCoverageToColorStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageToColorStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageModulationStateCreateFlagsNV(VkPipelineCoverageModulationStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageModulationStateCreateFlagsNV deserialize_VkPipelineCoverageModulationStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageModulationStateCreateFlagsNV>();
            };
        

            json serialize_VkPipelineCoverageReductionStateCreateFlagsNV(VkPipelineCoverageReductionStateCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCoverageReductionStateCreateFlagsNV deserialize_VkPipelineCoverageReductionStateCreateFlagsNV(json name){
                return name["value"].get<VkPipelineCoverageReductionStateCreateFlagsNV>();
            };
        

            json serialize_VkValidationCacheCreateFlagsEXT(VkValidationCacheCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheCreateFlagsEXT deserialize_VkValidationCacheCreateFlagsEXT(json name){
                return name["value"].get<VkValidationCacheCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagsEXT(VkDebugUtilsMessageSeverityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagsEXT deserialize_VkDebugUtilsMessageSeverityFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagsEXT(VkDebugUtilsMessageTypeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagsEXT deserialize_VkDebugUtilsMessageTypeFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCreateFlagsEXT(VkDebugUtilsMessengerCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCreateFlagsEXT deserialize_VkDebugUtilsMessengerCreateFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCreateFlagsEXT>();
            };
        

            json serialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(VkDebugUtilsMessengerCallbackDataFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessengerCallbackDataFlagsEXT deserialize_VkDebugUtilsMessengerCallbackDataFlagsEXT(json name){
                return name["value"].get<VkDebugUtilsMessengerCallbackDataFlagsEXT>();
            };
        

            json serialize_VkDeviceMemoryReportFlagsEXT(VkDeviceMemoryReportFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportFlagsEXT deserialize_VkDeviceMemoryReportFlagsEXT(json name){
                return name["value"].get<VkDeviceMemoryReportFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(VkPipelineRasterizationConservativeStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationConservativeStateCreateFlagsEXT deserialize_VkPipelineRasterizationConservativeStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationConservativeStateCreateFlagsEXT>();
            };
        

            json serialize_VkDescriptorBindingFlags(VkDescriptorBindingFlags name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlags deserialize_VkDescriptorBindingFlags(json name){
                return name["value"].get<VkDescriptorBindingFlags>();
            };
        

            json serialize_VkDescriptorBindingFlagsEXT(VkDescriptorBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagsEXT deserialize_VkDescriptorBindingFlagsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagsEXT(VkConditionalRenderingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagsEXT deserialize_VkConditionalRenderingFlagsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagsEXT>();
            };
        

            json serialize_VkResolveModeFlags(VkResolveModeFlags name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlags deserialize_VkResolveModeFlags(json name){
                return name["value"].get<VkResolveModeFlags>();
            };
        

            json serialize_VkResolveModeFlagsKHR(VkResolveModeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagsKHR deserialize_VkResolveModeFlagsKHR(json name){
                return name["value"].get<VkResolveModeFlagsKHR>();
            };
        

            json serialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(VkPipelineRasterizationStateStreamCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationStateStreamCreateFlagsEXT deserialize_VkPipelineRasterizationStateStreamCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationStateStreamCreateFlagsEXT>();
            };
        

            json serialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(VkPipelineRasterizationDepthClipStateCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRasterizationDepthClipStateCreateFlagsEXT deserialize_VkPipelineRasterizationDepthClipStateCreateFlagsEXT(json name){
                return name["value"].get<VkPipelineRasterizationDepthClipStateCreateFlagsEXT>();
            };
        

            json serialize_VkToolPurposeFlags(VkToolPurposeFlags name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlags deserialize_VkToolPurposeFlags(json name){
                return name["value"].get<VkToolPurposeFlags>();
            };
        

            json serialize_VkToolPurposeFlagsEXT(VkToolPurposeFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagsEXT deserialize_VkToolPurposeFlagsEXT(json name){
                return name["value"].get<VkToolPurposeFlagsEXT>();
            };
        

            json serialize_VkSubmitFlags(VkSubmitFlags name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlags deserialize_VkSubmitFlags(json name){
                return name["value"].get<VkSubmitFlags>();
            };
        

            json serialize_VkSubmitFlagsKHR(VkSubmitFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagsKHR deserialize_VkSubmitFlagsKHR(json name){
                return name["value"].get<VkSubmitFlagsKHR>();
            };
        

            json serialize_VkHostImageCopyFlagsEXT(VkHostImageCopyFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagsEXT deserialize_VkHostImageCopyFlagsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagsEXT>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagsEXT(VkGraphicsPipelineLibraryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagsEXT deserialize_VkGraphicsPipelineLibraryFlagsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFlagsEXT(VkImageCompressionFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagsEXT deserialize_VkImageCompressionFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFlagsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagsEXT(VkImageCompressionFixedRateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagsEXT deserialize_VkImageCompressionFixedRateFlagsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagsEXT(VkDeviceAddressBindingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagsEXT deserialize_VkDeviceAddressBindingFlagsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagsNV(VkOpticalFlowGridSizeFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagsNV deserialize_VkOpticalFlowGridSizeFlagsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagsNV(VkOpticalFlowUsageFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagsNV deserialize_VkOpticalFlowUsageFlagsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagsNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagsNV(VkOpticalFlowSessionCreateFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagsNV deserialize_VkOpticalFlowSessionCreateFlagsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagsNV(VkOpticalFlowExecuteFlagsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagsNV deserialize_VkOpticalFlowExecuteFlagsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagsNV>();
            };
        

            json serialize_VkFrameBoundaryFlagsEXT(VkFrameBoundaryFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagsEXT deserialize_VkFrameBoundaryFlagsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagsEXT>();
            };
        

            json serialize_VkPresentScalingFlagsEXT(VkPresentScalingFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagsEXT deserialize_VkPresentScalingFlagsEXT(json name){
                return name["value"].get<VkPresentScalingFlagsEXT>();
            };
        

            json serialize_VkPresentGravityFlagsEXT(VkPresentGravityFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagsEXT deserialize_VkPresentGravityFlagsEXT(json name){
                return name["value"].get<VkPresentGravityFlagsEXT>();
            };
        

            json serialize_VkShaderCreateFlagsEXT(VkShaderCreateFlagsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagsEXT deserialize_VkShaderCreateFlagsEXT(json name){
                return name["value"].get<VkShaderCreateFlagsEXT>();
            };
        

            json serialize_VkVideoCodecOperationFlagsKHR(VkVideoCodecOperationFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagsKHR deserialize_VkVideoCodecOperationFlagsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagsKHR(VkVideoCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagsKHR deserialize_VkVideoCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagsKHR(VkVideoSessionCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagsKHR deserialize_VkVideoSessionCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagsKHR>();
            };
        

            json serialize_VkVideoSessionParametersCreateFlagsKHR(VkVideoSessionParametersCreateFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionParametersCreateFlagsKHR deserialize_VkVideoSessionParametersCreateFlagsKHR(json name){
                return name["value"].get<VkVideoSessionParametersCreateFlagsKHR>();
            };
        

            json serialize_VkVideoBeginCodingFlagsKHR(VkVideoBeginCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoBeginCodingFlagsKHR deserialize_VkVideoBeginCodingFlagsKHR(json name){
                return name["value"].get<VkVideoBeginCodingFlagsKHR>();
            };
        

            json serialize_VkVideoEndCodingFlagsKHR(VkVideoEndCodingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoEndCodingFlagsKHR deserialize_VkVideoEndCodingFlagsKHR(json name){
                return name["value"].get<VkVideoEndCodingFlagsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagsKHR(VkVideoCodingControlFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagsKHR deserialize_VkVideoCodingControlFlagsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagsKHR(VkVideoDecodeUsageFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagsKHR deserialize_VkVideoDecodeUsageFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagsKHR(VkVideoDecodeCapabilityFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagsKHR deserialize_VkVideoDecodeCapabilityFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeFlagsKHR(VkVideoDecodeFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeFlagsKHR deserialize_VkVideoDecodeFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeFlagsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagsKHR(VkVideoDecodeH264PictureLayoutFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagsKHR(VkVideoChromaSubsamplingFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagsKHR deserialize_VkVideoChromaSubsamplingFlagsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagsKHR(VkVideoComponentBitDepthFlagsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagsKHR deserialize_VkVideoComponentBitDepthFlagsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagsKHR>();
            };
        

            json serialize_VkAttachmentLoadOp(VkAttachmentLoadOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentLoadOp deserialize_VkAttachmentLoadOp(json name){
                return name["value"].get<VkAttachmentLoadOp>();
            };
        

            json serialize_VkAttachmentStoreOp(VkAttachmentStoreOp name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentStoreOp deserialize_VkAttachmentStoreOp(json name){
                return name["value"].get<VkAttachmentStoreOp>();
            };
        

            json serialize_VkBlendFactor(VkBlendFactor name){
                return json::object({{"value",name}});
            };
        

            VkBlendFactor deserialize_VkBlendFactor(json name){
                return name["value"].get<VkBlendFactor>();
            };
        

            json serialize_VkBlendOp(VkBlendOp name){
                return json::object({{"value",name}});
            };
        

            VkBlendOp deserialize_VkBlendOp(json name){
                return name["value"].get<VkBlendOp>();
            };
        

            json serialize_VkBorderColor(VkBorderColor name){
                return json::object({{"value",name}});
            };
        

            VkBorderColor deserialize_VkBorderColor(json name){
                return name["value"].get<VkBorderColor>();
            };
        

            json serialize_VkFramebufferCreateFlagBits(VkFramebufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFramebufferCreateFlagBits deserialize_VkFramebufferCreateFlagBits(json name){
                return name["value"].get<VkFramebufferCreateFlagBits>();
            };
        

            json serialize_VkRenderPassCreateFlagBits(VkRenderPassCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderPassCreateFlagBits deserialize_VkRenderPassCreateFlagBits(json name){
                return name["value"].get<VkRenderPassCreateFlagBits>();
            };
        

            json serialize_VkSamplerCreateFlagBits(VkSamplerCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSamplerCreateFlagBits deserialize_VkSamplerCreateFlagBits(json name){
                return name["value"].get<VkSamplerCreateFlagBits>();
            };
        

            json serialize_VkPipelineCacheHeaderVersion(VkPipelineCacheHeaderVersion name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheHeaderVersion deserialize_VkPipelineCacheHeaderVersion(json name){
                return name["value"].get<VkPipelineCacheHeaderVersion>();
            };
        

            json serialize_VkPipelineCacheCreateFlagBits(VkPipelineCacheCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCacheCreateFlagBits deserialize_VkPipelineCacheCreateFlagBits(json name){
                return name["value"].get<VkPipelineCacheCreateFlagBits>();
            };
        

            json serialize_VkPipelineShaderStageCreateFlagBits(VkPipelineShaderStageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineShaderStageCreateFlagBits deserialize_VkPipelineShaderStageCreateFlagBits(json name){
                return name["value"].get<VkPipelineShaderStageCreateFlagBits>();
            };
        

            json serialize_VkDescriptorSetLayoutCreateFlagBits(VkDescriptorSetLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorSetLayoutCreateFlagBits deserialize_VkDescriptorSetLayoutCreateFlagBits(json name){
                return name["value"].get<VkDescriptorSetLayoutCreateFlagBits>();
            };
        

            json serialize_VkInstanceCreateFlagBits(VkInstanceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkInstanceCreateFlagBits deserialize_VkInstanceCreateFlagBits(json name){
                return name["value"].get<VkInstanceCreateFlagBits>();
            };
        

            json serialize_VkDeviceQueueCreateFlagBits(VkDeviceQueueCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDeviceQueueCreateFlagBits deserialize_VkDeviceQueueCreateFlagBits(json name){
                return name["value"].get<VkDeviceQueueCreateFlagBits>();
            };
        

            json serialize_VkBufferCreateFlagBits(VkBufferCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferCreateFlagBits deserialize_VkBufferCreateFlagBits(json name){
                return name["value"].get<VkBufferCreateFlagBits>();
            };
        

            json serialize_VkBufferUsageFlagBits(VkBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits deserialize_VkBufferUsageFlagBits(json name){
                return name["value"].get<VkBufferUsageFlagBits>();
            };
        

            json serialize_VkColorComponentFlagBits(VkColorComponentFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkColorComponentFlagBits deserialize_VkColorComponentFlagBits(json name){
                return name["value"].get<VkColorComponentFlagBits>();
            };
        

            json serialize_VkComponentSwizzle(VkComponentSwizzle name){
                return json::object({{"value",name}});
            };
        

            VkComponentSwizzle deserialize_VkComponentSwizzle(json name){
                return name["value"].get<VkComponentSwizzle>();
            };
        

            json serialize_VkCommandPoolCreateFlagBits(VkCommandPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolCreateFlagBits deserialize_VkCommandPoolCreateFlagBits(json name){
                return name["value"].get<VkCommandPoolCreateFlagBits>();
            };
        

            json serialize_VkCommandPoolResetFlagBits(VkCommandPoolResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandPoolResetFlagBits deserialize_VkCommandPoolResetFlagBits(json name){
                return name["value"].get<VkCommandPoolResetFlagBits>();
            };
        

            json serialize_VkCommandBufferResetFlagBits(VkCommandBufferResetFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferResetFlagBits deserialize_VkCommandBufferResetFlagBits(json name){
                return name["value"].get<VkCommandBufferResetFlagBits>();
            };
        

            json serialize_VkCommandBufferLevel(VkCommandBufferLevel name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferLevel deserialize_VkCommandBufferLevel(json name){
                return name["value"].get<VkCommandBufferLevel>();
            };
        

            json serialize_VkCommandBufferUsageFlagBits(VkCommandBufferUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCommandBufferUsageFlagBits deserialize_VkCommandBufferUsageFlagBits(json name){
                return name["value"].get<VkCommandBufferUsageFlagBits>();
            };
        

            json serialize_VkCompareOp(VkCompareOp name){
                return json::object({{"value",name}});
            };
        

            VkCompareOp deserialize_VkCompareOp(json name){
                return name["value"].get<VkCompareOp>();
            };
        

            json serialize_VkCullModeFlagBits(VkCullModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkCullModeFlagBits deserialize_VkCullModeFlagBits(json name){
                return name["value"].get<VkCullModeFlagBits>();
            };
        

            json serialize_VkDescriptorType(VkDescriptorType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorType deserialize_VkDescriptorType(json name){
                return name["value"].get<VkDescriptorType>();
            };
        

            json serialize_VkDynamicState(VkDynamicState name){
                return json::object({{"value",name}});
            };
        

            VkDynamicState deserialize_VkDynamicState(json name){
                return name["value"].get<VkDynamicState>();
            };
        

            json serialize_VkFenceCreateFlagBits(VkFenceCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceCreateFlagBits deserialize_VkFenceCreateFlagBits(json name){
                return name["value"].get<VkFenceCreateFlagBits>();
            };
        

            json serialize_VkPolygonMode(VkPolygonMode name){
                return json::object({{"value",name}});
            };
        

            VkPolygonMode deserialize_VkPolygonMode(json name){
                return name["value"].get<VkPolygonMode>();
            };
        

            json serialize_VkFormat(VkFormat name){
                return json::object({{"value",name}});
            };
        

            VkFormat deserialize_VkFormat(json name){
                return name["value"].get<VkFormat>();
            };
        

            json serialize_VkFormatFeatureFlagBits(VkFormatFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits deserialize_VkFormatFeatureFlagBits(json name){
                return name["value"].get<VkFormatFeatureFlagBits>();
            };
        

            json serialize_VkFrontFace(VkFrontFace name){
                return json::object({{"value",name}});
            };
        

            VkFrontFace deserialize_VkFrontFace(json name){
                return name["value"].get<VkFrontFace>();
            };
        

            json serialize_VkImageAspectFlagBits(VkImageAspectFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageAspectFlagBits deserialize_VkImageAspectFlagBits(json name){
                return name["value"].get<VkImageAspectFlagBits>();
            };
        

            json serialize_VkImageCreateFlagBits(VkImageCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageCreateFlagBits deserialize_VkImageCreateFlagBits(json name){
                return name["value"].get<VkImageCreateFlagBits>();
            };
        

            json serialize_VkImageLayout(VkImageLayout name){
                return json::object({{"value",name}});
            };
        

            VkImageLayout deserialize_VkImageLayout(json name){
                return name["value"].get<VkImageLayout>();
            };
        

            json serialize_VkImageTiling(VkImageTiling name){
                return json::object({{"value",name}});
            };
        

            VkImageTiling deserialize_VkImageTiling(json name){
                return name["value"].get<VkImageTiling>();
            };
        

            json serialize_VkImageType(VkImageType name){
                return json::object({{"value",name}});
            };
        

            VkImageType deserialize_VkImageType(json name){
                return name["value"].get<VkImageType>();
            };
        

            json serialize_VkImageUsageFlagBits(VkImageUsageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageUsageFlagBits deserialize_VkImageUsageFlagBits(json name){
                return name["value"].get<VkImageUsageFlagBits>();
            };
        

            json serialize_VkImageViewCreateFlagBits(VkImageViewCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkImageViewCreateFlagBits deserialize_VkImageViewCreateFlagBits(json name){
                return name["value"].get<VkImageViewCreateFlagBits>();
            };
        

            json serialize_VkImageViewType(VkImageViewType name){
                return json::object({{"value",name}});
            };
        

            VkImageViewType deserialize_VkImageViewType(json name){
                return name["value"].get<VkImageViewType>();
            };
        

            json serialize_VkSharingMode(VkSharingMode name){
                return json::object({{"value",name}});
            };
        

            VkSharingMode deserialize_VkSharingMode(json name){
                return name["value"].get<VkSharingMode>();
            };
        

            json serialize_VkIndexType(VkIndexType name){
                return json::object({{"value",name}});
            };
        

            VkIndexType deserialize_VkIndexType(json name){
                return name["value"].get<VkIndexType>();
            };
        

            json serialize_VkLogicOp(VkLogicOp name){
                return json::object({{"value",name}});
            };
        

            VkLogicOp deserialize_VkLogicOp(json name){
                return name["value"].get<VkLogicOp>();
            };
        

            json serialize_VkMemoryHeapFlagBits(VkMemoryHeapFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryHeapFlagBits deserialize_VkMemoryHeapFlagBits(json name){
                return name["value"].get<VkMemoryHeapFlagBits>();
            };
        

            json serialize_VkAccessFlagBits(VkAccessFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits deserialize_VkAccessFlagBits(json name){
                return name["value"].get<VkAccessFlagBits>();
            };
        

            json serialize_VkMemoryPropertyFlagBits(VkMemoryPropertyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryPropertyFlagBits deserialize_VkMemoryPropertyFlagBits(json name){
                return name["value"].get<VkMemoryPropertyFlagBits>();
            };
        

            json serialize_VkPhysicalDeviceType(VkPhysicalDeviceType name){
                return json::object({{"value",name}});
            };
        

            VkPhysicalDeviceType deserialize_VkPhysicalDeviceType(json name){
                return name["value"].get<VkPhysicalDeviceType>();
            };
        

            json serialize_VkPipelineBindPoint(VkPipelineBindPoint name){
                return json::object({{"value",name}});
            };
        

            VkPipelineBindPoint deserialize_VkPipelineBindPoint(json name){
                return name["value"].get<VkPipelineBindPoint>();
            };
        

            json serialize_VkPipelineCreateFlagBits(VkPipelineCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits deserialize_VkPipelineCreateFlagBits(json name){
                return name["value"].get<VkPipelineCreateFlagBits>();
            };
        

            json serialize_VkPrimitiveTopology(VkPrimitiveTopology name){
                return json::object({{"value",name}});
            };
        

            VkPrimitiveTopology deserialize_VkPrimitiveTopology(json name){
                return name["value"].get<VkPrimitiveTopology>();
            };
        

            json serialize_VkQueryControlFlagBits(VkQueryControlFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryControlFlagBits deserialize_VkQueryControlFlagBits(json name){
                return name["value"].get<VkQueryControlFlagBits>();
            };
        

            json serialize_VkQueryPipelineStatisticFlagBits(VkQueryPipelineStatisticFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryPipelineStatisticFlagBits deserialize_VkQueryPipelineStatisticFlagBits(json name){
                return name["value"].get<VkQueryPipelineStatisticFlagBits>();
            };
        

            json serialize_VkQueryResultFlagBits(VkQueryResultFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultFlagBits deserialize_VkQueryResultFlagBits(json name){
                return name["value"].get<VkQueryResultFlagBits>();
            };
        

            json serialize_VkQueryType(VkQueryType name){
                return json::object({{"value",name}});
            };
        

            VkQueryType deserialize_VkQueryType(json name){
                return name["value"].get<VkQueryType>();
            };
        

            json serialize_VkQueueFlagBits(VkQueueFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkQueueFlagBits deserialize_VkQueueFlagBits(json name){
                return name["value"].get<VkQueueFlagBits>();
            };
        

            json serialize_VkSubpassContents(VkSubpassContents name){
                return json::object({{"value",name}});
            };
        

            VkSubpassContents deserialize_VkSubpassContents(json name){
                return name["value"].get<VkSubpassContents>();
            };
        

            json serialize_VkResult(VkResult name){
                return json::object({{"value",name}});
            };
        

            VkResult deserialize_VkResult(json name){
                return name["value"].get<VkResult>();
            };
        

            json serialize_VkShaderStageFlagBits(VkShaderStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkShaderStageFlagBits deserialize_VkShaderStageFlagBits(json name){
                return name["value"].get<VkShaderStageFlagBits>();
            };
        

            json serialize_VkSparseMemoryBindFlagBits(VkSparseMemoryBindFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseMemoryBindFlagBits deserialize_VkSparseMemoryBindFlagBits(json name){
                return name["value"].get<VkSparseMemoryBindFlagBits>();
            };
        

            json serialize_VkStencilFaceFlagBits(VkStencilFaceFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkStencilFaceFlagBits deserialize_VkStencilFaceFlagBits(json name){
                return name["value"].get<VkStencilFaceFlagBits>();
            };
        

            json serialize_VkStencilOp(VkStencilOp name){
                return json::object({{"value",name}});
            };
        

            VkStencilOp deserialize_VkStencilOp(json name){
                return name["value"].get<VkStencilOp>();
            };
        

            json serialize_VkStructureType(VkStructureType name){
                return json::object({{"value",name}});
            };
        

            VkStructureType deserialize_VkStructureType(json name){
                return name["value"].get<VkStructureType>();
            };
        

            json serialize_VkSystemAllocationScope(VkSystemAllocationScope name){
                return json::object({{"value",name}});
            };
        

            VkSystemAllocationScope deserialize_VkSystemAllocationScope(json name){
                return name["value"].get<VkSystemAllocationScope>();
            };
        

            json serialize_VkInternalAllocationType(VkInternalAllocationType name){
                return json::object({{"value",name}});
            };
        

            VkInternalAllocationType deserialize_VkInternalAllocationType(json name){
                return name["value"].get<VkInternalAllocationType>();
            };
        

            json serialize_VkSamplerAddressMode(VkSamplerAddressMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerAddressMode deserialize_VkSamplerAddressMode(json name){
                return name["value"].get<VkSamplerAddressMode>();
            };
        

            json serialize_VkFilter(VkFilter name){
                return json::object({{"value",name}});
            };
        

            VkFilter deserialize_VkFilter(json name){
                return name["value"].get<VkFilter>();
            };
        

            json serialize_VkSamplerMipmapMode(VkSamplerMipmapMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerMipmapMode deserialize_VkSamplerMipmapMode(json name){
                return name["value"].get<VkSamplerMipmapMode>();
            };
        

            json serialize_VkVertexInputRate(VkVertexInputRate name){
                return json::object({{"value",name}});
            };
        

            VkVertexInputRate deserialize_VkVertexInputRate(json name){
                return name["value"].get<VkVertexInputRate>();
            };
        

            json serialize_VkPipelineStageFlagBits(VkPipelineStageFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits deserialize_VkPipelineStageFlagBits(json name){
                return name["value"].get<VkPipelineStageFlagBits>();
            };
        

            json serialize_VkSparseImageFormatFlagBits(VkSparseImageFormatFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSparseImageFormatFlagBits deserialize_VkSparseImageFormatFlagBits(json name){
                return name["value"].get<VkSparseImageFormatFlagBits>();
            };
        

            json serialize_VkSampleCountFlagBits(VkSampleCountFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSampleCountFlagBits deserialize_VkSampleCountFlagBits(json name){
                return name["value"].get<VkSampleCountFlagBits>();
            };
        

            json serialize_VkAttachmentDescriptionFlagBits(VkAttachmentDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkAttachmentDescriptionFlagBits deserialize_VkAttachmentDescriptionFlagBits(json name){
                return name["value"].get<VkAttachmentDescriptionFlagBits>();
            };
        

            json serialize_VkDescriptorPoolCreateFlagBits(VkDescriptorPoolCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorPoolCreateFlagBits deserialize_VkDescriptorPoolCreateFlagBits(json name){
                return name["value"].get<VkDescriptorPoolCreateFlagBits>();
            };
        

            json serialize_VkDependencyFlagBits(VkDependencyFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDependencyFlagBits deserialize_VkDependencyFlagBits(json name){
                return name["value"].get<VkDependencyFlagBits>();
            };
        

            json serialize_VkObjectType(VkObjectType name){
                return json::object({{"value",name}});
            };
        

            VkObjectType deserialize_VkObjectType(json name){
                return name["value"].get<VkObjectType>();
            };
        

            json serialize_VkEventCreateFlagBits(VkEventCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkEventCreateFlagBits deserialize_VkEventCreateFlagBits(json name){
                return name["value"].get<VkEventCreateFlagBits>();
            };
        

            json serialize_VkPipelineLayoutCreateFlagBits(VkPipelineLayoutCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineLayoutCreateFlagBits deserialize_VkPipelineLayoutCreateFlagBits(json name){
                return name["value"].get<VkPipelineLayoutCreateFlagBits>();
            };
        

            json serialize_VkRayTracingInvocationReorderModeNV(VkRayTracingInvocationReorderModeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingInvocationReorderModeNV deserialize_VkRayTracingInvocationReorderModeNV(json name){
                return name["value"].get<VkRayTracingInvocationReorderModeNV>();
            };
        

            json serialize_VkIndirectCommandsLayoutUsageFlagBitsNV(VkIndirectCommandsLayoutUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsLayoutUsageFlagBitsNV deserialize_VkIndirectCommandsLayoutUsageFlagBitsNV(json name){
                return name["value"].get<VkIndirectCommandsLayoutUsageFlagBitsNV>();
            };
        

            json serialize_VkIndirectCommandsTokenTypeNV(VkIndirectCommandsTokenTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectCommandsTokenTypeNV deserialize_VkIndirectCommandsTokenTypeNV(json name){
                return name["value"].get<VkIndirectCommandsTokenTypeNV>();
            };
        

            json serialize_VkIndirectStateFlagBitsNV(VkIndirectStateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkIndirectStateFlagBitsNV deserialize_VkIndirectStateFlagBitsNV(json name){
                return name["value"].get<VkIndirectStateFlagBitsNV>();
            };
        

            json serialize_VkDescriptorUpdateTemplateType(VkDescriptorUpdateTemplateType name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateType deserialize_VkDescriptorUpdateTemplateType(json name){
                return name["value"].get<VkDescriptorUpdateTemplateType>();
            };
        

            json serialize_VkDescriptorUpdateTemplateTypeKHR(VkDescriptorUpdateTemplateTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorUpdateTemplateTypeKHR deserialize_VkDescriptorUpdateTemplateTypeKHR(json name){
                return name["value"].get<VkDescriptorUpdateTemplateTypeKHR>();
            };
        

            json serialize_VkViewportCoordinateSwizzleNV(VkViewportCoordinateSwizzleNV name){
                return json::object({{"value",name}});
            };
        

            VkViewportCoordinateSwizzleNV deserialize_VkViewportCoordinateSwizzleNV(json name){
                return name["value"].get<VkViewportCoordinateSwizzleNV>();
            };
        

            json serialize_VkDiscardRectangleModeEXT(VkDiscardRectangleModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDiscardRectangleModeEXT deserialize_VkDiscardRectangleModeEXT(json name){
                return name["value"].get<VkDiscardRectangleModeEXT>();
            };
        

            json serialize_VkSubpassDescriptionFlagBits(VkSubpassDescriptionFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubpassDescriptionFlagBits deserialize_VkSubpassDescriptionFlagBits(json name){
                return name["value"].get<VkSubpassDescriptionFlagBits>();
            };
        

            json serialize_VkPointClippingBehavior(VkPointClippingBehavior name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehavior deserialize_VkPointClippingBehavior(json name){
                return name["value"].get<VkPointClippingBehavior>();
            };
        

            json serialize_VkPointClippingBehaviorKHR(VkPointClippingBehaviorKHR name){
                return json::object({{"value",name}});
            };
        

            VkPointClippingBehaviorKHR deserialize_VkPointClippingBehaviorKHR(json name){
                return name["value"].get<VkPointClippingBehaviorKHR>();
            };
        

            json serialize_VkCoverageModulationModeNV(VkCoverageModulationModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageModulationModeNV deserialize_VkCoverageModulationModeNV(json name){
                return name["value"].get<VkCoverageModulationModeNV>();
            };
        

            json serialize_VkCoverageReductionModeNV(VkCoverageReductionModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoverageReductionModeNV deserialize_VkCoverageReductionModeNV(json name){
                return name["value"].get<VkCoverageReductionModeNV>();
            };
        

            json serialize_VkValidationCacheHeaderVersionEXT(VkValidationCacheHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCacheHeaderVersionEXT deserialize_VkValidationCacheHeaderVersionEXT(json name){
                return name["value"].get<VkValidationCacheHeaderVersionEXT>();
            };
        

            json serialize_VkShaderInfoTypeAMD(VkShaderInfoTypeAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderInfoTypeAMD deserialize_VkShaderInfoTypeAMD(json name){
                return name["value"].get<VkShaderInfoTypeAMD>();
            };
        

            json serialize_VkQueueGlobalPriorityKHR(VkQueueGlobalPriorityKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityKHR deserialize_VkQueueGlobalPriorityKHR(json name){
                return name["value"].get<VkQueueGlobalPriorityKHR>();
            };
        

            json serialize_VkQueueGlobalPriorityEXT(VkQueueGlobalPriorityEXT name){
                return json::object({{"value",name}});
            };
        

            VkQueueGlobalPriorityEXT deserialize_VkQueueGlobalPriorityEXT(json name){
                return name["value"].get<VkQueueGlobalPriorityEXT>();
            };
        

            json serialize_VkTimeDomainEXT(VkTimeDomainEXT name){
                return json::object({{"value",name}});
            };
        

            VkTimeDomainEXT deserialize_VkTimeDomainEXT(json name){
                return name["value"].get<VkTimeDomainEXT>();
            };
        

            json serialize_VkConservativeRasterizationModeEXT(VkConservativeRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkConservativeRasterizationModeEXT deserialize_VkConservativeRasterizationModeEXT(json name){
                return name["value"].get<VkConservativeRasterizationModeEXT>();
            };
        

            json serialize_VkResolveModeFlagBits(VkResolveModeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBits deserialize_VkResolveModeFlagBits(json name){
                return name["value"].get<VkResolveModeFlagBits>();
            };
        

            json serialize_VkResolveModeFlagBitsKHR(VkResolveModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkResolveModeFlagBitsKHR deserialize_VkResolveModeFlagBitsKHR(json name){
                return name["value"].get<VkResolveModeFlagBitsKHR>();
            };
        

            json serialize_VkDescriptorBindingFlagBits(VkDescriptorBindingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBits deserialize_VkDescriptorBindingFlagBits(json name){
                return name["value"].get<VkDescriptorBindingFlagBits>();
            };
        

            json serialize_VkDescriptorBindingFlagBitsEXT(VkDescriptorBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDescriptorBindingFlagBitsEXT deserialize_VkDescriptorBindingFlagBitsEXT(json name){
                return name["value"].get<VkDescriptorBindingFlagBitsEXT>();
            };
        

            json serialize_VkConditionalRenderingFlagBitsEXT(VkConditionalRenderingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkConditionalRenderingFlagBitsEXT deserialize_VkConditionalRenderingFlagBitsEXT(json name){
                return name["value"].get<VkConditionalRenderingFlagBitsEXT>();
            };
        

            json serialize_VkSemaphoreType(VkSemaphoreType name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreType deserialize_VkSemaphoreType(json name){
                return name["value"].get<VkSemaphoreType>();
            };
        

            json serialize_VkSemaphoreTypeKHR(VkSemaphoreTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreTypeKHR deserialize_VkSemaphoreTypeKHR(json name){
                return name["value"].get<VkSemaphoreTypeKHR>();
            };
        

            json serialize_VkGeometryFlagBitsKHR(VkGeometryFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsKHR deserialize_VkGeometryFlagBitsKHR(json name){
                return name["value"].get<VkGeometryFlagBitsKHR>();
            };
        

            json serialize_VkGeometryFlagBitsNV(VkGeometryFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryFlagBitsNV deserialize_VkGeometryFlagBitsNV(json name){
                return name["value"].get<VkGeometryFlagBitsNV>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsKHR(VkGeometryInstanceFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsKHR deserialize_VkGeometryInstanceFlagBitsKHR(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsKHR>();
            };
        

            json serialize_VkGeometryInstanceFlagBitsNV(VkGeometryInstanceFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryInstanceFlagBitsNV deserialize_VkGeometryInstanceFlagBitsNV(json name){
                return name["value"].get<VkGeometryInstanceFlagBitsNV>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsKHR(VkBuildAccelerationStructureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsKHR deserialize_VkBuildAccelerationStructureFlagBitsKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureFlagBitsNV(VkBuildAccelerationStructureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureFlagBitsNV deserialize_VkBuildAccelerationStructureFlagBitsNV(json name){
                return name["value"].get<VkBuildAccelerationStructureFlagBitsNV>();
            };
        

            json serialize_VkAccelerationStructureCreateFlagBitsKHR(VkAccelerationStructureCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCreateFlagBitsKHR deserialize_VkAccelerationStructureCreateFlagBitsKHR(json name){
                return name["value"].get<VkAccelerationStructureCreateFlagBitsKHR>();
            };
        

            json serialize_VkBuildAccelerationStructureModeKHR(VkBuildAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkBuildAccelerationStructureModeKHR deserialize_VkBuildAccelerationStructureModeKHR(json name){
                return name["value"].get<VkBuildAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeKHR(VkCopyAccelerationStructureModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeKHR deserialize_VkCopyAccelerationStructureModeKHR(json name){
                return name["value"].get<VkCopyAccelerationStructureModeKHR>();
            };
        

            json serialize_VkCopyAccelerationStructureModeNV(VkCopyAccelerationStructureModeNV name){
                return json::object({{"value",name}});
            };
        

            VkCopyAccelerationStructureModeNV deserialize_VkCopyAccelerationStructureModeNV(json name){
                return name["value"].get<VkCopyAccelerationStructureModeNV>();
            };
        

            json serialize_VkAccelerationStructureTypeKHR(VkAccelerationStructureTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeKHR deserialize_VkAccelerationStructureTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureTypeNV(VkAccelerationStructureTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureTypeNV deserialize_VkAccelerationStructureTypeNV(json name){
                return name["value"].get<VkAccelerationStructureTypeNV>();
            };
        

            json serialize_VkGeometryTypeKHR(VkGeometryTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeKHR deserialize_VkGeometryTypeKHR(json name){
                return name["value"].get<VkGeometryTypeKHR>();
            };
        

            json serialize_VkGeometryTypeNV(VkGeometryTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkGeometryTypeNV deserialize_VkGeometryTypeNV(json name){
                return name["value"].get<VkGeometryTypeNV>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeKHR(VkRayTracingShaderGroupTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeKHR deserialize_VkRayTracingShaderGroupTypeKHR(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeKHR>();
            };
        

            json serialize_VkRayTracingShaderGroupTypeNV(VkRayTracingShaderGroupTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkRayTracingShaderGroupTypeNV deserialize_VkRayTracingShaderGroupTypeNV(json name){
                return name["value"].get<VkRayTracingShaderGroupTypeNV>();
            };
        

            json serialize_VkAccelerationStructureMemoryRequirementsTypeNV(VkAccelerationStructureMemoryRequirementsTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMemoryRequirementsTypeNV deserialize_VkAccelerationStructureMemoryRequirementsTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMemoryRequirementsTypeNV>();
            };
        

            json serialize_VkAccelerationStructureBuildTypeKHR(VkAccelerationStructureBuildTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureBuildTypeKHR deserialize_VkAccelerationStructureBuildTypeKHR(json name){
                return name["value"].get<VkAccelerationStructureBuildTypeKHR>();
            };
        

            json serialize_VkAccelerationStructureCompatibilityKHR(VkAccelerationStructureCompatibilityKHR name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureCompatibilityKHR deserialize_VkAccelerationStructureCompatibilityKHR(json name){
                return name["value"].get<VkAccelerationStructureCompatibilityKHR>();
            };
        

            json serialize_VkShaderGroupShaderKHR(VkShaderGroupShaderKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderGroupShaderKHR deserialize_VkShaderGroupShaderKHR(json name){
                return name["value"].get<VkShaderGroupShaderKHR>();
            };
        

            json serialize_VkMemoryOverallocationBehaviorAMD(VkMemoryOverallocationBehaviorAMD name){
                return json::object({{"value",name}});
            };
        

            VkMemoryOverallocationBehaviorAMD deserialize_VkMemoryOverallocationBehaviorAMD(json name){
                return name["value"].get<VkMemoryOverallocationBehaviorAMD>();
            };
        

            json serialize_VkDeviceDiagnosticsConfigFlagBitsNV(VkDeviceDiagnosticsConfigFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkDeviceDiagnosticsConfigFlagBitsNV deserialize_VkDeviceDiagnosticsConfigFlagBitsNV(json name){
                return name["value"].get<VkDeviceDiagnosticsConfigFlagBitsNV>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBits(VkPipelineCreationFeedbackFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBits deserialize_VkPipelineCreationFeedbackFlagBits(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBits>();
            };
        

            json serialize_VkPipelineCreationFeedbackFlagBitsEXT(VkPipelineCreationFeedbackFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreationFeedbackFlagBitsEXT deserialize_VkPipelineCreationFeedbackFlagBitsEXT(json name){
                return name["value"].get<VkPipelineCreationFeedbackFlagBitsEXT>();
            };
        

            json serialize_VkPerformanceCounterScopeKHR(VkPerformanceCounterScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterScopeKHR deserialize_VkPerformanceCounterScopeKHR(json name){
                return name["value"].get<VkPerformanceCounterScopeKHR>();
            };
        

            json serialize_VkPerformanceCounterUnitKHR(VkPerformanceCounterUnitKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterUnitKHR deserialize_VkPerformanceCounterUnitKHR(json name){
                return name["value"].get<VkPerformanceCounterUnitKHR>();
            };
        

            json serialize_VkPerformanceCounterStorageKHR(VkPerformanceCounterStorageKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterStorageKHR deserialize_VkPerformanceCounterStorageKHR(json name){
                return name["value"].get<VkPerformanceCounterStorageKHR>();
            };
        

            json serialize_VkPerformanceCounterDescriptionFlagBitsKHR(VkPerformanceCounterDescriptionFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceCounterDescriptionFlagBitsKHR deserialize_VkPerformanceCounterDescriptionFlagBitsKHR(json name){
                return name["value"].get<VkPerformanceCounterDescriptionFlagBitsKHR>();
            };
        

            json serialize_VkAcquireProfilingLockFlagBitsKHR(VkAcquireProfilingLockFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkAcquireProfilingLockFlagBitsKHR deserialize_VkAcquireProfilingLockFlagBitsKHR(json name){
                return name["value"].get<VkAcquireProfilingLockFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreWaitFlagBits(VkSemaphoreWaitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBits deserialize_VkSemaphoreWaitFlagBits(json name){
                return name["value"].get<VkSemaphoreWaitFlagBits>();
            };
        

            json serialize_VkSemaphoreWaitFlagBitsKHR(VkSemaphoreWaitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreWaitFlagBitsKHR deserialize_VkSemaphoreWaitFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreWaitFlagBitsKHR>();
            };
        

            json serialize_VkPerformanceConfigurationTypeINTEL(VkPerformanceConfigurationTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceConfigurationTypeINTEL deserialize_VkPerformanceConfigurationTypeINTEL(json name){
                return name["value"].get<VkPerformanceConfigurationTypeINTEL>();
            };
        

            json serialize_VkQueryPoolSamplingModeINTEL(VkQueryPoolSamplingModeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkQueryPoolSamplingModeINTEL deserialize_VkQueryPoolSamplingModeINTEL(json name){
                return name["value"].get<VkQueryPoolSamplingModeINTEL>();
            };
        

            json serialize_VkPerformanceOverrideTypeINTEL(VkPerformanceOverrideTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceOverrideTypeINTEL deserialize_VkPerformanceOverrideTypeINTEL(json name){
                return name["value"].get<VkPerformanceOverrideTypeINTEL>();
            };
        

            json serialize_VkPerformanceParameterTypeINTEL(VkPerformanceParameterTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceParameterTypeINTEL deserialize_VkPerformanceParameterTypeINTEL(json name){
                return name["value"].get<VkPerformanceParameterTypeINTEL>();
            };
        

            json serialize_VkPerformanceValueTypeINTEL(VkPerformanceValueTypeINTEL name){
                return json::object({{"value",name}});
            };
        

            VkPerformanceValueTypeINTEL deserialize_VkPerformanceValueTypeINTEL(json name){
                return name["value"].get<VkPerformanceValueTypeINTEL>();
            };
        

            json serialize_VkLineRasterizationModeEXT(VkLineRasterizationModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkLineRasterizationModeEXT deserialize_VkLineRasterizationModeEXT(json name){
                return name["value"].get<VkLineRasterizationModeEXT>();
            };
        

            json serialize_VkPipelineCompilerControlFlagBitsAMD(VkPipelineCompilerControlFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCompilerControlFlagBitsAMD deserialize_VkPipelineCompilerControlFlagBitsAMD(json name){
                return name["value"].get<VkPipelineCompilerControlFlagBitsAMD>();
            };
        

            json serialize_VkShaderCorePropertiesFlagBitsAMD(VkShaderCorePropertiesFlagBitsAMD name){
                return json::object({{"value",name}});
            };
        

            VkShaderCorePropertiesFlagBitsAMD deserialize_VkShaderCorePropertiesFlagBitsAMD(json name){
                return name["value"].get<VkShaderCorePropertiesFlagBitsAMD>();
            };
        

            json serialize_VkToolPurposeFlagBits(VkToolPurposeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBits deserialize_VkToolPurposeFlagBits(json name){
                return name["value"].get<VkToolPurposeFlagBits>();
            };
        

            json serialize_VkToolPurposeFlagBitsEXT(VkToolPurposeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkToolPurposeFlagBitsEXT deserialize_VkToolPurposeFlagBitsEXT(json name){
                return name["value"].get<VkToolPurposeFlagBitsEXT>();
            };
        

            json serialize_VkFragmentShadingRateNV(VkFragmentShadingRateNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateNV deserialize_VkFragmentShadingRateNV(json name){
                return name["value"].get<VkFragmentShadingRateNV>();
            };
        

            json serialize_VkFragmentShadingRateTypeNV(VkFragmentShadingRateTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateTypeNV deserialize_VkFragmentShadingRateTypeNV(json name){
                return name["value"].get<VkFragmentShadingRateTypeNV>();
            };
        

            json serialize_VkSubpassMergeStatusEXT(VkSubpassMergeStatusEXT name){
                return json::object({{"value",name}});
            };
        

            VkSubpassMergeStatusEXT deserialize_VkSubpassMergeStatusEXT(json name){
                return name["value"].get<VkSubpassMergeStatusEXT>();
            };
        

            json serialize_VkAccessFlagBits2(VkAccessFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2 deserialize_VkAccessFlagBits2(json name){
                return name["value"].get<VkAccessFlagBits2>();
            };
        

            json serialize_VkAccessFlagBits2KHR(VkAccessFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkAccessFlagBits2KHR deserialize_VkAccessFlagBits2KHR(json name){
                return name["value"].get<VkAccessFlagBits2KHR>();
            };
        

            json serialize_VkPipelineStageFlagBits2(VkPipelineStageFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2 deserialize_VkPipelineStageFlagBits2(json name){
                return name["value"].get<VkPipelineStageFlagBits2>();
            };
        

            json serialize_VkPipelineStageFlagBits2KHR(VkPipelineStageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineStageFlagBits2KHR deserialize_VkPipelineStageFlagBits2KHR(json name){
                return name["value"].get<VkPipelineStageFlagBits2KHR>();
            };
        

            json serialize_VkProvokingVertexModeEXT(VkProvokingVertexModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkProvokingVertexModeEXT deserialize_VkProvokingVertexModeEXT(json name){
                return name["value"].get<VkProvokingVertexModeEXT>();
            };
        

            json serialize_VkHostImageCopyFlagBitsEXT(VkHostImageCopyFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkHostImageCopyFlagBitsEXT deserialize_VkHostImageCopyFlagBitsEXT(json name){
                return name["value"].get<VkHostImageCopyFlagBitsEXT>();
            };
        

            json serialize_VkFormatFeatureFlagBits2(VkFormatFeatureFlagBits2 name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2 deserialize_VkFormatFeatureFlagBits2(json name){
                return name["value"].get<VkFormatFeatureFlagBits2>();
            };
        

            json serialize_VkFormatFeatureFlagBits2KHR(VkFormatFeatureFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkFormatFeatureFlagBits2KHR deserialize_VkFormatFeatureFlagBits2KHR(json name){
                return name["value"].get<VkFormatFeatureFlagBits2KHR>();
            };
        

            json serialize_VkRenderingFlagBits(VkRenderingFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBits deserialize_VkRenderingFlagBits(json name){
                return name["value"].get<VkRenderingFlagBits>();
            };
        

            json serialize_VkRenderingFlagBitsKHR(VkRenderingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkRenderingFlagBitsKHR deserialize_VkRenderingFlagBitsKHR(json name){
                return name["value"].get<VkRenderingFlagBitsKHR>();
            };
        

            json serialize_VkPipelineDepthStencilStateCreateFlagBits(VkPipelineDepthStencilStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineDepthStencilStateCreateFlagBits deserialize_VkPipelineDepthStencilStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineDepthStencilStateCreateFlagBits>();
            };
        

            json serialize_VkPipelineColorBlendStateCreateFlagBits(VkPipelineColorBlendStateCreateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPipelineColorBlendStateCreateFlagBits deserialize_VkPipelineColorBlendStateCreateFlagBits(json name){
                return name["value"].get<VkPipelineColorBlendStateCreateFlagBits>();
            };
        

            json serialize_VkImageCompressionFlagBitsEXT(VkImageCompressionFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFlagBitsEXT deserialize_VkImageCompressionFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFlagBitsEXT>();
            };
        

            json serialize_VkImageCompressionFixedRateFlagBitsEXT(VkImageCompressionFixedRateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkImageCompressionFixedRateFlagBitsEXT deserialize_VkImageCompressionFixedRateFlagBitsEXT(json name){
                return name["value"].get<VkImageCompressionFixedRateFlagBitsEXT>();
            };
        

            json serialize_VkPipelineRobustnessBufferBehaviorEXT(VkPipelineRobustnessBufferBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessBufferBehaviorEXT deserialize_VkPipelineRobustnessBufferBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessBufferBehaviorEXT>();
            };
        

            json serialize_VkPipelineRobustnessImageBehaviorEXT(VkPipelineRobustnessImageBehaviorEXT name){
                return json::object({{"value",name}});
            };
        

            VkPipelineRobustnessImageBehaviorEXT deserialize_VkPipelineRobustnessImageBehaviorEXT(json name){
                return name["value"].get<VkPipelineRobustnessImageBehaviorEXT>();
            };
        

            json serialize_VkDeviceAddressBindingFlagBitsEXT(VkDeviceAddressBindingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingFlagBitsEXT deserialize_VkDeviceAddressBindingFlagBitsEXT(json name){
                return name["value"].get<VkDeviceAddressBindingFlagBitsEXT>();
            };
        

            json serialize_VkDeviceAddressBindingTypeEXT(VkDeviceAddressBindingTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceAddressBindingTypeEXT deserialize_VkDeviceAddressBindingTypeEXT(json name){
                return name["value"].get<VkDeviceAddressBindingTypeEXT>();
            };
        

            json serialize_VkMicromapTypeEXT(VkMicromapTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapTypeEXT deserialize_VkMicromapTypeEXT(json name){
                return name["value"].get<VkMicromapTypeEXT>();
            };
        

            json serialize_VkBuildMicromapModeEXT(VkBuildMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapModeEXT deserialize_VkBuildMicromapModeEXT(json name){
                return name["value"].get<VkBuildMicromapModeEXT>();
            };
        

            json serialize_VkCopyMicromapModeEXT(VkCopyMicromapModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkCopyMicromapModeEXT deserialize_VkCopyMicromapModeEXT(json name){
                return name["value"].get<VkCopyMicromapModeEXT>();
            };
        

            json serialize_VkBuildMicromapFlagBitsEXT(VkBuildMicromapFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkBuildMicromapFlagBitsEXT deserialize_VkBuildMicromapFlagBitsEXT(json name){
                return name["value"].get<VkBuildMicromapFlagBitsEXT>();
            };
        

            json serialize_VkMicromapCreateFlagBitsEXT(VkMicromapCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkMicromapCreateFlagBitsEXT deserialize_VkMicromapCreateFlagBitsEXT(json name){
                return name["value"].get<VkMicromapCreateFlagBitsEXT>();
            };
        

            json serialize_VkOpacityMicromapFormatEXT(VkOpacityMicromapFormatEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapFormatEXT deserialize_VkOpacityMicromapFormatEXT(json name){
                return name["value"].get<VkOpacityMicromapFormatEXT>();
            };
        

            json serialize_VkOpacityMicromapSpecialIndexEXT(VkOpacityMicromapSpecialIndexEXT name){
                return json::object({{"value",name}});
            };
        

            VkOpacityMicromapSpecialIndexEXT deserialize_VkOpacityMicromapSpecialIndexEXT(json name){
                return name["value"].get<VkOpacityMicromapSpecialIndexEXT>();
            };
        

            json serialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(VkDeviceFaultVendorBinaryHeaderVersionEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultVendorBinaryHeaderVersionEXT deserialize_VkDeviceFaultVendorBinaryHeaderVersionEXT(json name){
                return name["value"].get<VkDeviceFaultVendorBinaryHeaderVersionEXT>();
            };
        

            json serialize_VkFrameBoundaryFlagBitsEXT(VkFrameBoundaryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkFrameBoundaryFlagBitsEXT deserialize_VkFrameBoundaryFlagBitsEXT(json name){
                return name["value"].get<VkFrameBoundaryFlagBitsEXT>();
            };
        

            json serialize_VkMemoryDecompressionMethodFlagBitsNV(VkMemoryDecompressionMethodFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkMemoryDecompressionMethodFlagBitsNV deserialize_VkMemoryDecompressionMethodFlagBitsNV(json name){
                return name["value"].get<VkMemoryDecompressionMethodFlagBitsNV>();
            };
        

            json serialize_VkDepthBiasRepresentationEXT(VkDepthBiasRepresentationEXT name){
                return json::object({{"value",name}});
            };
        

            VkDepthBiasRepresentationEXT deserialize_VkDepthBiasRepresentationEXT(json name){
                return name["value"].get<VkDepthBiasRepresentationEXT>();
            };
        

            json serialize_VkDirectDriverLoadingModeLUNARG(VkDirectDriverLoadingModeLUNARG name){
                return json::object({{"value",name}});
            };
        

            VkDirectDriverLoadingModeLUNARG deserialize_VkDirectDriverLoadingModeLUNARG(json name){
                return name["value"].get<VkDirectDriverLoadingModeLUNARG>();
            };
        

            json serialize_VkPipelineCreateFlagBits2KHR(VkPipelineCreateFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineCreateFlagBits2KHR deserialize_VkPipelineCreateFlagBits2KHR(json name){
                return name["value"].get<VkPipelineCreateFlagBits2KHR>();
            };
        

            json serialize_VkBufferUsageFlagBits2KHR(VkBufferUsageFlagBits2KHR name){
                return json::object({{"value",name}});
            };
        

            VkBufferUsageFlagBits2KHR deserialize_VkBufferUsageFlagBits2KHR(json name){
                return name["value"].get<VkBufferUsageFlagBits2KHR>();
            };
        

            json serialize_VkShaderCreateFlagBitsEXT(VkShaderCreateFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCreateFlagBitsEXT deserialize_VkShaderCreateFlagBitsEXT(json name){
                return name["value"].get<VkShaderCreateFlagBitsEXT>();
            };
        

            json serialize_VkShaderCodeTypeEXT(VkShaderCodeTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkShaderCodeTypeEXT deserialize_VkShaderCodeTypeEXT(json name){
                return name["value"].get<VkShaderCodeTypeEXT>();
            };
        

            json serialize_VkScopeKHR(VkScopeKHR name){
                return json::object({{"value",name}});
            };
        

            VkScopeKHR deserialize_VkScopeKHR(json name){
                return name["value"].get<VkScopeKHR>();
            };
        

            json serialize_VkComponentTypeKHR(VkComponentTypeKHR name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeKHR deserialize_VkComponentTypeKHR(json name){
                return name["value"].get<VkComponentTypeKHR>();
            };
        

            json serialize_VkScopeNV(VkScopeNV name){
                return json::object({{"value",name}});
            };
        

            VkScopeNV deserialize_VkScopeNV(json name){
                return name["value"].get<VkScopeNV>();
            };
        

            json serialize_VkComponentTypeNV(VkComponentTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkComponentTypeNV deserialize_VkComponentTypeNV(json name){
                return name["value"].get<VkComponentTypeNV>();
            };
        

            json serialize_VkCubicFilterWeightsQCOM(VkCubicFilterWeightsQCOM name){
                return json::object({{"value",name}});
            };
        

            VkCubicFilterWeightsQCOM deserialize_VkCubicFilterWeightsQCOM(json name){
                return name["value"].get<VkCubicFilterWeightsQCOM>();
            };
        

            json serialize_VkBlockMatchWindowCompareModeQCOM(VkBlockMatchWindowCompareModeQCOM name){
                return json::object({{"value",name}});
            };
        

            VkBlockMatchWindowCompareModeQCOM deserialize_VkBlockMatchWindowCompareModeQCOM(json name){
                return name["value"].get<VkBlockMatchWindowCompareModeQCOM>();
            };
        

            json serialize_VkLayeredDriverUnderlyingApiMSFT(VkLayeredDriverUnderlyingApiMSFT name){
                return json::object({{"value",name}});
            };
        

            VkLayeredDriverUnderlyingApiMSFT deserialize_VkLayeredDriverUnderlyingApiMSFT(json name){
                return name["value"].get<VkLayeredDriverUnderlyingApiMSFT>();
            };
        

            json serialize_VkColorSpaceKHR(VkColorSpaceKHR name){
                return json::object({{"value",name}});
            };
        

            VkColorSpaceKHR deserialize_VkColorSpaceKHR(json name){
                return name["value"].get<VkColorSpaceKHR>();
            };
        

            json serialize_VkCompositeAlphaFlagBitsKHR(VkCompositeAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkCompositeAlphaFlagBitsKHR deserialize_VkCompositeAlphaFlagBitsKHR(json name){
                return name["value"].get<VkCompositeAlphaFlagBitsKHR>();
            };
        

            json serialize_VkDisplayPlaneAlphaFlagBitsKHR(VkDisplayPlaneAlphaFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPlaneAlphaFlagBitsKHR deserialize_VkDisplayPlaneAlphaFlagBitsKHR(json name){
                return name["value"].get<VkDisplayPlaneAlphaFlagBitsKHR>();
            };
        

            json serialize_VkPresentModeKHR(VkPresentModeKHR name){
                return json::object({{"value",name}});
            };
        

            VkPresentModeKHR deserialize_VkPresentModeKHR(json name){
                return name["value"].get<VkPresentModeKHR>();
            };
        

            json serialize_VkSurfaceTransformFlagBitsKHR(VkSurfaceTransformFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceTransformFlagBitsKHR deserialize_VkSurfaceTransformFlagBitsKHR(json name){
                return name["value"].get<VkSurfaceTransformFlagBitsKHR>();
            };
        

            json serialize_VkDebugReportFlagBitsEXT(VkDebugReportFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportFlagBitsEXT deserialize_VkDebugReportFlagBitsEXT(json name){
                return name["value"].get<VkDebugReportFlagBitsEXT>();
            };
        

            json serialize_VkDebugReportObjectTypeEXT(VkDebugReportObjectTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugReportObjectTypeEXT deserialize_VkDebugReportObjectTypeEXT(json name){
                return name["value"].get<VkDebugReportObjectTypeEXT>();
            };
        

            json serialize_VkDeviceMemoryReportEventTypeEXT(VkDeviceMemoryReportEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceMemoryReportEventTypeEXT deserialize_VkDeviceMemoryReportEventTypeEXT(json name){
                return name["value"].get<VkDeviceMemoryReportEventTypeEXT>();
            };
        

            json serialize_VkRasterizationOrderAMD(VkRasterizationOrderAMD name){
                return json::object({{"value",name}});
            };
        

            VkRasterizationOrderAMD deserialize_VkRasterizationOrderAMD(json name){
                return name["value"].get<VkRasterizationOrderAMD>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsNV(VkExternalMemoryHandleTypeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsNV deserialize_VkExternalMemoryHandleTypeFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsNV>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsNV(VkExternalMemoryFeatureFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsNV deserialize_VkExternalMemoryFeatureFlagBitsNV(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsNV>();
            };
        

            json serialize_VkValidationCheckEXT(VkValidationCheckEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationCheckEXT deserialize_VkValidationCheckEXT(json name){
                return name["value"].get<VkValidationCheckEXT>();
            };
        

            json serialize_VkValidationFeatureEnableEXT(VkValidationFeatureEnableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureEnableEXT deserialize_VkValidationFeatureEnableEXT(json name){
                return name["value"].get<VkValidationFeatureEnableEXT>();
            };
        

            json serialize_VkValidationFeatureDisableEXT(VkValidationFeatureDisableEXT name){
                return json::object({{"value",name}});
            };
        

            VkValidationFeatureDisableEXT deserialize_VkValidationFeatureDisableEXT(json name){
                return name["value"].get<VkValidationFeatureDisableEXT>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBits(VkExternalMemoryHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBits deserialize_VkExternalMemoryHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalMemoryHandleTypeFlagBitsKHR(VkExternalMemoryHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryHandleTypeFlagBitsKHR deserialize_VkExternalMemoryHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBits(VkExternalMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBits deserialize_VkExternalMemoryFeatureFlagBits(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBits>();
            };
        

            json serialize_VkExternalMemoryFeatureFlagBitsKHR(VkExternalMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalMemoryFeatureFlagBitsKHR deserialize_VkExternalMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBits(VkExternalSemaphoreHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBits deserialize_VkExternalSemaphoreHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(VkExternalSemaphoreHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreHandleTypeFlagBitsKHR deserialize_VkExternalSemaphoreHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBits(VkExternalSemaphoreFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBits deserialize_VkExternalSemaphoreFeatureFlagBits(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBits>();
            };
        

            json serialize_VkExternalSemaphoreFeatureFlagBitsKHR(VkExternalSemaphoreFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalSemaphoreFeatureFlagBitsKHR deserialize_VkExternalSemaphoreFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalSemaphoreFeatureFlagBitsKHR>();
            };
        

            json serialize_VkSemaphoreImportFlagBits(VkSemaphoreImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBits deserialize_VkSemaphoreImportFlagBits(json name){
                return name["value"].get<VkSemaphoreImportFlagBits>();
            };
        

            json serialize_VkSemaphoreImportFlagBitsKHR(VkSemaphoreImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSemaphoreImportFlagBitsKHR deserialize_VkSemaphoreImportFlagBitsKHR(json name){
                return name["value"].get<VkSemaphoreImportFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBits(VkExternalFenceHandleTypeFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBits deserialize_VkExternalFenceHandleTypeFlagBits(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBits>();
            };
        

            json serialize_VkExternalFenceHandleTypeFlagBitsKHR(VkExternalFenceHandleTypeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceHandleTypeFlagBitsKHR deserialize_VkExternalFenceHandleTypeFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceHandleTypeFlagBitsKHR>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBits(VkExternalFenceFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBits deserialize_VkExternalFenceFeatureFlagBits(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBits>();
            };
        

            json serialize_VkExternalFenceFeatureFlagBitsKHR(VkExternalFenceFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkExternalFenceFeatureFlagBitsKHR deserialize_VkExternalFenceFeatureFlagBitsKHR(json name){
                return name["value"].get<VkExternalFenceFeatureFlagBitsKHR>();
            };
        

            json serialize_VkFenceImportFlagBits(VkFenceImportFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBits deserialize_VkFenceImportFlagBits(json name){
                return name["value"].get<VkFenceImportFlagBits>();
            };
        

            json serialize_VkFenceImportFlagBitsKHR(VkFenceImportFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkFenceImportFlagBitsKHR deserialize_VkFenceImportFlagBitsKHR(json name){
                return name["value"].get<VkFenceImportFlagBitsKHR>();
            };
        

            json serialize_VkSurfaceCounterFlagBitsEXT(VkSurfaceCounterFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkSurfaceCounterFlagBitsEXT deserialize_VkSurfaceCounterFlagBitsEXT(json name){
                return name["value"].get<VkSurfaceCounterFlagBitsEXT>();
            };
        

            json serialize_VkDisplayPowerStateEXT(VkDisplayPowerStateEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayPowerStateEXT deserialize_VkDisplayPowerStateEXT(json name){
                return name["value"].get<VkDisplayPowerStateEXT>();
            };
        

            json serialize_VkDeviceEventTypeEXT(VkDeviceEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceEventTypeEXT deserialize_VkDeviceEventTypeEXT(json name){
                return name["value"].get<VkDeviceEventTypeEXT>();
            };
        

            json serialize_VkDisplayEventTypeEXT(VkDisplayEventTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDisplayEventTypeEXT deserialize_VkDisplayEventTypeEXT(json name){
                return name["value"].get<VkDisplayEventTypeEXT>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBits(VkPeerMemoryFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBits deserialize_VkPeerMemoryFeatureFlagBits(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBits>();
            };
        

            json serialize_VkPeerMemoryFeatureFlagBitsKHR(VkPeerMemoryFeatureFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkPeerMemoryFeatureFlagBitsKHR deserialize_VkPeerMemoryFeatureFlagBitsKHR(json name){
                return name["value"].get<VkPeerMemoryFeatureFlagBitsKHR>();
            };
        

            json serialize_VkMemoryAllocateFlagBits(VkMemoryAllocateFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBits deserialize_VkMemoryAllocateFlagBits(json name){
                return name["value"].get<VkMemoryAllocateFlagBits>();
            };
        

            json serialize_VkMemoryAllocateFlagBitsKHR(VkMemoryAllocateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkMemoryAllocateFlagBitsKHR deserialize_VkMemoryAllocateFlagBitsKHR(json name){
                return name["value"].get<VkMemoryAllocateFlagBitsKHR>();
            };
        

            json serialize_VkDeviceGroupPresentModeFlagBitsKHR(VkDeviceGroupPresentModeFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkDeviceGroupPresentModeFlagBitsKHR deserialize_VkDeviceGroupPresentModeFlagBitsKHR(json name){
                return name["value"].get<VkDeviceGroupPresentModeFlagBitsKHR>();
            };
        

            json serialize_VkSwapchainCreateFlagBitsKHR(VkSwapchainCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSwapchainCreateFlagBitsKHR deserialize_VkSwapchainCreateFlagBitsKHR(json name){
                return name["value"].get<VkSwapchainCreateFlagBitsKHR>();
            };
        

            json serialize_VkSubgroupFeatureFlagBits(VkSubgroupFeatureFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubgroupFeatureFlagBits deserialize_VkSubgroupFeatureFlagBits(json name){
                return name["value"].get<VkSubgroupFeatureFlagBits>();
            };
        

            json serialize_VkTessellationDomainOrigin(VkTessellationDomainOrigin name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOrigin deserialize_VkTessellationDomainOrigin(json name){
                return name["value"].get<VkTessellationDomainOrigin>();
            };
        

            json serialize_VkTessellationDomainOriginKHR(VkTessellationDomainOriginKHR name){
                return json::object({{"value",name}});
            };
        

            VkTessellationDomainOriginKHR deserialize_VkTessellationDomainOriginKHR(json name){
                return name["value"].get<VkTessellationDomainOriginKHR>();
            };
        

            json serialize_VkSamplerYcbcrModelConversion(VkSamplerYcbcrModelConversion name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversion deserialize_VkSamplerYcbcrModelConversion(json name){
                return name["value"].get<VkSamplerYcbcrModelConversion>();
            };
        

            json serialize_VkSamplerYcbcrModelConversionKHR(VkSamplerYcbcrModelConversionKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrModelConversionKHR deserialize_VkSamplerYcbcrModelConversionKHR(json name){
                return name["value"].get<VkSamplerYcbcrModelConversionKHR>();
            };
        

            json serialize_VkSamplerYcbcrRange(VkSamplerYcbcrRange name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRange deserialize_VkSamplerYcbcrRange(json name){
                return name["value"].get<VkSamplerYcbcrRange>();
            };
        

            json serialize_VkSamplerYcbcrRangeKHR(VkSamplerYcbcrRangeKHR name){
                return json::object({{"value",name}});
            };
        

            VkSamplerYcbcrRangeKHR deserialize_VkSamplerYcbcrRangeKHR(json name){
                return name["value"].get<VkSamplerYcbcrRangeKHR>();
            };
        

            json serialize_VkChromaLocation(VkChromaLocation name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocation deserialize_VkChromaLocation(json name){
                return name["value"].get<VkChromaLocation>();
            };
        

            json serialize_VkChromaLocationKHR(VkChromaLocationKHR name){
                return json::object({{"value",name}});
            };
        

            VkChromaLocationKHR deserialize_VkChromaLocationKHR(json name){
                return name["value"].get<VkChromaLocationKHR>();
            };
        

            json serialize_VkSamplerReductionMode(VkSamplerReductionMode name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionMode deserialize_VkSamplerReductionMode(json name){
                return name["value"].get<VkSamplerReductionMode>();
            };
        

            json serialize_VkSamplerReductionModeEXT(VkSamplerReductionModeEXT name){
                return json::object({{"value",name}});
            };
        

            VkSamplerReductionModeEXT deserialize_VkSamplerReductionModeEXT(json name){
                return name["value"].get<VkSamplerReductionModeEXT>();
            };
        

            json serialize_VkBlendOverlapEXT(VkBlendOverlapEXT name){
                return json::object({{"value",name}});
            };
        

            VkBlendOverlapEXT deserialize_VkBlendOverlapEXT(json name){
                return name["value"].get<VkBlendOverlapEXT>();
            };
        

            json serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(VkDebugUtilsMessageSeverityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageSeverityFlagBitsEXT deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageSeverityFlagBitsEXT>();
            };
        

            json serialize_VkDebugUtilsMessageTypeFlagBitsEXT(VkDebugUtilsMessageTypeFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkDebugUtilsMessageTypeFlagBitsEXT deserialize_VkDebugUtilsMessageTypeFlagBitsEXT(json name){
                return name["value"].get<VkDebugUtilsMessageTypeFlagBitsEXT>();
            };
        

            json serialize_VkShaderFloatControlsIndependence(VkShaderFloatControlsIndependence name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependence deserialize_VkShaderFloatControlsIndependence(json name){
                return name["value"].get<VkShaderFloatControlsIndependence>();
            };
        

            json serialize_VkShaderFloatControlsIndependenceKHR(VkShaderFloatControlsIndependenceKHR name){
                return json::object({{"value",name}});
            };
        

            VkShaderFloatControlsIndependenceKHR deserialize_VkShaderFloatControlsIndependenceKHR(json name){
                return name["value"].get<VkShaderFloatControlsIndependenceKHR>();
            };
        

            json serialize_VkFragmentShadingRateCombinerOpKHR(VkFragmentShadingRateCombinerOpKHR name){
                return json::object({{"value",name}});
            };
        

            VkFragmentShadingRateCombinerOpKHR deserialize_VkFragmentShadingRateCombinerOpKHR(json name){
                return name["value"].get<VkFragmentShadingRateCombinerOpKHR>();
            };
        

            json serialize_VkSubmitFlagBits(VkSubmitFlagBits name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBits deserialize_VkSubmitFlagBits(json name){
                return name["value"].get<VkSubmitFlagBits>();
            };
        

            json serialize_VkSubmitFlagBitsKHR(VkSubmitFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkSubmitFlagBitsKHR deserialize_VkSubmitFlagBitsKHR(json name){
                return name["value"].get<VkSubmitFlagBitsKHR>();
            };
        

            json serialize_VkGraphicsPipelineLibraryFlagBitsEXT(VkGraphicsPipelineLibraryFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkGraphicsPipelineLibraryFlagBitsEXT deserialize_VkGraphicsPipelineLibraryFlagBitsEXT(json name){
                return name["value"].get<VkGraphicsPipelineLibraryFlagBitsEXT>();
            };
        

            json serialize_VkOpticalFlowGridSizeFlagBitsNV(VkOpticalFlowGridSizeFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowGridSizeFlagBitsNV deserialize_VkOpticalFlowGridSizeFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowGridSizeFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowUsageFlagBitsNV(VkOpticalFlowUsageFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowUsageFlagBitsNV deserialize_VkOpticalFlowUsageFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowUsageFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowPerformanceLevelNV(VkOpticalFlowPerformanceLevelNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowPerformanceLevelNV deserialize_VkOpticalFlowPerformanceLevelNV(json name){
                return name["value"].get<VkOpticalFlowPerformanceLevelNV>();
            };
        

            json serialize_VkOpticalFlowSessionBindingPointNV(VkOpticalFlowSessionBindingPointNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionBindingPointNV deserialize_VkOpticalFlowSessionBindingPointNV(json name){
                return name["value"].get<VkOpticalFlowSessionBindingPointNV>();
            };
        

            json serialize_VkOpticalFlowSessionCreateFlagBitsNV(VkOpticalFlowSessionCreateFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowSessionCreateFlagBitsNV deserialize_VkOpticalFlowSessionCreateFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowSessionCreateFlagBitsNV>();
            };
        

            json serialize_VkOpticalFlowExecuteFlagBitsNV(VkOpticalFlowExecuteFlagBitsNV name){
                return json::object({{"value",name}});
            };
        

            VkOpticalFlowExecuteFlagBitsNV deserialize_VkOpticalFlowExecuteFlagBitsNV(json name){
                return name["value"].get<VkOpticalFlowExecuteFlagBitsNV>();
            };
        

            json serialize_VkDeviceFaultAddressTypeEXT(VkDeviceFaultAddressTypeEXT name){
                return json::object({{"value",name}});
            };
        

            VkDeviceFaultAddressTypeEXT deserialize_VkDeviceFaultAddressTypeEXT(json name){
                return name["value"].get<VkDeviceFaultAddressTypeEXT>();
            };
        

            json serialize_VkPresentScalingFlagBitsEXT(VkPresentScalingFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentScalingFlagBitsEXT deserialize_VkPresentScalingFlagBitsEXT(json name){
                return name["value"].get<VkPresentScalingFlagBitsEXT>();
            };
        

            json serialize_VkPresentGravityFlagBitsEXT(VkPresentGravityFlagBitsEXT name){
                return json::object({{"value",name}});
            };
        

            VkPresentGravityFlagBitsEXT deserialize_VkPresentGravityFlagBitsEXT(json name){
                return name["value"].get<VkPresentGravityFlagBitsEXT>();
            };
        

            json serialize_VkVendorId(VkVendorId name){
                return json::object({{"value",name}});
            };
        

            VkVendorId deserialize_VkVendorId(json name){
                return name["value"].get<VkVendorId>();
            };
        

            json serialize_VkDriverId(VkDriverId name){
                return json::object({{"value",name}});
            };
        

            VkDriverId deserialize_VkDriverId(json name){
                return name["value"].get<VkDriverId>();
            };
        

            json serialize_VkDriverIdKHR(VkDriverIdKHR name){
                return json::object({{"value",name}});
            };
        

            VkDriverIdKHR deserialize_VkDriverIdKHR(json name){
                return name["value"].get<VkDriverIdKHR>();
            };
        

            json serialize_VkShadingRatePaletteEntryNV(VkShadingRatePaletteEntryNV name){
                return json::object({{"value",name}});
            };
        

            VkShadingRatePaletteEntryNV deserialize_VkShadingRatePaletteEntryNV(json name){
                return name["value"].get<VkShadingRatePaletteEntryNV>();
            };
        

            json serialize_VkCoarseSampleOrderTypeNV(VkCoarseSampleOrderTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkCoarseSampleOrderTypeNV deserialize_VkCoarseSampleOrderTypeNV(json name){
                return name["value"].get<VkCoarseSampleOrderTypeNV>();
            };
        

            json serialize_VkPipelineExecutableStatisticFormatKHR(VkPipelineExecutableStatisticFormatKHR name){
                return json::object({{"value",name}});
            };
        

            VkPipelineExecutableStatisticFormatKHR deserialize_VkPipelineExecutableStatisticFormatKHR(json name){
                return name["value"].get<VkPipelineExecutableStatisticFormatKHR>();
            };
        

            json serialize_VkVideoCodecOperationFlagBitsKHR(VkVideoCodecOperationFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodecOperationFlagBitsKHR deserialize_VkVideoCodecOperationFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodecOperationFlagBitsKHR>();
            };
        

            json serialize_VkVideoChromaSubsamplingFlagBitsKHR(VkVideoChromaSubsamplingFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoChromaSubsamplingFlagBitsKHR deserialize_VkVideoChromaSubsamplingFlagBitsKHR(json name){
                return name["value"].get<VkVideoChromaSubsamplingFlagBitsKHR>();
            };
        

            json serialize_VkVideoComponentBitDepthFlagBitsKHR(VkVideoComponentBitDepthFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoComponentBitDepthFlagBitsKHR deserialize_VkVideoComponentBitDepthFlagBitsKHR(json name){
                return name["value"].get<VkVideoComponentBitDepthFlagBitsKHR>();
            };
        

            json serialize_VkVideoCapabilityFlagBitsKHR(VkVideoCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCapabilityFlagBitsKHR deserialize_VkVideoCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoSessionCreateFlagBitsKHR(VkVideoSessionCreateFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoSessionCreateFlagBitsKHR deserialize_VkVideoSessionCreateFlagBitsKHR(json name){
                return name["value"].get<VkVideoSessionCreateFlagBitsKHR>();
            };
        

            json serialize_VkVideoCodingControlFlagBitsKHR(VkVideoCodingControlFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoCodingControlFlagBitsKHR deserialize_VkVideoCodingControlFlagBitsKHR(json name){
                return name["value"].get<VkVideoCodingControlFlagBitsKHR>();
            };
        

            json serialize_VkQueryResultStatusKHR(VkQueryResultStatusKHR name){
                return json::object({{"value",name}});
            };
        

            VkQueryResultStatusKHR deserialize_VkQueryResultStatusKHR(json name){
                return name["value"].get<VkQueryResultStatusKHR>();
            };
        

            json serialize_VkVideoDecodeUsageFlagBitsKHR(VkVideoDecodeUsageFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeUsageFlagBitsKHR deserialize_VkVideoDecodeUsageFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeUsageFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeCapabilityFlagBitsKHR(VkVideoDecodeCapabilityFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeCapabilityFlagBitsKHR deserialize_VkVideoDecodeCapabilityFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeCapabilityFlagBitsKHR>();
            };
        

            json serialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(VkVideoDecodeH264PictureLayoutFlagBitsKHR name){
                return json::object({{"value",name}});
            };
        

            VkVideoDecodeH264PictureLayoutFlagBitsKHR deserialize_VkVideoDecodeH264PictureLayoutFlagBitsKHR(json name){
                return name["value"].get<VkVideoDecodeH264PictureLayoutFlagBitsKHR>();
            };
        

            json serialize_VkAccelerationStructureMotionInstanceTypeNV(VkAccelerationStructureMotionInstanceTypeNV name){
                return json::object({{"value",name}});
            };
        

            VkAccelerationStructureMotionInstanceTypeNV deserialize_VkAccelerationStructureMotionInstanceTypeNV(json name){
                return name["value"].get<VkAccelerationStructureMotionInstanceTypeNV>();
            };
        

        json serialize_Display_p(const Display* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Display* deserialize_Display_p(json name){
            return (Display*) (uintptr_t)name["value"];
        };
    

        json serialize_VisualID_p(const VisualID* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        VisualID* deserialize_VisualID_p(json name){
            return (VisualID*) (uintptr_t)name["value"];
        };
    

            json serialize_VisualID(const VisualID name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            VisualID deserialize_VisualID(json name){
                return (VisualID) name["value"];
            };
        

        json serialize_Window_p(const Window* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        Window* deserialize_Window_p(json name){
            return (Window*) (uintptr_t)name["value"];
        };
    

            json serialize_Window(const Window name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            Window deserialize_Window(json name){
                return (Window) name["value"];
            };
        

        json serialize_xcb_connection_t_p(const xcb_connection_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_connection_t* deserialize_xcb_connection_t_p(json name){
            return (xcb_connection_t*) (uintptr_t)name["value"];
        };
    

        json serialize_xcb_visualid_t_p(const xcb_visualid_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_visualid_t* deserialize_xcb_visualid_t_p(json name){
            return (xcb_visualid_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_visualid_t(const xcb_visualid_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_visualid_t deserialize_xcb_visualid_t(json name){
                return (xcb_visualid_t) name["value"];
            };
        

        json serialize_xcb_window_t_p(const xcb_window_t* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        xcb_window_t* deserialize_xcb_window_t_p(json name){
            return (xcb_window_t*) (uintptr_t)name["value"];
        };
    

            json serialize_xcb_window_t(const xcb_window_t name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            xcb_window_t deserialize_xcb_window_t(json name){
                return (xcb_window_t) name["value"];
            };
        

        json serialize_StdVideoH264ProfileIdc_p(const StdVideoH264ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ProfileIdc* deserialize_StdVideoH264ProfileIdc_p(json name){
            return (StdVideoH264ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264ProfileIdc(const StdVideoH264ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264ProfileIdc deserialize_StdVideoH264ProfileIdc(json name){
                return (StdVideoH264ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH264LevelIdc_p(const StdVideoH264LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264LevelIdc* deserialize_StdVideoH264LevelIdc_p(json name){
            return (StdVideoH264LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH264LevelIdc(const StdVideoH264LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH264LevelIdc deserialize_StdVideoH264LevelIdc(json name){
                return (StdVideoH264LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH264ChromaFormatIdc_p(const StdVideoH264ChromaFormatIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ChromaFormatIdc* deserialize_StdVideoH264ChromaFormatIdc_p(json name){
            return (StdVideoH264ChromaFormatIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PocType_p(const StdVideoH264PocType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PocType* deserialize_StdVideoH264PocType_p(json name){
            return (StdVideoH264PocType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsFlags_p(const StdVideoH264SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsFlags* deserialize_StdVideoH264SpsFlags_p(json name){
            return (StdVideoH264SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ScalingLists_p(const StdVideoH264ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ScalingLists* deserialize_StdVideoH264ScalingLists_p(json name){
            return (StdVideoH264ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSetVui_p(const StdVideoH264SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSetVui* deserialize_StdVideoH264SequenceParameterSetVui_p(json name){
            return (StdVideoH264SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264AspectRatioIdc_p(const StdVideoH264AspectRatioIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264AspectRatioIdc* deserialize_StdVideoH264AspectRatioIdc_p(json name){
            return (StdVideoH264AspectRatioIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264HrdParameters_p(const StdVideoH264HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264HrdParameters* deserialize_StdVideoH264HrdParameters_p(json name){
            return (StdVideoH264HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SpsVuiFlags_p(const StdVideoH264SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SpsVuiFlags* deserialize_StdVideoH264SpsVuiFlags_p(json name){
            return (StdVideoH264SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264WeightedBipredIdc_p(const StdVideoH264WeightedBipredIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264WeightedBipredIdc* deserialize_StdVideoH264WeightedBipredIdc_p(json name){
            return (StdVideoH264WeightedBipredIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PpsFlags_p(const StdVideoH264PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PpsFlags* deserialize_StdVideoH264PpsFlags_p(json name){
            return (StdVideoH264PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SliceType_p(const StdVideoH264SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SliceType* deserialize_StdVideoH264SliceType_p(json name){
            return (StdVideoH264SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264CabacInitIdc_p(const StdVideoH264CabacInitIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264CabacInitIdc* deserialize_StdVideoH264CabacInitIdc_p(json name){
            return (StdVideoH264CabacInitIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264DisableDeblockingFilterIdc_p(const StdVideoH264DisableDeblockingFilterIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264DisableDeblockingFilterIdc* deserialize_StdVideoH264DisableDeblockingFilterIdc_p(json name){
            return (StdVideoH264DisableDeblockingFilterIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureType_p(const StdVideoH264PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureType* deserialize_StdVideoH264PictureType_p(json name){
            return (StdVideoH264PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264ModificationOfPicNumsIdc_p(const StdVideoH264ModificationOfPicNumsIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264ModificationOfPicNumsIdc* deserialize_StdVideoH264ModificationOfPicNumsIdc_p(json name){
            return (StdVideoH264ModificationOfPicNumsIdc*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264MemMgmtControlOp_p(const StdVideoH264MemMgmtControlOp* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264MemMgmtControlOp* deserialize_StdVideoH264MemMgmtControlOp_p(json name){
            return (StdVideoH264MemMgmtControlOp*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfo_p(const StdVideoDecodeH264PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfo* deserialize_StdVideoDecodeH264PictureInfo_p(json name){
            return (StdVideoDecodeH264PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfo_p(const StdVideoDecodeH264ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfo* deserialize_StdVideoDecodeH264ReferenceInfo_p(json name){
            return (StdVideoDecodeH264ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264PictureInfoFlags_p(const StdVideoDecodeH264PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264PictureInfoFlags* deserialize_StdVideoDecodeH264PictureInfoFlags_p(json name){
            return (StdVideoDecodeH264PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH264ReferenceInfoFlags_p(const StdVideoDecodeH264ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH264ReferenceInfoFlags* deserialize_StdVideoDecodeH264ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH264ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264SequenceParameterSet_p(const StdVideoH264SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264SequenceParameterSet* deserialize_StdVideoH264SequenceParameterSet_p(json name){
            return (StdVideoH264SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH264PictureParameterSet_p(const StdVideoH264PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH264PictureParameterSet* deserialize_StdVideoH264PictureParameterSet_p(json name){
            return (StdVideoH264PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ProfileIdc_p(const StdVideoH265ProfileIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ProfileIdc* deserialize_StdVideoH265ProfileIdc_p(json name){
            return (StdVideoH265ProfileIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265ProfileIdc(const StdVideoH265ProfileIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265ProfileIdc deserialize_StdVideoH265ProfileIdc(json name){
                return (StdVideoH265ProfileIdc) name["value"];
            };
        

        json serialize_StdVideoH265VideoParameterSet_p(const StdVideoH265VideoParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VideoParameterSet* deserialize_StdVideoH265VideoParameterSet_p(json name){
            return (StdVideoH265VideoParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSet_p(const StdVideoH265SequenceParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSet* deserialize_StdVideoH265SequenceParameterSet_p(json name){
            return (StdVideoH265SequenceParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureParameterSet_p(const StdVideoH265PictureParameterSet* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureParameterSet* deserialize_StdVideoH265PictureParameterSet_p(json name){
            return (StdVideoH265PictureParameterSet*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265DecPicBufMgr_p(const StdVideoH265DecPicBufMgr* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265DecPicBufMgr* deserialize_StdVideoH265DecPicBufMgr_p(json name){
            return (StdVideoH265DecPicBufMgr*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdParameters_p(const StdVideoH265HrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdParameters* deserialize_StdVideoH265HrdParameters_p(json name){
            return (StdVideoH265HrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265VpsFlags_p(const StdVideoH265VpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265VpsFlags* deserialize_StdVideoH265VpsFlags_p(json name){
            return (StdVideoH265VpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265LevelIdc_p(const StdVideoH265LevelIdc* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265LevelIdc* deserialize_StdVideoH265LevelIdc_p(json name){
            return (StdVideoH265LevelIdc*) (uintptr_t)name["value"];
        };
    

            json serialize_StdVideoH265LevelIdc(const StdVideoH265LevelIdc name){
                return json::object({{"value",(uintptr_t)name}});
            };
        

            StdVideoH265LevelIdc deserialize_StdVideoH265LevelIdc(json name){
                return (StdVideoH265LevelIdc) name["value"];
            };
        

        json serialize_StdVideoH265SpsFlags_p(const StdVideoH265SpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsFlags* deserialize_StdVideoH265SpsFlags_p(json name){
            return (StdVideoH265SpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265ScalingLists_p(const StdVideoH265ScalingLists* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265ScalingLists* deserialize_StdVideoH265ScalingLists_p(json name){
            return (StdVideoH265ScalingLists*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SequenceParameterSetVui_p(const StdVideoH265SequenceParameterSetVui* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SequenceParameterSetVui* deserialize_StdVideoH265SequenceParameterSetVui_p(json name){
            return (StdVideoH265SequenceParameterSetVui*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PredictorPaletteEntries_p(const StdVideoH265PredictorPaletteEntries* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PredictorPaletteEntries* deserialize_StdVideoH265PredictorPaletteEntries_p(json name){
            return (StdVideoH265PredictorPaletteEntries*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PpsFlags_p(const StdVideoH265PpsFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PpsFlags* deserialize_StdVideoH265PpsFlags_p(json name){
            return (StdVideoH265PpsFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SubLayerHrdParameters_p(const StdVideoH265SubLayerHrdParameters* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SubLayerHrdParameters* deserialize_StdVideoH265SubLayerHrdParameters_p(json name){
            return (StdVideoH265SubLayerHrdParameters*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265HrdFlags_p(const StdVideoH265HrdFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265HrdFlags* deserialize_StdVideoH265HrdFlags_p(json name){
            return (StdVideoH265HrdFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SpsVuiFlags_p(const StdVideoH265SpsVuiFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SpsVuiFlags* deserialize_StdVideoH265SpsVuiFlags_p(json name){
            return (StdVideoH265SpsVuiFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265SliceType_p(const StdVideoH265SliceType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265SliceType* deserialize_StdVideoH265SliceType_p(json name){
            return (StdVideoH265SliceType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoH265PictureType_p(const StdVideoH265PictureType* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoH265PictureType* deserialize_StdVideoH265PictureType_p(json name){
            return (StdVideoH265PictureType*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfo_p(const StdVideoDecodeH265PictureInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfo* deserialize_StdVideoDecodeH265PictureInfo_p(json name){
            return (StdVideoDecodeH265PictureInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfo_p(const StdVideoDecodeH265ReferenceInfo* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfo* deserialize_StdVideoDecodeH265ReferenceInfo_p(json name){
            return (StdVideoDecodeH265ReferenceInfo*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265PictureInfoFlags_p(const StdVideoDecodeH265PictureInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265PictureInfoFlags* deserialize_StdVideoDecodeH265PictureInfoFlags_p(json name){
            return (StdVideoDecodeH265PictureInfoFlags*) (uintptr_t)name["value"];
        };
    

        json serialize_StdVideoDecodeH265ReferenceInfoFlags_p(const StdVideoDecodeH265ReferenceInfoFlags* name){
            return json::object({{"value",(uintptr_t)name}});
        };
    

        StdVideoDecodeH265ReferenceInfoFlags* deserialize_StdVideoDecodeH265ReferenceInfoFlags_p(json name){
            return (StdVideoDecodeH265ReferenceInfoFlags*) (uintptr_t)name["value"];
        };
    
std::map<uintptr_t,PFN_vkInternalAllocationNotification> id_to_PFN_vkInternalAllocationNotification;

    json serialize_PFN_vkInternalAllocationNotification(PFN_vkInternalAllocationNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalAllocationNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalAllocationNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalAllocationNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalAllocationNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_kdqoKtJ=json({});
    
        if (_struct->pUserData==NULL){
            return_kdqoKtJ["null"]=true;
            return return_kdqoKtJ;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_gSXeCwT=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_jdwEPQA=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_hzBqeHA=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalAllocationNotification_response"){
        
handle_PFN_vkInternalAllocationNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalAllocationNotification deserialize_PFN_vkInternalAllocationNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalAllocationNotification_wrapper;
            };
        

            void handle_PFN_vkInternalAllocationNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalAllocationNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalAllocationNotification[data["id"]];
            
            result["type"]="PFN_vkInternalAllocationNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_vEbqnvQ=json({});
    
        if (pUserData==NULL){
            return_vEbqnvQ["null"]=true;
            return return_vEbqnvQ;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_DWXXJEn=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_mhQXJFK=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_UcULqMa=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalAllocationNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalAllocationNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkInternalFreeNotification> id_to_PFN_vkInternalFreeNotification;

    json serialize_PFN_vkInternalFreeNotification(PFN_vkInternalFreeNotification name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkInternalFreeNotification[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkInternalFreeNotification_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkInternalFreeNotification_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkInternalFreeNotification_id;
            
data["members"]["pUserData"]=[&]() {
    json return_ncpHEEx=json({});
    
        if (_struct->pUserData==NULL){
            return_ncpHEEx["null"]=true;
            return return_ncpHEEx;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_ysDdMnc=json({});
    return serialize_size_t(size);}();
data["members"]["allocationType"]=[&]() {
    json return_WLDUjYM=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
data["members"]["allocationScope"]=[&]() {
    json return_huLuCUc=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkInternalFreeNotification_response"){
        
handle_PFN_vkInternalFreeNotification_response(data, _struct->pUserData, size, allocationType, allocationScope);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkInternalFreeNotification deserialize_PFN_vkInternalFreeNotification(json name){
            //Will only be called by the server
            
            return PFN_vkInternalFreeNotification_wrapper;
            };
        

            void handle_PFN_vkInternalFreeNotification_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkInternalFreeNotification wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkInternalFreeNotification[data["id"]];
            
            result["type"]="PFN_vkInternalFreeNotification_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 VkInternalAllocationType                    allocationType;
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
funcpointer(pUserData,size,allocationType,allocationScope);
result["params"]["pUserData"]=[&]() {
    json return_cEVtnof=json({});
    
        if (pUserData==NULL){
            return_cEVtnof["null"]=true;
            return return_cEVtnof;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_uRrThsl=json({});
    return serialize_size_t(size);}();
result["params"]["allocationType"]=[&]() {
    json return_NJMQZVL=json({});
    return serialize_VkInternalAllocationType(allocationType);}();
result["params"]["allocationScope"]=[&]() {
    json return_TsBrtAQ=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);
};

        void handle_PFN_vkInternalFreeNotification_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    VkInternalAllocationType                    allocationType,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkInternalFreeNotification
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
allocationType=deserialize_VkInternalAllocationType(data["members"]["allocationType"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();

}
std::map<uintptr_t,PFN_vkReallocationFunction> id_to_PFN_vkReallocationFunction;

    json serialize_PFN_vkReallocationFunction(PFN_vkReallocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkReallocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkReallocationFunction_wrapper(
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkReallocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkReallocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_CkoKySj=json({});
    
        if (_struct->pUserData==NULL){
            return_CkoKySj["null"]=true;
            return return_CkoKySj;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pOriginal"]=[&]() {
    json return_ShXjJOs=json({});
    
        if (pOriginal==NULL){
            return_ShXjJOs["null"]=true;
            return return_ShXjJOs;
        }
        return serialize_void_p(pOriginal);
}();
data["members"]["size"]=[&]() {
    json return_eJvUjhE=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_ZHTvdGf=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_hXlVVqx=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkReallocationFunction_response"){
        
auto result= handle_PFN_vkReallocationFunction_response(data, _struct->pUserData, pOriginal, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkReallocationFunction deserialize_PFN_vkReallocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkReallocationFunction_wrapper;
            };
        

            void handle_PFN_vkReallocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkReallocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkReallocationFunction[data["id"]];
            
            result["type"]="PFN_vkReallocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pOriginal;
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,pOriginal,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_PiZLySw=json({});
    
        if (result_temp==NULL){
            return_PiZLySw["null"]=true;
            return return_PiZLySw;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_SdqklcA=json({});
    
        if (pUserData==NULL){
            return_SdqklcA["null"]=true;
            return return_SdqklcA;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pOriginal"]=[&]() {
    json return_zScOwbV=json({});
    
        if (pOriginal==NULL){
            return_zScOwbV["null"]=true;
            return return_zScOwbV;
        }
        return serialize_void_p(pOriginal);
}();
result["params"]["size"]=[&]() {
    json return_HuqUZmY=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_Cgtinym=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_WlsxcWw=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkReallocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkReallocationFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pOriginal,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkReallocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pOriginal"].contains("null")){
        pOriginal=NULL;
        }
    pOriginal=deserialize_void_p(data["members"]["pOriginal"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkReallocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkAllocationFunction> id_to_PFN_vkAllocationFunction;

    json serialize_PFN_vkAllocationFunction(PFN_vkAllocationFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkAllocationFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkAllocationFunction_wrapper(
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope){
            json data=json({});
            data["type"]="PFN_vkAllocationFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkAllocationFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_UFJwsNc=json({});
    
        if (_struct->pUserData==NULL){
            return_UFJwsNc["null"]=true;
            return return_UFJwsNc;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["size"]=[&]() {
    json return_GUipczd=json({});
    return serialize_size_t(size);}();
data["members"]["alignment"]=[&]() {
    json return_eaPeZoV=json({});
    return serialize_size_t(alignment);}();
data["members"]["allocationScope"]=[&]() {
    json return_RylMUwh=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkAllocationFunction_response"){
        
auto result= handle_PFN_vkAllocationFunction_response(data, _struct->pUserData, size, alignment, allocationScope);

                allocated_mems[(uintptr_t)result]=size;
            

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkAllocationFunction deserialize_PFN_vkAllocationFunction(json name){
            //Will only be called by the server
            
            return PFN_vkAllocationFunction_wrapper;
            };
        

            void handle_PFN_vkAllocationFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkAllocationFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkAllocationFunction[data["id"]];
            
            result["type"]="PFN_vkAllocationFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 size_t                                      size;
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
 size_t                                      alignment;
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
 VkSystemAllocationScope                     allocationScope;
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
auto result_temp=funcpointer(pUserData,size,alignment,allocationScope);
result["result"]=[&]() {
    json return_nMMjzQr=json({});
    
        if (result_temp==NULL){
            return_nMMjzQr["null"]=true;
            return return_nMMjzQr;
        }
        return serialize_void_p(result_temp);
}();
result["params"]["pUserData"]=[&]() {
    json return_GbMRnpG=json({});
    
        if (pUserData==NULL){
            return_GbMRnpG["null"]=true;
            return return_GbMRnpG;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["size"]=[&]() {
    json return_gGAvSWo=json({});
    return serialize_size_t(size);}();
result["params"]["alignment"]=[&]() {
    json return_jOiAKcQ=json({});
    return serialize_size_t(alignment);}();
result["params"]["allocationScope"]=[&]() {
    json return_needNLJ=json({});
    return serialize_VkSystemAllocationScope(allocationScope);}();
writeToConn(result);

                while(true){
                    data=readFromConn();
                    if (data["type"]=="PFN_vkAllocationFunction_malloc"){
                        client_to_server_mem[(uintptr_t)result["result"]]=data["mem"];
                        server_to_client_mem[data["mem"]]=(uintptr_t)result["result"];
                        break;
                    }
                }
            
};

        void* handle_PFN_vkAllocationFunction_response(json data, 
    void*                                       pUserData,
    size_t                                      size,
    size_t                                      alignment,
    VkSystemAllocationScope                     allocationScope) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkAllocationFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {
size=deserialize_size_t(data["members"]["size"]);}();
[&]() {
alignment=deserialize_size_t(data["members"]["alignment"]);}();
[&]() {
allocationScope=deserialize_VkSystemAllocationScope(data["members"]["allocationScope"]);}();
void* result;
[&]() {

        if (data["result"].contains("null")){
        result=NULL;
        }
    result=deserialize_void_p(data["result"]);
}();

            json _malloc=json({});
            _malloc["type"]="PFN_vkAllocationFunction_malloc";
            _malloc["mem"]=(uintptr_t)result;
            
            writeToConn(_malloc);
            
return result;
}
std::map<uintptr_t,PFN_vkFreeFunction> id_to_PFN_vkFreeFunction;

    json serialize_PFN_vkFreeFunction(PFN_vkFreeFunction name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkFreeFunction[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkFreeFunction_wrapper(
    void*                                       pUserData,
    void*                                       pMemory){
            json data=json({});
            data["type"]="PFN_vkFreeFunction_request";
            data["members"]=json({});
        

                auto _struct=(VkAllocationCallbacks_struct*)pUserData;
                data["id"]=_struct->PFN_vkFreeFunction_id;
            
data["members"]["pUserData"]=[&]() {
    json return_XHzrUiR=json({});
    
        if (_struct->pUserData==NULL){
            return_XHzrUiR["null"]=true;
            return return_XHzrUiR;
        }
        return serialize_void_p(_struct->pUserData);
}();
data["members"]["pMemory"]=[&]() {
    json return_WWDZXEp=json({});
    
        if (pMemory==NULL){
            return_WWDZXEp["null"]=true;
            return return_WWDZXEp;
        }
        return serialize_void_p(pMemory);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkFreeFunction_response"){
        
handle_PFN_vkFreeFunction_response(data, _struct->pUserData, pMemory);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkFreeFunction deserialize_PFN_vkFreeFunction(json name){
            //Will only be called by the server
            
            return PFN_vkFreeFunction_wrapper;
            };
        

            void handle_PFN_vkFreeFunction_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkFreeFunction wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkFreeFunction[data["id"]];
            
            result["type"]="PFN_vkFreeFunction_response";
            
        
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
 void*                                       pMemory;
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();
funcpointer(pUserData,pMemory);
result["params"]["pUserData"]=[&]() {
    json return_dCqrKKg=json({});
    
        if (pUserData==NULL){
            return_dCqrKKg["null"]=true;
            return return_dCqrKKg;
        }
        return serialize_void_p(pUserData);
}();
result["params"]["pMemory"]=[&]() {
    json return_ztTJChr=json({});
    
        if (pMemory==NULL){
            return_ztTJChr["null"]=true;
            return return_ztTJChr;
        }
        return serialize_void_p(pMemory);
}();
writeToConn(result);
};

        void handle_PFN_vkFreeFunction_response(json data, 
    void*                                       pUserData,
    void*                                       pMemory) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkFreeFunction
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
[&]() {

        if (data["members"]["pMemory"].contains("null")){
        pMemory=NULL;
        }
    pMemory=deserialize_void_p(data["members"]["pMemory"]);
}();

}
std::map<uintptr_t,PFN_vkDebugReportCallbackEXT> id_to_PFN_vkDebugReportCallbackEXT;

    json serialize_PFN_vkDebugReportCallbackEXT(PFN_vkDebugReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugReportCallbackEXT_wrapper(
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugReportCallbackCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugReportCallbackEXT_id;
            
data["members"]["flags"]=[&]() {
    json return_UTFOHCS=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
data["members"]["objectType"]=[&]() {
    json return_xFsbSBf=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
data["members"]["object"]=[&]() {
    json return_DsPVNrz=json({});
    return serialize_uint64_t(object);}();
data["members"]["location"]=[&]() {
    json return_KYsJuus=json({});
    return serialize_size_t(location);}();
data["members"]["messageCode"]=[&]() {
    json return_opuVNnb=json({});
    return serialize_int32_t(messageCode);}();
data["members"]["pLayerPrefix"]=[&]() {
    json return_BplUSXW=json({});
    
        if (pLayerPrefix==NULL){
            return_BplUSXW["null"]=true;
            return return_BplUSXW;
        }
        return serialize_char_p(pLayerPrefix);
}();
data["members"]["pMessage"]=[&]() {
    json return_TGRcPgj=json({});
    
        if (pMessage==NULL){
            return_TGRcPgj["null"]=true;
            return return_TGRcPgj;
        }
        return serialize_char_p(pMessage);
}();
data["members"]["pUserData"]=[&]() {
    json return_vKQMjll=json({});
    
        if (_struct->pUserData==NULL){
            return_vKQMjll["null"]=true;
            return return_vKQMjll;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugReportCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugReportCallbackEXT_response(data, flags, objectType, object, location, messageCode, pLayerPrefix, pMessage, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugReportCallbackEXT deserialize_PFN_vkDebugReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugReportCallbackEXT_response";
            
        
 VkDebugReportFlagsEXT                       flags;
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
 VkDebugReportObjectTypeEXT                  objectType;
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
 uint64_t                                    object;
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
 size_t                                      location;
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
 int32_t                                     messageCode;
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();
const char*                                 pLayerPrefix;
[&]() {
char* temp_WqehxOQ;[&]() {

        if (data["members"]["pLayerPrefix"].contains("null")){
        temp_WqehxOQ=NULL;
        }
    temp_WqehxOQ=deserialize_char_p(data["members"]["pLayerPrefix"]);
}();pLayerPrefix=temp_WqehxOQ;}();
const char*                                 pMessage;
[&]() {
char* temp_FnxbHYn;[&]() {

        if (data["members"]["pMessage"].contains("null")){
        temp_FnxbHYn=NULL;
        }
    temp_FnxbHYn=deserialize_char_p(data["members"]["pMessage"]);
}();pMessage=temp_FnxbHYn;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(flags,objectType,object,location,messageCode,pLayerPrefix,pMessage,pUserData);
result["result"]=[&]() {
    json return_JwgXdHi=json({});
    return_JwgXdHi=[&]() {
    json return_FOMUlLM=json({});
    return serialize_uint32_t(result_temp);}();return return_JwgXdHi;}();
result["params"]["flags"]=[&]() {
    json return_iXcaMbC=json({});
    return serialize_VkDebugReportFlagsEXT(flags);}();
result["params"]["objectType"]=[&]() {
    json return_KvldOuK=json({});
    return serialize_VkDebugReportObjectTypeEXT(objectType);}();
result["params"]["object"]=[&]() {
    json return_PVGeqPR=json({});
    return serialize_uint64_t(object);}();
result["params"]["location"]=[&]() {
    json return_CobypBt=json({});
    return serialize_size_t(location);}();
result["params"]["messageCode"]=[&]() {
    json return_dNRsKzb=json({});
    return serialize_int32_t(messageCode);}();
result["params"]["pLayerPrefix"]=[&]() {
    json return_mVZaiOZ=json({});
    
        if (pLayerPrefix==NULL){
            return_mVZaiOZ["null"]=true;
            return return_mVZaiOZ;
        }
        return serialize_char_p(pLayerPrefix);
}();
result["params"]["pMessage"]=[&]() {
    json return_DqzrOkq=json({});
    
        if (pMessage==NULL){
            return_DqzrOkq["null"]=true;
            return return_DqzrOkq;
        }
        return serialize_char_p(pMessage);
}();
result["params"]["pUserData"]=[&]() {
    json return_jEYyixR=json({});
    
        if (pUserData==NULL){
            return_jEYyixR["null"]=true;
            return return_jEYyixR;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugReportCallbackEXT_response(json data, 
    VkDebugReportFlagsEXT                       flags,
    VkDebugReportObjectTypeEXT                  objectType,
    uint64_t                                    object,
    size_t                                      location,
    int32_t                                     messageCode,
    const char*                                 pLayerPrefix,
    const char*                                 pMessage,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
flags=deserialize_VkDebugReportFlagsEXT(data["members"]["flags"]);}();
[&]() {
objectType=deserialize_VkDebugReportObjectTypeEXT(data["members"]["objectType"]);}();
[&]() {
object=deserialize_uint64_t(data["members"]["object"]);}();
[&]() {
location=deserialize_size_t(data["members"]["location"]);}();
[&]() {
messageCode=deserialize_int32_t(data["members"]["messageCode"]);}();


[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDebugUtilsMessengerCallbackEXT> id_to_PFN_vkDebugUtilsMessengerCallbackEXT;

    json serialize_PFN_vkDebugUtilsMessengerCallbackEXT(PFN_vkDebugUtilsMessengerCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDebugUtilsMessengerCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDebugUtilsMessengerCallbackEXT_wrapper(
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData){
            json data=json({});
            data["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDebugUtilsMessengerCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDebugUtilsMessengerCallbackEXT_id;
            
data["members"]["messageSeverity"]=[&]() {
    json return_yfRPOPN=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
data["members"]["messageTypes"]=[&]() {
    json return_hgRnhdB=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
data["members"]["pCallbackData"]=[&]() {
    json return_QJEBuEy=json({});
    
        if (pCallbackData==NULL){
            return_QJEBuEy["null"]=true;
            return return_QJEBuEy;
        }
        return_QJEBuEy=[&]() {
    json return_MLhutSE=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_QJEBuEy;}();
data["members"]["pUserData"]=[&]() {
    json return_cyNHIMi=json({});
    
        if (_struct->pUserData==NULL){
            return_cyNHIMi["null"]=true;
            return return_cyNHIMi;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDebugUtilsMessengerCallbackEXT_response"){
        
auto result= handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(data, messageSeverity, messageTypes, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return result;
break;
            }
        }
        }
        

        PFN_vkDebugUtilsMessengerCallbackEXT deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDebugUtilsMessengerCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDebugUtilsMessengerCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDebugUtilsMessengerCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDebugUtilsMessengerCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDebugUtilsMessengerCallbackEXT_response";
            
        
 VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity;
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
 VkDebugUtilsMessageTypeFlagsEXT                  messageTypes;
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();
const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData;
[&]() {
VkDebugUtilsMessengerCallbackDataEXT* temp_jvYTbCN;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_jvYTbCN=NULL;
        }
    [&]() {
*(temp_jvYTbCN)=deserialize_VkDebugUtilsMessengerCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_jvYTbCN;}();
 void*                                            pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
auto result_temp=funcpointer(messageSeverity,messageTypes,pCallbackData,pUserData);
result["result"]=[&]() {
    json return_GeQhydS=json({});
    return_GeQhydS=[&]() {
    json return_BAzlmcI=json({});
    return serialize_uint32_t(result_temp);}();return return_GeQhydS;}();
result["params"]["messageSeverity"]=[&]() {
    json return_kbsEirx=json({});
    return serialize_VkDebugUtilsMessageSeverityFlagBitsEXT(messageSeverity);}();
result["params"]["messageTypes"]=[&]() {
    json return_ArtzBie=json({});
    return serialize_VkDebugUtilsMessageTypeFlagsEXT(messageTypes);}();
result["params"]["pCallbackData"]=[&]() {
    json return_QssWrVX=json({});
    
        if (pCallbackData==NULL){
            return_QssWrVX["null"]=true;
            return return_QssWrVX;
        }
        return_QssWrVX=[&]() {
    json return_eHJfFWn=json({});
    return serialize_VkDebugUtilsMessengerCallbackDataEXT(*pCallbackData);}();
return return_QssWrVX;}();
result["params"]["pUserData"]=[&]() {
    json return_XgmMeSH=json({});
    
        if (pUserData==NULL){
            return_XgmMeSH["null"]=true;
            return return_XgmMeSH;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        VkBool32 handle_PFN_vkDebugUtilsMessengerCallbackEXT_response(json data, 
    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,
    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,
    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,
    void*                                            pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDebugUtilsMessengerCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        
[&]() {
messageSeverity=deserialize_VkDebugUtilsMessageSeverityFlagBitsEXT(data["members"]["messageSeverity"]);}();
[&]() {
messageTypes=deserialize_VkDebugUtilsMessageTypeFlagsEXT(data["members"]["messageTypes"]);}();

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
VkBool32 result;
[&]() {
[&]() {
result=deserialize_uint32_t(data["result"]);}();}();
return result;
}
std::map<uintptr_t,PFN_vkDeviceMemoryReportCallbackEXT> id_to_PFN_vkDeviceMemoryReportCallbackEXT;

    json serialize_PFN_vkDeviceMemoryReportCallbackEXT(PFN_vkDeviceMemoryReportCallbackEXT name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkDeviceMemoryReportCallbackEXT[(uintptr_t)name]=name;
        return result;
    }
    

        auto PFN_vkDeviceMemoryReportCallbackEXT_wrapper(
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData){
            json data=json({});
            data["type"]="PFN_vkDeviceMemoryReportCallbackEXT_request";
            data["members"]=json({});
        

                auto _struct=(VkDeviceDeviceMemoryReportCreateInfoEXT_struct*)pUserData;
                data["id"]=_struct->PFN_vkDeviceMemoryReportCallbackEXT_id;
            
data["members"]["pCallbackData"]=[&]() {
    json return_TeXTcQS=json({});
    
        if (pCallbackData==NULL){
            return_TeXTcQS["null"]=true;
            return return_TeXTcQS;
        }
        return_TeXTcQS=[&]() {
    json return_JGsEJoK=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_TeXTcQS;}();
data["members"]["pUserData"]=[&]() {
    json return_LqQYFMQ=json({});
    
        if (_struct->pUserData==NULL){
            return_LqQYFMQ["null"]=true;
            return return_LqQYFMQ;
        }
        return serialize_void_p(_struct->pUserData);
}();

        writeToConn(data);
        while (true){
            data=readFromConn();
            if (data["type"]=="PFN_vkDeviceMemoryReportCallbackEXT_response"){
        
handle_PFN_vkDeviceMemoryReportCallbackEXT_response(data, pCallbackData, _struct->pUserData);

            for (auto & element: allocated_mems){
                Sync((void*)element.first,element.second);
            }
            
return;
break;
            }
        }
        }
        

        PFN_vkDeviceMemoryReportCallbackEXT deserialize_PFN_vkDeviceMemoryReportCallbackEXT(json name){
            //Will only be called by the server
            
            return PFN_vkDeviceMemoryReportCallbackEXT_wrapper;
            };
        

            void handle_PFN_vkDeviceMemoryReportCallbackEXT_request(json data){
            //Will only be called by the client
            // Recieved data from server's PFN_vkDeviceMemoryReportCallbackEXT wrapper, and will execute the actual function
            
            auto result=json({});
            auto funcpointer=id_to_PFN_vkDeviceMemoryReportCallbackEXT[data["id"]];
            
            result["type"]="PFN_vkDeviceMemoryReportCallbackEXT_response";
            
        
const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData;
[&]() {
VkDeviceMemoryReportCallbackDataEXT* temp_CBGvySV;[&]() {

        if (data["members"]["pCallbackData"].contains("null")){
        temp_CBGvySV=NULL;
        }
    [&]() {
*(temp_CBGvySV)=deserialize_VkDeviceMemoryReportCallbackDataEXT(data["members"]["pCallbackData"]);}();
}();pCallbackData=temp_CBGvySV;}();
 void*                                       pUserData;
[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();
funcpointer(pCallbackData,pUserData);
result["params"]["pCallbackData"]=[&]() {
    json return_EGFMaxF=json({});
    
        if (pCallbackData==NULL){
            return_EGFMaxF["null"]=true;
            return return_EGFMaxF;
        }
        return_EGFMaxF=[&]() {
    json return_vMcwupC=json({});
    return serialize_VkDeviceMemoryReportCallbackDataEXT(*pCallbackData);}();
return return_EGFMaxF;}();
result["params"]["pUserData"]=[&]() {
    json return_kXSaKFM=json({});
    
        if (pUserData==NULL){
            return_kXSaKFM["null"]=true;
            return return_kXSaKFM;
        }
        return serialize_void_p(pUserData);
}();
writeToConn(result);
};

        void handle_PFN_vkDeviceMemoryReportCallbackEXT_response(json data, 
    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,
    void*                                       pUserData) {
            //Will only be called by the server
            
            //Recieved result from client's PFN_vkDeviceMemoryReportCallbackEXT
            
            //If there's any memory returned, send client the address so it can keep track of it
        

[&]() {

        if (data["members"]["pUserData"].contains("null")){
        pUserData=NULL;
        }
    pUserData=deserialize_void_p(data["members"]["pUserData"]);
}();

}
std::map<uintptr_t,PFN_vkGetInstanceProcAddrLUNARG> id_to_PFN_vkGetInstanceProcAddrLUNARG;

    json serialize_PFN_vkGetInstanceProcAddrLUNARG(PFN_vkGetInstanceProcAddrLUNARG name){
        //Will only be called by the client
        
        json result=json({});
        result["id"]=(uintptr_t)name;
        id_to_PFN_vkGetInstanceProcAddrLUNARG[(uintptr_t)name]=name;
        return result;
    }
    

        PFN_vkGetInstanceProcAddrLUNARG deserialize_PFN_vkGetInstanceProcAddrLUNARG(json name){
            //Will only be called by the server
            
            return vkGetInstanceProcAddr;
            };
        

        json serialize_VkInstance(VkInstance data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkInstance deserialize_VkInstance(json data){
               return (VkInstance)data["value"].get<uintptr_t>();
       }

        json serialize_VkPhysicalDevice(VkPhysicalDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPhysicalDevice deserialize_VkPhysicalDevice(json data){
               return (VkPhysicalDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkDevice(VkDevice data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDevice deserialize_VkDevice(json data){
               return (VkDevice)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueue(VkQueue data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueue deserialize_VkQueue(json data){
               return (VkQueue)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandBuffer(VkCommandBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandBuffer deserialize_VkCommandBuffer(json data){
               return (VkCommandBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeviceMemory(VkDeviceMemory data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            #ifdef CLIENT
                currStruct()->mem_to_sync->insert((uintptr_t)data);
            #endif
            

            return result;
        }
       

       VkDeviceMemory deserialize_VkDeviceMemory(json data){
               return (VkDeviceMemory)data["value"].get<uintptr_t>();
       }

        json serialize_VkCommandPool(VkCommandPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCommandPool deserialize_VkCommandPool(json data){
               return (VkCommandPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkBuffer(VkBuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBuffer deserialize_VkBuffer(json data){
               return (VkBuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkBufferView(VkBufferView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkBufferView deserialize_VkBufferView(json data){
               return (VkBufferView)data["value"].get<uintptr_t>();
       }

        json serialize_VkImage(VkImage data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImage deserialize_VkImage(json data){
               return (VkImage)data["value"].get<uintptr_t>();
       }

        json serialize_VkImageView(VkImageView data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkImageView deserialize_VkImageView(json data){
               return (VkImageView)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderModule(VkShaderModule data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderModule deserialize_VkShaderModule(json data){
               return (VkShaderModule)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipeline(VkPipeline data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipeline deserialize_VkPipeline(json data){
               return (VkPipeline)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineLayout(VkPipelineLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineLayout deserialize_VkPipelineLayout(json data){
               return (VkPipelineLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkSampler(VkSampler data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSampler deserialize_VkSampler(json data){
               return (VkSampler)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSet(VkDescriptorSet data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSet deserialize_VkDescriptorSet(json data){
               return (VkDescriptorSet)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorSetLayout(VkDescriptorSetLayout data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorSetLayout deserialize_VkDescriptorSetLayout(json data){
               return (VkDescriptorSetLayout)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorPool(VkDescriptorPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorPool deserialize_VkDescriptorPool(json data){
               return (VkDescriptorPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFence(VkFence data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFence deserialize_VkFence(json data){
               return (VkFence)data["value"].get<uintptr_t>();
       }

        json serialize_VkSemaphore(VkSemaphore data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSemaphore deserialize_VkSemaphore(json data){
               return (VkSemaphore)data["value"].get<uintptr_t>();
       }

        json serialize_VkEvent(VkEvent data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkEvent deserialize_VkEvent(json data){
               return (VkEvent)data["value"].get<uintptr_t>();
       }

        json serialize_VkQueryPool(VkQueryPool data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkQueryPool deserialize_VkQueryPool(json data){
               return (VkQueryPool)data["value"].get<uintptr_t>();
       }

        json serialize_VkFramebuffer(VkFramebuffer data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkFramebuffer deserialize_VkFramebuffer(json data){
               return (VkFramebuffer)data["value"].get<uintptr_t>();
       }

        json serialize_VkRenderPass(VkRenderPass data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkRenderPass deserialize_VkRenderPass(json data){
               return (VkRenderPass)data["value"].get<uintptr_t>();
       }

        json serialize_VkPipelineCache(VkPipelineCache data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPipelineCache deserialize_VkPipelineCache(json data){
               return (VkPipelineCache)data["value"].get<uintptr_t>();
       }

        json serialize_VkIndirectCommandsLayoutNV(VkIndirectCommandsLayoutNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkIndirectCommandsLayoutNV deserialize_VkIndirectCommandsLayoutNV(json data){
               return (VkIndirectCommandsLayoutNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplate(VkDescriptorUpdateTemplate data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplate deserialize_VkDescriptorUpdateTemplate(json data){
               return (VkDescriptorUpdateTemplate)data["value"].get<uintptr_t>();
       }

        json serialize_VkDescriptorUpdateTemplateKHR(VkDescriptorUpdateTemplateKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDescriptorUpdateTemplateKHR deserialize_VkDescriptorUpdateTemplateKHR(json data){
               return (VkDescriptorUpdateTemplateKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversion(VkSamplerYcbcrConversion data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversion deserialize_VkSamplerYcbcrConversion(json data){
               return (VkSamplerYcbcrConversion)data["value"].get<uintptr_t>();
       }

        json serialize_VkSamplerYcbcrConversionKHR(VkSamplerYcbcrConversionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSamplerYcbcrConversionKHR deserialize_VkSamplerYcbcrConversionKHR(json data){
               return (VkSamplerYcbcrConversionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkValidationCacheEXT(VkValidationCacheEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkValidationCacheEXT deserialize_VkValidationCacheEXT(json data){
               return (VkValidationCacheEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureKHR(VkAccelerationStructureKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureKHR deserialize_VkAccelerationStructureKHR(json data){
               return (VkAccelerationStructureKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkAccelerationStructureNV(VkAccelerationStructureNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkAccelerationStructureNV deserialize_VkAccelerationStructureNV(json data){
               return (VkAccelerationStructureNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkPerformanceConfigurationINTEL(VkPerformanceConfigurationINTEL data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPerformanceConfigurationINTEL deserialize_VkPerformanceConfigurationINTEL(json data){
               return (VkPerformanceConfigurationINTEL)data["value"].get<uintptr_t>();
       }

        json serialize_VkDeferredOperationKHR(VkDeferredOperationKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDeferredOperationKHR deserialize_VkDeferredOperationKHR(json data){
               return (VkDeferredOperationKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlot(VkPrivateDataSlot data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlot deserialize_VkPrivateDataSlot(json data){
               return (VkPrivateDataSlot)data["value"].get<uintptr_t>();
       }

        json serialize_VkPrivateDataSlotEXT(VkPrivateDataSlotEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkPrivateDataSlotEXT deserialize_VkPrivateDataSlotEXT(json data){
               return (VkPrivateDataSlotEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuModuleNVX(VkCuModuleNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuModuleNVX deserialize_VkCuModuleNVX(json data){
               return (VkCuModuleNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkCuFunctionNVX(VkCuFunctionNVX data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkCuFunctionNVX deserialize_VkCuFunctionNVX(json data){
               return (VkCuFunctionNVX)data["value"].get<uintptr_t>();
       }

        json serialize_VkOpticalFlowSessionNV(VkOpticalFlowSessionNV data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkOpticalFlowSessionNV deserialize_VkOpticalFlowSessionNV(json data){
               return (VkOpticalFlowSessionNV)data["value"].get<uintptr_t>();
       }

        json serialize_VkMicromapEXT(VkMicromapEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkMicromapEXT deserialize_VkMicromapEXT(json data){
               return (VkMicromapEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkShaderEXT(VkShaderEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkShaderEXT deserialize_VkShaderEXT(json data){
               return (VkShaderEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayKHR(VkDisplayKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayKHR deserialize_VkDisplayKHR(json data){
               return (VkDisplayKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDisplayModeKHR(VkDisplayModeKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDisplayModeKHR deserialize_VkDisplayModeKHR(json data){
               return (VkDisplayModeKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSurfaceKHR(VkSurfaceKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSurfaceKHR deserialize_VkSurfaceKHR(json data){
               return (VkSurfaceKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkSwapchainKHR(VkSwapchainKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkSwapchainKHR deserialize_VkSwapchainKHR(json data){
               return (VkSwapchainKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugReportCallbackEXT(VkDebugReportCallbackEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugReportCallbackEXT deserialize_VkDebugReportCallbackEXT(json data){
               return (VkDebugReportCallbackEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkDebugUtilsMessengerEXT(VkDebugUtilsMessengerEXT data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkDebugUtilsMessengerEXT deserialize_VkDebugUtilsMessengerEXT(json data){
               return (VkDebugUtilsMessengerEXT)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionKHR(VkVideoSessionKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionKHR deserialize_VkVideoSessionKHR(json data){
               return (VkVideoSessionKHR)data["value"].get<uintptr_t>();
       }

        json serialize_VkVideoSessionParametersKHR(VkVideoSessionParametersKHR data){
            json result=json({});
            result["value"]=(uintptr_t)data;
        

            return result;
        }
       

       VkVideoSessionParametersKHR deserialize_VkVideoSessionParametersKHR(json data){
               return (VkVideoSessionParametersKHR)data["value"].get<uintptr_t>();
       }
