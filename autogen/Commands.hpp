void handle_vkCreateInstance(object &data);
void handle_vkDestroyInstance(object &data);
void handle_vkEnumeratePhysicalDevices(object &data);
void handle_vkGetDeviceProcAddr(object &data);
void handle_vkGetInstanceProcAddr(object &data);
void handle_vkGetPhysicalDeviceProperties(object &data);
void handle_vkGetPhysicalDeviceQueueFamilyProperties(object &data);
void handle_vkGetPhysicalDeviceMemoryProperties(object &data);
void handle_vkGetPhysicalDeviceFeatures(object &data);
void handle_vkGetPhysicalDeviceFormatProperties(object &data);
void handle_vkGetPhysicalDeviceImageFormatProperties(object &data);
void handle_vkCreateDevice(object &data);
void handle_vkDestroyDevice(object &data);
void handle_vkEnumerateInstanceVersion(object &data);
void handle_vkEnumerateInstanceLayerProperties(object &data);
void handle_vkEnumerateInstanceExtensionProperties(object &data);
void handle_vkEnumerateDeviceLayerProperties(object &data);
void handle_vkEnumerateDeviceExtensionProperties(object &data);
void handle_vkGetDeviceQueue(object &data);
void handle_vkQueueSubmit(object &data);
void handle_vkQueueWaitIdle(object &data);
void handle_vkDeviceWaitIdle(object &data);
void handle_vkAllocateMemory(object &data);
void handle_vkFreeMemory(object &data);
void handle_vkMapMemory(object &data);
void handle_vkUnmapMemory(object &data);
void handle_vkFlushMappedMemoryRanges(object &data);
void handle_vkInvalidateMappedMemoryRanges(object &data);
void handle_vkGetDeviceMemoryCommitment(object &data);
void handle_vkGetBufferMemoryRequirements(object &data);
void handle_vkBindBufferMemory(object &data);
void handle_vkGetImageMemoryRequirements(object &data);
void handle_vkBindImageMemory(object &data);
void handle_vkGetImageSparseMemoryRequirements(object &data);
void handle_vkGetPhysicalDeviceSparseImageFormatProperties(object &data);
void handle_vkQueueBindSparse(object &data);
void handle_vkCreateFence(object &data);
void handle_vkDestroyFence(object &data);
void handle_vkResetFences(object &data);
void handle_vkGetFenceStatus(object &data);
void handle_vkWaitForFences(object &data);
void handle_vkCreateSemaphore(object &data);
void handle_vkDestroySemaphore(object &data);
void handle_vkCreateEvent(object &data);
void handle_vkDestroyEvent(object &data);
void handle_vkGetEventStatus(object &data);
void handle_vkSetEvent(object &data);
void handle_vkResetEvent(object &data);
void handle_vkCreateQueryPool(object &data);
void handle_vkDestroyQueryPool(object &data);
void handle_vkGetQueryPoolResults(object &data);
void handle_vkResetQueryPool(object &data);
void handle_vkResetQueryPoolEXT(object &data);
void handle_vkCreateBuffer(object &data);
void handle_vkDestroyBuffer(object &data);
void handle_vkCreateBufferView(object &data);
void handle_vkDestroyBufferView(object &data);
void handle_vkCreateImage(object &data);
void handle_vkDestroyImage(object &data);
void handle_vkGetImageSubresourceLayout(object &data);
void handle_vkCreateImageView(object &data);
void handle_vkDestroyImageView(object &data);
void handle_vkCreateShaderModule(object &data);
void handle_vkDestroyShaderModule(object &data);
void handle_vkCreatePipelineCache(object &data);
void handle_vkDestroyPipelineCache(object &data);
void handle_vkGetPipelineCacheData(object &data);
void handle_vkMergePipelineCaches(object &data);
void handle_vkCreateGraphicsPipelines(object &data);
void handle_vkCreateComputePipelines(object &data);
void handle_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI(object &data);
void handle_vkDestroyPipeline(object &data);
void handle_vkCreatePipelineLayout(object &data);
void handle_vkDestroyPipelineLayout(object &data);
void handle_vkCreateSampler(object &data);
void handle_vkDestroySampler(object &data);
void handle_vkCreateDescriptorSetLayout(object &data);
void handle_vkDestroyDescriptorSetLayout(object &data);
void handle_vkCreateDescriptorPool(object &data);
void handle_vkDestroyDescriptorPool(object &data);
void handle_vkResetDescriptorPool(object &data);
void handle_vkAllocateDescriptorSets(object &data);
void handle_vkFreeDescriptorSets(object &data);
void handle_vkUpdateDescriptorSets(object &data);
void handle_vkCreateFramebuffer(object &data);
void handle_vkDestroyFramebuffer(object &data);
void handle_vkCreateRenderPass(object &data);
void handle_vkDestroyRenderPass(object &data);
void handle_vkGetRenderAreaGranularity(object &data);
void handle_vkGetRenderingAreaGranularityKHR(object &data);
void handle_vkCreateCommandPool(object &data);
void handle_vkDestroyCommandPool(object &data);
void handle_vkResetCommandPool(object &data);
void handle_vkAllocateCommandBuffers(object &data);
void handle_vkFreeCommandBuffers(object &data);
void handle_vkBeginCommandBuffer(object &data);
void handle_vkEndCommandBuffer(object &data);
void handle_vkResetCommandBuffer(object &data);
void handle_vkCmdBindPipeline(object &data);
void handle_vkCmdSetAttachmentFeedbackLoopEnableEXT(object &data);
void handle_vkCmdSetViewport(object &data);
void handle_vkCmdSetScissor(object &data);
void handle_vkCmdSetLineWidth(object &data);
void handle_vkCmdSetDepthBias(object &data);
void handle_vkCmdSetBlendConstants(object &data);
void handle_vkCmdSetDepthBounds(object &data);
void handle_vkCmdSetStencilCompareMask(object &data);
void handle_vkCmdSetStencilWriteMask(object &data);
void handle_vkCmdSetStencilReference(object &data);
void handle_vkCmdBindDescriptorSets(object &data);
void handle_vkCmdBindIndexBuffer(object &data);
void handle_vkCmdBindVertexBuffers(object &data);
void handle_vkCmdDraw(object &data);
void handle_vkCmdDrawIndexed(object &data);
void handle_vkCmdDrawMultiEXT(object &data);
void handle_vkCmdDrawMultiIndexedEXT(object &data);
void handle_vkCmdDrawIndirect(object &data);
void handle_vkCmdDrawIndexedIndirect(object &data);
void handle_vkCmdDispatch(object &data);
void handle_vkCmdDispatchIndirect(object &data);
void handle_vkCmdSubpassShadingHUAWEI(object &data);
void handle_vkCmdDrawClusterHUAWEI(object &data);
void handle_vkCmdDrawClusterIndirectHUAWEI(object &data);
void handle_vkCmdUpdatePipelineIndirectBufferNV(object &data);
void handle_vkCmdCopyBuffer(object &data);
void handle_vkCmdCopyImage(object &data);
void handle_vkCmdBlitImage(object &data);
void handle_vkCmdCopyBufferToImage(object &data);
void handle_vkCmdCopyImageToBuffer(object &data);
void handle_vkCmdCopyMemoryIndirectNV(object &data);
void handle_vkCmdCopyMemoryToImageIndirectNV(object &data);
void handle_vkCmdUpdateBuffer(object &data);
void handle_vkCmdFillBuffer(object &data);
void handle_vkCmdClearColorImage(object &data);
void handle_vkCmdClearDepthStencilImage(object &data);
void handle_vkCmdClearAttachments(object &data);
void handle_vkCmdResolveImage(object &data);
void handle_vkCmdSetEvent(object &data);
void handle_vkCmdResetEvent(object &data);
void handle_vkCmdWaitEvents(object &data);
void handle_vkCmdPipelineBarrier(object &data);
void handle_vkCmdBeginQuery(object &data);
void handle_vkCmdEndQuery(object &data);
void handle_vkCmdBeginConditionalRenderingEXT(object &data);
void handle_vkCmdEndConditionalRenderingEXT(object &data);
void handle_vkCmdResetQueryPool(object &data);
void handle_vkCmdWriteTimestamp(object &data);
void handle_vkCmdCopyQueryPoolResults(object &data);
void handle_vkCmdPushConstants(object &data);
void handle_vkCmdBeginRenderPass(object &data);
void handle_vkCmdNextSubpass(object &data);
void handle_vkCmdEndRenderPass(object &data);
void handle_vkCmdExecuteCommands(object &data);
void handle_vkGetPhysicalDeviceDisplayPropertiesKHR(object &data);
void handle_vkGetPhysicalDeviceDisplayPlanePropertiesKHR(object &data);
void handle_vkGetDisplayPlaneSupportedDisplaysKHR(object &data);
void handle_vkGetDisplayModePropertiesKHR(object &data);
void handle_vkCreateDisplayModeKHR(object &data);
void handle_vkGetDisplayPlaneCapabilitiesKHR(object &data);
void handle_vkCreateDisplayPlaneSurfaceKHR(object &data);
void handle_vkCreateSharedSwapchainsKHR(object &data);
void handle_vkDestroySurfaceKHR(object &data);
void handle_vkGetPhysicalDeviceSurfaceSupportKHR(object &data);
void handle_vkGetPhysicalDeviceSurfaceCapabilitiesKHR(object &data);
void handle_vkGetPhysicalDeviceSurfaceFormatsKHR(object &data);
void handle_vkGetPhysicalDeviceSurfacePresentModesKHR(object &data);
void handle_vkCreateSwapchainKHR(object &data);
void handle_vkDestroySwapchainKHR(object &data);
void handle_vkGetSwapchainImagesKHR(object &data);
void handle_vkAcquireNextImageKHR(object &data);
void handle_vkQueuePresentKHR(object &data);
void handle_vkCreateXlibSurfaceKHR(object &data);
void handle_vkGetPhysicalDeviceXlibPresentationSupportKHR(object &data);
void handle_vkCreateXcbSurfaceKHR(object &data);
void handle_vkGetPhysicalDeviceXcbPresentationSupportKHR(object &data);
void handle_vkCreateDebugReportCallbackEXT(object &data);
void handle_vkDestroyDebugReportCallbackEXT(object &data);
void handle_vkDebugReportMessageEXT(object &data);
void handle_vkDebugMarkerSetObjectNameEXT(object &data);
void handle_vkDebugMarkerSetObjectTagEXT(object &data);
void handle_vkCmdDebugMarkerBeginEXT(object &data);
void handle_vkCmdDebugMarkerEndEXT(object &data);
void handle_vkCmdDebugMarkerInsertEXT(object &data);
void handle_vkGetPhysicalDeviceExternalImageFormatPropertiesNV(object &data);
void handle_vkCmdExecuteGeneratedCommandsNV(object &data);
void handle_vkCmdPreprocessGeneratedCommandsNV(object &data);
void handle_vkCmdBindPipelineShaderGroupNV(object &data);
void handle_vkGetGeneratedCommandsMemoryRequirementsNV(object &data);
void handle_vkCreateIndirectCommandsLayoutNV(object &data);
void handle_vkDestroyIndirectCommandsLayoutNV(object &data);
void handle_vkGetPhysicalDeviceFeatures2(object &data);
void handle_vkGetPhysicalDeviceFeatures2KHR(object &data);
void handle_vkGetPhysicalDeviceProperties2(object &data);
void handle_vkGetPhysicalDeviceProperties2KHR(object &data);
void handle_vkGetPhysicalDeviceFormatProperties2(object &data);
void handle_vkGetPhysicalDeviceFormatProperties2KHR(object &data);
void handle_vkGetPhysicalDeviceImageFormatProperties2(object &data);
void handle_vkGetPhysicalDeviceImageFormatProperties2KHR(object &data);
void handle_vkGetPhysicalDeviceQueueFamilyProperties2(object &data);
void handle_vkGetPhysicalDeviceQueueFamilyProperties2KHR(object &data);
void handle_vkGetPhysicalDeviceMemoryProperties2(object &data);
void handle_vkGetPhysicalDeviceMemoryProperties2KHR(object &data);
void handle_vkGetPhysicalDeviceSparseImageFormatProperties2(object &data);
void handle_vkGetPhysicalDeviceSparseImageFormatProperties2KHR(object &data);
void handle_vkCmdPushDescriptorSetKHR(object &data);
void handle_vkTrimCommandPool(object &data);
void handle_vkTrimCommandPoolKHR(object &data);
void handle_vkGetPhysicalDeviceExternalBufferProperties(object &data);
void handle_vkGetPhysicalDeviceExternalBufferPropertiesKHR(object &data);
void handle_vkGetMemoryFdKHR(object &data);
void handle_vkGetMemoryFdPropertiesKHR(object &data);
void handle_vkGetMemoryRemoteAddressNV(object &data);
void handle_vkGetPhysicalDeviceExternalSemaphoreProperties(object &data);
void handle_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(object &data);
void handle_vkGetSemaphoreFdKHR(object &data);
void handle_vkImportSemaphoreFdKHR(object &data);
void handle_vkGetPhysicalDeviceExternalFenceProperties(object &data);
void handle_vkGetPhysicalDeviceExternalFencePropertiesKHR(object &data);
void handle_vkGetFenceFdKHR(object &data);
void handle_vkImportFenceFdKHR(object &data);
void handle_vkReleaseDisplayEXT(object &data);
void handle_vkDisplayPowerControlEXT(object &data);
void handle_vkRegisterDeviceEventEXT(object &data);
void handle_vkRegisterDisplayEventEXT(object &data);
void handle_vkGetSwapchainCounterEXT(object &data);
void handle_vkGetPhysicalDeviceSurfaceCapabilities2EXT(object &data);
void handle_vkEnumeratePhysicalDeviceGroups(object &data);
void handle_vkEnumeratePhysicalDeviceGroupsKHR(object &data);
void handle_vkGetDeviceGroupPeerMemoryFeatures(object &data);
void handle_vkGetDeviceGroupPeerMemoryFeaturesKHR(object &data);
void handle_vkBindBufferMemory2(object &data);
void handle_vkBindBufferMemory2KHR(object &data);
void handle_vkBindImageMemory2(object &data);
void handle_vkBindImageMemory2KHR(object &data);
void handle_vkCmdSetDeviceMask(object &data);
void handle_vkCmdSetDeviceMaskKHR(object &data);
void handle_vkGetDeviceGroupPresentCapabilitiesKHR(object &data);
void handle_vkGetDeviceGroupSurfacePresentModesKHR(object &data);
void handle_vkAcquireNextImage2KHR(object &data);
void handle_vkCmdDispatchBase(object &data);
void handle_vkCmdDispatchBaseKHR(object &data);
void handle_vkGetPhysicalDevicePresentRectanglesKHR(object &data);
void handle_vkCreateDescriptorUpdateTemplate(object &data);
void handle_vkCreateDescriptorUpdateTemplateKHR(object &data);
void handle_vkDestroyDescriptorUpdateTemplate(object &data);
void handle_vkDestroyDescriptorUpdateTemplateKHR(object &data);
void handle_vkUpdateDescriptorSetWithTemplate(object &data);
void handle_vkUpdateDescriptorSetWithTemplateKHR(object &data);
void handle_vkCmdPushDescriptorSetWithTemplateKHR(object &data);
void handle_vkSetHdrMetadataEXT(object &data);
void handle_vkGetSwapchainStatusKHR(object &data);
void handle_vkGetRefreshCycleDurationGOOGLE(object &data);
void handle_vkGetPastPresentationTimingGOOGLE(object &data);
void handle_vkCmdSetViewportWScalingNV(object &data);
void handle_vkCmdSetDiscardRectangleEXT(object &data);
void handle_vkCmdSetDiscardRectangleEnableEXT(object &data);
void handle_vkCmdSetDiscardRectangleModeEXT(object &data);
void handle_vkCmdSetSampleLocationsEXT(object &data);
void handle_vkGetPhysicalDeviceMultisamplePropertiesEXT(object &data);
void handle_vkGetPhysicalDeviceSurfaceCapabilities2KHR(object &data);
void handle_vkGetPhysicalDeviceSurfaceFormats2KHR(object &data);
void handle_vkGetPhysicalDeviceDisplayProperties2KHR(object &data);
void handle_vkGetPhysicalDeviceDisplayPlaneProperties2KHR(object &data);
void handle_vkGetDisplayModeProperties2KHR(object &data);
void handle_vkGetDisplayPlaneCapabilities2KHR(object &data);
void handle_vkGetBufferMemoryRequirements2(object &data);
void handle_vkGetBufferMemoryRequirements2KHR(object &data);
void handle_vkGetImageMemoryRequirements2(object &data);
void handle_vkGetImageMemoryRequirements2KHR(object &data);
void handle_vkGetImageSparseMemoryRequirements2(object &data);
void handle_vkGetImageSparseMemoryRequirements2KHR(object &data);
void handle_vkGetDeviceBufferMemoryRequirements(object &data);
void handle_vkGetDeviceBufferMemoryRequirementsKHR(object &data);
void handle_vkGetDeviceImageMemoryRequirements(object &data);
void handle_vkGetDeviceImageMemoryRequirementsKHR(object &data);
void handle_vkGetDeviceImageSparseMemoryRequirements(object &data);
void handle_vkGetDeviceImageSparseMemoryRequirementsKHR(object &data);
void handle_vkCreateSamplerYcbcrConversion(object &data);
void handle_vkCreateSamplerYcbcrConversionKHR(object &data);
void handle_vkDestroySamplerYcbcrConversion(object &data);
void handle_vkDestroySamplerYcbcrConversionKHR(object &data);
void handle_vkGetDeviceQueue2(object &data);
void handle_vkCreateValidationCacheEXT(object &data);
void handle_vkDestroyValidationCacheEXT(object &data);
void handle_vkGetValidationCacheDataEXT(object &data);
void handle_vkMergeValidationCachesEXT(object &data);
void handle_vkGetDescriptorSetLayoutSupport(object &data);
void handle_vkGetDescriptorSetLayoutSupportKHR(object &data);
void handle_vkGetShaderInfoAMD(object &data);
void handle_vkSetLocalDimmingAMD(object &data);
void handle_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(object &data);
void handle_vkGetCalibratedTimestampsEXT(object &data);
void handle_vkSetDebugUtilsObjectNameEXT(object &data);
void handle_vkSetDebugUtilsObjectTagEXT(object &data);
void handle_vkQueueBeginDebugUtilsLabelEXT(object &data);
void handle_vkQueueEndDebugUtilsLabelEXT(object &data);
void handle_vkQueueInsertDebugUtilsLabelEXT(object &data);
void handle_vkCmdBeginDebugUtilsLabelEXT(object &data);
void handle_vkCmdEndDebugUtilsLabelEXT(object &data);
void handle_vkCmdInsertDebugUtilsLabelEXT(object &data);
void handle_vkCreateDebugUtilsMessengerEXT(object &data);
void handle_vkDestroyDebugUtilsMessengerEXT(object &data);
void handle_vkSubmitDebugUtilsMessageEXT(object &data);
void handle_vkGetMemoryHostPointerPropertiesEXT(object &data);
void handle_vkCmdWriteBufferMarkerAMD(object &data);
void handle_vkCreateRenderPass2(object &data);
void handle_vkCreateRenderPass2KHR(object &data);
void handle_vkCmdBeginRenderPass2(object &data);
void handle_vkCmdBeginRenderPass2KHR(object &data);
void handle_vkCmdNextSubpass2(object &data);
void handle_vkCmdNextSubpass2KHR(object &data);
void handle_vkCmdEndRenderPass2(object &data);
void handle_vkCmdEndRenderPass2KHR(object &data);
void handle_vkGetSemaphoreCounterValue(object &data);
void handle_vkGetSemaphoreCounterValueKHR(object &data);
void handle_vkWaitSemaphores(object &data);
void handle_vkWaitSemaphoresKHR(object &data);
void handle_vkSignalSemaphore(object &data);
void handle_vkSignalSemaphoreKHR(object &data);
void handle_vkCmdDrawIndirectCount(object &data);
void handle_vkCmdDrawIndirectCountKHR(object &data);
void handle_vkCmdDrawIndirectCountAMD(object &data);
void handle_vkCmdDrawIndexedIndirectCount(object &data);
void handle_vkCmdDrawIndexedIndirectCountKHR(object &data);
void handle_vkCmdDrawIndexedIndirectCountAMD(object &data);
void handle_vkCmdSetCheckpointNV(object &data);
void handle_vkGetQueueCheckpointDataNV(object &data);
void handle_vkCmdBindTransformFeedbackBuffersEXT(object &data);
void handle_vkCmdBeginTransformFeedbackEXT(object &data);
void handle_vkCmdEndTransformFeedbackEXT(object &data);
void handle_vkCmdBeginQueryIndexedEXT(object &data);
void handle_vkCmdEndQueryIndexedEXT(object &data);
void handle_vkCmdDrawIndirectByteCountEXT(object &data);
void handle_vkCmdSetExclusiveScissorNV(object &data);
void handle_vkCmdSetExclusiveScissorEnableNV(object &data);
void handle_vkCmdBindShadingRateImageNV(object &data);
void handle_vkCmdSetViewportShadingRatePaletteNV(object &data);
void handle_vkCmdSetCoarseSampleOrderNV(object &data);
void handle_vkCmdDrawMeshTasksNV(object &data);
void handle_vkCmdDrawMeshTasksIndirectNV(object &data);
void handle_vkCmdDrawMeshTasksIndirectCountNV(object &data);
void handle_vkCmdDrawMeshTasksEXT(object &data);
void handle_vkCmdDrawMeshTasksIndirectEXT(object &data);
void handle_vkCmdDrawMeshTasksIndirectCountEXT(object &data);
void handle_vkCompileDeferredNV(object &data);
void handle_vkCreateAccelerationStructureNV(object &data);
void handle_vkCmdBindInvocationMaskHUAWEI(object &data);
void handle_vkDestroyAccelerationStructureKHR(object &data);
void handle_vkDestroyAccelerationStructureNV(object &data);
void handle_vkGetAccelerationStructureMemoryRequirementsNV(object &data);
void handle_vkBindAccelerationStructureMemoryNV(object &data);
void handle_vkCmdCopyAccelerationStructureNV(object &data);
void handle_vkCmdCopyAccelerationStructureKHR(object &data);
void handle_vkCopyAccelerationStructureKHR(object &data);
void handle_vkCmdCopyAccelerationStructureToMemoryKHR(object &data);
void handle_vkCopyAccelerationStructureToMemoryKHR(object &data);
void handle_vkCmdCopyMemoryToAccelerationStructureKHR(object &data);
void handle_vkCopyMemoryToAccelerationStructureKHR(object &data);
void handle_vkCmdWriteAccelerationStructuresPropertiesKHR(object &data);
void handle_vkCmdWriteAccelerationStructuresPropertiesNV(object &data);
void handle_vkCmdBuildAccelerationStructureNV(object &data);
void handle_vkWriteAccelerationStructuresPropertiesKHR(object &data);
void handle_vkCmdTraceRaysKHR(object &data);
void handle_vkCmdTraceRaysNV(object &data);
void handle_vkGetRayTracingShaderGroupHandlesKHR(object &data);
void handle_vkGetRayTracingShaderGroupHandlesNV(object &data);
void handle_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR(object &data);
void handle_vkGetAccelerationStructureHandleNV(object &data);
void handle_vkCreateRayTracingPipelinesNV(object &data);
void handle_vkCreateRayTracingPipelinesKHR(object &data);
void handle_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV(object &data);
void handle_vkCmdTraceRaysIndirectKHR(object &data);
void handle_vkCmdTraceRaysIndirect2KHR(object &data);
void handle_vkGetDeviceAccelerationStructureCompatibilityKHR(object &data);
void handle_vkGetRayTracingShaderGroupStackSizeKHR(object &data);
void handle_vkCmdSetRayTracingPipelineStackSizeKHR(object &data);
void handle_vkGetImageViewHandleNVX(object &data);
void handle_vkGetImageViewAddressNVX(object &data);
void handle_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(object &data);
void handle_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(object &data);
void handle_vkAcquireProfilingLockKHR(object &data);
void handle_vkReleaseProfilingLockKHR(object &data);
void handle_vkGetImageDrmFormatModifierPropertiesEXT(object &data);
void handle_vkGetBufferOpaqueCaptureAddress(object &data);
void handle_vkGetBufferOpaqueCaptureAddressKHR(object &data);
void handle_vkGetBufferDeviceAddress(object &data);
void handle_vkGetBufferDeviceAddressKHR(object &data);
void handle_vkGetBufferDeviceAddressEXT(object &data);
void handle_vkCreateHeadlessSurfaceEXT(object &data);
void handle_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(object &data);
void handle_vkInitializePerformanceApiINTEL(object &data);
void handle_vkUninitializePerformanceApiINTEL(object &data);
void handle_vkCmdSetPerformanceMarkerINTEL(object &data);
void handle_vkCmdSetPerformanceStreamMarkerINTEL(object &data);
void handle_vkCmdSetPerformanceOverrideINTEL(object &data);
void handle_vkAcquirePerformanceConfigurationINTEL(object &data);
void handle_vkReleasePerformanceConfigurationINTEL(object &data);
void handle_vkQueueSetPerformanceConfigurationINTEL(object &data);
void handle_vkGetPerformanceParameterINTEL(object &data);
void handle_vkGetDeviceMemoryOpaqueCaptureAddress(object &data);
void handle_vkGetDeviceMemoryOpaqueCaptureAddressKHR(object &data);
void handle_vkGetPipelineExecutablePropertiesKHR(object &data);
void handle_vkGetPipelineExecutableStatisticsKHR(object &data);
void handle_vkGetPipelineExecutableInternalRepresentationsKHR(object &data);
void handle_vkCmdSetLineStippleEXT(object &data);
void handle_vkGetPhysicalDeviceToolProperties(object &data);
void handle_vkGetPhysicalDeviceToolPropertiesEXT(object &data);
void handle_vkCreateAccelerationStructureKHR(object &data);
void handle_vkCmdBuildAccelerationStructuresKHR(object &data);
void handle_vkCmdBuildAccelerationStructuresIndirectKHR(object &data);
void handle_vkBuildAccelerationStructuresKHR(object &data);
void handle_vkGetAccelerationStructureDeviceAddressKHR(object &data);
void handle_vkCreateDeferredOperationKHR(object &data);
void handle_vkDestroyDeferredOperationKHR(object &data);
void handle_vkGetDeferredOperationMaxConcurrencyKHR(object &data);
void handle_vkGetDeferredOperationResultKHR(object &data);
void handle_vkDeferredOperationJoinKHR(object &data);
void handle_vkGetPipelineIndirectMemoryRequirementsNV(object &data);
void handle_vkGetPipelineIndirectDeviceAddressNV(object &data);
void handle_vkCmdSetCullMode(object &data);
void handle_vkCmdSetCullModeEXT(object &data);
void handle_vkCmdSetFrontFace(object &data);
void handle_vkCmdSetFrontFaceEXT(object &data);
void handle_vkCmdSetPrimitiveTopology(object &data);
void handle_vkCmdSetPrimitiveTopologyEXT(object &data);
void handle_vkCmdSetViewportWithCount(object &data);
void handle_vkCmdSetViewportWithCountEXT(object &data);
void handle_vkCmdSetScissorWithCount(object &data);
void handle_vkCmdSetScissorWithCountEXT(object &data);
void handle_vkCmdBindIndexBuffer2KHR(object &data);
void handle_vkCmdBindVertexBuffers2(object &data);
void handle_vkCmdBindVertexBuffers2EXT(object &data);
void handle_vkCmdSetDepthTestEnable(object &data);
void handle_vkCmdSetDepthTestEnableEXT(object &data);
void handle_vkCmdSetDepthWriteEnable(object &data);
void handle_vkCmdSetDepthWriteEnableEXT(object &data);
void handle_vkCmdSetDepthCompareOp(object &data);
void handle_vkCmdSetDepthCompareOpEXT(object &data);
void handle_vkCmdSetDepthBoundsTestEnable(object &data);
void handle_vkCmdSetDepthBoundsTestEnableEXT(object &data);
void handle_vkCmdSetStencilTestEnable(object &data);
void handle_vkCmdSetStencilTestEnableEXT(object &data);
void handle_vkCmdSetStencilOp(object &data);
void handle_vkCmdSetStencilOpEXT(object &data);
void handle_vkCmdSetPatchControlPointsEXT(object &data);
void handle_vkCmdSetRasterizerDiscardEnable(object &data);
void handle_vkCmdSetRasterizerDiscardEnableEXT(object &data);
void handle_vkCmdSetDepthBiasEnable(object &data);
void handle_vkCmdSetDepthBiasEnableEXT(object &data);
void handle_vkCmdSetLogicOpEXT(object &data);
void handle_vkCmdSetPrimitiveRestartEnable(object &data);
void handle_vkCmdSetPrimitiveRestartEnableEXT(object &data);
void handle_vkCmdSetTessellationDomainOriginEXT(object &data);
void handle_vkCmdSetDepthClampEnableEXT(object &data);
void handle_vkCmdSetPolygonModeEXT(object &data);
void handle_vkCmdSetRasterizationSamplesEXT(object &data);
void handle_vkCmdSetSampleMaskEXT(object &data);
void handle_vkCmdSetAlphaToCoverageEnableEXT(object &data);
void handle_vkCmdSetAlphaToOneEnableEXT(object &data);
void handle_vkCmdSetLogicOpEnableEXT(object &data);
void handle_vkCmdSetColorBlendEnableEXT(object &data);
void handle_vkCmdSetColorBlendEquationEXT(object &data);
void handle_vkCmdSetColorWriteMaskEXT(object &data);
void handle_vkCmdSetRasterizationStreamEXT(object &data);
void handle_vkCmdSetConservativeRasterizationModeEXT(object &data);
void handle_vkCmdSetExtraPrimitiveOverestimationSizeEXT(object &data);
void handle_vkCmdSetDepthClipEnableEXT(object &data);
void handle_vkCmdSetSampleLocationsEnableEXT(object &data);
void handle_vkCmdSetColorBlendAdvancedEXT(object &data);
void handle_vkCmdSetProvokingVertexModeEXT(object &data);
void handle_vkCmdSetLineRasterizationModeEXT(object &data);
void handle_vkCmdSetLineStippleEnableEXT(object &data);
void handle_vkCmdSetDepthClipNegativeOneToOneEXT(object &data);
void handle_vkCmdSetViewportWScalingEnableNV(object &data);
void handle_vkCmdSetViewportSwizzleNV(object &data);
void handle_vkCmdSetCoverageToColorEnableNV(object &data);
void handle_vkCmdSetCoverageToColorLocationNV(object &data);
void handle_vkCmdSetCoverageModulationModeNV(object &data);
void handle_vkCmdSetCoverageModulationTableEnableNV(object &data);
void handle_vkCmdSetCoverageModulationTableNV(object &data);
void handle_vkCmdSetShadingRateImageEnableNV(object &data);
void handle_vkCmdSetCoverageReductionModeNV(object &data);
void handle_vkCmdSetRepresentativeFragmentTestEnableNV(object &data);
void handle_vkCreatePrivateDataSlot(object &data);
void handle_vkCreatePrivateDataSlotEXT(object &data);
void handle_vkDestroyPrivateDataSlot(object &data);
void handle_vkDestroyPrivateDataSlotEXT(object &data);
void handle_vkSetPrivateData(object &data);
void handle_vkSetPrivateDataEXT(object &data);
void handle_vkGetPrivateData(object &data);
void handle_vkGetPrivateDataEXT(object &data);
void handle_vkCmdCopyBuffer2(object &data);
void handle_vkCmdCopyBuffer2KHR(object &data);
void handle_vkCmdCopyImage2(object &data);
void handle_vkCmdCopyImage2KHR(object &data);
void handle_vkCmdBlitImage2(object &data);
void handle_vkCmdBlitImage2KHR(object &data);
void handle_vkCmdCopyBufferToImage2(object &data);
void handle_vkCmdCopyBufferToImage2KHR(object &data);
void handle_vkCmdCopyImageToBuffer2(object &data);
void handle_vkCmdCopyImageToBuffer2KHR(object &data);
void handle_vkCmdResolveImage2(object &data);
void handle_vkCmdResolveImage2KHR(object &data);
void handle_vkCmdSetFragmentShadingRateKHR(object &data);
void handle_vkGetPhysicalDeviceFragmentShadingRatesKHR(object &data);
void handle_vkCmdSetFragmentShadingRateEnumNV(object &data);
void handle_vkGetAccelerationStructureBuildSizesKHR(object &data);
void handle_vkCmdSetVertexInputEXT(object &data);
void handle_vkCmdSetColorWriteEnableEXT(object &data);
void handle_vkCmdSetEvent2(object &data);
void handle_vkCmdSetEvent2KHR(object &data);
void handle_vkCmdResetEvent2(object &data);
void handle_vkCmdResetEvent2KHR(object &data);
void handle_vkCmdWaitEvents2(object &data);
void handle_vkCmdWaitEvents2KHR(object &data);
void handle_vkCmdPipelineBarrier2(object &data);
void handle_vkCmdPipelineBarrier2KHR(object &data);
void handle_vkQueueSubmit2(object &data);
void handle_vkQueueSubmit2KHR(object &data);
void handle_vkCmdWriteTimestamp2(object &data);
void handle_vkCmdWriteTimestamp2KHR(object &data);
void handle_vkCmdWriteBufferMarker2AMD(object &data);
void handle_vkGetQueueCheckpointData2NV(object &data);
void handle_vkCopyMemoryToImageEXT(object &data);
void handle_vkCopyImageToMemoryEXT(object &data);
void handle_vkCopyImageToImageEXT(object &data);
void handle_vkTransitionImageLayoutEXT(object &data);
void handle_vkGetPhysicalDeviceVideoCapabilitiesKHR(object &data);
void handle_vkGetPhysicalDeviceVideoFormatPropertiesKHR(object &data);
void handle_vkCreateVideoSessionKHR(object &data);
void handle_vkDestroyVideoSessionKHR(object &data);
void handle_vkCreateVideoSessionParametersKHR(object &data);
void handle_vkUpdateVideoSessionParametersKHR(object &data);
void handle_vkDestroyVideoSessionParametersKHR(object &data);
void handle_vkGetVideoSessionMemoryRequirementsKHR(object &data);
void handle_vkBindVideoSessionMemoryKHR(object &data);
void handle_vkCmdDecodeVideoKHR(object &data);
void handle_vkCmdBeginVideoCodingKHR(object &data);
void handle_vkCmdControlVideoCodingKHR(object &data);
void handle_vkCmdEndVideoCodingKHR(object &data);
void handle_vkCmdDecompressMemoryNV(object &data);
void handle_vkCmdDecompressMemoryIndirectCountNV(object &data);
void handle_vkCreateCuModuleNVX(object &data);
void handle_vkCreateCuFunctionNVX(object &data);
void handle_vkDestroyCuModuleNVX(object &data);
void handle_vkDestroyCuFunctionNVX(object &data);
void handle_vkCmdCuLaunchKernelNVX(object &data);
void handle_vkGetDescriptorSetLayoutSizeEXT(object &data);
void handle_vkGetDescriptorSetLayoutBindingOffsetEXT(object &data);
void handle_vkGetDescriptorEXT(object &data);
void handle_vkCmdBindDescriptorBuffersEXT(object &data);
void handle_vkCmdSetDescriptorBufferOffsetsEXT(object &data);
void handle_vkCmdBindDescriptorBufferEmbeddedSamplersEXT(object &data);
void handle_vkGetBufferOpaqueCaptureDescriptorDataEXT(object &data);
void handle_vkGetImageOpaqueCaptureDescriptorDataEXT(object &data);
void handle_vkGetImageViewOpaqueCaptureDescriptorDataEXT(object &data);
void handle_vkGetSamplerOpaqueCaptureDescriptorDataEXT(object &data);
void handle_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT(object &data);
void handle_vkSetDeviceMemoryPriorityEXT(object &data);
void handle_vkAcquireDrmDisplayEXT(object &data);
void handle_vkGetDrmDisplayEXT(object &data);
void handle_vkWaitForPresentKHR(object &data);
void handle_vkCmdBeginRendering(object &data);
void handle_vkCmdBeginRenderingKHR(object &data);
void handle_vkCmdEndRendering(object &data);
void handle_vkCmdEndRenderingKHR(object &data);
void handle_vkGetDescriptorSetLayoutHostMappingInfoVALVE(object &data);
void handle_vkGetDescriptorSetHostMappingVALVE(object &data);
void handle_vkCreateMicromapEXT(object &data);
void handle_vkCmdBuildMicromapsEXT(object &data);
void handle_vkBuildMicromapsEXT(object &data);
void handle_vkDestroyMicromapEXT(object &data);
void handle_vkCmdCopyMicromapEXT(object &data);
void handle_vkCopyMicromapEXT(object &data);
void handle_vkCmdCopyMicromapToMemoryEXT(object &data);
void handle_vkCopyMicromapToMemoryEXT(object &data);
void handle_vkCmdCopyMemoryToMicromapEXT(object &data);
void handle_vkCopyMemoryToMicromapEXT(object &data);
void handle_vkCmdWriteMicromapsPropertiesEXT(object &data);
void handle_vkWriteMicromapsPropertiesEXT(object &data);
void handle_vkGetDeviceMicromapCompatibilityEXT(object &data);
void handle_vkGetMicromapBuildSizesEXT(object &data);
void handle_vkGetShaderModuleIdentifierEXT(object &data);
void handle_vkGetShaderModuleCreateInfoIdentifierEXT(object &data);
void handle_vkGetImageSubresourceLayout2KHR(object &data);
void handle_vkGetImageSubresourceLayout2EXT(object &data);
void handle_vkGetPipelinePropertiesEXT(object &data);
void handle_vkGetFramebufferTilePropertiesQCOM(object &data);
void handle_vkGetDynamicRenderingTilePropertiesQCOM(object &data);
void handle_vkGetPhysicalDeviceOpticalFlowImageFormatsNV(object &data);
void handle_vkCreateOpticalFlowSessionNV(object &data);
void handle_vkDestroyOpticalFlowSessionNV(object &data);
void handle_vkBindOpticalFlowSessionImageNV(object &data);
void handle_vkCmdOpticalFlowExecuteNV(object &data);
void handle_vkGetDeviceFaultInfoEXT(object &data);
void handle_vkCmdSetDepthBias2EXT(object &data);
void handle_vkReleaseSwapchainImagesEXT(object &data);
void handle_vkGetDeviceImageSubresourceLayoutKHR(object &data);
void handle_vkMapMemory2KHR(object &data);
void handle_vkUnmapMemory2KHR(object &data);
void handle_vkCreateShadersEXT(object &data);
void handle_vkDestroyShaderEXT(object &data);
void handle_vkGetShaderBinaryDataEXT(object &data);
void handle_vkCmdBindShadersEXT(object &data);
void handle_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR(object &data);
void handle_command(object &data);
