void handle_vkCreateInstance(rjson &data);
void handle_vkDestroyInstance(rjson &data);
void handle_vkEnumeratePhysicalDevices(rjson &data);
void handle_vkGetDeviceProcAddr(rjson &data);
void handle_vkGetInstanceProcAddr(rjson &data);
void handle_vkGetPhysicalDeviceProperties(rjson &data);
void handle_vkGetPhysicalDeviceQueueFamilyProperties(rjson &data);
void handle_vkGetPhysicalDeviceMemoryProperties(rjson &data);
void handle_vkGetPhysicalDeviceFeatures(rjson &data);
void handle_vkGetPhysicalDeviceFormatProperties(rjson &data);
void handle_vkGetPhysicalDeviceImageFormatProperties(rjson &data);
void handle_vkCreateDevice(rjson &data);
void handle_vkDestroyDevice(rjson &data);
void handle_vkEnumerateInstanceVersion(rjson &data);
void handle_vkEnumerateInstanceLayerProperties(rjson &data);
void handle_vkEnumerateInstanceExtensionProperties(rjson &data);
void handle_vkEnumerateDeviceLayerProperties(rjson &data);
void handle_vkEnumerateDeviceExtensionProperties(rjson &data);
void handle_vkGetDeviceQueue(rjson &data);
void handle_vkQueueSubmit(rjson &data);
void handle_vkQueueWaitIdle(rjson &data);
void handle_vkDeviceWaitIdle(rjson &data);
void handle_vkAllocateMemory(rjson &data);
void handle_vkFreeMemory(rjson &data);
void handle_vkMapMemory(rjson &data);
void handle_vkUnmapMemory(rjson &data);
void handle_vkFlushMappedMemoryRanges(rjson &data);
void handle_vkInvalidateMappedMemoryRanges(rjson &data);
void handle_vkGetDeviceMemoryCommitment(rjson &data);
void handle_vkGetBufferMemoryRequirements(rjson &data);
void handle_vkBindBufferMemory(rjson &data);
void handle_vkGetImageMemoryRequirements(rjson &data);
void handle_vkBindImageMemory(rjson &data);
void handle_vkGetImageSparseMemoryRequirements(rjson &data);
void handle_vkGetPhysicalDeviceSparseImageFormatProperties(rjson &data);
void handle_vkQueueBindSparse(rjson &data);
void handle_vkCreateFence(rjson &data);
void handle_vkDestroyFence(rjson &data);
void handle_vkResetFences(rjson &data);
void handle_vkGetFenceStatus(rjson &data);
void handle_vkWaitForFences(rjson &data);
void handle_vkCreateSemaphore(rjson &data);
void handle_vkDestroySemaphore(rjson &data);
void handle_vkCreateEvent(rjson &data);
void handle_vkDestroyEvent(rjson &data);
void handle_vkGetEventStatus(rjson &data);
void handle_vkSetEvent(rjson &data);
void handle_vkResetEvent(rjson &data);
void handle_vkCreateQueryPool(rjson &data);
void handle_vkDestroyQueryPool(rjson &data);
void handle_vkGetQueryPoolResults(rjson &data);
void handle_vkResetQueryPool(rjson &data);
void handle_vkResetQueryPoolEXT(rjson &data);
void handle_vkCreateBuffer(rjson &data);
void handle_vkDestroyBuffer(rjson &data);
void handle_vkCreateBufferView(rjson &data);
void handle_vkDestroyBufferView(rjson &data);
void handle_vkCreateImage(rjson &data);
void handle_vkDestroyImage(rjson &data);
void handle_vkGetImageSubresourceLayout(rjson &data);
void handle_vkCreateImageView(rjson &data);
void handle_vkDestroyImageView(rjson &data);
void handle_vkCreateShaderModule(rjson &data);
void handle_vkDestroyShaderModule(rjson &data);
void handle_vkCreatePipelineCache(rjson &data);
void handle_vkDestroyPipelineCache(rjson &data);
void handle_vkGetPipelineCacheData(rjson &data);
void handle_vkMergePipelineCaches(rjson &data);
void handle_vkCreateGraphicsPipelines(rjson &data);
void handle_vkCreateComputePipelines(rjson &data);
void handle_vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI(rjson &data);
void handle_vkDestroyPipeline(rjson &data);
void handle_vkCreatePipelineLayout(rjson &data);
void handle_vkDestroyPipelineLayout(rjson &data);
void handle_vkCreateSampler(rjson &data);
void handle_vkDestroySampler(rjson &data);
void handle_vkCreateDescriptorSetLayout(rjson &data);
void handle_vkDestroyDescriptorSetLayout(rjson &data);
void handle_vkCreateDescriptorPool(rjson &data);
void handle_vkDestroyDescriptorPool(rjson &data);
void handle_vkResetDescriptorPool(rjson &data);
void handle_vkAllocateDescriptorSets(rjson &data);
void handle_vkFreeDescriptorSets(rjson &data);
void handle_vkUpdateDescriptorSets(rjson &data);
void handle_vkCreateFramebuffer(rjson &data);
void handle_vkDestroyFramebuffer(rjson &data);
void handle_vkCreateRenderPass(rjson &data);
void handle_vkDestroyRenderPass(rjson &data);
void handle_vkGetRenderAreaGranularity(rjson &data);
void handle_vkGetRenderingAreaGranularityKHR(rjson &data);
void handle_vkCreateCommandPool(rjson &data);
void handle_vkDestroyCommandPool(rjson &data);
void handle_vkResetCommandPool(rjson &data);
void handle_vkAllocateCommandBuffers(rjson &data);
void handle_vkFreeCommandBuffers(rjson &data);
void handle_vkBeginCommandBuffer(rjson &data);
void handle_vkEndCommandBuffer(rjson &data);
void handle_vkResetCommandBuffer(rjson &data);
void handle_vkCmdBindPipeline(rjson &data);
void handle_vkCmdSetAttachmentFeedbackLoopEnableEXT(rjson &data);
void handle_vkCmdSetViewport(rjson &data);
void handle_vkCmdSetScissor(rjson &data);
void handle_vkCmdSetLineWidth(rjson &data);
void handle_vkCmdSetDepthBias(rjson &data);
void handle_vkCmdSetBlendConstants(rjson &data);
void handle_vkCmdSetDepthBounds(rjson &data);
void handle_vkCmdSetStencilCompareMask(rjson &data);
void handle_vkCmdSetStencilWriteMask(rjson &data);
void handle_vkCmdSetStencilReference(rjson &data);
void handle_vkCmdBindDescriptorSets(rjson &data);
void handle_vkCmdBindIndexBuffer(rjson &data);
void handle_vkCmdBindVertexBuffers(rjson &data);
void handle_vkCmdDraw(rjson &data);
void handle_vkCmdDrawIndexed(rjson &data);
void handle_vkCmdDrawMultiEXT(rjson &data);
void handle_vkCmdDrawMultiIndexedEXT(rjson &data);
void handle_vkCmdDrawIndirect(rjson &data);
void handle_vkCmdDrawIndexedIndirect(rjson &data);
void handle_vkCmdDispatch(rjson &data);
void handle_vkCmdDispatchIndirect(rjson &data);
void handle_vkCmdSubpassShadingHUAWEI(rjson &data);
void handle_vkCmdDrawClusterHUAWEI(rjson &data);
void handle_vkCmdDrawClusterIndirectHUAWEI(rjson &data);
void handle_vkCmdUpdatePipelineIndirectBufferNV(rjson &data);
void handle_vkCmdCopyBuffer(rjson &data);
void handle_vkCmdCopyImage(rjson &data);
void handle_vkCmdBlitImage(rjson &data);
void handle_vkCmdCopyBufferToImage(rjson &data);
void handle_vkCmdCopyImageToBuffer(rjson &data);
void handle_vkCmdCopyMemoryIndirectNV(rjson &data);
void handle_vkCmdCopyMemoryToImageIndirectNV(rjson &data);
void handle_vkCmdUpdateBuffer(rjson &data);
void handle_vkCmdFillBuffer(rjson &data);
void handle_vkCmdClearColorImage(rjson &data);
void handle_vkCmdClearDepthStencilImage(rjson &data);
void handle_vkCmdClearAttachments(rjson &data);
void handle_vkCmdResolveImage(rjson &data);
void handle_vkCmdSetEvent(rjson &data);
void handle_vkCmdResetEvent(rjson &data);
void handle_vkCmdWaitEvents(rjson &data);
void handle_vkCmdPipelineBarrier(rjson &data);
void handle_vkCmdBeginQuery(rjson &data);
void handle_vkCmdEndQuery(rjson &data);
void handle_vkCmdBeginConditionalRenderingEXT(rjson &data);
void handle_vkCmdEndConditionalRenderingEXT(rjson &data);
void handle_vkCmdResetQueryPool(rjson &data);
void handle_vkCmdWriteTimestamp(rjson &data);
void handle_vkCmdCopyQueryPoolResults(rjson &data);
void handle_vkCmdPushConstants(rjson &data);
void handle_vkCmdBeginRenderPass(rjson &data);
void handle_vkCmdNextSubpass(rjson &data);
void handle_vkCmdEndRenderPass(rjson &data);
void handle_vkCmdExecuteCommands(rjson &data);
void handle_vkGetPhysicalDeviceDisplayPropertiesKHR(rjson &data);
void handle_vkGetPhysicalDeviceDisplayPlanePropertiesKHR(rjson &data);
void handle_vkGetDisplayPlaneSupportedDisplaysKHR(rjson &data);
void handle_vkGetDisplayModePropertiesKHR(rjson &data);
void handle_vkCreateDisplayModeKHR(rjson &data);
void handle_vkGetDisplayPlaneCapabilitiesKHR(rjson &data);
void handle_vkCreateDisplayPlaneSurfaceKHR(rjson &data);
void handle_vkCreateSharedSwapchainsKHR(rjson &data);
void handle_vkDestroySurfaceKHR(rjson &data);
void handle_vkGetPhysicalDeviceSurfaceSupportKHR(rjson &data);
void handle_vkGetPhysicalDeviceSurfaceCapabilitiesKHR(rjson &data);
void handle_vkGetPhysicalDeviceSurfaceFormatsKHR(rjson &data);
void handle_vkGetPhysicalDeviceSurfacePresentModesKHR(rjson &data);
void handle_vkCreateSwapchainKHR(rjson &data);
void handle_vkDestroySwapchainKHR(rjson &data);
void handle_vkGetSwapchainImagesKHR(rjson &data);
void handle_vkAcquireNextImageKHR(rjson &data);
void handle_vkQueuePresentKHR(rjson &data);
void handle_vkCreateXlibSurfaceKHR(rjson &data);
void handle_vkGetPhysicalDeviceXlibPresentationSupportKHR(rjson &data);
void handle_vkCreateXcbSurfaceKHR(rjson &data);
void handle_vkGetPhysicalDeviceXcbPresentationSupportKHR(rjson &data);
void handle_vkCreateDebugReportCallbackEXT(rjson &data);
void handle_vkDestroyDebugReportCallbackEXT(rjson &data);
void handle_vkDebugReportMessageEXT(rjson &data);
void handle_vkDebugMarkerSetObjectNameEXT(rjson &data);
void handle_vkDebugMarkerSetObjectTagEXT(rjson &data);
void handle_vkCmdDebugMarkerBeginEXT(rjson &data);
void handle_vkCmdDebugMarkerEndEXT(rjson &data);
void handle_vkCmdDebugMarkerInsertEXT(rjson &data);
void handle_vkGetPhysicalDeviceExternalImageFormatPropertiesNV(rjson &data);
void handle_vkCmdExecuteGeneratedCommandsNV(rjson &data);
void handle_vkCmdPreprocessGeneratedCommandsNV(rjson &data);
void handle_vkCmdBindPipelineShaderGroupNV(rjson &data);
void handle_vkGetGeneratedCommandsMemoryRequirementsNV(rjson &data);
void handle_vkCreateIndirectCommandsLayoutNV(rjson &data);
void handle_vkDestroyIndirectCommandsLayoutNV(rjson &data);
void handle_vkGetPhysicalDeviceFeatures2(rjson &data);
void handle_vkGetPhysicalDeviceFeatures2KHR(rjson &data);
void handle_vkGetPhysicalDeviceProperties2(rjson &data);
void handle_vkGetPhysicalDeviceProperties2KHR(rjson &data);
void handle_vkGetPhysicalDeviceFormatProperties2(rjson &data);
void handle_vkGetPhysicalDeviceFormatProperties2KHR(rjson &data);
void handle_vkGetPhysicalDeviceImageFormatProperties2(rjson &data);
void handle_vkGetPhysicalDeviceImageFormatProperties2KHR(rjson &data);
void handle_vkGetPhysicalDeviceQueueFamilyProperties2(rjson &data);
void handle_vkGetPhysicalDeviceQueueFamilyProperties2KHR(rjson &data);
void handle_vkGetPhysicalDeviceMemoryProperties2(rjson &data);
void handle_vkGetPhysicalDeviceMemoryProperties2KHR(rjson &data);
void handle_vkGetPhysicalDeviceSparseImageFormatProperties2(rjson &data);
void handle_vkGetPhysicalDeviceSparseImageFormatProperties2KHR(rjson &data);
void handle_vkCmdPushDescriptorSetKHR(rjson &data);
void handle_vkTrimCommandPool(rjson &data);
void handle_vkTrimCommandPoolKHR(rjson &data);
void handle_vkGetPhysicalDeviceExternalBufferProperties(rjson &data);
void handle_vkGetPhysicalDeviceExternalBufferPropertiesKHR(rjson &data);
void handle_vkGetMemoryFdKHR(rjson &data);
void handle_vkGetMemoryFdPropertiesKHR(rjson &data);
void handle_vkGetMemoryRemoteAddressNV(rjson &data);
void handle_vkGetPhysicalDeviceExternalSemaphoreProperties(rjson &data);
void handle_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(rjson &data);
void handle_vkGetSemaphoreFdKHR(rjson &data);
void handle_vkImportSemaphoreFdKHR(rjson &data);
void handle_vkGetPhysicalDeviceExternalFenceProperties(rjson &data);
void handle_vkGetPhysicalDeviceExternalFencePropertiesKHR(rjson &data);
void handle_vkGetFenceFdKHR(rjson &data);
void handle_vkImportFenceFdKHR(rjson &data);
void handle_vkReleaseDisplayEXT(rjson &data);
void handle_vkDisplayPowerControlEXT(rjson &data);
void handle_vkRegisterDeviceEventEXT(rjson &data);
void handle_vkRegisterDisplayEventEXT(rjson &data);
void handle_vkGetSwapchainCounterEXT(rjson &data);
void handle_vkGetPhysicalDeviceSurfaceCapabilities2EXT(rjson &data);
void handle_vkEnumeratePhysicalDeviceGroups(rjson &data);
void handle_vkEnumeratePhysicalDeviceGroupsKHR(rjson &data);
void handle_vkGetDeviceGroupPeerMemoryFeatures(rjson &data);
void handle_vkGetDeviceGroupPeerMemoryFeaturesKHR(rjson &data);
void handle_vkBindBufferMemory2(rjson &data);
void handle_vkBindBufferMemory2KHR(rjson &data);
void handle_vkBindImageMemory2(rjson &data);
void handle_vkBindImageMemory2KHR(rjson &data);
void handle_vkCmdSetDeviceMask(rjson &data);
void handle_vkCmdSetDeviceMaskKHR(rjson &data);
void handle_vkGetDeviceGroupPresentCapabilitiesKHR(rjson &data);
void handle_vkGetDeviceGroupSurfacePresentModesKHR(rjson &data);
void handle_vkAcquireNextImage2KHR(rjson &data);
void handle_vkCmdDispatchBase(rjson &data);
void handle_vkCmdDispatchBaseKHR(rjson &data);
void handle_vkGetPhysicalDevicePresentRectanglesKHR(rjson &data);
void handle_vkCreateDescriptorUpdateTemplate(rjson &data);
void handle_vkCreateDescriptorUpdateTemplateKHR(rjson &data);
void handle_vkDestroyDescriptorUpdateTemplate(rjson &data);
void handle_vkDestroyDescriptorUpdateTemplateKHR(rjson &data);
void handle_vkUpdateDescriptorSetWithTemplate(rjson &data);
void handle_vkUpdateDescriptorSetWithTemplateKHR(rjson &data);
void handle_vkCmdPushDescriptorSetWithTemplateKHR(rjson &data);
void handle_vkSetHdrMetadataEXT(rjson &data);
void handle_vkGetSwapchainStatusKHR(rjson &data);
void handle_vkGetRefreshCycleDurationGOOGLE(rjson &data);
void handle_vkGetPastPresentationTimingGOOGLE(rjson &data);
void handle_vkCmdSetViewportWScalingNV(rjson &data);
void handle_vkCmdSetDiscardRectangleEXT(rjson &data);
void handle_vkCmdSetDiscardRectangleEnableEXT(rjson &data);
void handle_vkCmdSetDiscardRectangleModeEXT(rjson &data);
void handle_vkCmdSetSampleLocationsEXT(rjson &data);
void handle_vkGetPhysicalDeviceMultisamplePropertiesEXT(rjson &data);
void handle_vkGetPhysicalDeviceSurfaceCapabilities2KHR(rjson &data);
void handle_vkGetPhysicalDeviceSurfaceFormats2KHR(rjson &data);
void handle_vkGetPhysicalDeviceDisplayProperties2KHR(rjson &data);
void handle_vkGetPhysicalDeviceDisplayPlaneProperties2KHR(rjson &data);
void handle_vkGetDisplayModeProperties2KHR(rjson &data);
void handle_vkGetDisplayPlaneCapabilities2KHR(rjson &data);
void handle_vkGetBufferMemoryRequirements2(rjson &data);
void handle_vkGetBufferMemoryRequirements2KHR(rjson &data);
void handle_vkGetImageMemoryRequirements2(rjson &data);
void handle_vkGetImageMemoryRequirements2KHR(rjson &data);
void handle_vkGetImageSparseMemoryRequirements2(rjson &data);
void handle_vkGetImageSparseMemoryRequirements2KHR(rjson &data);
void handle_vkGetDeviceBufferMemoryRequirements(rjson &data);
void handle_vkGetDeviceBufferMemoryRequirementsKHR(rjson &data);
void handle_vkGetDeviceImageMemoryRequirements(rjson &data);
void handle_vkGetDeviceImageMemoryRequirementsKHR(rjson &data);
void handle_vkGetDeviceImageSparseMemoryRequirements(rjson &data);
void handle_vkGetDeviceImageSparseMemoryRequirementsKHR(rjson &data);
void handle_vkCreateSamplerYcbcrConversion(rjson &data);
void handle_vkCreateSamplerYcbcrConversionKHR(rjson &data);
void handle_vkDestroySamplerYcbcrConversion(rjson &data);
void handle_vkDestroySamplerYcbcrConversionKHR(rjson &data);
void handle_vkGetDeviceQueue2(rjson &data);
void handle_vkCreateValidationCacheEXT(rjson &data);
void handle_vkDestroyValidationCacheEXT(rjson &data);
void handle_vkGetValidationCacheDataEXT(rjson &data);
void handle_vkMergeValidationCachesEXT(rjson &data);
void handle_vkGetDescriptorSetLayoutSupport(rjson &data);
void handle_vkGetDescriptorSetLayoutSupportKHR(rjson &data);
void handle_vkGetShaderInfoAMD(rjson &data);
void handle_vkSetLocalDimmingAMD(rjson &data);
void handle_vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(rjson &data);
void handle_vkGetCalibratedTimestampsEXT(rjson &data);
void handle_vkSetDebugUtilsObjectNameEXT(rjson &data);
void handle_vkSetDebugUtilsObjectTagEXT(rjson &data);
void handle_vkQueueBeginDebugUtilsLabelEXT(rjson &data);
void handle_vkQueueEndDebugUtilsLabelEXT(rjson &data);
void handle_vkQueueInsertDebugUtilsLabelEXT(rjson &data);
void handle_vkCmdBeginDebugUtilsLabelEXT(rjson &data);
void handle_vkCmdEndDebugUtilsLabelEXT(rjson &data);
void handle_vkCmdInsertDebugUtilsLabelEXT(rjson &data);
void handle_vkCreateDebugUtilsMessengerEXT(rjson &data);
void handle_vkDestroyDebugUtilsMessengerEXT(rjson &data);
void handle_vkSubmitDebugUtilsMessageEXT(rjson &data);
void handle_vkGetMemoryHostPointerPropertiesEXT(rjson &data);
void handle_vkCmdWriteBufferMarkerAMD(rjson &data);
void handle_vkCreateRenderPass2(rjson &data);
void handle_vkCreateRenderPass2KHR(rjson &data);
void handle_vkCmdBeginRenderPass2(rjson &data);
void handle_vkCmdBeginRenderPass2KHR(rjson &data);
void handle_vkCmdNextSubpass2(rjson &data);
void handle_vkCmdNextSubpass2KHR(rjson &data);
void handle_vkCmdEndRenderPass2(rjson &data);
void handle_vkCmdEndRenderPass2KHR(rjson &data);
void handle_vkGetSemaphoreCounterValue(rjson &data);
void handle_vkGetSemaphoreCounterValueKHR(rjson &data);
void handle_vkWaitSemaphores(rjson &data);
void handle_vkWaitSemaphoresKHR(rjson &data);
void handle_vkSignalSemaphore(rjson &data);
void handle_vkSignalSemaphoreKHR(rjson &data);
void handle_vkCmdDrawIndirectCount(rjson &data);
void handle_vkCmdDrawIndirectCountKHR(rjson &data);
void handle_vkCmdDrawIndirectCountAMD(rjson &data);
void handle_vkCmdDrawIndexedIndirectCount(rjson &data);
void handle_vkCmdDrawIndexedIndirectCountKHR(rjson &data);
void handle_vkCmdDrawIndexedIndirectCountAMD(rjson &data);
void handle_vkCmdSetCheckpointNV(rjson &data);
void handle_vkGetQueueCheckpointDataNV(rjson &data);
void handle_vkCmdBindTransformFeedbackBuffersEXT(rjson &data);
void handle_vkCmdBeginTransformFeedbackEXT(rjson &data);
void handle_vkCmdEndTransformFeedbackEXT(rjson &data);
void handle_vkCmdBeginQueryIndexedEXT(rjson &data);
void handle_vkCmdEndQueryIndexedEXT(rjson &data);
void handle_vkCmdDrawIndirectByteCountEXT(rjson &data);
void handle_vkCmdSetExclusiveScissorNV(rjson &data);
void handle_vkCmdSetExclusiveScissorEnableNV(rjson &data);
void handle_vkCmdBindShadingRateImageNV(rjson &data);
void handle_vkCmdSetViewportShadingRatePaletteNV(rjson &data);
void handle_vkCmdSetCoarseSampleOrderNV(rjson &data);
void handle_vkCmdDrawMeshTasksNV(rjson &data);
void handle_vkCmdDrawMeshTasksIndirectNV(rjson &data);
void handle_vkCmdDrawMeshTasksIndirectCountNV(rjson &data);
void handle_vkCmdDrawMeshTasksEXT(rjson &data);
void handle_vkCmdDrawMeshTasksIndirectEXT(rjson &data);
void handle_vkCmdDrawMeshTasksIndirectCountEXT(rjson &data);
void handle_vkCompileDeferredNV(rjson &data);
void handle_vkCreateAccelerationStructureNV(rjson &data);
void handle_vkCmdBindInvocationMaskHUAWEI(rjson &data);
void handle_vkDestroyAccelerationStructureKHR(rjson &data);
void handle_vkDestroyAccelerationStructureNV(rjson &data);
void handle_vkGetAccelerationStructureMemoryRequirementsNV(rjson &data);
void handle_vkBindAccelerationStructureMemoryNV(rjson &data);
void handle_vkCmdCopyAccelerationStructureNV(rjson &data);
void handle_vkCmdCopyAccelerationStructureKHR(rjson &data);
void handle_vkCopyAccelerationStructureKHR(rjson &data);
void handle_vkCmdCopyAccelerationStructureToMemoryKHR(rjson &data);
void handle_vkCopyAccelerationStructureToMemoryKHR(rjson &data);
void handle_vkCmdCopyMemoryToAccelerationStructureKHR(rjson &data);
void handle_vkCopyMemoryToAccelerationStructureKHR(rjson &data);
void handle_vkCmdWriteAccelerationStructuresPropertiesKHR(rjson &data);
void handle_vkCmdWriteAccelerationStructuresPropertiesNV(rjson &data);
void handle_vkCmdBuildAccelerationStructureNV(rjson &data);
void handle_vkWriteAccelerationStructuresPropertiesKHR(rjson &data);
void handle_vkCmdTraceRaysKHR(rjson &data);
void handle_vkCmdTraceRaysNV(rjson &data);
void handle_vkGetRayTracingShaderGroupHandlesKHR(rjson &data);
void handle_vkGetRayTracingShaderGroupHandlesNV(rjson &data);
void handle_vkGetRayTracingCaptureReplayShaderGroupHandlesKHR(rjson &data);
void handle_vkGetAccelerationStructureHandleNV(rjson &data);
void handle_vkCreateRayTracingPipelinesNV(rjson &data);
void handle_vkCreateRayTracingPipelinesKHR(rjson &data);
void handle_vkGetPhysicalDeviceCooperativeMatrixPropertiesNV(rjson &data);
void handle_vkCmdTraceRaysIndirectKHR(rjson &data);
void handle_vkCmdTraceRaysIndirect2KHR(rjson &data);
void handle_vkGetDeviceAccelerationStructureCompatibilityKHR(rjson &data);
void handle_vkGetRayTracingShaderGroupStackSizeKHR(rjson &data);
void handle_vkCmdSetRayTracingPipelineStackSizeKHR(rjson &data);
void handle_vkGetImageViewHandleNVX(rjson &data);
void handle_vkGetImageViewAddressNVX(rjson &data);
void handle_vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(rjson &data);
void handle_vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(rjson &data);
void handle_vkAcquireProfilingLockKHR(rjson &data);
void handle_vkReleaseProfilingLockKHR(rjson &data);
void handle_vkGetImageDrmFormatModifierPropertiesEXT(rjson &data);
void handle_vkGetBufferOpaqueCaptureAddress(rjson &data);
void handle_vkGetBufferOpaqueCaptureAddressKHR(rjson &data);
void handle_vkGetBufferDeviceAddress(rjson &data);
void handle_vkGetBufferDeviceAddressKHR(rjson &data);
void handle_vkGetBufferDeviceAddressEXT(rjson &data);
void handle_vkCreateHeadlessSurfaceEXT(rjson &data);
void handle_vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(rjson &data);
void handle_vkInitializePerformanceApiINTEL(rjson &data);
void handle_vkUninitializePerformanceApiINTEL(rjson &data);
void handle_vkCmdSetPerformanceMarkerINTEL(rjson &data);
void handle_vkCmdSetPerformanceStreamMarkerINTEL(rjson &data);
void handle_vkCmdSetPerformanceOverrideINTEL(rjson &data);
void handle_vkAcquirePerformanceConfigurationINTEL(rjson &data);
void handle_vkReleasePerformanceConfigurationINTEL(rjson &data);
void handle_vkQueueSetPerformanceConfigurationINTEL(rjson &data);
void handle_vkGetPerformanceParameterINTEL(rjson &data);
void handle_vkGetDeviceMemoryOpaqueCaptureAddress(rjson &data);
void handle_vkGetDeviceMemoryOpaqueCaptureAddressKHR(rjson &data);
void handle_vkGetPipelineExecutablePropertiesKHR(rjson &data);
void handle_vkGetPipelineExecutableStatisticsKHR(rjson &data);
void handle_vkGetPipelineExecutableInternalRepresentationsKHR(rjson &data);
void handle_vkCmdSetLineStippleEXT(rjson &data);
void handle_vkGetPhysicalDeviceToolProperties(rjson &data);
void handle_vkGetPhysicalDeviceToolPropertiesEXT(rjson &data);
void handle_vkCreateAccelerationStructureKHR(rjson &data);
void handle_vkCmdBuildAccelerationStructuresKHR(rjson &data);
void handle_vkCmdBuildAccelerationStructuresIndirectKHR(rjson &data);
void handle_vkBuildAccelerationStructuresKHR(rjson &data);
void handle_vkGetAccelerationStructureDeviceAddressKHR(rjson &data);
void handle_vkCreateDeferredOperationKHR(rjson &data);
void handle_vkDestroyDeferredOperationKHR(rjson &data);
void handle_vkGetDeferredOperationMaxConcurrencyKHR(rjson &data);
void handle_vkGetDeferredOperationResultKHR(rjson &data);
void handle_vkDeferredOperationJoinKHR(rjson &data);
void handle_vkGetPipelineIndirectMemoryRequirementsNV(rjson &data);
void handle_vkGetPipelineIndirectDeviceAddressNV(rjson &data);
void handle_vkCmdSetCullMode(rjson &data);
void handle_vkCmdSetCullModeEXT(rjson &data);
void handle_vkCmdSetFrontFace(rjson &data);
void handle_vkCmdSetFrontFaceEXT(rjson &data);
void handle_vkCmdSetPrimitiveTopology(rjson &data);
void handle_vkCmdSetPrimitiveTopologyEXT(rjson &data);
void handle_vkCmdSetViewportWithCount(rjson &data);
void handle_vkCmdSetViewportWithCountEXT(rjson &data);
void handle_vkCmdSetScissorWithCount(rjson &data);
void handle_vkCmdSetScissorWithCountEXT(rjson &data);
void handle_vkCmdBindIndexBuffer2KHR(rjson &data);
void handle_vkCmdBindVertexBuffers2(rjson &data);
void handle_vkCmdBindVertexBuffers2EXT(rjson &data);
void handle_vkCmdSetDepthTestEnable(rjson &data);
void handle_vkCmdSetDepthTestEnableEXT(rjson &data);
void handle_vkCmdSetDepthWriteEnable(rjson &data);
void handle_vkCmdSetDepthWriteEnableEXT(rjson &data);
void handle_vkCmdSetDepthCompareOp(rjson &data);
void handle_vkCmdSetDepthCompareOpEXT(rjson &data);
void handle_vkCmdSetDepthBoundsTestEnable(rjson &data);
void handle_vkCmdSetDepthBoundsTestEnableEXT(rjson &data);
void handle_vkCmdSetStencilTestEnable(rjson &data);
void handle_vkCmdSetStencilTestEnableEXT(rjson &data);
void handle_vkCmdSetStencilOp(rjson &data);
void handle_vkCmdSetStencilOpEXT(rjson &data);
void handle_vkCmdSetPatchControlPointsEXT(rjson &data);
void handle_vkCmdSetRasterizerDiscardEnable(rjson &data);
void handle_vkCmdSetRasterizerDiscardEnableEXT(rjson &data);
void handle_vkCmdSetDepthBiasEnable(rjson &data);
void handle_vkCmdSetDepthBiasEnableEXT(rjson &data);
void handle_vkCmdSetLogicOpEXT(rjson &data);
void handle_vkCmdSetPrimitiveRestartEnable(rjson &data);
void handle_vkCmdSetPrimitiveRestartEnableEXT(rjson &data);
void handle_vkCmdSetTessellationDomainOriginEXT(rjson &data);
void handle_vkCmdSetDepthClampEnableEXT(rjson &data);
void handle_vkCmdSetPolygonModeEXT(rjson &data);
void handle_vkCmdSetRasterizationSamplesEXT(rjson &data);
void handle_vkCmdSetSampleMaskEXT(rjson &data);
void handle_vkCmdSetAlphaToCoverageEnableEXT(rjson &data);
void handle_vkCmdSetAlphaToOneEnableEXT(rjson &data);
void handle_vkCmdSetLogicOpEnableEXT(rjson &data);
void handle_vkCmdSetColorBlendEnableEXT(rjson &data);
void handle_vkCmdSetColorBlendEquationEXT(rjson &data);
void handle_vkCmdSetColorWriteMaskEXT(rjson &data);
void handle_vkCmdSetRasterizationStreamEXT(rjson &data);
void handle_vkCmdSetConservativeRasterizationModeEXT(rjson &data);
void handle_vkCmdSetExtraPrimitiveOverestimationSizeEXT(rjson &data);
void handle_vkCmdSetDepthClipEnableEXT(rjson &data);
void handle_vkCmdSetSampleLocationsEnableEXT(rjson &data);
void handle_vkCmdSetColorBlendAdvancedEXT(rjson &data);
void handle_vkCmdSetProvokingVertexModeEXT(rjson &data);
void handle_vkCmdSetLineRasterizationModeEXT(rjson &data);
void handle_vkCmdSetLineStippleEnableEXT(rjson &data);
void handle_vkCmdSetDepthClipNegativeOneToOneEXT(rjson &data);
void handle_vkCmdSetViewportWScalingEnableNV(rjson &data);
void handle_vkCmdSetViewportSwizzleNV(rjson &data);
void handle_vkCmdSetCoverageToColorEnableNV(rjson &data);
void handle_vkCmdSetCoverageToColorLocationNV(rjson &data);
void handle_vkCmdSetCoverageModulationModeNV(rjson &data);
void handle_vkCmdSetCoverageModulationTableEnableNV(rjson &data);
void handle_vkCmdSetCoverageModulationTableNV(rjson &data);
void handle_vkCmdSetShadingRateImageEnableNV(rjson &data);
void handle_vkCmdSetCoverageReductionModeNV(rjson &data);
void handle_vkCmdSetRepresentativeFragmentTestEnableNV(rjson &data);
void handle_vkCreatePrivateDataSlot(rjson &data);
void handle_vkCreatePrivateDataSlotEXT(rjson &data);
void handle_vkDestroyPrivateDataSlot(rjson &data);
void handle_vkDestroyPrivateDataSlotEXT(rjson &data);
void handle_vkSetPrivateData(rjson &data);
void handle_vkSetPrivateDataEXT(rjson &data);
void handle_vkGetPrivateData(rjson &data);
void handle_vkGetPrivateDataEXT(rjson &data);
void handle_vkCmdCopyBuffer2(rjson &data);
void handle_vkCmdCopyBuffer2KHR(rjson &data);
void handle_vkCmdCopyImage2(rjson &data);
void handle_vkCmdCopyImage2KHR(rjson &data);
void handle_vkCmdBlitImage2(rjson &data);
void handle_vkCmdBlitImage2KHR(rjson &data);
void handle_vkCmdCopyBufferToImage2(rjson &data);
void handle_vkCmdCopyBufferToImage2KHR(rjson &data);
void handle_vkCmdCopyImageToBuffer2(rjson &data);
void handle_vkCmdCopyImageToBuffer2KHR(rjson &data);
void handle_vkCmdResolveImage2(rjson &data);
void handle_vkCmdResolveImage2KHR(rjson &data);
void handle_vkCmdSetFragmentShadingRateKHR(rjson &data);
void handle_vkGetPhysicalDeviceFragmentShadingRatesKHR(rjson &data);
void handle_vkCmdSetFragmentShadingRateEnumNV(rjson &data);
void handle_vkGetAccelerationStructureBuildSizesKHR(rjson &data);
void handle_vkCmdSetVertexInputEXT(rjson &data);
void handle_vkCmdSetColorWriteEnableEXT(rjson &data);
void handle_vkCmdSetEvent2(rjson &data);
void handle_vkCmdSetEvent2KHR(rjson &data);
void handle_vkCmdResetEvent2(rjson &data);
void handle_vkCmdResetEvent2KHR(rjson &data);
void handle_vkCmdWaitEvents2(rjson &data);
void handle_vkCmdWaitEvents2KHR(rjson &data);
void handle_vkCmdPipelineBarrier2(rjson &data);
void handle_vkCmdPipelineBarrier2KHR(rjson &data);
void handle_vkQueueSubmit2(rjson &data);
void handle_vkQueueSubmit2KHR(rjson &data);
void handle_vkCmdWriteTimestamp2(rjson &data);
void handle_vkCmdWriteTimestamp2KHR(rjson &data);
void handle_vkCmdWriteBufferMarker2AMD(rjson &data);
void handle_vkGetQueueCheckpointData2NV(rjson &data);
void handle_vkCopyMemoryToImageEXT(rjson &data);
void handle_vkCopyImageToMemoryEXT(rjson &data);
void handle_vkCopyImageToImageEXT(rjson &data);
void handle_vkTransitionImageLayoutEXT(rjson &data);
void handle_vkGetPhysicalDeviceVideoCapabilitiesKHR(rjson &data);
void handle_vkGetPhysicalDeviceVideoFormatPropertiesKHR(rjson &data);
void handle_vkCreateVideoSessionKHR(rjson &data);
void handle_vkDestroyVideoSessionKHR(rjson &data);
void handle_vkCreateVideoSessionParametersKHR(rjson &data);
void handle_vkUpdateVideoSessionParametersKHR(rjson &data);
void handle_vkDestroyVideoSessionParametersKHR(rjson &data);
void handle_vkGetVideoSessionMemoryRequirementsKHR(rjson &data);
void handle_vkBindVideoSessionMemoryKHR(rjson &data);
void handle_vkCmdDecodeVideoKHR(rjson &data);
void handle_vkCmdBeginVideoCodingKHR(rjson &data);
void handle_vkCmdControlVideoCodingKHR(rjson &data);
void handle_vkCmdEndVideoCodingKHR(rjson &data);
void handle_vkCmdDecompressMemoryNV(rjson &data);
void handle_vkCmdDecompressMemoryIndirectCountNV(rjson &data);
void handle_vkCreateCuModuleNVX(rjson &data);
void handle_vkCreateCuFunctionNVX(rjson &data);
void handle_vkDestroyCuModuleNVX(rjson &data);
void handle_vkDestroyCuFunctionNVX(rjson &data);
void handle_vkCmdCuLaunchKernelNVX(rjson &data);
void handle_vkGetDescriptorSetLayoutSizeEXT(rjson &data);
void handle_vkGetDescriptorSetLayoutBindingOffsetEXT(rjson &data);
void handle_vkGetDescriptorEXT(rjson &data);
void handle_vkCmdBindDescriptorBuffersEXT(rjson &data);
void handle_vkCmdSetDescriptorBufferOffsetsEXT(rjson &data);
void handle_vkCmdBindDescriptorBufferEmbeddedSamplersEXT(rjson &data);
void handle_vkGetBufferOpaqueCaptureDescriptorDataEXT(rjson &data);
void handle_vkGetImageOpaqueCaptureDescriptorDataEXT(rjson &data);
void handle_vkGetImageViewOpaqueCaptureDescriptorDataEXT(rjson &data);
void handle_vkGetSamplerOpaqueCaptureDescriptorDataEXT(rjson &data);
void handle_vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT(rjson &data);
void handle_vkSetDeviceMemoryPriorityEXT(rjson &data);
void handle_vkAcquireDrmDisplayEXT(rjson &data);
void handle_vkGetDrmDisplayEXT(rjson &data);
void handle_vkWaitForPresentKHR(rjson &data);
void handle_vkCmdBeginRendering(rjson &data);
void handle_vkCmdBeginRenderingKHR(rjson &data);
void handle_vkCmdEndRendering(rjson &data);
void handle_vkCmdEndRenderingKHR(rjson &data);
void handle_vkGetDescriptorSetLayoutHostMappingInfoVALVE(rjson &data);
void handle_vkGetDescriptorSetHostMappingVALVE(rjson &data);
void handle_vkCreateMicromapEXT(rjson &data);
void handle_vkCmdBuildMicromapsEXT(rjson &data);
void handle_vkBuildMicromapsEXT(rjson &data);
void handle_vkDestroyMicromapEXT(rjson &data);
void handle_vkCmdCopyMicromapEXT(rjson &data);
void handle_vkCopyMicromapEXT(rjson &data);
void handle_vkCmdCopyMicromapToMemoryEXT(rjson &data);
void handle_vkCopyMicromapToMemoryEXT(rjson &data);
void handle_vkCmdCopyMemoryToMicromapEXT(rjson &data);
void handle_vkCopyMemoryToMicromapEXT(rjson &data);
void handle_vkCmdWriteMicromapsPropertiesEXT(rjson &data);
void handle_vkWriteMicromapsPropertiesEXT(rjson &data);
void handle_vkGetDeviceMicromapCompatibilityEXT(rjson &data);
void handle_vkGetMicromapBuildSizesEXT(rjson &data);
void handle_vkGetShaderModuleIdentifierEXT(rjson &data);
void handle_vkGetShaderModuleCreateInfoIdentifierEXT(rjson &data);
void handle_vkGetImageSubresourceLayout2KHR(rjson &data);
void handle_vkGetImageSubresourceLayout2EXT(rjson &data);
void handle_vkGetPipelinePropertiesEXT(rjson &data);
void handle_vkGetFramebufferTilePropertiesQCOM(rjson &data);
void handle_vkGetDynamicRenderingTilePropertiesQCOM(rjson &data);
void handle_vkGetPhysicalDeviceOpticalFlowImageFormatsNV(rjson &data);
void handle_vkCreateOpticalFlowSessionNV(rjson &data);
void handle_vkDestroyOpticalFlowSessionNV(rjson &data);
void handle_vkBindOpticalFlowSessionImageNV(rjson &data);
void handle_vkCmdOpticalFlowExecuteNV(rjson &data);
void handle_vkGetDeviceFaultInfoEXT(rjson &data);
void handle_vkCmdSetDepthBias2EXT(rjson &data);
void handle_vkReleaseSwapchainImagesEXT(rjson &data);
void handle_vkGetDeviceImageSubresourceLayoutKHR(rjson &data);
void handle_vkMapMemory2KHR(rjson &data);
void handle_vkUnmapMemory2KHR(rjson &data);
void handle_vkCreateShadersEXT(rjson &data);
void handle_vkDestroyShaderEXT(rjson &data);
void handle_vkGetShaderBinaryDataEXT(rjson &data);
void handle_vkCmdBindShadersEXT(rjson &data);
void handle_vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR(rjson &data);
void handle_command(rjson &data);
