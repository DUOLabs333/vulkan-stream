#include <vulkan/vulkan.h>

#include <map>
#include <vector>

namespace json {
    typedef msgpack::type::variant value;
    typedef std::vector<value> vector;
    typedef std::map<value, value> map;
}


typedef struct StreamStructure{
    VkStructureType sType;
    const void* pNext;
} StreamStructure;


enum StreamType {
SYNC = 0,

PFN_VKINTERNALALLOCATIONNOTIFICATION=672,
PFN_VKINTERNALFREENOTIFICATION=673,
PFN_VKREALLOCATIONFUNCTION=674,
PFN_VKALLOCATIONFUNCTION=675,
PFN_VKFREEFUNCTION=676,
PFN_VKVOIDFUNCTION=677,
PFN_VKDEBUGREPORTCALLBACKEXT=678,
PFN_VKDEBUGUTILSMESSENGERCALLBACKEXT=679,
PFN_VKDEVICEMEMORYREPORTCALLBACKEXT=681,
PFN_VKGETINSTANCEPROCADDRLUNARG=682,
VKCREATEINSTANCE=1950,
VKDESTROYINSTANCE=1951,
VKENUMERATEPHYSICALDEVICES=1952,
VKGETDEVICEPROCADDR=1953,
VKGETINSTANCEPROCADDR=1954,
VKGETPHYSICALDEVICEPROPERTIES=1955,
VKGETPHYSICALDEVICEQUEUEFAMILYPROPERTIES=1956,
VKGETPHYSICALDEVICEMEMORYPROPERTIES=1957,
VKGETPHYSICALDEVICEFEATURES=1958,
VKGETPHYSICALDEVICEFORMATPROPERTIES=1959,
VKGETPHYSICALDEVICEIMAGEFORMATPROPERTIES=1960,
VKCREATEDEVICE=1962,
VKDESTROYDEVICE=1963,
VKENUMERATEINSTANCEVERSION=1964,
VKENUMERATEINSTANCELAYERPROPERTIES=1965,
VKENUMERATEINSTANCEEXTENSIONPROPERTIES=1966,
VKENUMERATEDEVICELAYERPROPERTIES=1968,
VKENUMERATEDEVICEEXTENSIONPROPERTIES=1969,
VKGETDEVICEQUEUE=1970,
VKQUEUESUBMIT=1971,
VKQUEUEWAITIDLE=1972,
VKDEVICEWAITIDLE=1973,
VKALLOCATEMEMORY=1974,
VKFREEMEMORY=1975,
VKMAPMEMORY=1976,
VKUNMAPMEMORY=1977,
VKFLUSHMAPPEDMEMORYRANGES=1978,
VKINVALIDATEMAPPEDMEMORYRANGES=1979,
VKGETDEVICEMEMORYCOMMITMENT=1980,
VKGETBUFFERMEMORYREQUIREMENTS=1981,
VKBINDBUFFERMEMORY=1982,
VKGETIMAGEMEMORYREQUIREMENTS=1983,
VKBINDIMAGEMEMORY=1984,
VKGETIMAGESPARSEMEMORYREQUIREMENTS=1985,
VKGETPHYSICALDEVICESPARSEIMAGEFORMATPROPERTIES=1986,
VKQUEUEBINDSPARSE=1987,
VKCREATEFENCE=1988,
VKDESTROYFENCE=1989,
VKRESETFENCES=1990,
VKGETFENCESTATUS=1991,
VKWAITFORFENCES=1992,
VKCREATESEMAPHORE=1993,
VKDESTROYSEMAPHORE=1994,
VKCREATEEVENT=1995,
VKDESTROYEVENT=1996,
VKGETEVENTSTATUS=1997,
VKSETEVENT=1998,
VKRESETEVENT=1999,
VKCREATEQUERYPOOL=2000,
VKDESTROYQUERYPOOL=2001,
VKGETQUERYPOOLRESULTS=2002,
VKRESETQUERYPOOL=2003,
VKRESETQUERYPOOLEXT=2004,
VKCREATEBUFFER=2005,
VKDESTROYBUFFER=2006,
VKCREATEBUFFERVIEW=2007,
VKDESTROYBUFFERVIEW=2008,
VKCREATEIMAGE=2009,
VKDESTROYIMAGE=2010,
VKGETIMAGESUBRESOURCELAYOUT=2011,
VKCREATEIMAGEVIEW=2012,
VKDESTROYIMAGEVIEW=2013,
VKCREATESHADERMODULE=2014,
VKDESTROYSHADERMODULE=2015,
VKCREATEPIPELINECACHE=2017,
VKDESTROYPIPELINECACHE=2018,
VKGETPIPELINECACHEDATA=2019,
VKMERGEPIPELINECACHES=2020,
VKCREATEGRAPHICSPIPELINES=2022,
VKCREATECOMPUTEPIPELINES=2024,
VKGETDEVICESUBPASSSHADINGMAXWORKGROUPSIZEHUAWEI=2025,
VKDESTROYPIPELINE=2026,
VKCREATEPIPELINELAYOUT=2027,
VKDESTROYPIPELINELAYOUT=2028,
VKCREATESAMPLER=2029,
VKDESTROYSAMPLER=2030,
VKCREATEDESCRIPTORSETLAYOUT=2031,
VKDESTROYDESCRIPTORSETLAYOUT=2032,
VKCREATEDESCRIPTORPOOL=2033,
VKDESTROYDESCRIPTORPOOL=2034,
VKRESETDESCRIPTORPOOL=2035,
VKALLOCATEDESCRIPTORSETS=2036,
VKFREEDESCRIPTORSETS=2037,
VKUPDATEDESCRIPTORSETS=2038,
VKCREATEFRAMEBUFFER=2039,
VKDESTROYFRAMEBUFFER=2040,
VKCREATERENDERPASS=2041,
VKDESTROYRENDERPASS=2042,
VKGETRENDERAREAGRANULARITY=2043,
VKGETRENDERINGAREAGRANULARITYKHR=2044,
VKCREATECOMMANDPOOL=2045,
VKDESTROYCOMMANDPOOL=2046,
VKRESETCOMMANDPOOL=2047,
VKALLOCATECOMMANDBUFFERS=2048,
VKFREECOMMANDBUFFERS=2049,
VKBEGINCOMMANDBUFFER=2050,
VKENDCOMMANDBUFFER=2051,
VKRESETCOMMANDBUFFER=2052,
VKCMDBINDPIPELINE=2053,
VKCMDSETATTACHMENTFEEDBACKLOOPENABLEEXT=2054,
VKCMDSETVIEWPORT=2055,
VKCMDSETSCISSOR=2056,
VKCMDSETLINEWIDTH=2057,
VKCMDSETDEPTHBIAS=2058,
VKCMDSETBLENDCONSTANTS=2059,
VKCMDSETDEPTHBOUNDS=2060,
VKCMDSETSTENCILCOMPAREMASK=2061,
VKCMDSETSTENCILWRITEMASK=2062,
VKCMDSETSTENCILREFERENCE=2063,
VKCMDBINDDESCRIPTORSETS=2064,
VKCMDBINDINDEXBUFFER=2065,
VKCMDBINDVERTEXBUFFERS=2066,
VKCMDDRAW=2067,
VKCMDDRAWINDEXED=2068,
VKCMDDRAWMULTIEXT=2069,
VKCMDDRAWMULTIINDEXEDEXT=2070,
VKCMDDRAWINDIRECT=2071,
VKCMDDRAWINDEXEDINDIRECT=2072,
VKCMDDISPATCH=2073,
VKCMDDISPATCHINDIRECT=2074,
VKCMDSUBPASSSHADINGHUAWEI=2075,
VKCMDDRAWCLUSTERHUAWEI=2076,
VKCMDDRAWCLUSTERINDIRECTHUAWEI=2077,
VKCMDUPDATEPIPELINEINDIRECTBUFFERNV=2078,
VKCMDCOPYBUFFER=2079,
VKCMDCOPYIMAGE=2080,
VKCMDBLITIMAGE=2081,
VKCMDCOPYBUFFERTOIMAGE=2082,
VKCMDCOPYIMAGETOBUFFER=2083,
VKCMDCOPYMEMORYINDIRECTNV=2084,
VKCMDCOPYMEMORYTOIMAGEINDIRECTNV=2085,
VKCMDUPDATEBUFFER=2086,
VKCMDFILLBUFFER=2087,
VKCMDCLEARCOLORIMAGE=2088,
VKCMDCLEARDEPTHSTENCILIMAGE=2089,
VKCMDCLEARATTACHMENTS=2090,
VKCMDRESOLVEIMAGE=2091,
VKCMDSETEVENT=2092,
VKCMDRESETEVENT=2093,
VKCMDWAITEVENTS=2094,
VKCMDPIPELINEBARRIER=2095,
VKCMDBEGINQUERY=2096,
VKCMDENDQUERY=2097,
VKCMDBEGINCONDITIONALRENDERINGEXT=2098,
VKCMDENDCONDITIONALRENDERINGEXT=2099,
VKCMDRESETQUERYPOOL=2100,
VKCMDWRITETIMESTAMP=2101,
VKCMDCOPYQUERYPOOLRESULTS=2102,
VKCMDPUSHCONSTANTS=2103,
VKCMDBEGINRENDERPASS=2104,
VKCMDNEXTSUBPASS=2105,
VKCMDENDRENDERPASS=2106,
VKCMDEXECUTECOMMANDS=2107,
VKGETPHYSICALDEVICEDISPLAYPROPERTIESKHR=2109,
VKGETPHYSICALDEVICEDISPLAYPLANEPROPERTIESKHR=2110,
VKGETDISPLAYPLANESUPPORTEDDISPLAYSKHR=2111,
VKGETDISPLAYMODEPROPERTIESKHR=2112,
VKCREATEDISPLAYMODEKHR=2113,
VKGETDISPLAYPLANECAPABILITIESKHR=2114,
VKCREATEDISPLAYPLANESURFACEKHR=2115,
VKCREATESHAREDSWAPCHAINSKHR=2116,
VKDESTROYSURFACEKHR=2117,
VKGETPHYSICALDEVICESURFACESUPPORTKHR=2118,
VKGETPHYSICALDEVICESURFACECAPABILITIESKHR=2119,
VKGETPHYSICALDEVICESURFACEFORMATSKHR=2120,
VKGETPHYSICALDEVICESURFACEPRESENTMODESKHR=2121,
VKCREATESWAPCHAINKHR=2122,
VKDESTROYSWAPCHAINKHR=2123,
VKGETSWAPCHAINIMAGESKHR=2124,
VKACQUIRENEXTIMAGEKHR=2125,
VKQUEUEPRESENTKHR=2126,
VKCREATEXLIBSURFACEKHR=2132,
VKGETPHYSICALDEVICEXLIBPRESENTATIONSUPPORTKHR=2133,
VKCREATEXCBSURFACEKHR=2134,
VKGETPHYSICALDEVICEXCBPRESENTATIONSUPPORTKHR=2135,
VKCREATEDEBUGREPORTCALLBACKEXT=2142,
VKDESTROYDEBUGREPORTCALLBACKEXT=2143,
VKDEBUGREPORTMESSAGEEXT=2144,
VKDEBUGMARKERSETOBJECTNAMEEXT=2145,
VKDEBUGMARKERSETOBJECTTAGEXT=2146,
VKCMDDEBUGMARKERBEGINEXT=2147,
VKCMDDEBUGMARKERENDEXT=2148,
VKCMDDEBUGMARKERINSERTEXT=2149,
VKGETPHYSICALDEVICEEXTERNALIMAGEFORMATPROPERTIESNV=2150,
VKCMDEXECUTEGENERATEDCOMMANDSNV=2152,
VKCMDPREPROCESSGENERATEDCOMMANDSNV=2153,
VKCMDBINDPIPELINESHADERGROUPNV=2154,
VKGETGENERATEDCOMMANDSMEMORYREQUIREMENTSNV=2155,
VKCREATEINDIRECTCOMMANDSLAYOUTNV=2156,
VKDESTROYINDIRECTCOMMANDSLAYOUTNV=2157,
VKGETPHYSICALDEVICEFEATURES2=2158,
VKGETPHYSICALDEVICEFEATURES2KHR=2159,
VKGETPHYSICALDEVICEPROPERTIES2=2160,
VKGETPHYSICALDEVICEPROPERTIES2KHR=2161,
VKGETPHYSICALDEVICEFORMATPROPERTIES2=2162,
VKGETPHYSICALDEVICEFORMATPROPERTIES2KHR=2163,
VKGETPHYSICALDEVICEIMAGEFORMATPROPERTIES2=2164,
VKGETPHYSICALDEVICEIMAGEFORMATPROPERTIES2KHR=2165,
VKGETPHYSICALDEVICEQUEUEFAMILYPROPERTIES2=2166,
VKGETPHYSICALDEVICEQUEUEFAMILYPROPERTIES2KHR=2167,
VKGETPHYSICALDEVICEMEMORYPROPERTIES2=2168,
VKGETPHYSICALDEVICEMEMORYPROPERTIES2KHR=2169,
VKGETPHYSICALDEVICESPARSEIMAGEFORMATPROPERTIES2=2170,
VKGETPHYSICALDEVICESPARSEIMAGEFORMATPROPERTIES2KHR=2171,
VKCMDPUSHDESCRIPTORSETKHR=2172,
VKTRIMCOMMANDPOOL=2173,
VKTRIMCOMMANDPOOLKHR=2174,
VKGETPHYSICALDEVICEEXTERNALBUFFERPROPERTIES=2175,
VKGETPHYSICALDEVICEEXTERNALBUFFERPROPERTIESKHR=2176,
VKGETMEMORYFDKHR=2179,
VKGETMEMORYFDPROPERTIESKHR=2180,
VKGETMEMORYREMOTEADDRESSNV=2183,
VKGETPHYSICALDEVICEEXTERNALSEMAPHOREPROPERTIES=2187,
VKGETPHYSICALDEVICEEXTERNALSEMAPHOREPROPERTIESKHR=2188,
VKGETSEMAPHOREFDKHR=2191,
VKIMPORTSEMAPHOREFDKHR=2192,
VKGETPHYSICALDEVICEEXTERNALFENCEPROPERTIES=2195,
VKGETPHYSICALDEVICEEXTERNALFENCEPROPERTIESKHR=2196,
VKGETFENCEFDKHR=2199,
VKIMPORTFENCEFDKHR=2200,
VKRELEASEDISPLAYEXT=2210,
VKDISPLAYPOWERCONTROLEXT=2215,
VKREGISTERDEVICEEVENTEXT=2216,
VKREGISTERDISPLAYEVENTEXT=2217,
VKGETSWAPCHAINCOUNTEREXT=2218,
VKGETPHYSICALDEVICESURFACECAPABILITIES2EXT=2219,
VKENUMERATEPHYSICALDEVICEGROUPS=2220,
VKENUMERATEPHYSICALDEVICEGROUPSKHR=2221,
VKGETDEVICEGROUPPEERMEMORYFEATURES=2222,
VKGETDEVICEGROUPPEERMEMORYFEATURESKHR=2223,
VKBINDBUFFERMEMORY2=2224,
VKBINDBUFFERMEMORY2KHR=2225,
VKBINDIMAGEMEMORY2=2226,
VKBINDIMAGEMEMORY2KHR=2227,
VKCMDSETDEVICEMASK=2228,
VKCMDSETDEVICEMASKKHR=2229,
VKGETDEVICEGROUPPRESENTCAPABILITIESKHR=2230,
VKGETDEVICEGROUPSURFACEPRESENTMODESKHR=2231,
VKACQUIRENEXTIMAGE2KHR=2232,
VKCMDDISPATCHBASE=2233,
VKCMDDISPATCHBASEKHR=2234,
VKGETPHYSICALDEVICEPRESENTRECTANGLESKHR=2235,
VKCREATEDESCRIPTORUPDATETEMPLATE=2236,
VKCREATEDESCRIPTORUPDATETEMPLATEKHR=2237,
VKDESTROYDESCRIPTORUPDATETEMPLATE=2238,
VKDESTROYDESCRIPTORUPDATETEMPLATEKHR=2239,
VKUPDATEDESCRIPTORSETWITHTEMPLATE=2240,
VKUPDATEDESCRIPTORSETWITHTEMPLATEKHR=2241,
VKCMDPUSHDESCRIPTORSETWITHTEMPLATEKHR=2242,
VKSETHDRMETADATAEXT=2243,
VKGETSWAPCHAINSTATUSKHR=2244,
VKGETREFRESHCYCLEDURATIONGOOGLE=2245,
VKGETPASTPRESENTATIONTIMINGGOOGLE=2246,
VKCMDSETVIEWPORTWSCALINGNV=2250,
VKCMDSETDISCARDRECTANGLEEXT=2251,
VKCMDSETDISCARDRECTANGLEENABLEEXT=2252,
VKCMDSETDISCARDRECTANGLEMODEEXT=2253,
VKCMDSETSAMPLELOCATIONSEXT=2254,
VKGETPHYSICALDEVICEMULTISAMPLEPROPERTIESEXT=2255,
VKGETPHYSICALDEVICESURFACECAPABILITIES2KHR=2256,
VKGETPHYSICALDEVICESURFACEFORMATS2KHR=2257,
VKGETPHYSICALDEVICEDISPLAYPROPERTIES2KHR=2258,
VKGETPHYSICALDEVICEDISPLAYPLANEPROPERTIES2KHR=2259,
VKGETDISPLAYMODEPROPERTIES2KHR=2260,
VKGETDISPLAYPLANECAPABILITIES2KHR=2261,
VKGETBUFFERMEMORYREQUIREMENTS2=2262,
VKGETBUFFERMEMORYREQUIREMENTS2KHR=2263,
VKGETIMAGEMEMORYREQUIREMENTS2=2264,
VKGETIMAGEMEMORYREQUIREMENTS2KHR=2265,
VKGETIMAGESPARSEMEMORYREQUIREMENTS2=2266,
VKGETIMAGESPARSEMEMORYREQUIREMENTS2KHR=2267,
VKGETDEVICEBUFFERMEMORYREQUIREMENTS=2268,
VKGETDEVICEBUFFERMEMORYREQUIREMENTSKHR=2269,
VKGETDEVICEIMAGEMEMORYREQUIREMENTS=2270,
VKGETDEVICEIMAGEMEMORYREQUIREMENTSKHR=2271,
VKGETDEVICEIMAGESPARSEMEMORYREQUIREMENTS=2272,
VKGETDEVICEIMAGESPARSEMEMORYREQUIREMENTSKHR=2273,
VKCREATESAMPLERYCBCRCONVERSION=2274,
VKCREATESAMPLERYCBCRCONVERSIONKHR=2275,
VKDESTROYSAMPLERYCBCRCONVERSION=2276,
VKDESTROYSAMPLERYCBCRCONVERSIONKHR=2277,
VKGETDEVICEQUEUE2=2278,
VKCREATEVALIDATIONCACHEEXT=2279,
VKDESTROYVALIDATIONCACHEEXT=2280,
VKGETVALIDATIONCACHEDATAEXT=2281,
VKMERGEVALIDATIONCACHESEXT=2282,
VKGETDESCRIPTORSETLAYOUTSUPPORT=2283,
VKGETDESCRIPTORSETLAYOUTSUPPORTKHR=2284,
VKGETSHADERINFOAMD=2289,
VKSETLOCALDIMMINGAMD=2290,
VKGETPHYSICALDEVICECALIBRATEABLETIMEDOMAINSEXT=2291,
VKGETCALIBRATEDTIMESTAMPSEXT=2292,
VKSETDEBUGUTILSOBJECTNAMEEXT=2293,
VKSETDEBUGUTILSOBJECTTAGEXT=2294,
VKQUEUEBEGINDEBUGUTILSLABELEXT=2295,
VKQUEUEENDDEBUGUTILSLABELEXT=2296,
VKQUEUEINSERTDEBUGUTILSLABELEXT=2297,
VKCMDBEGINDEBUGUTILSLABELEXT=2298,
VKCMDENDDEBUGUTILSLABELEXT=2299,
VKCMDINSERTDEBUGUTILSLABELEXT=2300,
VKCREATEDEBUGUTILSMESSENGEREXT=2301,
VKDESTROYDEBUGUTILSMESSENGEREXT=2302,
VKSUBMITDEBUGUTILSMESSAGEEXT=2303,
VKGETMEMORYHOSTPOINTERPROPERTIESEXT=2304,
VKCMDWRITEBUFFERMARKERAMD=2305,
VKCREATERENDERPASS2=2306,
VKCREATERENDERPASS2KHR=2307,
VKCMDBEGINRENDERPASS2=2308,
VKCMDBEGINRENDERPASS2KHR=2309,
VKCMDNEXTSUBPASS2=2310,
VKCMDNEXTSUBPASS2KHR=2311,
VKCMDENDRENDERPASS2=2312,
VKCMDENDRENDERPASS2KHR=2313,
VKGETSEMAPHORECOUNTERVALUE=2314,
VKGETSEMAPHORECOUNTERVALUEKHR=2315,
VKWAITSEMAPHORES=2316,
VKWAITSEMAPHORESKHR=2317,
VKSIGNALSEMAPHORE=2318,
VKSIGNALSEMAPHOREKHR=2319,
VKCMDDRAWINDIRECTCOUNT=2322,
VKCMDDRAWINDIRECTCOUNTKHR=2323,
VKCMDDRAWINDIRECTCOUNTAMD=2324,
VKCMDDRAWINDEXEDINDIRECTCOUNT=2325,
VKCMDDRAWINDEXEDINDIRECTCOUNTKHR=2326,
VKCMDDRAWINDEXEDINDIRECTCOUNTAMD=2327,
VKCMDSETCHECKPOINTNV=2328,
VKGETQUEUECHECKPOINTDATANV=2329,
VKCMDBINDTRANSFORMFEEDBACKBUFFERSEXT=2330,
VKCMDBEGINTRANSFORMFEEDBACKEXT=2331,
VKCMDENDTRANSFORMFEEDBACKEXT=2332,
VKCMDBEGINQUERYINDEXEDEXT=2333,
VKCMDENDQUERYINDEXEDEXT=2334,
VKCMDDRAWINDIRECTBYTECOUNTEXT=2335,
VKCMDSETEXCLUSIVESCISSORNV=2336,
VKCMDSETEXCLUSIVESCISSORENABLENV=2337,
VKCMDBINDSHADINGRATEIMAGENV=2338,
VKCMDSETVIEWPORTSHADINGRATEPALETTENV=2339,
VKCMDSETCOARSESAMPLEORDERNV=2340,
VKCMDDRAWMESHTASKSNV=2341,
VKCMDDRAWMESHTASKSINDIRECTNV=2342,
VKCMDDRAWMESHTASKSINDIRECTCOUNTNV=2343,
VKCMDDRAWMESHTASKSEXT=2344,
VKCMDDRAWMESHTASKSINDIRECTEXT=2345,
VKCMDDRAWMESHTASKSINDIRECTCOUNTEXT=2346,
VKCOMPILEDEFERREDNV=2347,
VKCREATEACCELERATIONSTRUCTURENV=2348,
VKCMDBINDINVOCATIONMASKHUAWEI=2349,
VKDESTROYACCELERATIONSTRUCTUREKHR=2350,
VKDESTROYACCELERATIONSTRUCTURENV=2351,
VKGETACCELERATIONSTRUCTUREMEMORYREQUIREMENTSNV=2352,
VKBINDACCELERATIONSTRUCTUREMEMORYNV=2353,
VKCMDCOPYACCELERATIONSTRUCTURENV=2354,
VKCMDCOPYACCELERATIONSTRUCTUREKHR=2355,
VKCOPYACCELERATIONSTRUCTUREKHR=2356,
VKCMDCOPYACCELERATIONSTRUCTURETOMEMORYKHR=2357,
VKCOPYACCELERATIONSTRUCTURETOMEMORYKHR=2358,
VKCMDCOPYMEMORYTOACCELERATIONSTRUCTUREKHR=2359,
VKCOPYMEMORYTOACCELERATIONSTRUCTUREKHR=2360,
VKCMDWRITEACCELERATIONSTRUCTURESPROPERTIESKHR=2361,
VKCMDWRITEACCELERATIONSTRUCTURESPROPERTIESNV=2362,
VKCMDBUILDACCELERATIONSTRUCTURENV=2363,
VKWRITEACCELERATIONSTRUCTURESPROPERTIESKHR=2364,
VKCMDTRACERAYSKHR=2365,
VKCMDTRACERAYSNV=2366,
VKGETRAYTRACINGSHADERGROUPHANDLESKHR=2367,
VKGETRAYTRACINGSHADERGROUPHANDLESNV=2368,
VKGETRAYTRACINGCAPTUREREPLAYSHADERGROUPHANDLESKHR=2369,
VKGETACCELERATIONSTRUCTUREHANDLENV=2370,
VKCREATERAYTRACINGPIPELINESNV=2372,
VKCREATERAYTRACINGPIPELINESKHR=2374,
VKGETPHYSICALDEVICECOOPERATIVEMATRIXPROPERTIESNV=2375,
VKCMDTRACERAYSINDIRECTKHR=2376,
VKCMDTRACERAYSINDIRECT2KHR=2377,
VKGETDEVICEACCELERATIONSTRUCTURECOMPATIBILITYKHR=2378,
VKGETRAYTRACINGSHADERGROUPSTACKSIZEKHR=2379,
VKCMDSETRAYTRACINGPIPELINESTACKSIZEKHR=2380,
VKGETIMAGEVIEWHANDLENVX=2381,
VKGETIMAGEVIEWADDRESSNVX=2382,
VKENUMERATEPHYSICALDEVICEQUEUEFAMILYPERFORMANCEQUERYCOUNTERSKHR=2387,
VKGETPHYSICALDEVICEQUEUEFAMILYPERFORMANCEQUERYPASSESKHR=2388,
VKACQUIREPROFILINGLOCKKHR=2389,
VKRELEASEPROFILINGLOCKKHR=2390,
VKGETIMAGEDRMFORMATMODIFIERPROPERTIESEXT=2391,
VKGETBUFFEROPAQUECAPTUREADDRESS=2392,
VKGETBUFFEROPAQUECAPTUREADDRESSKHR=2393,
VKGETBUFFERDEVICEADDRESS=2394,
VKGETBUFFERDEVICEADDRESSKHR=2395,
VKGETBUFFERDEVICEADDRESSEXT=2396,
VKCREATEHEADLESSSURFACEEXT=2397,
VKGETPHYSICALDEVICESUPPORTEDFRAMEBUFFERMIXEDSAMPLESCOMBINATIONSNV=2398,
VKINITIALIZEPERFORMANCEAPIINTEL=2399,
VKUNINITIALIZEPERFORMANCEAPIINTEL=2400,
VKCMDSETPERFORMANCEMARKERINTEL=2401,
VKCMDSETPERFORMANCESTREAMMARKERINTEL=2402,
VKCMDSETPERFORMANCEOVERRIDEINTEL=2403,
VKACQUIREPERFORMANCECONFIGURATIONINTEL=2404,
VKRELEASEPERFORMANCECONFIGURATIONINTEL=2405,
VKQUEUESETPERFORMANCECONFIGURATIONINTEL=2406,
VKGETPERFORMANCEPARAMETERINTEL=2407,
VKGETDEVICEMEMORYOPAQUECAPTUREADDRESS=2408,
VKGETDEVICEMEMORYOPAQUECAPTUREADDRESSKHR=2409,
VKGETPIPELINEEXECUTABLEPROPERTIESKHR=2410,
VKGETPIPELINEEXECUTABLESTATISTICSKHR=2411,
VKGETPIPELINEEXECUTABLEINTERNALREPRESENTATIONSKHR=2412,
VKCMDSETLINESTIPPLEEXT=2413,
VKGETPHYSICALDEVICETOOLPROPERTIES=2415,
VKGETPHYSICALDEVICETOOLPROPERTIESEXT=2416,
VKCREATEACCELERATIONSTRUCTUREKHR=2417,
VKCMDBUILDACCELERATIONSTRUCTURESKHR=2418,
VKCMDBUILDACCELERATIONSTRUCTURESINDIRECTKHR=2419,
VKBUILDACCELERATIONSTRUCTURESKHR=2420,
VKGETACCELERATIONSTRUCTUREDEVICEADDRESSKHR=2421,
VKCREATEDEFERREDOPERATIONKHR=2422,
VKDESTROYDEFERREDOPERATIONKHR=2423,
VKGETDEFERREDOPERATIONMAXCONCURRENCYKHR=2424,
VKGETDEFERREDOPERATIONRESULTKHR=2425,
VKDEFERREDOPERATIONJOINKHR=2426,
VKGETPIPELINEINDIRECTMEMORYREQUIREMENTSNV=2427,
VKGETPIPELINEINDIRECTDEVICEADDRESSNV=2428,
VKCMDSETCULLMODE=2429,
VKCMDSETCULLMODEEXT=2430,
VKCMDSETFRONTFACE=2431,
VKCMDSETFRONTFACEEXT=2432,
VKCMDSETPRIMITIVETOPOLOGY=2433,
VKCMDSETPRIMITIVETOPOLOGYEXT=2434,
VKCMDSETVIEWPORTWITHCOUNT=2435,
VKCMDSETVIEWPORTWITHCOUNTEXT=2436,
VKCMDSETSCISSORWITHCOUNT=2437,
VKCMDSETSCISSORWITHCOUNTEXT=2438,
VKCMDBINDINDEXBUFFER2KHR=2439,
VKCMDBINDVERTEXBUFFERS2=2440,
VKCMDBINDVERTEXBUFFERS2EXT=2441,
VKCMDSETDEPTHTESTENABLE=2442,
VKCMDSETDEPTHTESTENABLEEXT=2443,
VKCMDSETDEPTHWRITEENABLE=2444,
VKCMDSETDEPTHWRITEENABLEEXT=2445,
VKCMDSETDEPTHCOMPAREOP=2446,
VKCMDSETDEPTHCOMPAREOPEXT=2447,
VKCMDSETDEPTHBOUNDSTESTENABLE=2448,
VKCMDSETDEPTHBOUNDSTESTENABLEEXT=2449,
VKCMDSETSTENCILTESTENABLE=2450,
VKCMDSETSTENCILTESTENABLEEXT=2451,
VKCMDSETSTENCILOP=2452,
VKCMDSETSTENCILOPEXT=2453,
VKCMDSETPATCHCONTROLPOINTSEXT=2454,
VKCMDSETRASTERIZERDISCARDENABLE=2455,
VKCMDSETRASTERIZERDISCARDENABLEEXT=2456,
VKCMDSETDEPTHBIASENABLE=2457,
VKCMDSETDEPTHBIASENABLEEXT=2458,
VKCMDSETLOGICOPEXT=2459,
VKCMDSETPRIMITIVERESTARTENABLE=2460,
VKCMDSETPRIMITIVERESTARTENABLEEXT=2461,
VKCMDSETTESSELLATIONDOMAINORIGINEXT=2462,
VKCMDSETDEPTHCLAMPENABLEEXT=2463,
VKCMDSETPOLYGONMODEEXT=2464,
VKCMDSETRASTERIZATIONSAMPLESEXT=2465,
VKCMDSETSAMPLEMASKEXT=2466,
VKCMDSETALPHATOCOVERAGEENABLEEXT=2467,
VKCMDSETALPHATOONEENABLEEXT=2468,
VKCMDSETLOGICOPENABLEEXT=2469,
VKCMDSETCOLORBLENDENABLEEXT=2470,
VKCMDSETCOLORBLENDEQUATIONEXT=2471,
VKCMDSETCOLORWRITEMASKEXT=2472,
VKCMDSETRASTERIZATIONSTREAMEXT=2473,
VKCMDSETCONSERVATIVERASTERIZATIONMODEEXT=2474,
VKCMDSETEXTRAPRIMITIVEOVERESTIMATIONSIZEEXT=2475,
VKCMDSETDEPTHCLIPENABLEEXT=2476,
VKCMDSETSAMPLELOCATIONSENABLEEXT=2477,
VKCMDSETCOLORBLENDADVANCEDEXT=2478,
VKCMDSETPROVOKINGVERTEXMODEEXT=2479,
VKCMDSETLINERASTERIZATIONMODEEXT=2480,
VKCMDSETLINESTIPPLEENABLEEXT=2481,
VKCMDSETDEPTHCLIPNEGATIVEONETOONEEXT=2482,
VKCMDSETVIEWPORTWSCALINGENABLENV=2483,
VKCMDSETVIEWPORTSWIZZLENV=2484,
VKCMDSETCOVERAGETOCOLORENABLENV=2485,
VKCMDSETCOVERAGETOCOLORLOCATIONNV=2486,
VKCMDSETCOVERAGEMODULATIONMODENV=2487,
VKCMDSETCOVERAGEMODULATIONTABLEENABLENV=2488,
VKCMDSETCOVERAGEMODULATIONTABLENV=2489,
VKCMDSETSHADINGRATEIMAGEENABLENV=2490,
VKCMDSETCOVERAGEREDUCTIONMODENV=2491,
VKCMDSETREPRESENTATIVEFRAGMENTTESTENABLENV=2492,
VKCREATEPRIVATEDATASLOT=2493,
VKCREATEPRIVATEDATASLOTEXT=2494,
VKDESTROYPRIVATEDATASLOT=2495,
VKDESTROYPRIVATEDATASLOTEXT=2496,
VKSETPRIVATEDATA=2497,
VKSETPRIVATEDATAEXT=2498,
VKGETPRIVATEDATA=2499,
VKGETPRIVATEDATAEXT=2500,
VKCMDCOPYBUFFER2=2501,
VKCMDCOPYBUFFER2KHR=2502,
VKCMDCOPYIMAGE2=2503,
VKCMDCOPYIMAGE2KHR=2504,
VKCMDBLITIMAGE2=2505,
VKCMDBLITIMAGE2KHR=2506,
VKCMDCOPYBUFFERTOIMAGE2=2507,
VKCMDCOPYBUFFERTOIMAGE2KHR=2508,
VKCMDCOPYIMAGETOBUFFER2=2509,
VKCMDCOPYIMAGETOBUFFER2KHR=2510,
VKCMDRESOLVEIMAGE2=2511,
VKCMDRESOLVEIMAGE2KHR=2512,
VKCMDSETFRAGMENTSHADINGRATEKHR=2515,
VKGETPHYSICALDEVICEFRAGMENTSHADINGRATESKHR=2516,
VKCMDSETFRAGMENTSHADINGRATEENUMNV=2517,
VKGETACCELERATIONSTRUCTUREBUILDSIZESKHR=2518,
VKCMDSETVERTEXINPUTEXT=2519,
VKCMDSETCOLORWRITEENABLEEXT=2520,
VKCMDSETEVENT2=2521,
VKCMDSETEVENT2KHR=2522,
VKCMDRESETEVENT2=2523,
VKCMDRESETEVENT2KHR=2524,
VKCMDWAITEVENTS2=2525,
VKCMDWAITEVENTS2KHR=2526,
VKCMDPIPELINEBARRIER2=2527,
VKCMDPIPELINEBARRIER2KHR=2528,
VKQUEUESUBMIT2=2529,
VKQUEUESUBMIT2KHR=2530,
VKCMDWRITETIMESTAMP2=2531,
VKCMDWRITETIMESTAMP2KHR=2532,
VKCMDWRITEBUFFERMARKER2AMD=2533,
VKGETQUEUECHECKPOINTDATA2NV=2534,
VKCOPYMEMORYTOIMAGEEXT=2535,
VKCOPYIMAGETOMEMORYEXT=2536,
VKCOPYIMAGETOIMAGEEXT=2537,
VKTRANSITIONIMAGELAYOUTEXT=2538,
VKGETPHYSICALDEVICEVIDEOCAPABILITIESKHR=2540,
VKGETPHYSICALDEVICEVIDEOFORMATPROPERTIESKHR=2541,
VKCREATEVIDEOSESSIONKHR=2543,
VKDESTROYVIDEOSESSIONKHR=2544,
VKCREATEVIDEOSESSIONPARAMETERSKHR=2545,
VKUPDATEVIDEOSESSIONPARAMETERSKHR=2546,
VKDESTROYVIDEOSESSIONPARAMETERSKHR=2548,
VKGETVIDEOSESSIONMEMORYREQUIREMENTSKHR=2549,
VKBINDVIDEOSESSIONMEMORYKHR=2550,
VKCMDDECODEVIDEOKHR=2551,
VKCMDBEGINVIDEOCODINGKHR=2552,
VKCMDCONTROLVIDEOCODINGKHR=2553,
VKCMDENDVIDEOCODINGKHR=2554,
VKCMDDECOMPRESSMEMORYNV=2556,
VKCMDDECOMPRESSMEMORYINDIRECTCOUNTNV=2557,
VKCREATECUMODULENVX=2558,
VKCREATECUFUNCTIONNVX=2559,
VKDESTROYCUMODULENVX=2560,
VKDESTROYCUFUNCTIONNVX=2561,
VKCMDCULAUNCHKERNELNVX=2562,
VKGETDESCRIPTORSETLAYOUTSIZEEXT=2563,
VKGETDESCRIPTORSETLAYOUTBINDINGOFFSETEXT=2564,
VKGETDESCRIPTOREXT=2565,
VKCMDBINDDESCRIPTORBUFFERSEXT=2566,
VKCMDSETDESCRIPTORBUFFEROFFSETSEXT=2567,
VKCMDBINDDESCRIPTORBUFFEREMBEDDEDSAMPLERSEXT=2568,
VKGETBUFFEROPAQUECAPTUREDESCRIPTORDATAEXT=2569,
VKGETIMAGEOPAQUECAPTUREDESCRIPTORDATAEXT=2570,
VKGETIMAGEVIEWOPAQUECAPTUREDESCRIPTORDATAEXT=2571,
VKGETSAMPLEROPAQUECAPTUREDESCRIPTORDATAEXT=2572,
VKGETACCELERATIONSTRUCTUREOPAQUECAPTUREDESCRIPTORDATAEXT=2573,
VKSETDEVICEMEMORYPRIORITYEXT=2574,
VKACQUIREDRMDISPLAYEXT=2575,
VKGETDRMDISPLAYEXT=2576,
VKWAITFORPRESENTKHR=2577,
VKCMDBEGINRENDERING=2583,
VKCMDBEGINRENDERINGKHR=2584,
VKCMDENDRENDERING=2585,
VKCMDENDRENDERINGKHR=2586,
VKGETDESCRIPTORSETLAYOUTHOSTMAPPINGINFOVALVE=2587,
VKGETDESCRIPTORSETHOSTMAPPINGVALVE=2588,
VKCREATEMICROMAPEXT=2589,
VKCMDBUILDMICROMAPSEXT=2590,
VKBUILDMICROMAPSEXT=2591,
VKDESTROYMICROMAPEXT=2592,
VKCMDCOPYMICROMAPEXT=2593,
VKCOPYMICROMAPEXT=2594,
VKCMDCOPYMICROMAPTOMEMORYEXT=2595,
VKCOPYMICROMAPTOMEMORYEXT=2596,
VKCMDCOPYMEMORYTOMICROMAPEXT=2597,
VKCOPYMEMORYTOMICROMAPEXT=2598,
VKCMDWRITEMICROMAPSPROPERTIESEXT=2599,
VKWRITEMICROMAPSPROPERTIESEXT=2600,
VKGETDEVICEMICROMAPCOMPATIBILITYEXT=2601,
VKGETMICROMAPBUILDSIZESEXT=2602,
VKGETSHADERMODULEIDENTIFIEREXT=2603,
VKGETSHADERMODULECREATEINFOIDENTIFIEREXT=2604,
VKGETIMAGESUBRESOURCELAYOUT2KHR=2605,
VKGETIMAGESUBRESOURCELAYOUT2EXT=2606,
VKGETPIPELINEPROPERTIESEXT=2607,
VKGETFRAMEBUFFERTILEPROPERTIESQCOM=2609,
VKGETDYNAMICRENDERINGTILEPROPERTIESQCOM=2610,
VKGETPHYSICALDEVICEOPTICALFLOWIMAGEFORMATSNV=2611,
VKCREATEOPTICALFLOWSESSIONNV=2612,
VKDESTROYOPTICALFLOWSESSIONNV=2613,
VKBINDOPTICALFLOWSESSIONIMAGENV=2614,
VKCMDOPTICALFLOWEXECUTENV=2615,
VKGETDEVICEFAULTINFOEXT=2616,
VKCMDSETDEPTHBIAS2EXT=2617,
VKRELEASESWAPCHAINIMAGESEXT=2618,
VKGETDEVICEIMAGESUBRESOURCELAYOUTKHR=2619,
VKMAPMEMORY2KHR=2620,
VKUNMAPMEMORY2KHR=2621,
VKCREATESHADERSEXT=2622,
VKDESTROYSHADEREXT=2623,
VKGETSHADERBINARYDATAEXT=2624,
VKCMDBINDSHADERSEXT=2625,
VKGETPHYSICALDEVICECOOPERATIVEMATRIXPROPERTIESKHR=2627,
};

typedef struct {
uintptr_t devicememory = 0;
uintptr_t mem;
std::vector<size_t> starts;
std::vector<size_t> lengths;
std::vector<std::string> hashes;
std::vector<std::vector<char>> buffers;
} Sync;

void serialize_Sync(json::map&, Sync&);
void deserialize_Sync(json::map&, Sync&);

#include <debug.hpp>
typedef void* pNext;
void* memdup(const void* mem, size_t size);
void* copyVkStruct (const void* data);

        void serialize_struct(json::map&, const VkBaseOutStructure&);
        void deserialize_struct(const json::map&, VkBaseOutStructure&);
    

        void serialize_struct(json::map&, const VkBaseInStructure&);
        void deserialize_struct(const json::map&, VkBaseInStructure&);
    

        void serialize_struct(json::map&, const VkOffset2D&);
        void deserialize_struct(const json::map&, VkOffset2D&);
    

        void serialize_struct(json::map&, const VkOffset3D&);
        void deserialize_struct(const json::map&, VkOffset3D&);
    

        void serialize_struct(json::map&, const VkExtent2D&);
        void deserialize_struct(const json::map&, VkExtent2D&);
    

        void serialize_struct(json::map&, const VkExtent3D&);
        void deserialize_struct(const json::map&, VkExtent3D&);
    

        void serialize_struct(json::map&, const VkViewport&);
        void deserialize_struct(const json::map&, VkViewport&);
    

        void serialize_struct(json::map&, const VkRect2D&);
        void deserialize_struct(const json::map&, VkRect2D&);
    

        void serialize_struct(json::map&, const VkClearRect&);
        void deserialize_struct(const json::map&, VkClearRect&);
    

        void serialize_struct(json::map&, const VkComponentMapping&);
        void deserialize_struct(const json::map&, VkComponentMapping&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceProperties&);
    

        void serialize_struct(json::map&, const VkExtensionProperties&);
        void deserialize_struct(const json::map&, VkExtensionProperties&);
    

        void serialize_struct(json::map&, const VkLayerProperties&);
        void deserialize_struct(const json::map&, VkLayerProperties&);
    

        void serialize_struct(json::map&, const VkApplicationInfo&);
        void deserialize_struct(const json::map&, VkApplicationInfo&);
    

        void serialize_struct(json::map&, const VkAllocationCallbacks&);
        void deserialize_struct(const json::map&, VkAllocationCallbacks&);
    

        void serialize_struct(json::map&, const VkDeviceQueueCreateInfo&);
        void deserialize_struct(const json::map&, VkDeviceQueueCreateInfo&);
    

        void serialize_struct(json::map&, const VkDeviceCreateInfo&);
        void deserialize_struct(const json::map&, VkDeviceCreateInfo&);
    

        void serialize_struct(json::map&, const VkInstanceCreateInfo&);
        void deserialize_struct(const json::map&, VkInstanceCreateInfo&);
    

        void serialize_struct(json::map&, const VkQueueFamilyProperties&);
        void deserialize_struct(const json::map&, VkQueueFamilyProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMemoryProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMemoryProperties&);
    

        void serialize_struct(json::map&, const VkMemoryAllocateInfo&);
        void deserialize_struct(const json::map&, VkMemoryAllocateInfo&);
    

        void serialize_struct(json::map&, const VkMemoryRequirements&);
        void deserialize_struct(const json::map&, VkMemoryRequirements&);
    

        void serialize_struct(json::map&, const VkSparseImageFormatProperties&);
        void deserialize_struct(const json::map&, VkSparseImageFormatProperties&);
    

        void serialize_struct(json::map&, const VkSparseImageMemoryRequirements&);
        void deserialize_struct(const json::map&, VkSparseImageMemoryRequirements&);
    

        void serialize_struct(json::map&, const VkMemoryType&);
        void deserialize_struct(const json::map&, VkMemoryType&);
    

        void serialize_struct(json::map&, const VkMemoryHeap&);
        void deserialize_struct(const json::map&, VkMemoryHeap&);
    

        void serialize_struct(json::map&, const VkMappedMemoryRange&);
        void deserialize_struct(const json::map&, VkMappedMemoryRange&);
    

        void serialize_struct(json::map&, const VkFormatProperties&);
        void deserialize_struct(const json::map&, VkFormatProperties&);
    

        void serialize_struct(json::map&, const VkImageFormatProperties&);
        void deserialize_struct(const json::map&, VkImageFormatProperties&);
    

        void serialize_struct(json::map&, const VkDescriptorBufferInfo&);
        void deserialize_struct(const json::map&, VkDescriptorBufferInfo&);
    

        void serialize_struct(json::map&, const VkDescriptorImageInfo&);
        void deserialize_struct(const json::map&, VkDescriptorImageInfo&);
    

        void serialize_struct(json::map&, const VkWriteDescriptorSet&);
        void deserialize_struct(const json::map&, VkWriteDescriptorSet&);
    

        void serialize_struct(json::map&, const VkCopyDescriptorSet&);
        void deserialize_struct(const json::map&, VkCopyDescriptorSet&);
    

        void serialize_struct(json::map&, const VkBufferUsageFlags2CreateInfoKHR&);
        void deserialize_struct(const json::map&, VkBufferUsageFlags2CreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkBufferCreateInfo&);
        void deserialize_struct(const json::map&, VkBufferCreateInfo&);
    

        void serialize_struct(json::map&, const VkBufferViewCreateInfo&);
        void deserialize_struct(const json::map&, VkBufferViewCreateInfo&);
    

        void serialize_struct(json::map&, const VkImageSubresource&);
        void deserialize_struct(const json::map&, VkImageSubresource&);
    

        void serialize_struct(json::map&, const VkImageSubresourceLayers&);
        void deserialize_struct(const json::map&, VkImageSubresourceLayers&);
    

        void serialize_struct(json::map&, const VkImageSubresourceRange&);
        void deserialize_struct(const json::map&, VkImageSubresourceRange&);
    

        void serialize_struct(json::map&, const VkMemoryBarrier&);
        void deserialize_struct(const json::map&, VkMemoryBarrier&);
    

        void serialize_struct(json::map&, const VkBufferMemoryBarrier&);
        void deserialize_struct(const json::map&, VkBufferMemoryBarrier&);
    

        void serialize_struct(json::map&, const VkImageMemoryBarrier&);
        void deserialize_struct(const json::map&, VkImageMemoryBarrier&);
    

        void serialize_struct(json::map&, const VkImageCreateInfo&);
        void deserialize_struct(const json::map&, VkImageCreateInfo&);
    

        void serialize_struct(json::map&, const VkSubresourceLayout&);
        void deserialize_struct(const json::map&, VkSubresourceLayout&);
    

        void serialize_struct(json::map&, const VkImageViewCreateInfo&);
        void deserialize_struct(const json::map&, VkImageViewCreateInfo&);
    

        void serialize_struct(json::map&, const VkBufferCopy&);
        void deserialize_struct(const json::map&, VkBufferCopy&);
    

        void serialize_struct(json::map&, const VkSparseMemoryBind&);
        void deserialize_struct(const json::map&, VkSparseMemoryBind&);
    

        void serialize_struct(json::map&, const VkSparseImageMemoryBind&);
        void deserialize_struct(const json::map&, VkSparseImageMemoryBind&);
    

        void serialize_struct(json::map&, const VkSparseBufferMemoryBindInfo&);
        void deserialize_struct(const json::map&, VkSparseBufferMemoryBindInfo&);
    

        void serialize_struct(json::map&, const VkSparseImageOpaqueMemoryBindInfo&);
        void deserialize_struct(const json::map&, VkSparseImageOpaqueMemoryBindInfo&);
    

        void serialize_struct(json::map&, const VkSparseImageMemoryBindInfo&);
        void deserialize_struct(const json::map&, VkSparseImageMemoryBindInfo&);
    

        void serialize_struct(json::map&, const VkBindSparseInfo&);
        void deserialize_struct(const json::map&, VkBindSparseInfo&);
    

        void serialize_struct(json::map&, const VkImageCopy&);
        void deserialize_struct(const json::map&, VkImageCopy&);
    

        void serialize_struct(json::map&, const VkImageBlit&);
        void deserialize_struct(const json::map&, VkImageBlit&);
    

        void serialize_struct(json::map&, const VkBufferImageCopy&);
        void deserialize_struct(const json::map&, VkBufferImageCopy&);
    

        void serialize_struct(json::map&, const VkCopyMemoryIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkCopyMemoryIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkCopyMemoryToImageIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkCopyMemoryToImageIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkImageResolve&);
        void deserialize_struct(const json::map&, VkImageResolve&);
    

        void serialize_struct(json::map&, const VkShaderModuleCreateInfo&);
        void deserialize_struct(const json::map&, VkShaderModuleCreateInfo&);
    

        void serialize_struct(json::map&, const VkDescriptorSetLayoutBinding&);
        void deserialize_struct(const json::map&, VkDescriptorSetLayoutBinding&);
    

        void serialize_struct(json::map&, const VkDescriptorSetLayoutCreateInfo&);
        void deserialize_struct(const json::map&, VkDescriptorSetLayoutCreateInfo&);
    

        void serialize_struct(json::map&, const VkDescriptorPoolSize&);
        void deserialize_struct(const json::map&, VkDescriptorPoolSize&);
    

        void serialize_struct(json::map&, const VkDescriptorPoolCreateInfo&);
        void deserialize_struct(const json::map&, VkDescriptorPoolCreateInfo&);
    

        void serialize_struct(json::map&, const VkDescriptorSetAllocateInfo&);
        void deserialize_struct(const json::map&, VkDescriptorSetAllocateInfo&);
    

        void serialize_struct(json::map&, const VkSpecializationMapEntry&);
        void deserialize_struct(const json::map&, VkSpecializationMapEntry&);
    

        void serialize_struct(json::map&, const VkSpecializationInfo&);
        void deserialize_struct(const json::map&, VkSpecializationInfo&);
    

        void serialize_struct(json::map&, const VkPipelineShaderStageCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineShaderStageCreateInfo&);
    

        void serialize_struct(json::map&, const VkComputePipelineCreateInfo&);
        void deserialize_struct(const json::map&, VkComputePipelineCreateInfo&);
    

        void serialize_struct(json::map&, const VkComputePipelineIndirectBufferInfoNV&);
        void deserialize_struct(const json::map&, VkComputePipelineIndirectBufferInfoNV&);
    

        void serialize_struct(json::map&, const VkPipelineCreateFlags2CreateInfoKHR&);
        void deserialize_struct(const json::map&, VkPipelineCreateFlags2CreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkVertexInputBindingDescription&);
        void deserialize_struct(const json::map&, VkVertexInputBindingDescription&);
    

        void serialize_struct(json::map&, const VkVertexInputAttributeDescription&);
        void deserialize_struct(const json::map&, VkVertexInputAttributeDescription&);
    

        void serialize_struct(json::map&, const VkPipelineVertexInputStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineVertexInputStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineInputAssemblyStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineInputAssemblyStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineTessellationStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineTessellationStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineViewportStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineViewportStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineRasterizationStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineRasterizationStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineMultisampleStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineMultisampleStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineColorBlendAttachmentState&);
        void deserialize_struct(const json::map&, VkPipelineColorBlendAttachmentState&);
    

        void serialize_struct(json::map&, const VkPipelineColorBlendStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineColorBlendStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineDynamicStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineDynamicStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkStencilOpState&);
        void deserialize_struct(const json::map&, VkStencilOpState&);
    

        void serialize_struct(json::map&, const VkPipelineDepthStencilStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineDepthStencilStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkGraphicsPipelineCreateInfo&);
        void deserialize_struct(const json::map&, VkGraphicsPipelineCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineCacheCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineCacheCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineCacheHeaderVersionOne&);
        void deserialize_struct(const json::map&, VkPipelineCacheHeaderVersionOne&);
    

        void serialize_struct(json::map&, const VkPushConstantRange&);
        void deserialize_struct(const json::map&, VkPushConstantRange&);
    

        void serialize_struct(json::map&, const VkPipelineLayoutCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineLayoutCreateInfo&);
    

        void serialize_struct(json::map&, const VkSamplerCreateInfo&);
        void deserialize_struct(const json::map&, VkSamplerCreateInfo&);
    

        void serialize_struct(json::map&, const VkCommandPoolCreateInfo&);
        void deserialize_struct(const json::map&, VkCommandPoolCreateInfo&);
    

        void serialize_struct(json::map&, const VkCommandBufferAllocateInfo&);
        void deserialize_struct(const json::map&, VkCommandBufferAllocateInfo&);
    

        void serialize_struct(json::map&, const VkCommandBufferInheritanceInfo&);
        void deserialize_struct(const json::map&, VkCommandBufferInheritanceInfo&);
    

        void serialize_struct(json::map&, const VkCommandBufferBeginInfo&);
        void deserialize_struct(const json::map&, VkCommandBufferBeginInfo&);
    

        void serialize_struct(json::map&, const VkRenderPassBeginInfo&);
        void deserialize_struct(const json::map&, VkRenderPassBeginInfo&);
    

        void serialize_struct(json::map&, const VkClearColorValue&);
        void deserialize_struct(const json::map&, VkClearColorValue&);
    

        void serialize_struct(json::map&, const VkClearDepthStencilValue&);
        void deserialize_struct(const json::map&, VkClearDepthStencilValue&);
    

        void serialize_struct(json::map&, const VkClearValue&);
        void deserialize_struct(const json::map&, VkClearValue&);
    

        void serialize_struct(json::map&, const VkClearAttachment&);
        void deserialize_struct(const json::map&, VkClearAttachment&);
    

        void serialize_struct(json::map&, const VkAttachmentDescription&);
        void deserialize_struct(const json::map&, VkAttachmentDescription&);
    

        void serialize_struct(json::map&, const VkAttachmentReference&);
        void deserialize_struct(const json::map&, VkAttachmentReference&);
    

        void serialize_struct(json::map&, const VkSubpassDescription&);
        void deserialize_struct(const json::map&, VkSubpassDescription&);
    

        void serialize_struct(json::map&, const VkSubpassDependency&);
        void deserialize_struct(const json::map&, VkSubpassDependency&);
    

        void serialize_struct(json::map&, const VkRenderPassCreateInfo&);
        void deserialize_struct(const json::map&, VkRenderPassCreateInfo&);
    

        void serialize_struct(json::map&, const VkEventCreateInfo&);
        void deserialize_struct(const json::map&, VkEventCreateInfo&);
    

        void serialize_struct(json::map&, const VkFenceCreateInfo&);
        void deserialize_struct(const json::map&, VkFenceCreateInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSparseProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSparseProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceLimits&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceLimits&);
    

        void serialize_struct(json::map&, const VkSemaphoreCreateInfo&);
        void deserialize_struct(const json::map&, VkSemaphoreCreateInfo&);
    

        void serialize_struct(json::map&, const VkQueryPoolCreateInfo&);
        void deserialize_struct(const json::map&, VkQueryPoolCreateInfo&);
    

        void serialize_struct(json::map&, const VkFramebufferCreateInfo&);
        void deserialize_struct(const json::map&, VkFramebufferCreateInfo&);
    

        void serialize_struct(json::map&, const VkDrawIndirectCommand&);
        void deserialize_struct(const json::map&, VkDrawIndirectCommand&);
    

        void serialize_struct(json::map&, const VkDrawIndexedIndirectCommand&);
        void deserialize_struct(const json::map&, VkDrawIndexedIndirectCommand&);
    

        void serialize_struct(json::map&, const VkDispatchIndirectCommand&);
        void deserialize_struct(const json::map&, VkDispatchIndirectCommand&);
    

        void serialize_struct(json::map&, const VkMultiDrawInfoEXT&);
        void deserialize_struct(const json::map&, VkMultiDrawInfoEXT&);
    

        void serialize_struct(json::map&, const VkMultiDrawIndexedInfoEXT&);
        void deserialize_struct(const json::map&, VkMultiDrawIndexedInfoEXT&);
    

        void serialize_struct(json::map&, const VkSubmitInfo&);
        void deserialize_struct(const json::map&, VkSubmitInfo&);
    

        void serialize_struct(json::map&, const VkDisplayPropertiesKHR&);
        void deserialize_struct(const json::map&, VkDisplayPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkDisplayPlanePropertiesKHR&);
        void deserialize_struct(const json::map&, VkDisplayPlanePropertiesKHR&);
    

        void serialize_struct(json::map&, const VkDisplayModeParametersKHR&);
        void deserialize_struct(const json::map&, VkDisplayModeParametersKHR&);
    

        void serialize_struct(json::map&, const VkDisplayModePropertiesKHR&);
        void deserialize_struct(const json::map&, VkDisplayModePropertiesKHR&);
    

        void serialize_struct(json::map&, const VkDisplayModeCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkDisplayModeCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkDisplayPlaneCapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkDisplayPlaneCapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkDisplaySurfaceCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkDisplaySurfaceCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkDisplayPresentInfoKHR&);
        void deserialize_struct(const json::map&, VkDisplayPresentInfoKHR&);
    

        void serialize_struct(json::map&, const VkSurfaceCapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkSurfaceCapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkXlibSurfaceCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkXlibSurfaceCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkXcbSurfaceCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkXcbSurfaceCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkSurfaceFormatKHR&);
        void deserialize_struct(const json::map&, VkSurfaceFormatKHR&);
    

        void serialize_struct(json::map&, const VkSwapchainCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkSwapchainCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkPresentInfoKHR&);
        void deserialize_struct(const json::map&, VkPresentInfoKHR&);
    

        void serialize_struct(json::map&, const VkDebugReportCallbackCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkDebugReportCallbackCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkValidationFlagsEXT&);
        void deserialize_struct(const json::map&, VkValidationFlagsEXT&);
    

        void serialize_struct(json::map&, const VkValidationFeaturesEXT&);
        void deserialize_struct(const json::map&, VkValidationFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineRasterizationStateRasterizationOrderAMD&);
        void deserialize_struct(const json::map&, VkPipelineRasterizationStateRasterizationOrderAMD&);
    

        void serialize_struct(json::map&, const VkDebugMarkerObjectNameInfoEXT&);
        void deserialize_struct(const json::map&, VkDebugMarkerObjectNameInfoEXT&);
    

        void serialize_struct(json::map&, const VkDebugMarkerObjectTagInfoEXT&);
        void deserialize_struct(const json::map&, VkDebugMarkerObjectTagInfoEXT&);
    

        void serialize_struct(json::map&, const VkDebugMarkerMarkerInfoEXT&);
        void deserialize_struct(const json::map&, VkDebugMarkerMarkerInfoEXT&);
    

        void serialize_struct(json::map&, const VkDedicatedAllocationImageCreateInfoNV&);
        void deserialize_struct(const json::map&, VkDedicatedAllocationImageCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkDedicatedAllocationBufferCreateInfoNV&);
        void deserialize_struct(const json::map&, VkDedicatedAllocationBufferCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkDedicatedAllocationMemoryAllocateInfoNV&);
        void deserialize_struct(const json::map&, VkDedicatedAllocationMemoryAllocateInfoNV&);
    

        void serialize_struct(json::map&, const VkExternalImageFormatPropertiesNV&);
        void deserialize_struct(const json::map&, VkExternalImageFormatPropertiesNV&);
    

        void serialize_struct(json::map&, const VkExternalMemoryImageCreateInfoNV&);
        void deserialize_struct(const json::map&, VkExternalMemoryImageCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkExportMemoryAllocateInfoNV&);
        void deserialize_struct(const json::map&, VkExportMemoryAllocateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV&);
    

        void serialize_struct(json::map&, const VkDevicePrivateDataCreateInfo&);
        void deserialize_struct(const json::map&, VkDevicePrivateDataCreateInfo&);
    

        void serialize_struct(json::map&, const VkPrivateDataSlotCreateInfo&);
        void deserialize_struct(const json::map&, VkPrivateDataSlotCreateInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePrivateDataFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePrivateDataFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultiDrawPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultiDrawPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkGraphicsShaderGroupCreateInfoNV&);
        void deserialize_struct(const json::map&, VkGraphicsShaderGroupCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkGraphicsPipelineShaderGroupsCreateInfoNV&);
        void deserialize_struct(const json::map&, VkGraphicsPipelineShaderGroupsCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkBindShaderGroupIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkBindShaderGroupIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkBindIndexBufferIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkBindIndexBufferIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkBindVertexBufferIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkBindVertexBufferIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkSetStateFlagsIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkSetStateFlagsIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkIndirectCommandsStreamNV&);
        void deserialize_struct(const json::map&, VkIndirectCommandsStreamNV&);
    

        void serialize_struct(json::map&, const VkIndirectCommandsLayoutTokenNV&);
        void deserialize_struct(const json::map&, VkIndirectCommandsLayoutTokenNV&);
    

        void serialize_struct(json::map&, const VkIndirectCommandsLayoutCreateInfoNV&);
        void deserialize_struct(const json::map&, VkIndirectCommandsLayoutCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkGeneratedCommandsInfoNV&);
        void deserialize_struct(const json::map&, VkGeneratedCommandsInfoNV&);
    

        void serialize_struct(json::map&, const VkGeneratedCommandsMemoryRequirementsInfoNV&);
        void deserialize_struct(const json::map&, VkGeneratedCommandsMemoryRequirementsInfoNV&);
    

        void serialize_struct(json::map&, const VkPipelineIndirectDeviceAddressInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineIndirectDeviceAddressInfoNV&);
    

        void serialize_struct(json::map&, const VkBindPipelineIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkBindPipelineIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFeatures2&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFeatures2&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceProperties2&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceProperties2&);
    

        void serialize_struct(json::map&, const VkFormatProperties2&);
        void deserialize_struct(const json::map&, VkFormatProperties2&);
    

        void serialize_struct(json::map&, const VkImageFormatProperties2&);
        void deserialize_struct(const json::map&, VkImageFormatProperties2&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageFormatInfo2&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageFormatInfo2&);
    

        void serialize_struct(json::map&, const VkQueueFamilyProperties2&);
        void deserialize_struct(const json::map&, VkQueueFamilyProperties2&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMemoryProperties2&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMemoryProperties2&);
    

        void serialize_struct(json::map&, const VkSparseImageFormatProperties2&);
        void deserialize_struct(const json::map&, VkSparseImageFormatProperties2&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSparseImageFormatInfo2&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSparseImageFormatInfo2&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePushDescriptorPropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePushDescriptorPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkConformanceVersion&);
        void deserialize_struct(const json::map&, VkConformanceVersion&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDriverProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDriverProperties&);
    

        void serialize_struct(json::map&, const VkPresentRegionsKHR&);
        void deserialize_struct(const json::map&, VkPresentRegionsKHR&);
    

        void serialize_struct(json::map&, const VkPresentRegionKHR&);
        void deserialize_struct(const json::map&, VkPresentRegionKHR&);
    

        void serialize_struct(json::map&, const VkRectLayerKHR&);
        void deserialize_struct(const json::map&, VkRectLayerKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVariablePointersFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVariablePointersFeatures&);
    

        void serialize_struct(json::map&, const VkExternalMemoryProperties&);
        void deserialize_struct(const json::map&, VkExternalMemoryProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExternalImageFormatInfo&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExternalImageFormatInfo&);
    

        void serialize_struct(json::map&, const VkExternalImageFormatProperties&);
        void deserialize_struct(const json::map&, VkExternalImageFormatProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExternalBufferInfo&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExternalBufferInfo&);
    

        void serialize_struct(json::map&, const VkExternalBufferProperties&);
        void deserialize_struct(const json::map&, VkExternalBufferProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceIDProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceIDProperties&);
    

        void serialize_struct(json::map&, const VkExternalMemoryImageCreateInfo&);
        void deserialize_struct(const json::map&, VkExternalMemoryImageCreateInfo&);
    

        void serialize_struct(json::map&, const VkExternalMemoryBufferCreateInfo&);
        void deserialize_struct(const json::map&, VkExternalMemoryBufferCreateInfo&);
    

        void serialize_struct(json::map&, const VkExportMemoryAllocateInfo&);
        void deserialize_struct(const json::map&, VkExportMemoryAllocateInfo&);
    

        void serialize_struct(json::map&, const VkImportMemoryFdInfoKHR&);
        void deserialize_struct(const json::map&, VkImportMemoryFdInfoKHR&);
    

        void serialize_struct(json::map&, const VkMemoryFdPropertiesKHR&);
        void deserialize_struct(const json::map&, VkMemoryFdPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkMemoryGetFdInfoKHR&);
        void deserialize_struct(const json::map&, VkMemoryGetFdInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExternalSemaphoreInfo&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExternalSemaphoreInfo&);
    

        void serialize_struct(json::map&, const VkExternalSemaphoreProperties&);
        void deserialize_struct(const json::map&, VkExternalSemaphoreProperties&);
    

        void serialize_struct(json::map&, const VkExportSemaphoreCreateInfo&);
        void deserialize_struct(const json::map&, VkExportSemaphoreCreateInfo&);
    

        void serialize_struct(json::map&, const VkImportSemaphoreFdInfoKHR&);
        void deserialize_struct(const json::map&, VkImportSemaphoreFdInfoKHR&);
    

        void serialize_struct(json::map&, const VkSemaphoreGetFdInfoKHR&);
        void deserialize_struct(const json::map&, VkSemaphoreGetFdInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExternalFenceInfo&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExternalFenceInfo&);
    

        void serialize_struct(json::map&, const VkExternalFenceProperties&);
        void deserialize_struct(const json::map&, VkExternalFenceProperties&);
    

        void serialize_struct(json::map&, const VkExportFenceCreateInfo&);
        void deserialize_struct(const json::map&, VkExportFenceCreateInfo&);
    

        void serialize_struct(json::map&, const VkImportFenceFdInfoKHR&);
        void deserialize_struct(const json::map&, VkImportFenceFdInfoKHR&);
    

        void serialize_struct(json::map&, const VkFenceGetFdInfoKHR&);
        void deserialize_struct(const json::map&, VkFenceGetFdInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultiviewFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultiviewFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultiviewProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultiviewProperties&);
    

        void serialize_struct(json::map&, const VkRenderPassMultiviewCreateInfo&);
        void deserialize_struct(const json::map&, VkRenderPassMultiviewCreateInfo&);
    

        void serialize_struct(json::map&, const VkSurfaceCapabilities2EXT&);
        void deserialize_struct(const json::map&, VkSurfaceCapabilities2EXT&);
    

        void serialize_struct(json::map&, const VkDisplayPowerInfoEXT&);
        void deserialize_struct(const json::map&, VkDisplayPowerInfoEXT&);
    

        void serialize_struct(json::map&, const VkDeviceEventInfoEXT&);
        void deserialize_struct(const json::map&, VkDeviceEventInfoEXT&);
    

        void serialize_struct(json::map&, const VkDisplayEventInfoEXT&);
        void deserialize_struct(const json::map&, VkDisplayEventInfoEXT&);
    

        void serialize_struct(json::map&, const VkSwapchainCounterCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkSwapchainCounterCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceGroupProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceGroupProperties&);
    

        void serialize_struct(json::map&, const VkMemoryAllocateFlagsInfo&);
        void deserialize_struct(const json::map&, VkMemoryAllocateFlagsInfo&);
    

        void serialize_struct(json::map&, const VkBindBufferMemoryInfo&);
        void deserialize_struct(const json::map&, VkBindBufferMemoryInfo&);
    

        void serialize_struct(json::map&, const VkBindBufferMemoryDeviceGroupInfo&);
        void deserialize_struct(const json::map&, VkBindBufferMemoryDeviceGroupInfo&);
    

        void serialize_struct(json::map&, const VkBindImageMemoryInfo&);
        void deserialize_struct(const json::map&, VkBindImageMemoryInfo&);
    

        void serialize_struct(json::map&, const VkBindImageMemoryDeviceGroupInfo&);
        void deserialize_struct(const json::map&, VkBindImageMemoryDeviceGroupInfo&);
    

        void serialize_struct(json::map&, const VkDeviceGroupRenderPassBeginInfo&);
        void deserialize_struct(const json::map&, VkDeviceGroupRenderPassBeginInfo&);
    

        void serialize_struct(json::map&, const VkDeviceGroupCommandBufferBeginInfo&);
        void deserialize_struct(const json::map&, VkDeviceGroupCommandBufferBeginInfo&);
    

        void serialize_struct(json::map&, const VkDeviceGroupSubmitInfo&);
        void deserialize_struct(const json::map&, VkDeviceGroupSubmitInfo&);
    

        void serialize_struct(json::map&, const VkDeviceGroupBindSparseInfo&);
        void deserialize_struct(const json::map&, VkDeviceGroupBindSparseInfo&);
    

        void serialize_struct(json::map&, const VkDeviceGroupPresentCapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkDeviceGroupPresentCapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkImageSwapchainCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkImageSwapchainCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkBindImageMemorySwapchainInfoKHR&);
        void deserialize_struct(const json::map&, VkBindImageMemorySwapchainInfoKHR&);
    

        void serialize_struct(json::map&, const VkAcquireNextImageInfoKHR&);
        void deserialize_struct(const json::map&, VkAcquireNextImageInfoKHR&);
    

        void serialize_struct(json::map&, const VkDeviceGroupPresentInfoKHR&);
        void deserialize_struct(const json::map&, VkDeviceGroupPresentInfoKHR&);
    

        void serialize_struct(json::map&, const VkDeviceGroupDeviceCreateInfo&);
        void deserialize_struct(const json::map&, VkDeviceGroupDeviceCreateInfo&);
    

        void serialize_struct(json::map&, const VkDeviceGroupSwapchainCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkDeviceGroupSwapchainCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkDescriptorUpdateTemplateEntry&);
        void deserialize_struct(const json::map&, VkDescriptorUpdateTemplateEntry&);
    

        void serialize_struct(json::map&, const VkDescriptorUpdateTemplateCreateInfo&);
        void deserialize_struct(const json::map&, VkDescriptorUpdateTemplateCreateInfo&);
    

        void serialize_struct(json::map&, const VkXYColorEXT&);
        void deserialize_struct(const json::map&, VkXYColorEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePresentIdFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePresentIdFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPresentIdKHR&);
        void deserialize_struct(const json::map&, VkPresentIdKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePresentWaitFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePresentWaitFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkHdrMetadataEXT&);
        void deserialize_struct(const json::map&, VkHdrMetadataEXT&);
    

        void serialize_struct(json::map&, const VkDisplayNativeHdrSurfaceCapabilitiesAMD&);
        void deserialize_struct(const json::map&, VkDisplayNativeHdrSurfaceCapabilitiesAMD&);
    

        void serialize_struct(json::map&, const VkSwapchainDisplayNativeHdrCreateInfoAMD&);
        void deserialize_struct(const json::map&, VkSwapchainDisplayNativeHdrCreateInfoAMD&);
    

        void serialize_struct(json::map&, const VkRefreshCycleDurationGOOGLE&);
        void deserialize_struct(const json::map&, VkRefreshCycleDurationGOOGLE&);
    

        void serialize_struct(json::map&, const VkPastPresentationTimingGOOGLE&);
        void deserialize_struct(const json::map&, VkPastPresentationTimingGOOGLE&);
    

        void serialize_struct(json::map&, const VkPresentTimesInfoGOOGLE&);
        void deserialize_struct(const json::map&, VkPresentTimesInfoGOOGLE&);
    

        void serialize_struct(json::map&, const VkPresentTimeGOOGLE&);
        void deserialize_struct(const json::map&, VkPresentTimeGOOGLE&);
    

        void serialize_struct(json::map&, const VkViewportWScalingNV&);
        void deserialize_struct(const json::map&, VkViewportWScalingNV&);
    

        void serialize_struct(json::map&, const VkPipelineViewportWScalingStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineViewportWScalingStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkViewportSwizzleNV&);
        void deserialize_struct(const json::map&, VkViewportSwizzleNV&);
    

        void serialize_struct(json::map&, const VkPipelineViewportSwizzleStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineViewportSwizzleStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDiscardRectanglePropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDiscardRectanglePropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineDiscardRectangleStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineDiscardRectangleStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX&);
    

        void serialize_struct(json::map&, const VkInputAttachmentAspectReference&);
        void deserialize_struct(const json::map&, VkInputAttachmentAspectReference&);
    

        void serialize_struct(json::map&, const VkRenderPassInputAttachmentAspectCreateInfo&);
        void deserialize_struct(const json::map&, VkRenderPassInputAttachmentAspectCreateInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSurfaceInfo2KHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSurfaceInfo2KHR&);
    

        void serialize_struct(json::map&, const VkSurfaceCapabilities2KHR&);
        void deserialize_struct(const json::map&, VkSurfaceCapabilities2KHR&);
    

        void serialize_struct(json::map&, const VkSurfaceFormat2KHR&);
        void deserialize_struct(const json::map&, VkSurfaceFormat2KHR&);
    

        void serialize_struct(json::map&, const VkDisplayProperties2KHR&);
        void deserialize_struct(const json::map&, VkDisplayProperties2KHR&);
    

        void serialize_struct(json::map&, const VkDisplayPlaneProperties2KHR&);
        void deserialize_struct(const json::map&, VkDisplayPlaneProperties2KHR&);
    

        void serialize_struct(json::map&, const VkDisplayModeProperties2KHR&);
        void deserialize_struct(const json::map&, VkDisplayModeProperties2KHR&);
    

        void serialize_struct(json::map&, const VkDisplayPlaneInfo2KHR&);
        void deserialize_struct(const json::map&, VkDisplayPlaneInfo2KHR&);
    

        void serialize_struct(json::map&, const VkDisplayPlaneCapabilities2KHR&);
        void deserialize_struct(const json::map&, VkDisplayPlaneCapabilities2KHR&);
    

        void serialize_struct(json::map&, const VkSharedPresentSurfaceCapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkSharedPresentSurfaceCapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDevice16BitStorageFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDevice16BitStorageFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSubgroupProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSubgroupProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures&);
    

        void serialize_struct(json::map&, const VkBufferMemoryRequirementsInfo2&);
        void deserialize_struct(const json::map&, VkBufferMemoryRequirementsInfo2&);
    

        void serialize_struct(json::map&, const VkDeviceBufferMemoryRequirements&);
        void deserialize_struct(const json::map&, VkDeviceBufferMemoryRequirements&);
    

        void serialize_struct(json::map&, const VkImageMemoryRequirementsInfo2&);
        void deserialize_struct(const json::map&, VkImageMemoryRequirementsInfo2&);
    

        void serialize_struct(json::map&, const VkImageSparseMemoryRequirementsInfo2&);
        void deserialize_struct(const json::map&, VkImageSparseMemoryRequirementsInfo2&);
    

        void serialize_struct(json::map&, const VkDeviceImageMemoryRequirements&);
        void deserialize_struct(const json::map&, VkDeviceImageMemoryRequirements&);
    

        void serialize_struct(json::map&, const VkMemoryRequirements2&);
        void deserialize_struct(const json::map&, VkMemoryRequirements2&);
    

        void serialize_struct(json::map&, const VkSparseImageMemoryRequirements2&);
        void deserialize_struct(const json::map&, VkSparseImageMemoryRequirements2&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePointClippingProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePointClippingProperties&);
    

        void serialize_struct(json::map&, const VkMemoryDedicatedRequirements&);
        void deserialize_struct(const json::map&, VkMemoryDedicatedRequirements&);
    

        void serialize_struct(json::map&, const VkMemoryDedicatedAllocateInfo&);
        void deserialize_struct(const json::map&, VkMemoryDedicatedAllocateInfo&);
    

        void serialize_struct(json::map&, const VkImageViewUsageCreateInfo&);
        void deserialize_struct(const json::map&, VkImageViewUsageCreateInfo&);
    

        void serialize_struct(json::map&, const VkImageViewSlicedCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkImageViewSlicedCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPipelineTessellationDomainOriginStateCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineTessellationDomainOriginStateCreateInfo&);
    

        void serialize_struct(json::map&, const VkSamplerYcbcrConversionInfo&);
        void deserialize_struct(const json::map&, VkSamplerYcbcrConversionInfo&);
    

        void serialize_struct(json::map&, const VkSamplerYcbcrConversionCreateInfo&);
        void deserialize_struct(const json::map&, VkSamplerYcbcrConversionCreateInfo&);
    

        void serialize_struct(json::map&, const VkBindImagePlaneMemoryInfo&);
        void deserialize_struct(const json::map&, VkBindImagePlaneMemoryInfo&);
    

        void serialize_struct(json::map&, const VkImagePlaneMemoryRequirementsInfo&);
        void deserialize_struct(const json::map&, VkImagePlaneMemoryRequirementsInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSamplerYcbcrConversionFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSamplerYcbcrConversionFeatures&);
    

        void serialize_struct(json::map&, const VkSamplerYcbcrConversionImageFormatProperties&);
        void deserialize_struct(const json::map&, VkSamplerYcbcrConversionImageFormatProperties&);
    

        void serialize_struct(json::map&, const VkTextureLODGatherFormatPropertiesAMD&);
        void deserialize_struct(const json::map&, VkTextureLODGatherFormatPropertiesAMD&);
    

        void serialize_struct(json::map&, const VkConditionalRenderingBeginInfoEXT&);
        void deserialize_struct(const json::map&, VkConditionalRenderingBeginInfoEXT&);
    

        void serialize_struct(json::map&, const VkProtectedSubmitInfo&);
        void deserialize_struct(const json::map&, VkProtectedSubmitInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceProtectedMemoryFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceProtectedMemoryFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceProtectedMemoryProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceProtectedMemoryProperties&);
    

        void serialize_struct(json::map&, const VkDeviceQueueInfo2&);
        void deserialize_struct(const json::map&, VkDeviceQueueInfo2&);
    

        void serialize_struct(json::map&, const VkPipelineCoverageToColorStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineCoverageToColorStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSamplerFilterMinmaxProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSamplerFilterMinmaxProperties&);
    

        void serialize_struct(json::map&, const VkSampleLocationEXT&);
        void deserialize_struct(const json::map&, VkSampleLocationEXT&);
    

        void serialize_struct(json::map&, const VkSampleLocationsInfoEXT&);
        void deserialize_struct(const json::map&, VkSampleLocationsInfoEXT&);
    

        void serialize_struct(json::map&, const VkAttachmentSampleLocationsEXT&);
        void deserialize_struct(const json::map&, VkAttachmentSampleLocationsEXT&);
    

        void serialize_struct(json::map&, const VkSubpassSampleLocationsEXT&);
        void deserialize_struct(const json::map&, VkSubpassSampleLocationsEXT&);
    

        void serialize_struct(json::map&, const VkRenderPassSampleLocationsBeginInfoEXT&);
        void deserialize_struct(const json::map&, VkRenderPassSampleLocationsBeginInfoEXT&);
    

        void serialize_struct(json::map&, const VkPipelineSampleLocationsStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineSampleLocationsStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSampleLocationsPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSampleLocationsPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkMultisamplePropertiesEXT&);
        void deserialize_struct(const json::map&, VkMultisamplePropertiesEXT&);
    

        void serialize_struct(json::map&, const VkSamplerReductionModeCreateInfo&);
        void deserialize_struct(const json::map&, VkSamplerReductionModeCreateInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultiDrawFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultiDrawFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineColorBlendAdvancedStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineColorBlendAdvancedStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceInlineUniformBlockFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceInlineUniformBlockFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceInlineUniformBlockProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceInlineUniformBlockProperties&);
    

        void serialize_struct(json::map&, const VkWriteDescriptorSetInlineUniformBlock&);
        void deserialize_struct(const json::map&, VkWriteDescriptorSetInlineUniformBlock&);
    

        void serialize_struct(json::map&, const VkDescriptorPoolInlineUniformBlockCreateInfo&);
        void deserialize_struct(const json::map&, VkDescriptorPoolInlineUniformBlockCreateInfo&);
    

        void serialize_struct(json::map&, const VkPipelineCoverageModulationStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineCoverageModulationStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkImageFormatListCreateInfo&);
        void deserialize_struct(const json::map&, VkImageFormatListCreateInfo&);
    

        void serialize_struct(json::map&, const VkValidationCacheCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkValidationCacheCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkShaderModuleValidationCacheCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkShaderModuleValidationCacheCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMaintenance3Properties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMaintenance3Properties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMaintenance4Features&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMaintenance4Features&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMaintenance4Properties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMaintenance4Properties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMaintenance5FeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMaintenance5FeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMaintenance5PropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMaintenance5PropertiesKHR&);
    

        void serialize_struct(json::map&, const VkRenderingAreaInfoKHR&);
        void deserialize_struct(const json::map&, VkRenderingAreaInfoKHR&);
    

        void serialize_struct(json::map&, const VkDescriptorSetLayoutSupport&);
        void deserialize_struct(const json::map&, VkDescriptorSetLayoutSupport&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderDrawParametersFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderDrawParametersFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderFloat16Int8Features&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderFloat16Int8Features&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFloatControlsProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFloatControlsProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceHostQueryResetFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceHostQueryResetFeatures&);
    

        void serialize_struct(json::map&, const VkShaderResourceUsageAMD&);
        void deserialize_struct(const json::map&, VkShaderResourceUsageAMD&);
    

        void serialize_struct(json::map&, const VkShaderStatisticsInfoAMD&);
        void deserialize_struct(const json::map&, VkShaderStatisticsInfoAMD&);
    

        void serialize_struct(json::map&, const VkDeviceQueueGlobalPriorityCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkDeviceQueueGlobalPriorityCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkQueueFamilyGlobalPriorityPropertiesKHR&);
        void deserialize_struct(const json::map&, VkQueueFamilyGlobalPriorityPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkDebugUtilsObjectNameInfoEXT&);
        void deserialize_struct(const json::map&, VkDebugUtilsObjectNameInfoEXT&);
    

        void serialize_struct(json::map&, const VkDebugUtilsObjectTagInfoEXT&);
        void deserialize_struct(const json::map&, VkDebugUtilsObjectTagInfoEXT&);
    

        void serialize_struct(json::map&, const VkDebugUtilsLabelEXT&);
        void deserialize_struct(const json::map&, VkDebugUtilsLabelEXT&);
    

        void serialize_struct(json::map&, const VkDebugUtilsMessengerCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkDebugUtilsMessengerCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkDebugUtilsMessengerCallbackDataEXT&);
        void deserialize_struct(const json::map&, VkDebugUtilsMessengerCallbackDataEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDeviceMemoryReportFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDeviceMemoryReportFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkDeviceDeviceMemoryReportCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkDeviceDeviceMemoryReportCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkDeviceMemoryReportCallbackDataEXT&);
        void deserialize_struct(const json::map&, VkDeviceMemoryReportCallbackDataEXT&);
    

        void serialize_struct(json::map&, const VkImportMemoryHostPointerInfoEXT&);
        void deserialize_struct(const json::map&, VkImportMemoryHostPointerInfoEXT&);
    

        void serialize_struct(json::map&, const VkMemoryHostPointerPropertiesEXT&);
        void deserialize_struct(const json::map&, VkMemoryHostPointerPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExternalMemoryHostPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExternalMemoryHostPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceConservativeRasterizationPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceConservativeRasterizationPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkCalibratedTimestampInfoEXT&);
        void deserialize_struct(const json::map&, VkCalibratedTimestampInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderCorePropertiesAMD&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderCorePropertiesAMD&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderCoreProperties2AMD&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderCoreProperties2AMD&);
    

        void serialize_struct(json::map&, const VkPipelineRasterizationConservativeStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineRasterizationConservativeStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDescriptorIndexingFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDescriptorIndexingFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDescriptorIndexingProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDescriptorIndexingProperties&);
    

        void serialize_struct(json::map&, const VkDescriptorSetLayoutBindingFlagsCreateInfo&);
        void deserialize_struct(const json::map&, VkDescriptorSetLayoutBindingFlagsCreateInfo&);
    

        void serialize_struct(json::map&, const VkDescriptorSetVariableDescriptorCountAllocateInfo&);
        void deserialize_struct(const json::map&, VkDescriptorSetVariableDescriptorCountAllocateInfo&);
    

        void serialize_struct(json::map&, const VkDescriptorSetVariableDescriptorCountLayoutSupport&);
        void deserialize_struct(const json::map&, VkDescriptorSetVariableDescriptorCountLayoutSupport&);
    

        void serialize_struct(json::map&, const VkAttachmentDescription2&);
        void deserialize_struct(const json::map&, VkAttachmentDescription2&);
    

        void serialize_struct(json::map&, const VkAttachmentReference2&);
        void deserialize_struct(const json::map&, VkAttachmentReference2&);
    

        void serialize_struct(json::map&, const VkSubpassDescription2&);
        void deserialize_struct(const json::map&, VkSubpassDescription2&);
    

        void serialize_struct(json::map&, const VkSubpassDependency2&);
        void deserialize_struct(const json::map&, VkSubpassDependency2&);
    

        void serialize_struct(json::map&, const VkRenderPassCreateInfo2&);
        void deserialize_struct(const json::map&, VkRenderPassCreateInfo2&);
    

        void serialize_struct(json::map&, const VkSubpassBeginInfo&);
        void deserialize_struct(const json::map&, VkSubpassBeginInfo&);
    

        void serialize_struct(json::map&, const VkSubpassEndInfo&);
        void deserialize_struct(const json::map&, VkSubpassEndInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTimelineSemaphoreFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTimelineSemaphoreFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTimelineSemaphoreProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTimelineSemaphoreProperties&);
    

        void serialize_struct(json::map&, const VkSemaphoreTypeCreateInfo&);
        void deserialize_struct(const json::map&, VkSemaphoreTypeCreateInfo&);
    

        void serialize_struct(json::map&, const VkTimelineSemaphoreSubmitInfo&);
        void deserialize_struct(const json::map&, VkTimelineSemaphoreSubmitInfo&);
    

        void serialize_struct(json::map&, const VkSemaphoreWaitInfo&);
        void deserialize_struct(const json::map&, VkSemaphoreWaitInfo&);
    

        void serialize_struct(json::map&, const VkSemaphoreSignalInfo&);
        void deserialize_struct(const json::map&, VkSemaphoreSignalInfo&);
    

        void serialize_struct(json::map&, const VkVertexInputBindingDivisorDescriptionEXT&);
        void deserialize_struct(const json::map&, VkVertexInputBindingDivisorDescriptionEXT&);
    

        void serialize_struct(json::map&, const VkPipelineVertexInputDivisorStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineVertexInputDivisorStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePCIBusInfoPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePCIBusInfoPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkCommandBufferInheritanceConditionalRenderingInfoEXT&);
        void deserialize_struct(const json::map&, VkCommandBufferInheritanceConditionalRenderingInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevice8BitStorageFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDevice8BitStorageFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceConditionalRenderingFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceConditionalRenderingFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVulkanMemoryModelFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVulkanMemoryModelFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderAtomicInt64Features&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderAtomicInt64Features&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderAtomicFloatFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderAtomicFloatFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkQueueFamilyCheckpointPropertiesNV&);
        void deserialize_struct(const json::map&, VkQueueFamilyCheckpointPropertiesNV&);
    

        void serialize_struct(json::map&, const VkCheckpointDataNV&);
        void deserialize_struct(const json::map&, VkCheckpointDataNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDepthStencilResolveProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDepthStencilResolveProperties&);
    

        void serialize_struct(json::map&, const VkSubpassDescriptionDepthStencilResolve&);
        void deserialize_struct(const json::map&, VkSubpassDescriptionDepthStencilResolve&);
    

        void serialize_struct(json::map&, const VkImageViewASTCDecodeModeEXT&);
        void deserialize_struct(const json::map&, VkImageViewASTCDecodeModeEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceASTCDecodeFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceASTCDecodeFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTransformFeedbackFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTransformFeedbackFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTransformFeedbackPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTransformFeedbackPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineRasterizationStateStreamCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineRasterizationStateStreamCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPipelineRepresentativeFragmentTestStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineRepresentativeFragmentTestStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExclusiveScissorFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExclusiveScissorFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPipelineViewportExclusiveScissorStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineViewportExclusiveScissorStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCornerSampledImageFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCornerSampledImageFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceComputeShaderDerivativesFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceComputeShaderDerivativesFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderImageFootprintFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderImageFootprintFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCopyMemoryIndirectFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCopyMemoryIndirectFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCopyMemoryIndirectPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCopyMemoryIndirectPropertiesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMemoryDecompressionFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMemoryDecompressionFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMemoryDecompressionPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMemoryDecompressionPropertiesNV&);
    

        void serialize_struct(json::map&, const VkShadingRatePaletteNV&);
        void deserialize_struct(const json::map&, VkShadingRatePaletteNV&);
    

        void serialize_struct(json::map&, const VkPipelineViewportShadingRateImageStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineViewportShadingRateImageStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShadingRateImageFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShadingRateImageFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShadingRateImagePropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShadingRateImagePropertiesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceInvocationMaskFeaturesHUAWEI&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceInvocationMaskFeaturesHUAWEI&);
    

        void serialize_struct(json::map&, const VkCoarseSampleLocationNV&);
        void deserialize_struct(const json::map&, VkCoarseSampleLocationNV&);
    

        void serialize_struct(json::map&, const VkCoarseSampleOrderCustomNV&);
        void deserialize_struct(const json::map&, VkCoarseSampleOrderCustomNV&);
    

        void serialize_struct(json::map&, const VkPipelineViewportCoarseSampleOrderStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineViewportCoarseSampleOrderStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMeshShaderFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMeshShaderFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMeshShaderPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMeshShaderPropertiesNV&);
    

        void serialize_struct(json::map&, const VkDrawMeshTasksIndirectCommandNV&);
        void deserialize_struct(const json::map&, VkDrawMeshTasksIndirectCommandNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMeshShaderFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMeshShaderFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMeshShaderPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMeshShaderPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkDrawMeshTasksIndirectCommandEXT&);
        void deserialize_struct(const json::map&, VkDrawMeshTasksIndirectCommandEXT&);
    

        void serialize_struct(json::map&, const VkRayTracingShaderGroupCreateInfoNV&);
        void deserialize_struct(const json::map&, VkRayTracingShaderGroupCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkRayTracingShaderGroupCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkRayTracingShaderGroupCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkRayTracingPipelineCreateInfoNV&);
        void deserialize_struct(const json::map&, VkRayTracingPipelineCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkRayTracingPipelineCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkRayTracingPipelineCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkGeometryTrianglesNV&);
        void deserialize_struct(const json::map&, VkGeometryTrianglesNV&);
    

        void serialize_struct(json::map&, const VkGeometryAABBNV&);
        void deserialize_struct(const json::map&, VkGeometryAABBNV&);
    

        void serialize_struct(json::map&, const VkGeometryDataNV&);
        void deserialize_struct(const json::map&, VkGeometryDataNV&);
    

        void serialize_struct(json::map&, const VkGeometryNV&);
        void deserialize_struct(const json::map&, VkGeometryNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureInfoNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureInfoNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureCreateInfoNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkBindAccelerationStructureMemoryInfoNV&);
        void deserialize_struct(const json::map&, VkBindAccelerationStructureMemoryInfoNV&);
    

        void serialize_struct(json::map&, const VkWriteDescriptorSetAccelerationStructureKHR&);
        void deserialize_struct(const json::map&, VkWriteDescriptorSetAccelerationStructureKHR&);
    

        void serialize_struct(json::map&, const VkWriteDescriptorSetAccelerationStructureNV&);
        void deserialize_struct(const json::map&, VkWriteDescriptorSetAccelerationStructureNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureMemoryRequirementsInfoNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureMemoryRequirementsInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceAccelerationStructureFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceAccelerationStructureFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingPipelineFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingPipelineFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayQueryFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayQueryFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceAccelerationStructurePropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceAccelerationStructurePropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingPipelinePropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingPipelinePropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingPropertiesNV&);
    

        void serialize_struct(json::map&, const VkStridedDeviceAddressRegionKHR&);
        void deserialize_struct(const json::map&, VkStridedDeviceAddressRegionKHR&);
    

        void serialize_struct(json::map&, const VkTraceRaysIndirectCommandKHR&);
        void deserialize_struct(const json::map&, VkTraceRaysIndirectCommandKHR&);
    

        void serialize_struct(json::map&, const VkTraceRaysIndirectCommand2KHR&);
        void deserialize_struct(const json::map&, VkTraceRaysIndirectCommand2KHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR&);
    

        void serialize_struct(json::map&, const VkDrmFormatModifierPropertiesListEXT&);
        void deserialize_struct(const json::map&, VkDrmFormatModifierPropertiesListEXT&);
    

        void serialize_struct(json::map&, const VkDrmFormatModifierPropertiesEXT&);
        void deserialize_struct(const json::map&, VkDrmFormatModifierPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageDrmFormatModifierInfoEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageDrmFormatModifierInfoEXT&);
    

        void serialize_struct(json::map&, const VkImageDrmFormatModifierListCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkImageDrmFormatModifierListCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkImageDrmFormatModifierExplicitCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkImageDrmFormatModifierExplicitCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkImageDrmFormatModifierPropertiesEXT&);
        void deserialize_struct(const json::map&, VkImageDrmFormatModifierPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkImageStencilUsageCreateInfo&);
        void deserialize_struct(const json::map&, VkImageStencilUsageCreateInfo&);
    

        void serialize_struct(json::map&, const VkDeviceMemoryOverallocationCreateInfoAMD&);
        void deserialize_struct(const json::map&, VkDeviceMemoryOverallocationCreateInfoAMD&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentDensityMapFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentDensityMapFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentDensityMap2FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentDensityMap2FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentDensityMapPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentDensityMapPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentDensityMap2PropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentDensityMap2PropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM&);
    

        void serialize_struct(json::map&, const VkRenderPassFragmentDensityMapCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkRenderPassFragmentDensityMapCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkSubpassFragmentDensityMapOffsetEndInfoQCOM&);
        void deserialize_struct(const json::map&, VkSubpassFragmentDensityMapOffsetEndInfoQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceScalarBlockLayoutFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceScalarBlockLayoutFeatures&);
    

        void serialize_struct(json::map&, const VkSurfaceProtectedCapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkSurfaceProtectedCapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceUniformBufferStandardLayoutFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceUniformBufferStandardLayoutFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDepthClipEnableFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDepthClipEnableFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineRasterizationDepthClipStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineRasterizationDepthClipStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMemoryBudgetPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMemoryBudgetPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMemoryPriorityFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMemoryPriorityFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkMemoryPriorityAllocateInfoEXT&);
        void deserialize_struct(const json::map&, VkMemoryPriorityAllocateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceBufferDeviceAddressFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceBufferDeviceAddressFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceBufferDeviceAddressFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceBufferDeviceAddressFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkBufferDeviceAddressInfo&);
        void deserialize_struct(const json::map&, VkBufferDeviceAddressInfo&);
    

        void serialize_struct(json::map&, const VkBufferOpaqueCaptureAddressCreateInfo&);
        void deserialize_struct(const json::map&, VkBufferOpaqueCaptureAddressCreateInfo&);
    

        void serialize_struct(json::map&, const VkBufferDeviceAddressCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkBufferDeviceAddressCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageViewImageFormatInfoEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageViewImageFormatInfoEXT&);
    

        void serialize_struct(json::map&, const VkFilterCubicImageViewImageFormatPropertiesEXT&);
        void deserialize_struct(const json::map&, VkFilterCubicImageViewImageFormatPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImagelessFramebufferFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImagelessFramebufferFeatures&);
    

        void serialize_struct(json::map&, const VkFramebufferAttachmentsCreateInfo&);
        void deserialize_struct(const json::map&, VkFramebufferAttachmentsCreateInfo&);
    

        void serialize_struct(json::map&, const VkFramebufferAttachmentImageInfo&);
        void deserialize_struct(const json::map&, VkFramebufferAttachmentImageInfo&);
    

        void serialize_struct(json::map&, const VkRenderPassAttachmentBeginInfo&);
        void deserialize_struct(const json::map&, VkRenderPassAttachmentBeginInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTextureCompressionASTCHDRFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTextureCompressionASTCHDRFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCooperativeMatrixFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCooperativeMatrixFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCooperativeMatrixPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCooperativeMatrixPropertiesNV&);
    

        void serialize_struct(json::map&, const VkCooperativeMatrixPropertiesNV&);
        void deserialize_struct(const json::map&, VkCooperativeMatrixPropertiesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceYcbcrImageArraysFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceYcbcrImageArraysFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkImageViewHandleInfoNVX&);
        void deserialize_struct(const json::map&, VkImageViewHandleInfoNVX&);
    

        void serialize_struct(json::map&, const VkImageViewAddressPropertiesNVX&);
        void deserialize_struct(const json::map&, VkImageViewAddressPropertiesNVX&);
    

        void serialize_struct(json::map&, const VkPipelineCreationFeedback&);
        void deserialize_struct(const json::map&, VkPipelineCreationFeedback&);
    

        void serialize_struct(json::map&, const VkPipelineCreationFeedbackCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineCreationFeedbackCreateInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePresentBarrierFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePresentBarrierFeaturesNV&);
    

        void serialize_struct(json::map&, const VkSurfaceCapabilitiesPresentBarrierNV&);
        void deserialize_struct(const json::map&, VkSurfaceCapabilitiesPresentBarrierNV&);
    

        void serialize_struct(json::map&, const VkSwapchainPresentBarrierCreateInfoNV&);
        void deserialize_struct(const json::map&, VkSwapchainPresentBarrierCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePerformanceQueryFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePerformanceQueryFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePerformanceQueryPropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePerformanceQueryPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPerformanceCounterKHR&);
        void deserialize_struct(const json::map&, VkPerformanceCounterKHR&);
    

        void serialize_struct(json::map&, const VkPerformanceCounterDescriptionKHR&);
        void deserialize_struct(const json::map&, VkPerformanceCounterDescriptionKHR&);
    

        void serialize_struct(json::map&, const VkQueryPoolPerformanceCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkQueryPoolPerformanceCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkPerformanceCounterResultKHR&);
        void deserialize_struct(const json::map&, VkPerformanceCounterResultKHR&);
    

        void serialize_struct(json::map&, const VkAcquireProfilingLockInfoKHR&);
        void deserialize_struct(const json::map&, VkAcquireProfilingLockInfoKHR&);
    

        void serialize_struct(json::map&, const VkPerformanceQuerySubmitInfoKHR&);
        void deserialize_struct(const json::map&, VkPerformanceQuerySubmitInfoKHR&);
    

        void serialize_struct(json::map&, const VkHeadlessSurfaceCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkHeadlessSurfaceCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCoverageReductionModeFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCoverageReductionModeFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPipelineCoverageReductionStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineCoverageReductionStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkFramebufferMixedSamplesCombinationNV&);
        void deserialize_struct(const json::map&, VkFramebufferMixedSamplesCombinationNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL&);
    

        void serialize_struct(json::map&, const VkPerformanceValueDataINTEL&);
        void deserialize_struct(const json::map&, VkPerformanceValueDataINTEL&);
    

        void serialize_struct(json::map&, const VkPerformanceValueINTEL&);
        void deserialize_struct(const json::map&, VkPerformanceValueINTEL&);
    

        void serialize_struct(json::map&, const VkInitializePerformanceApiInfoINTEL&);
        void deserialize_struct(const json::map&, VkInitializePerformanceApiInfoINTEL&);
    

        void serialize_struct(json::map&, const VkQueryPoolPerformanceQueryCreateInfoINTEL&);
        void deserialize_struct(const json::map&, VkQueryPoolPerformanceQueryCreateInfoINTEL&);
    

        void serialize_struct(json::map&, const VkPerformanceMarkerInfoINTEL&);
        void deserialize_struct(const json::map&, VkPerformanceMarkerInfoINTEL&);
    

        void serialize_struct(json::map&, const VkPerformanceStreamMarkerInfoINTEL&);
        void deserialize_struct(const json::map&, VkPerformanceStreamMarkerInfoINTEL&);
    

        void serialize_struct(json::map&, const VkPerformanceOverrideInfoINTEL&);
        void deserialize_struct(const json::map&, VkPerformanceOverrideInfoINTEL&);
    

        void serialize_struct(json::map&, const VkPerformanceConfigurationAcquireInfoINTEL&);
        void deserialize_struct(const json::map&, VkPerformanceConfigurationAcquireInfoINTEL&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderClockFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderClockFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceIndexTypeUint8FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceIndexTypeUint8FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderSMBuiltinsPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderSMBuiltinsPropertiesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderSMBuiltinsFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderSMBuiltinsFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures&);
    

        void serialize_struct(json::map&, const VkAttachmentReferenceStencilLayout&);
        void deserialize_struct(const json::map&, VkAttachmentReferenceStencilLayout&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkAttachmentDescriptionStencilLayout&);
        void deserialize_struct(const json::map&, VkAttachmentDescriptionStencilLayout&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPipelineInfoKHR&);
        void deserialize_struct(const json::map&, VkPipelineInfoKHR&);
    

        void serialize_struct(json::map&, const VkPipelineExecutablePropertiesKHR&);
        void deserialize_struct(const json::map&, VkPipelineExecutablePropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPipelineExecutableInfoKHR&);
        void deserialize_struct(const json::map&, VkPipelineExecutableInfoKHR&);
    

        void serialize_struct(json::map&, const VkPipelineExecutableStatisticValueKHR&);
        void deserialize_struct(const json::map&, VkPipelineExecutableStatisticValueKHR&);
    

        void serialize_struct(json::map&, const VkPipelineExecutableStatisticKHR&);
        void deserialize_struct(const json::map&, VkPipelineExecutableStatisticKHR&);
    

        void serialize_struct(json::map&, const VkPipelineExecutableInternalRepresentationKHR&);
        void deserialize_struct(const json::map&, VkPipelineExecutableInternalRepresentationKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTexelBufferAlignmentProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTexelBufferAlignmentProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSubgroupSizeControlFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSubgroupSizeControlFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSubgroupSizeControlProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSubgroupSizeControlProperties&);
    

        void serialize_struct(json::map&, const VkPipelineShaderStageRequiredSubgroupSizeCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineShaderStageRequiredSubgroupSizeCreateInfo&);
    

        void serialize_struct(json::map&, const VkSubpassShadingPipelineCreateInfoHUAWEI&);
        void deserialize_struct(const json::map&, VkSubpassShadingPipelineCreateInfoHUAWEI&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSubpassShadingPropertiesHUAWEI&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSubpassShadingPropertiesHUAWEI&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI&);
    

        void serialize_struct(json::map&, const VkMemoryOpaqueCaptureAddressAllocateInfo&);
        void deserialize_struct(const json::map&, VkMemoryOpaqueCaptureAddressAllocateInfo&);
    

        void serialize_struct(json::map&, const VkDeviceMemoryOpaqueCaptureAddressInfo&);
        void deserialize_struct(const json::map&, VkDeviceMemoryOpaqueCaptureAddressInfo&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceLineRasterizationFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceLineRasterizationFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceLineRasterizationPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceLineRasterizationPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineRasterizationLineStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineRasterizationLineStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePipelineCreationCacheControlFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePipelineCreationCacheControlFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVulkan11Features&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVulkan11Features&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVulkan11Properties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVulkan11Properties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVulkan12Features&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVulkan12Features&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVulkan12Properties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVulkan12Properties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVulkan13Features&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVulkan13Features&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVulkan13Properties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVulkan13Properties&);
    

        void serialize_struct(json::map&, const VkPipelineCompilerControlCreateInfoAMD&);
        void deserialize_struct(const json::map&, VkPipelineCompilerControlCreateInfoAMD&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCoherentMemoryFeaturesAMD&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCoherentMemoryFeaturesAMD&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceToolProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceToolProperties&);
    

        void serialize_struct(json::map&, const VkSamplerCustomBorderColorCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkSamplerCustomBorderColorCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCustomBorderColorPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCustomBorderColorPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCustomBorderColorFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCustomBorderColorFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkSamplerBorderColorComponentMappingCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkSamplerBorderColorComponentMappingCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceBorderColorSwizzleFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceBorderColorSwizzleFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkDeviceOrHostAddressKHR&);
        void deserialize_struct(const json::map&, VkDeviceOrHostAddressKHR&);
    

        void serialize_struct(json::map&, const VkDeviceOrHostAddressConstKHR&);
        void deserialize_struct(const json::map&, VkDeviceOrHostAddressConstKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureGeometryTrianglesDataKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureGeometryTrianglesDataKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureGeometryAabbsDataKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureGeometryAabbsDataKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureGeometryInstancesDataKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureGeometryInstancesDataKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureGeometryDataKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureGeometryDataKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureGeometryKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureGeometryKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureBuildGeometryInfoKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureBuildGeometryInfoKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureBuildRangeInfoKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureBuildRangeInfoKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkAabbPositionsKHR&);
        void deserialize_struct(const json::map&, VkAabbPositionsKHR&);
    

        void serialize_struct(json::map&, const VkTransformMatrixKHR&);
        void deserialize_struct(const json::map&, VkTransformMatrixKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureInstanceKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureInstanceKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureDeviceAddressInfoKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureDeviceAddressInfoKHR&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureVersionInfoKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureVersionInfoKHR&);
    

        void serialize_struct(json::map&, const VkCopyAccelerationStructureInfoKHR&);
        void deserialize_struct(const json::map&, VkCopyAccelerationStructureInfoKHR&);
    

        void serialize_struct(json::map&, const VkCopyAccelerationStructureToMemoryInfoKHR&);
        void deserialize_struct(const json::map&, VkCopyAccelerationStructureToMemoryInfoKHR&);
    

        void serialize_struct(json::map&, const VkCopyMemoryToAccelerationStructureInfoKHR&);
        void deserialize_struct(const json::map&, VkCopyMemoryToAccelerationStructureInfoKHR&);
    

        void serialize_struct(json::map&, const VkRayTracingPipelineInterfaceCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkRayTracingPipelineInterfaceCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkPipelineLibraryCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkPipelineLibraryCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExtendedDynamicStateFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExtendedDynamicStateFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExtendedDynamicState2FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExtendedDynamicState2FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExtendedDynamicState3FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExtendedDynamicState3FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExtendedDynamicState3PropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExtendedDynamicState3PropertiesEXT&);
    

        void serialize_struct(json::map&, const VkColorBlendEquationEXT&);
        void deserialize_struct(const json::map&, VkColorBlendEquationEXT&);
    

        void serialize_struct(json::map&, const VkColorBlendAdvancedEXT&);
        void deserialize_struct(const json::map&, VkColorBlendAdvancedEXT&);
    

        void serialize_struct(json::map&, const VkRenderPassTransformBeginInfoQCOM&);
        void deserialize_struct(const json::map&, VkRenderPassTransformBeginInfoQCOM&);
    

        void serialize_struct(json::map&, const VkCopyCommandTransformInfoQCOM&);
        void deserialize_struct(const json::map&, VkCopyCommandTransformInfoQCOM&);
    

        void serialize_struct(json::map&, const VkCommandBufferInheritanceRenderPassTransformInfoQCOM&);
        void deserialize_struct(const json::map&, VkCommandBufferInheritanceRenderPassTransformInfoQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDiagnosticsConfigFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDiagnosticsConfigFeaturesNV&);
    

        void serialize_struct(json::map&, const VkDeviceDiagnosticsConfigCreateInfoNV&);
        void deserialize_struct(const json::map&, VkDeviceDiagnosticsConfigCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRobustness2FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRobustness2FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRobustness2PropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRobustness2PropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageRobustnessFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageRobustnessFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDevice4444FormatsFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevice4444FormatsFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSubpassShadingFeaturesHUAWEI&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSubpassShadingFeaturesHUAWEI&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI&);
    

        void serialize_struct(json::map&, const VkBufferCopy2&);
        void deserialize_struct(const json::map&, VkBufferCopy2&);
    

        void serialize_struct(json::map&, const VkImageCopy2&);
        void deserialize_struct(const json::map&, VkImageCopy2&);
    

        void serialize_struct(json::map&, const VkImageBlit2&);
        void deserialize_struct(const json::map&, VkImageBlit2&);
    

        void serialize_struct(json::map&, const VkBufferImageCopy2&);
        void deserialize_struct(const json::map&, VkBufferImageCopy2&);
    

        void serialize_struct(json::map&, const VkImageResolve2&);
        void deserialize_struct(const json::map&, VkImageResolve2&);
    

        void serialize_struct(json::map&, const VkCopyBufferInfo2&);
        void deserialize_struct(const json::map&, VkCopyBufferInfo2&);
    

        void serialize_struct(json::map&, const VkCopyImageInfo2&);
        void deserialize_struct(const json::map&, VkCopyImageInfo2&);
    

        void serialize_struct(json::map&, const VkBlitImageInfo2&);
        void deserialize_struct(const json::map&, VkBlitImageInfo2&);
    

        void serialize_struct(json::map&, const VkCopyBufferToImageInfo2&);
        void deserialize_struct(const json::map&, VkCopyBufferToImageInfo2&);
    

        void serialize_struct(json::map&, const VkCopyImageToBufferInfo2&);
        void deserialize_struct(const json::map&, VkCopyImageToBufferInfo2&);
    

        void serialize_struct(json::map&, const VkResolveImageInfo2&);
        void deserialize_struct(const json::map&, VkResolveImageInfo2&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkFragmentShadingRateAttachmentInfoKHR&);
        void deserialize_struct(const json::map&, VkFragmentShadingRateAttachmentInfoKHR&);
    

        void serialize_struct(json::map&, const VkPipelineFragmentShadingRateStateCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkPipelineFragmentShadingRateStateCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShadingRateFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShadingRateFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShadingRatePropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShadingRatePropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShadingRateKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShadingRateKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderTerminateInvocationFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderTerminateInvocationFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV&);
    

        void serialize_struct(json::map&, const VkPipelineFragmentShadingRateEnumStateCreateInfoNV&);
        void deserialize_struct(const json::map&, VkPipelineFragmentShadingRateEnumStateCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureBuildSizesInfoKHR&);
        void deserialize_struct(const json::map&, VkAccelerationStructureBuildSizesInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImage2DViewOf3DFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImage2DViewOf3DFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkMutableDescriptorTypeListEXT&);
        void deserialize_struct(const json::map&, VkMutableDescriptorTypeListEXT&);
    

        void serialize_struct(json::map&, const VkMutableDescriptorTypeCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkMutableDescriptorTypeCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDepthClipControlFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDepthClipControlFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineViewportDepthClipControlCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineViewportDepthClipControlCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceExternalMemoryRDMAFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceExternalMemoryRDMAFeaturesNV&);
    

        void serialize_struct(json::map&, const VkVertexInputBindingDescription2EXT&);
        void deserialize_struct(const json::map&, VkVertexInputBindingDescription2EXT&);
    

        void serialize_struct(json::map&, const VkVertexInputAttributeDescription2EXT&);
        void deserialize_struct(const json::map&, VkVertexInputAttributeDescription2EXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceColorWriteEnableFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceColorWriteEnableFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineColorWriteCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineColorWriteCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkMemoryBarrier2&);
        void deserialize_struct(const json::map&, VkMemoryBarrier2&);
    

        void serialize_struct(json::map&, const VkImageMemoryBarrier2&);
        void deserialize_struct(const json::map&, VkImageMemoryBarrier2&);
    

        void serialize_struct(json::map&, const VkBufferMemoryBarrier2&);
        void deserialize_struct(const json::map&, VkBufferMemoryBarrier2&);
    

        void serialize_struct(json::map&, const VkDependencyInfo&);
        void deserialize_struct(const json::map&, VkDependencyInfo&);
    

        void serialize_struct(json::map&, const VkSemaphoreSubmitInfo&);
        void deserialize_struct(const json::map&, VkSemaphoreSubmitInfo&);
    

        void serialize_struct(json::map&, const VkCommandBufferSubmitInfo&);
        void deserialize_struct(const json::map&, VkCommandBufferSubmitInfo&);
    

        void serialize_struct(json::map&, const VkSubmitInfo2&);
        void deserialize_struct(const json::map&, VkSubmitInfo2&);
    

        void serialize_struct(json::map&, const VkQueueFamilyCheckpointProperties2NV&);
        void deserialize_struct(const json::map&, VkQueueFamilyCheckpointProperties2NV&);
    

        void serialize_struct(json::map&, const VkCheckpointData2NV&);
        void deserialize_struct(const json::map&, VkCheckpointData2NV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSynchronization2Features&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSynchronization2Features&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceHostImageCopyFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceHostImageCopyFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceHostImageCopyPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceHostImageCopyPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkMemoryToImageCopyEXT&);
        void deserialize_struct(const json::map&, VkMemoryToImageCopyEXT&);
    

        void serialize_struct(json::map&, const VkImageToMemoryCopyEXT&);
        void deserialize_struct(const json::map&, VkImageToMemoryCopyEXT&);
    

        void serialize_struct(json::map&, const VkCopyMemoryToImageInfoEXT&);
        void deserialize_struct(const json::map&, VkCopyMemoryToImageInfoEXT&);
    

        void serialize_struct(json::map&, const VkCopyImageToMemoryInfoEXT&);
        void deserialize_struct(const json::map&, VkCopyImageToMemoryInfoEXT&);
    

        void serialize_struct(json::map&, const VkCopyImageToImageInfoEXT&);
        void deserialize_struct(const json::map&, VkCopyImageToImageInfoEXT&);
    

        void serialize_struct(json::map&, const VkHostImageLayoutTransitionInfoEXT&);
        void deserialize_struct(const json::map&, VkHostImageLayoutTransitionInfoEXT&);
    

        void serialize_struct(json::map&, const VkSubresourceHostMemcpySizeEXT&);
        void deserialize_struct(const json::map&, VkSubresourceHostMemcpySizeEXT&);
    

        void serialize_struct(json::map&, const VkHostImageCopyDevicePerformanceQueryEXT&);
        void deserialize_struct(const json::map&, VkHostImageCopyDevicePerformanceQueryEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceLegacyDitheringFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceLegacyDitheringFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkSubpassResolvePerformanceQueryEXT&);
        void deserialize_struct(const json::map&, VkSubpassResolvePerformanceQueryEXT&);
    

        void serialize_struct(json::map&, const VkMultisampledRenderToSingleSampledInfoEXT&);
        void deserialize_struct(const json::map&, VkMultisampledRenderToSingleSampledInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePipelineProtectedAccessFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePipelineProtectedAccessFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkQueueFamilyVideoPropertiesKHR&);
        void deserialize_struct(const json::map&, VkQueueFamilyVideoPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkQueueFamilyQueryResultStatusPropertiesKHR&);
        void deserialize_struct(const json::map&, VkQueueFamilyQueryResultStatusPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkVideoProfileListInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoProfileListInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceVideoFormatInfoKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceVideoFormatInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoFormatPropertiesKHR&);
        void deserialize_struct(const json::map&, VkVideoFormatPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkVideoProfileInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoProfileInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoCapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkVideoCapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkVideoSessionMemoryRequirementsKHR&);
        void deserialize_struct(const json::map&, VkVideoSessionMemoryRequirementsKHR&);
    

        void serialize_struct(json::map&, const VkBindVideoSessionMemoryInfoKHR&);
        void deserialize_struct(const json::map&, VkBindVideoSessionMemoryInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoPictureResourceInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoPictureResourceInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoReferenceSlotInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoReferenceSlotInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeCapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeCapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeUsageInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeUsageInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH264ProfileInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH264ProfileInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH264CapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH264CapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH264SessionParametersAddInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH264SessionParametersAddInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH264SessionParametersCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH264SessionParametersCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH264PictureInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH264PictureInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH264DpbSlotInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH264DpbSlotInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH265ProfileInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH265ProfileInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH265CapabilitiesKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH265CapabilitiesKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH265SessionParametersAddInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH265SessionParametersAddInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH265SessionParametersCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH265SessionParametersCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH265PictureInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH265PictureInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoDecodeH265DpbSlotInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoDecodeH265DpbSlotInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoSessionCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoSessionCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoSessionParametersCreateInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoSessionParametersCreateInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoSessionParametersUpdateInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoSessionParametersUpdateInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoBeginCodingInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoBeginCodingInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoEndCodingInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoEndCodingInfoKHR&);
    

        void serialize_struct(json::map&, const VkVideoCodingControlInfoKHR&);
        void deserialize_struct(const json::map&, VkVideoCodingControlInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceInheritedViewportScissorFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceInheritedViewportScissorFeaturesNV&);
    

        void serialize_struct(json::map&, const VkCommandBufferInheritanceViewportScissorInfoNV&);
        void deserialize_struct(const json::map&, VkCommandBufferInheritanceViewportScissorInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceProvokingVertexFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceProvokingVertexFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceProvokingVertexPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceProvokingVertexPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineRasterizationProvokingVertexStateCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineRasterizationProvokingVertexStateCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkCuModuleCreateInfoNVX&);
        void deserialize_struct(const json::map&, VkCuModuleCreateInfoNVX&);
    

        void serialize_struct(json::map&, const VkCuFunctionCreateInfoNVX&);
        void deserialize_struct(const json::map&, VkCuFunctionCreateInfoNVX&);
    

        void serialize_struct(json::map&, const VkCuLaunchInfoNVX&);
        void deserialize_struct(const json::map&, VkCuLaunchInfoNVX&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDescriptorBufferFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDescriptorBufferFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDescriptorBufferPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDescriptorBufferPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkDescriptorAddressInfoEXT&);
        void deserialize_struct(const json::map&, VkDescriptorAddressInfoEXT&);
    

        void serialize_struct(json::map&, const VkDescriptorBufferBindingInfoEXT&);
        void deserialize_struct(const json::map&, VkDescriptorBufferBindingInfoEXT&);
    

        void serialize_struct(json::map&, const VkDescriptorBufferBindingPushDescriptorBufferHandleEXT&);
        void deserialize_struct(const json::map&, VkDescriptorBufferBindingPushDescriptorBufferHandleEXT&);
    

        void serialize_struct(json::map&, const VkDescriptorDataEXT&);
        void deserialize_struct(const json::map&, VkDescriptorDataEXT&);
    

        void serialize_struct(json::map&, const VkDescriptorGetInfoEXT&);
        void deserialize_struct(const json::map&, VkDescriptorGetInfoEXT&);
    

        void serialize_struct(json::map&, const VkBufferCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(const json::map&, VkBufferCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(json::map&, const VkImageCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(const json::map&, VkImageCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(json::map&, const VkImageViewCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(const json::map&, VkImageViewCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(json::map&, const VkSamplerCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(const json::map&, VkSamplerCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(const json::map&, VkAccelerationStructureCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(json::map&, const VkOpaqueCaptureDescriptorDataCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkOpaqueCaptureDescriptorDataCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderIntegerDotProductFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderIntegerDotProductFeatures&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderIntegerDotProductProperties&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderIntegerDotProductProperties&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDrmPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDrmPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingMotionBlurFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingMotionBlurFeaturesNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureGeometryMotionTrianglesDataNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureGeometryMotionTrianglesDataNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureMotionInfoNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureMotionInfoNV&);
    

        void serialize_struct(json::map&, const VkSRTDataNV&);
        void deserialize_struct(const json::map&, VkSRTDataNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureSRTMotionInstanceNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureSRTMotionInstanceNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureMatrixMotionInstanceNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureMatrixMotionInstanceNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureMotionInstanceDataNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureMotionInstanceDataNV&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureMotionInstanceNV&);
        void deserialize_struct(const json::map&, VkAccelerationStructureMotionInstanceNV&);
    

        void serialize_struct(json::map&, const VkMemoryGetRemoteAddressInfoNV&);
        void deserialize_struct(const json::map&, VkMemoryGetRemoteAddressInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkFormatProperties3&);
        void deserialize_struct(const json::map&, VkFormatProperties3&);
    

        void serialize_struct(json::map&, const VkDrmFormatModifierPropertiesList2EXT&);
        void deserialize_struct(const json::map&, VkDrmFormatModifierPropertiesList2EXT&);
    

        void serialize_struct(json::map&, const VkDrmFormatModifierProperties2EXT&);
        void deserialize_struct(const json::map&, VkDrmFormatModifierProperties2EXT&);
    

        void serialize_struct(json::map&, const VkPipelineRenderingCreateInfo&);
        void deserialize_struct(const json::map&, VkPipelineRenderingCreateInfo&);
    

        void serialize_struct(json::map&, const VkRenderingInfo&);
        void deserialize_struct(const json::map&, VkRenderingInfo&);
    

        void serialize_struct(json::map&, const VkRenderingAttachmentInfo&);
        void deserialize_struct(const json::map&, VkRenderingAttachmentInfo&);
    

        void serialize_struct(json::map&, const VkRenderingFragmentShadingRateAttachmentInfoKHR&);
        void deserialize_struct(const json::map&, VkRenderingFragmentShadingRateAttachmentInfoKHR&);
    

        void serialize_struct(json::map&, const VkRenderingFragmentDensityMapAttachmentInfoEXT&);
        void deserialize_struct(const json::map&, VkRenderingFragmentDensityMapAttachmentInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDynamicRenderingFeatures&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDynamicRenderingFeatures&);
    

        void serialize_struct(json::map&, const VkCommandBufferInheritanceRenderingInfo&);
        void deserialize_struct(const json::map&, VkCommandBufferInheritanceRenderingInfo&);
    

        void serialize_struct(json::map&, const VkAttachmentSampleCountInfoAMD&);
        void deserialize_struct(const json::map&, VkAttachmentSampleCountInfoAMD&);
    

        void serialize_struct(json::map&, const VkMultiviewPerViewAttributesInfoNVX&);
        void deserialize_struct(const json::map&, VkMultiviewPerViewAttributesInfoNVX&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageViewMinLodFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageViewMinLodFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkImageViewMinLodCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkImageViewMinLodCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceLinearColorAttachmentFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceLinearColorAttachmentFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkGraphicsPipelineLibraryCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkGraphicsPipelineLibraryCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE&);
    

        void serialize_struct(json::map&, const VkDescriptorSetBindingReferenceVALVE&);
        void deserialize_struct(const json::map&, VkDescriptorSetBindingReferenceVALVE&);
    

        void serialize_struct(json::map&, const VkDescriptorSetLayoutHostMappingInfoVALVE&);
        void deserialize_struct(const json::map&, VkDescriptorSetLayoutHostMappingInfoVALVE&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineShaderStageModuleIdentifierCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineShaderStageModuleIdentifierCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkShaderModuleIdentifierEXT&);
        void deserialize_struct(const json::map&, VkShaderModuleIdentifierEXT&);
    

        void serialize_struct(json::map&, const VkImageCompressionControlEXT&);
        void deserialize_struct(const json::map&, VkImageCompressionControlEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageCompressionControlFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageCompressionControlFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkImageCompressionPropertiesEXT&);
        void deserialize_struct(const json::map&, VkImageCompressionPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkImageSubresource2KHR&);
        void deserialize_struct(const json::map&, VkImageSubresource2KHR&);
    

        void serialize_struct(json::map&, const VkSubresourceLayout2KHR&);
        void deserialize_struct(const json::map&, VkSubresourceLayout2KHR&);
    

        void serialize_struct(json::map&, const VkRenderPassCreationControlEXT&);
        void deserialize_struct(const json::map&, VkRenderPassCreationControlEXT&);
    

        void serialize_struct(json::map&, const VkRenderPassCreationFeedbackInfoEXT&);
        void deserialize_struct(const json::map&, VkRenderPassCreationFeedbackInfoEXT&);
    

        void serialize_struct(json::map&, const VkRenderPassCreationFeedbackCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkRenderPassCreationFeedbackCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkRenderPassSubpassFeedbackInfoEXT&);
        void deserialize_struct(const json::map&, VkRenderPassSubpassFeedbackInfoEXT&);
    

        void serialize_struct(json::map&, const VkRenderPassSubpassFeedbackCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkRenderPassSubpassFeedbackCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkMicromapBuildInfoEXT&);
        void deserialize_struct(const json::map&, VkMicromapBuildInfoEXT&);
    

        void serialize_struct(json::map&, const VkMicromapCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkMicromapCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkMicromapVersionInfoEXT&);
        void deserialize_struct(const json::map&, VkMicromapVersionInfoEXT&);
    

        void serialize_struct(json::map&, const VkCopyMicromapInfoEXT&);
        void deserialize_struct(const json::map&, VkCopyMicromapInfoEXT&);
    

        void serialize_struct(json::map&, const VkCopyMicromapToMemoryInfoEXT&);
        void deserialize_struct(const json::map&, VkCopyMicromapToMemoryInfoEXT&);
    

        void serialize_struct(json::map&, const VkCopyMemoryToMicromapInfoEXT&);
        void deserialize_struct(const json::map&, VkCopyMemoryToMicromapInfoEXT&);
    

        void serialize_struct(json::map&, const VkMicromapBuildSizesInfoEXT&);
        void deserialize_struct(const json::map&, VkMicromapBuildSizesInfoEXT&);
    

        void serialize_struct(json::map&, const VkMicromapUsageEXT&);
        void deserialize_struct(const json::map&, VkMicromapUsageEXT&);
    

        void serialize_struct(json::map&, const VkMicromapTriangleEXT&);
        void deserialize_struct(const json::map&, VkMicromapTriangleEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceOpacityMicromapFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceOpacityMicromapFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceOpacityMicromapPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceOpacityMicromapPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkAccelerationStructureTrianglesOpacityMicromapEXT&);
        void deserialize_struct(const json::map&, VkAccelerationStructureTrianglesOpacityMicromapEXT&);
    

        void serialize_struct(json::map&, const VkPipelinePropertiesIdentifierEXT&);
        void deserialize_struct(const json::map&, VkPipelinePropertiesIdentifierEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePipelinePropertiesFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePipelinePropertiesFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD&);
    

        void serialize_struct(json::map&, const VkExternalMemoryAcquireUnmodifiedEXT&);
        void deserialize_struct(const json::map&, VkExternalMemoryAcquireUnmodifiedEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePipelineRobustnessFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePipelineRobustnessFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPipelineRobustnessCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkPipelineRobustnessCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePipelineRobustnessPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePipelineRobustnessPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkImageViewSampleWeightCreateInfoQCOM&);
        void deserialize_struct(const json::map&, VkImageViewSampleWeightCreateInfoQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageProcessingFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageProcessingFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageProcessingPropertiesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageProcessingPropertiesQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceTilePropertiesFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceTilePropertiesFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkTilePropertiesQCOM&);
        void deserialize_struct(const json::map&, VkTilePropertiesQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceAmigoProfilingFeaturesSEC&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceAmigoProfilingFeaturesSEC&);
    

        void serialize_struct(json::map&, const VkAmigoProfilingSubmitInfoSEC&);
        void deserialize_struct(const json::map&, VkAmigoProfilingSubmitInfoSEC&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDepthClampZeroOneFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDepthClampZeroOneFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceAddressBindingReportFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceAddressBindingReportFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkDeviceAddressBindingCallbackDataEXT&);
        void deserialize_struct(const json::map&, VkDeviceAddressBindingCallbackDataEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceOpticalFlowFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceOpticalFlowFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceOpticalFlowPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceOpticalFlowPropertiesNV&);
    

        void serialize_struct(json::map&, const VkOpticalFlowImageFormatInfoNV&);
        void deserialize_struct(const json::map&, VkOpticalFlowImageFormatInfoNV&);
    

        void serialize_struct(json::map&, const VkOpticalFlowImageFormatPropertiesNV&);
        void deserialize_struct(const json::map&, VkOpticalFlowImageFormatPropertiesNV&);
    

        void serialize_struct(json::map&, const VkOpticalFlowSessionCreateInfoNV&);
        void deserialize_struct(const json::map&, VkOpticalFlowSessionCreateInfoNV&);
    

        void serialize_struct(json::map&, const VkOpticalFlowSessionCreatePrivateDataInfoNV&);
        void deserialize_struct(const json::map&, VkOpticalFlowSessionCreatePrivateDataInfoNV&);
    

        void serialize_struct(json::map&, const VkOpticalFlowExecuteInfoNV&);
        void deserialize_struct(const json::map&, VkOpticalFlowExecuteInfoNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFaultFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFaultFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkDeviceFaultAddressInfoEXT&);
        void deserialize_struct(const json::map&, VkDeviceFaultAddressInfoEXT&);
    

        void serialize_struct(json::map&, const VkDeviceFaultVendorInfoEXT&);
        void deserialize_struct(const json::map&, VkDeviceFaultVendorInfoEXT&);
    

        void serialize_struct(json::map&, const VkDeviceFaultCountsEXT&);
        void deserialize_struct(const json::map&, VkDeviceFaultCountsEXT&);
    

        void serialize_struct(json::map&, const VkDeviceFaultInfoEXT&);
        void deserialize_struct(const json::map&, VkDeviceFaultInfoEXT&);
    

        void serialize_struct(json::map&, const VkDeviceFaultVendorBinaryHeaderVersionOneEXT&);
        void deserialize_struct(const json::map&, VkDeviceFaultVendorBinaryHeaderVersionOneEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkDepthBiasInfoEXT&);
        void deserialize_struct(const json::map&, VkDepthBiasInfoEXT&);
    

        void serialize_struct(json::map&, const VkDepthBiasRepresentationInfoEXT&);
        void deserialize_struct(const json::map&, VkDepthBiasRepresentationInfoEXT&);
    

        void serialize_struct(json::map&, const VkDecompressMemoryRegionNV&);
        void deserialize_struct(const json::map&, VkDecompressMemoryRegionNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM&);
    

        void serialize_struct(json::map&, const VkFrameBoundaryEXT&);
        void deserialize_struct(const json::map&, VkFrameBoundaryEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceFrameBoundaryFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceFrameBoundaryFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkSurfacePresentModeEXT&);
        void deserialize_struct(const json::map&, VkSurfacePresentModeEXT&);
    

        void serialize_struct(json::map&, const VkSurfacePresentScalingCapabilitiesEXT&);
        void deserialize_struct(const json::map&, VkSurfacePresentScalingCapabilitiesEXT&);
    

        void serialize_struct(json::map&, const VkSurfacePresentModeCompatibilityEXT&);
        void deserialize_struct(const json::map&, VkSurfacePresentModeCompatibilityEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT&);
    

        void serialize_struct(json::map&, const VkSwapchainPresentFenceInfoEXT&);
        void deserialize_struct(const json::map&, VkSwapchainPresentFenceInfoEXT&);
    

        void serialize_struct(json::map&, const VkSwapchainPresentModesCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkSwapchainPresentModesCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkSwapchainPresentModeInfoEXT&);
        void deserialize_struct(const json::map&, VkSwapchainPresentModeInfoEXT&);
    

        void serialize_struct(json::map&, const VkSwapchainPresentScalingCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkSwapchainPresentScalingCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkReleaseSwapchainImagesInfoEXT&);
        void deserialize_struct(const json::map&, VkReleaseSwapchainImagesInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDepthBiasControlFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDepthBiasControlFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV&);
    

        void serialize_struct(json::map&, const VkDirectDriverLoadingInfoLUNARG&);
        void deserialize_struct(const json::map&, VkDirectDriverLoadingInfoLUNARG&);
    

        void serialize_struct(json::map&, const VkDirectDriverLoadingListLUNARG&);
        void deserialize_struct(const json::map&, VkDirectDriverLoadingListLUNARG&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkDeviceImageSubresourceInfoKHR&);
        void deserialize_struct(const json::map&, VkDeviceImageSubresourceInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderCorePropertiesARM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderCorePropertiesARM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM&);
        void deserialize_struct(const json::map&, VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM&);
    

        void serialize_struct(json::map&, const VkQueryLowLatencySupportNV&);
        void deserialize_struct(const json::map&, VkQueryLowLatencySupportNV&);
    

        void serialize_struct(json::map&, const VkMemoryMapInfoKHR&);
        void deserialize_struct(const json::map&, VkMemoryMapInfoKHR&);
    

        void serialize_struct(json::map&, const VkMemoryUnmapInfoKHR&);
        void deserialize_struct(const json::map&, VkMemoryUnmapInfoKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderObjectFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderObjectFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderObjectPropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderObjectPropertiesEXT&);
    

        void serialize_struct(json::map&, const VkShaderCreateInfoEXT&);
        void deserialize_struct(const json::map&, VkShaderCreateInfoEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderTileImageFeaturesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderTileImageFeaturesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceShaderTileImagePropertiesEXT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceShaderTileImagePropertiesEXT&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCooperativeMatrixFeaturesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCooperativeMatrixFeaturesKHR&);
    

        void serialize_struct(json::map&, const VkCooperativeMatrixPropertiesKHR&);
        void deserialize_struct(const json::map&, VkCooperativeMatrixPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCooperativeMatrixPropertiesKHR&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCooperativeMatrixPropertiesKHR&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCubicClampFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCubicClampFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceYcbcrDegammaFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceYcbcrDegammaFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM&);
        void deserialize_struct(const json::map&, VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceCubicWeightsFeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceCubicWeightsFeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkSamplerCubicWeightsCreateInfoQCOM&);
        void deserialize_struct(const json::map&, VkSamplerCubicWeightsCreateInfoQCOM&);
    

        void serialize_struct(json::map&, const VkBlitImageCubicWeightsInfoQCOM&);
        void deserialize_struct(const json::map&, VkBlitImageCubicWeightsInfoQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageProcessing2FeaturesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageProcessing2FeaturesQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceImageProcessing2PropertiesQCOM&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceImageProcessing2PropertiesQCOM&);
    

        void serialize_struct(json::map&, const VkSamplerBlockMatchWindowCreateInfoQCOM&);
        void deserialize_struct(const json::map&, VkSamplerBlockMatchWindowCreateInfoQCOM&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV&);
    

        void serialize_struct(json::map&, const VkPhysicalDeviceLayeredDriverPropertiesMSFT&);
        void deserialize_struct(const json::map&, VkPhysicalDeviceLayeredDriverPropertiesMSFT&);
    
void serialize_PFN_vkInternalAllocationNotification(json::map&, const PFN_vkInternalAllocationNotification&);
void handle_PFN_vkInternalAllocationNotification(json::map&);
void deserialize_PFN_vkInternalAllocationNotification(const json::map&, PFN_vkInternalAllocationNotification&);
void serialize_PFN_vkInternalFreeNotification(json::map&, const PFN_vkInternalFreeNotification&);
void handle_PFN_vkInternalFreeNotification(json::map&);
void deserialize_PFN_vkInternalFreeNotification(const json::map&, PFN_vkInternalFreeNotification&);
void serialize_PFN_vkReallocationFunction(json::map&, const PFN_vkReallocationFunction&);
void handle_PFN_vkReallocationFunction(json::map&);
void deserialize_PFN_vkReallocationFunction(const json::map&, PFN_vkReallocationFunction&);
void serialize_PFN_vkAllocationFunction(json::map&, const PFN_vkAllocationFunction&);
void handle_PFN_vkAllocationFunction(json::map&);
void deserialize_PFN_vkAllocationFunction(const json::map&, PFN_vkAllocationFunction&);
void serialize_PFN_vkFreeFunction(json::map&, const PFN_vkFreeFunction&);
void handle_PFN_vkFreeFunction(json::map&);
void deserialize_PFN_vkFreeFunction(const json::map&, PFN_vkFreeFunction&);
void serialize_PFN_vkDebugReportCallbackEXT(json::map&, const PFN_vkDebugReportCallbackEXT&);
void handle_PFN_vkDebugReportCallbackEXT(json::map&);
void deserialize_PFN_vkDebugReportCallbackEXT(const json::map&, PFN_vkDebugReportCallbackEXT&);
void serialize_PFN_vkDebugUtilsMessengerCallbackEXT(json::map&, const PFN_vkDebugUtilsMessengerCallbackEXT&);
void handle_PFN_vkDebugUtilsMessengerCallbackEXT(json::map&);
void deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(const json::map&, PFN_vkDebugUtilsMessengerCallbackEXT&);
void serialize_PFN_vkDeviceMemoryReportCallbackEXT(json::map&, const PFN_vkDeviceMemoryReportCallbackEXT&);
void handle_PFN_vkDeviceMemoryReportCallbackEXT(json::map&);
void deserialize_PFN_vkDeviceMemoryReportCallbackEXT(const json::map&, PFN_vkDeviceMemoryReportCallbackEXT&);
void serialize_PFN_vkGetInstanceProcAddrLUNARG(json::map&, const PFN_vkGetInstanceProcAddrLUNARG&);
void deserialize_PFN_vkGetInstanceProcAddrLUNARG(const json::map&, PFN_vkGetInstanceProcAddrLUNARG&);
void serialize_VkInstance(json::value&, const VkInstance&);
void deserialize_VkInstance(const json::value&, VkInstance&);
void serialize_VkPhysicalDevice(json::value&, const VkPhysicalDevice&);
void deserialize_VkPhysicalDevice(const json::value&, VkPhysicalDevice&);
void serialize_VkDevice(json::value&, const VkDevice&);
void deserialize_VkDevice(const json::value&, VkDevice&);
void serialize_VkQueue(json::value&, const VkQueue&);
void deserialize_VkQueue(const json::value&, VkQueue&);
void serialize_VkCommandBuffer(json::value&, const VkCommandBuffer&);
void deserialize_VkCommandBuffer(const json::value&, VkCommandBuffer&);
void serialize_VkDeviceMemory(json::value&, const VkDeviceMemory&);
void deserialize_VkDeviceMemory(const json::value&, VkDeviceMemory&);
void serialize_VkCommandPool(json::value&, const VkCommandPool&);
void deserialize_VkCommandPool(const json::value&, VkCommandPool&);
void serialize_VkBuffer(json::value&, const VkBuffer&);
void deserialize_VkBuffer(const json::value&, VkBuffer&);
void serialize_VkBufferView(json::value&, const VkBufferView&);
void deserialize_VkBufferView(const json::value&, VkBufferView&);
void serialize_VkImage(json::value&, const VkImage&);
void deserialize_VkImage(const json::value&, VkImage&);
void serialize_VkImageView(json::value&, const VkImageView&);
void deserialize_VkImageView(const json::value&, VkImageView&);
void serialize_VkShaderModule(json::value&, const VkShaderModule&);
void deserialize_VkShaderModule(const json::value&, VkShaderModule&);
void serialize_VkPipeline(json::value&, const VkPipeline&);
void deserialize_VkPipeline(const json::value&, VkPipeline&);
void serialize_VkPipelineLayout(json::value&, const VkPipelineLayout&);
void deserialize_VkPipelineLayout(const json::value&, VkPipelineLayout&);
void serialize_VkSampler(json::value&, const VkSampler&);
void deserialize_VkSampler(const json::value&, VkSampler&);
void serialize_VkDescriptorSet(json::value&, const VkDescriptorSet&);
void deserialize_VkDescriptorSet(const json::value&, VkDescriptorSet&);
void serialize_VkDescriptorSetLayout(json::value&, const VkDescriptorSetLayout&);
void deserialize_VkDescriptorSetLayout(const json::value&, VkDescriptorSetLayout&);
void serialize_VkDescriptorPool(json::value&, const VkDescriptorPool&);
void deserialize_VkDescriptorPool(const json::value&, VkDescriptorPool&);
void serialize_VkFence(json::value&, const VkFence&);
void deserialize_VkFence(const json::value&, VkFence&);
void serialize_VkSemaphore(json::value&, const VkSemaphore&);
void deserialize_VkSemaphore(const json::value&, VkSemaphore&);
void serialize_VkEvent(json::value&, const VkEvent&);
void deserialize_VkEvent(const json::value&, VkEvent&);
void serialize_VkQueryPool(json::value&, const VkQueryPool&);
void deserialize_VkQueryPool(const json::value&, VkQueryPool&);
void serialize_VkFramebuffer(json::value&, const VkFramebuffer&);
void deserialize_VkFramebuffer(const json::value&, VkFramebuffer&);
void serialize_VkRenderPass(json::value&, const VkRenderPass&);
void deserialize_VkRenderPass(const json::value&, VkRenderPass&);
void serialize_VkPipelineCache(json::value&, const VkPipelineCache&);
void deserialize_VkPipelineCache(const json::value&, VkPipelineCache&);
void serialize_VkIndirectCommandsLayoutNV(json::value&, const VkIndirectCommandsLayoutNV&);
void deserialize_VkIndirectCommandsLayoutNV(const json::value&, VkIndirectCommandsLayoutNV&);
void serialize_VkDescriptorUpdateTemplate(json::value&, const VkDescriptorUpdateTemplate&);
void deserialize_VkDescriptorUpdateTemplate(const json::value&, VkDescriptorUpdateTemplate&);
void serialize_VkDescriptorUpdateTemplateKHR(json::value&, const VkDescriptorUpdateTemplateKHR&);
void deserialize_VkDescriptorUpdateTemplateKHR(const json::value&, VkDescriptorUpdateTemplateKHR&);
void serialize_VkSamplerYcbcrConversion(json::value&, const VkSamplerYcbcrConversion&);
void deserialize_VkSamplerYcbcrConversion(const json::value&, VkSamplerYcbcrConversion&);
void serialize_VkSamplerYcbcrConversionKHR(json::value&, const VkSamplerYcbcrConversionKHR&);
void deserialize_VkSamplerYcbcrConversionKHR(const json::value&, VkSamplerYcbcrConversionKHR&);
void serialize_VkValidationCacheEXT(json::value&, const VkValidationCacheEXT&);
void deserialize_VkValidationCacheEXT(const json::value&, VkValidationCacheEXT&);
void serialize_VkAccelerationStructureKHR(json::value&, const VkAccelerationStructureKHR&);
void deserialize_VkAccelerationStructureKHR(const json::value&, VkAccelerationStructureKHR&);
void serialize_VkAccelerationStructureNV(json::value&, const VkAccelerationStructureNV&);
void deserialize_VkAccelerationStructureNV(const json::value&, VkAccelerationStructureNV&);
void serialize_VkPerformanceConfigurationINTEL(json::value&, const VkPerformanceConfigurationINTEL&);
void deserialize_VkPerformanceConfigurationINTEL(const json::value&, VkPerformanceConfigurationINTEL&);
void serialize_VkDeferredOperationKHR(json::value&, const VkDeferredOperationKHR&);
void deserialize_VkDeferredOperationKHR(const json::value&, VkDeferredOperationKHR&);
void serialize_VkPrivateDataSlot(json::value&, const VkPrivateDataSlot&);
void deserialize_VkPrivateDataSlot(const json::value&, VkPrivateDataSlot&);
void serialize_VkPrivateDataSlotEXT(json::value&, const VkPrivateDataSlotEXT&);
void deserialize_VkPrivateDataSlotEXT(const json::value&, VkPrivateDataSlotEXT&);
void serialize_VkCuModuleNVX(json::value&, const VkCuModuleNVX&);
void deserialize_VkCuModuleNVX(const json::value&, VkCuModuleNVX&);
void serialize_VkCuFunctionNVX(json::value&, const VkCuFunctionNVX&);
void deserialize_VkCuFunctionNVX(const json::value&, VkCuFunctionNVX&);
void serialize_VkOpticalFlowSessionNV(json::value&, const VkOpticalFlowSessionNV&);
void deserialize_VkOpticalFlowSessionNV(const json::value&, VkOpticalFlowSessionNV&);
void serialize_VkMicromapEXT(json::value&, const VkMicromapEXT&);
void deserialize_VkMicromapEXT(const json::value&, VkMicromapEXT&);
void serialize_VkShaderEXT(json::value&, const VkShaderEXT&);
void deserialize_VkShaderEXT(const json::value&, VkShaderEXT&);
void serialize_VkDisplayKHR(json::value&, const VkDisplayKHR&);
void deserialize_VkDisplayKHR(const json::value&, VkDisplayKHR&);
void serialize_VkDisplayModeKHR(json::value&, const VkDisplayModeKHR&);
void deserialize_VkDisplayModeKHR(const json::value&, VkDisplayModeKHR&);
void serialize_VkSurfaceKHR(json::value&, const VkSurfaceKHR&);
void deserialize_VkSurfaceKHR(const json::value&, VkSurfaceKHR&);
void serialize_VkSwapchainKHR(json::value&, const VkSwapchainKHR&);
void deserialize_VkSwapchainKHR(const json::value&, VkSwapchainKHR&);
void serialize_VkDebugReportCallbackEXT(json::value&, const VkDebugReportCallbackEXT&);
void deserialize_VkDebugReportCallbackEXT(const json::value&, VkDebugReportCallbackEXT&);
void serialize_VkDebugUtilsMessengerEXT(json::value&, const VkDebugUtilsMessengerEXT&);
void deserialize_VkDebugUtilsMessengerEXT(const json::value&, VkDebugUtilsMessengerEXT&);
void serialize_VkVideoSessionKHR(json::value&, const VkVideoSessionKHR&);
void deserialize_VkVideoSessionKHR(const json::value&, VkVideoSessionKHR&);
void serialize_VkVideoSessionParametersKHR(json::value&, const VkVideoSessionParametersKHR&);
void deserialize_VkVideoSessionParametersKHR(const json::value&, VkVideoSessionParametersKHR&);
