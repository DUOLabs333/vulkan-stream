#include <vulkan/vulkan.h>

typedef struct StreamStructure{
    VkStructureType sType;
    const void* pNext;
} StreamStructure;


enum StreamType {
SYNC = 0,

PFN_VKINTERNALALLOCATIONNOTIFICATION=672,
PFN_VKINTERNALFREENOTIFICATION=673,
PFN_VKREALLOCATIONFUNCTION=674,
PFN_VKALLOCATIONFUNCTION=675,
PFN_VKFREEFUNCTION=676,
PFN_VKVOIDFUNCTION=677,
PFN_VKDEBUGREPORTCALLBACKEXT=678,
PFN_VKDEBUGUTILSMESSENGERCALLBACKEXT=679,
PFN_VKDEVICEMEMORYREPORTCALLBACKEXT=681,
PFN_VKGETINSTANCEPROCADDRLUNARG=682,
VKCREATEINSTANCE=1950,
VKDESTROYINSTANCE=1951,
VKENUMERATEPHYSICALDEVICES=1952,
VKGETDEVICEPROCADDR=1953,
VKGETINSTANCEPROCADDR=1954,
VKGETPHYSICALDEVICEPROPERTIES=1955,
VKGETPHYSICALDEVICEQUEUEFAMILYPROPERTIES=1956,
VKGETPHYSICALDEVICEMEMORYPROPERTIES=1957,
VKGETPHYSICALDEVICEFEATURES=1958,
VKGETPHYSICALDEVICEFORMATPROPERTIES=1959,
VKGETPHYSICALDEVICEIMAGEFORMATPROPERTIES=1960,
VKCREATEDEVICE=1962,
VKDESTROYDEVICE=1963,
VKENUMERATEINSTANCEVERSION=1964,
VKENUMERATEINSTANCELAYERPROPERTIES=1965,
VKENUMERATEINSTANCEEXTENSIONPROPERTIES=1966,
VKENUMERATEDEVICELAYERPROPERTIES=1968,
VKENUMERATEDEVICEEXTENSIONPROPERTIES=1969,
VKGETDEVICEQUEUE=1970,
VKQUEUESUBMIT=1971,
VKQUEUEWAITIDLE=1972,
VKDEVICEWAITIDLE=1973,
VKALLOCATEMEMORY=1974,
VKFREEMEMORY=1975,
VKMAPMEMORY=1976,
VKUNMAPMEMORY=1977,
VKFLUSHMAPPEDMEMORYRANGES=1978,
VKINVALIDATEMAPPEDMEMORYRANGES=1979,
VKGETDEVICEMEMORYCOMMITMENT=1980,
VKGETBUFFERMEMORYREQUIREMENTS=1981,
VKBINDBUFFERMEMORY=1982,
VKGETIMAGEMEMORYREQUIREMENTS=1983,
VKBINDIMAGEMEMORY=1984,
VKGETIMAGESPARSEMEMORYREQUIREMENTS=1985,
VKGETPHYSICALDEVICESPARSEIMAGEFORMATPROPERTIES=1986,
VKQUEUEBINDSPARSE=1987,
VKCREATEFENCE=1988,
VKDESTROYFENCE=1989,
VKRESETFENCES=1990,
VKGETFENCESTATUS=1991,
VKWAITFORFENCES=1992,
VKCREATESEMAPHORE=1993,
VKDESTROYSEMAPHORE=1994,
VKCREATEEVENT=1995,
VKDESTROYEVENT=1996,
VKGETEVENTSTATUS=1997,
VKSETEVENT=1998,
VKRESETEVENT=1999,
VKCREATEQUERYPOOL=2000,
VKDESTROYQUERYPOOL=2001,
VKGETQUERYPOOLRESULTS=2002,
VKRESETQUERYPOOL=2003,
VKRESETQUERYPOOLEXT=2004,
VKCREATEBUFFER=2005,
VKDESTROYBUFFER=2006,
VKCREATEBUFFERVIEW=2007,
VKDESTROYBUFFERVIEW=2008,
VKCREATEIMAGE=2009,
VKDESTROYIMAGE=2010,
VKGETIMAGESUBRESOURCELAYOUT=2011,
VKCREATEIMAGEVIEW=2012,
VKDESTROYIMAGEVIEW=2013,
VKCREATESHADERMODULE=2014,
VKDESTROYSHADERMODULE=2015,
VKCREATEPIPELINECACHE=2017,
VKDESTROYPIPELINECACHE=2018,
VKGETPIPELINECACHEDATA=2019,
VKMERGEPIPELINECACHES=2020,
VKCREATEGRAPHICSPIPELINES=2022,
VKCREATECOMPUTEPIPELINES=2024,
VKGETDEVICESUBPASSSHADINGMAXWORKGROUPSIZEHUAWEI=2025,
VKDESTROYPIPELINE=2026,
VKCREATEPIPELINELAYOUT=2027,
VKDESTROYPIPELINELAYOUT=2028,
VKCREATESAMPLER=2029,
VKDESTROYSAMPLER=2030,
VKCREATEDESCRIPTORSETLAYOUT=2031,
VKDESTROYDESCRIPTORSETLAYOUT=2032,
VKCREATEDESCRIPTORPOOL=2033,
VKDESTROYDESCRIPTORPOOL=2034,
VKRESETDESCRIPTORPOOL=2035,
VKALLOCATEDESCRIPTORSETS=2036,
VKFREEDESCRIPTORSETS=2037,
VKUPDATEDESCRIPTORSETS=2038,
VKCREATEFRAMEBUFFER=2039,
VKDESTROYFRAMEBUFFER=2040,
VKCREATERENDERPASS=2041,
VKDESTROYRENDERPASS=2042,
VKGETRENDERAREAGRANULARITY=2043,
VKGETRENDERINGAREAGRANULARITYKHR=2044,
VKCREATECOMMANDPOOL=2045,
VKDESTROYCOMMANDPOOL=2046,
VKRESETCOMMANDPOOL=2047,
VKALLOCATECOMMANDBUFFERS=2048,
VKFREECOMMANDBUFFERS=2049,
VKBEGINCOMMANDBUFFER=2050,
VKENDCOMMANDBUFFER=2051,
VKRESETCOMMANDBUFFER=2052,
VKCMDBINDPIPELINE=2053,
VKCMDSETATTACHMENTFEEDBACKLOOPENABLEEXT=2054,
VKCMDSETVIEWPORT=2055,
VKCMDSETSCISSOR=2056,
VKCMDSETLINEWIDTH=2057,
VKCMDSETDEPTHBIAS=2058,
VKCMDSETBLENDCONSTANTS=2059,
VKCMDSETDEPTHBOUNDS=2060,
VKCMDSETSTENCILCOMPAREMASK=2061,
VKCMDSETSTENCILWRITEMASK=2062,
VKCMDSETSTENCILREFERENCE=2063,
VKCMDBINDDESCRIPTORSETS=2064,
VKCMDBINDINDEXBUFFER=2065,
VKCMDBINDVERTEXBUFFERS=2066,
VKCMDDRAW=2067,
VKCMDDRAWINDEXED=2068,
VKCMDDRAWMULTIEXT=2069,
VKCMDDRAWMULTIINDEXEDEXT=2070,
VKCMDDRAWINDIRECT=2071,
VKCMDDRAWINDEXEDINDIRECT=2072,
VKCMDDISPATCH=2073,
VKCMDDISPATCHINDIRECT=2074,
VKCMDSUBPASSSHADINGHUAWEI=2075,
VKCMDDRAWCLUSTERHUAWEI=2076,
VKCMDDRAWCLUSTERINDIRECTHUAWEI=2077,
VKCMDUPDATEPIPELINEINDIRECTBUFFERNV=2078,
VKCMDCOPYBUFFER=2079,
VKCMDCOPYIMAGE=2080,
VKCMDBLITIMAGE=2081,
VKCMDCOPYBUFFERTOIMAGE=2082,
VKCMDCOPYIMAGETOBUFFER=2083,
VKCMDCOPYMEMORYINDIRECTNV=2084,
VKCMDCOPYMEMORYTOIMAGEINDIRECTNV=2085,
VKCMDUPDATEBUFFER=2086,
VKCMDFILLBUFFER=2087,
VKCMDCLEARCOLORIMAGE=2088,
VKCMDCLEARDEPTHSTENCILIMAGE=2089,
VKCMDCLEARATTACHMENTS=2090,
VKCMDRESOLVEIMAGE=2091,
VKCMDSETEVENT=2092,
VKCMDRESETEVENT=2093,
VKCMDWAITEVENTS=2094,
VKCMDPIPELINEBARRIER=2095,
VKCMDBEGINQUERY=2096,
VKCMDENDQUERY=2097,
VKCMDBEGINCONDITIONALRENDERINGEXT=2098,
VKCMDENDCONDITIONALRENDERINGEXT=2099,
VKCMDRESETQUERYPOOL=2100,
VKCMDWRITETIMESTAMP=2101,
VKCMDCOPYQUERYPOOLRESULTS=2102,
VKCMDPUSHCONSTANTS=2103,
VKCMDBEGINRENDERPASS=2104,
VKCMDNEXTSUBPASS=2105,
VKCMDENDRENDERPASS=2106,
VKCMDEXECUTECOMMANDS=2107,
VKGETPHYSICALDEVICEDISPLAYPROPERTIESKHR=2109,
VKGETPHYSICALDEVICEDISPLAYPLANEPROPERTIESKHR=2110,
VKGETDISPLAYPLANESUPPORTEDDISPLAYSKHR=2111,
VKGETDISPLAYMODEPROPERTIESKHR=2112,
VKCREATEDISPLAYMODEKHR=2113,
VKGETDISPLAYPLANECAPABILITIESKHR=2114,
VKCREATEDISPLAYPLANESURFACEKHR=2115,
VKCREATESHAREDSWAPCHAINSKHR=2116,
VKDESTROYSURFACEKHR=2117,
VKGETPHYSICALDEVICESURFACESUPPORTKHR=2118,
VKGETPHYSICALDEVICESURFACECAPABILITIESKHR=2119,
VKGETPHYSICALDEVICESURFACEFORMATSKHR=2120,
VKGETPHYSICALDEVICESURFACEPRESENTMODESKHR=2121,
VKCREATESWAPCHAINKHR=2122,
VKDESTROYSWAPCHAINKHR=2123,
VKGETSWAPCHAINIMAGESKHR=2124,
VKACQUIRENEXTIMAGEKHR=2125,
VKQUEUEPRESENTKHR=2126,
VKCREATEXLIBSURFACEKHR=2132,
VKGETPHYSICALDEVICEXLIBPRESENTATIONSUPPORTKHR=2133,
VKCREATEXCBSURFACEKHR=2134,
VKGETPHYSICALDEVICEXCBPRESENTATIONSUPPORTKHR=2135,
VKCREATEDEBUGREPORTCALLBACKEXT=2142,
VKDESTROYDEBUGREPORTCALLBACKEXT=2143,
VKDEBUGREPORTMESSAGEEXT=2144,
VKDEBUGMARKERSETOBJECTNAMEEXT=2145,
VKDEBUGMARKERSETOBJECTTAGEXT=2146,
VKCMDDEBUGMARKERBEGINEXT=2147,
VKCMDDEBUGMARKERENDEXT=2148,
VKCMDDEBUGMARKERINSERTEXT=2149,
VKGETPHYSICALDEVICEEXTERNALIMAGEFORMATPROPERTIESNV=2150,
VKCMDEXECUTEGENERATEDCOMMANDSNV=2152,
VKCMDPREPROCESSGENERATEDCOMMANDSNV=2153,
VKCMDBINDPIPELINESHADERGROUPNV=2154,
VKGETGENERATEDCOMMANDSMEMORYREQUIREMENTSNV=2155,
VKCREATEINDIRECTCOMMANDSLAYOUTNV=2156,
VKDESTROYINDIRECTCOMMANDSLAYOUTNV=2157,
VKGETPHYSICALDEVICEFEATURES2=2158,
VKGETPHYSICALDEVICEFEATURES2KHR=2159,
VKGETPHYSICALDEVICEPROPERTIES2=2160,
VKGETPHYSICALDEVICEPROPERTIES2KHR=2161,
VKGETPHYSICALDEVICEFORMATPROPERTIES2=2162,
VKGETPHYSICALDEVICEFORMATPROPERTIES2KHR=2163,
VKGETPHYSICALDEVICEIMAGEFORMATPROPERTIES2=2164,
VKGETPHYSICALDEVICEIMAGEFORMATPROPERTIES2KHR=2165,
VKGETPHYSICALDEVICEQUEUEFAMILYPROPERTIES2=2166,
VKGETPHYSICALDEVICEQUEUEFAMILYPROPERTIES2KHR=2167,
VKGETPHYSICALDEVICEMEMORYPROPERTIES2=2168,
VKGETPHYSICALDEVICEMEMORYPROPERTIES2KHR=2169,
VKGETPHYSICALDEVICESPARSEIMAGEFORMATPROPERTIES2=2170,
VKGETPHYSICALDEVICESPARSEIMAGEFORMATPROPERTIES2KHR=2171,
VKCMDPUSHDESCRIPTORSETKHR=2172,
VKTRIMCOMMANDPOOL=2173,
VKTRIMCOMMANDPOOLKHR=2174,
VKGETPHYSICALDEVICEEXTERNALBUFFERPROPERTIES=2175,
VKGETPHYSICALDEVICEEXTERNALBUFFERPROPERTIESKHR=2176,
VKGETMEMORYFDKHR=2179,
VKGETMEMORYFDPROPERTIESKHR=2180,
VKGETMEMORYREMOTEADDRESSNV=2183,
VKGETPHYSICALDEVICEEXTERNALSEMAPHOREPROPERTIES=2187,
VKGETPHYSICALDEVICEEXTERNALSEMAPHOREPROPERTIESKHR=2188,
VKGETSEMAPHOREFDKHR=2191,
VKIMPORTSEMAPHOREFDKHR=2192,
VKGETPHYSICALDEVICEEXTERNALFENCEPROPERTIES=2195,
VKGETPHYSICALDEVICEEXTERNALFENCEPROPERTIESKHR=2196,
VKGETFENCEFDKHR=2199,
VKIMPORTFENCEFDKHR=2200,
VKRELEASEDISPLAYEXT=2210,
VKDISPLAYPOWERCONTROLEXT=2215,
VKREGISTERDEVICEEVENTEXT=2216,
VKREGISTERDISPLAYEVENTEXT=2217,
VKGETSWAPCHAINCOUNTEREXT=2218,
VKGETPHYSICALDEVICESURFACECAPABILITIES2EXT=2219,
VKENUMERATEPHYSICALDEVICEGROUPS=2220,
VKENUMERATEPHYSICALDEVICEGROUPSKHR=2221,
VKGETDEVICEGROUPPEERMEMORYFEATURES=2222,
VKGETDEVICEGROUPPEERMEMORYFEATURESKHR=2223,
VKBINDBUFFERMEMORY2=2224,
VKBINDBUFFERMEMORY2KHR=2225,
VKBINDIMAGEMEMORY2=2226,
VKBINDIMAGEMEMORY2KHR=2227,
VKCMDSETDEVICEMASK=2228,
VKCMDSETDEVICEMASKKHR=2229,
VKGETDEVICEGROUPPRESENTCAPABILITIESKHR=2230,
VKGETDEVICEGROUPSURFACEPRESENTMODESKHR=2231,
VKACQUIRENEXTIMAGE2KHR=2232,
VKCMDDISPATCHBASE=2233,
VKCMDDISPATCHBASEKHR=2234,
VKGETPHYSICALDEVICEPRESENTRECTANGLESKHR=2235,
VKCREATEDESCRIPTORUPDATETEMPLATE=2236,
VKCREATEDESCRIPTORUPDATETEMPLATEKHR=2237,
VKDESTROYDESCRIPTORUPDATETEMPLATE=2238,
VKDESTROYDESCRIPTORUPDATETEMPLATEKHR=2239,
VKUPDATEDESCRIPTORSETWITHTEMPLATE=2240,
VKUPDATEDESCRIPTORSETWITHTEMPLATEKHR=2241,
VKCMDPUSHDESCRIPTORSETWITHTEMPLATEKHR=2242,
VKSETHDRMETADATAEXT=2243,
VKGETSWAPCHAINSTATUSKHR=2244,
VKGETREFRESHCYCLEDURATIONGOOGLE=2245,
VKGETPASTPRESENTATIONTIMINGGOOGLE=2246,
VKCMDSETVIEWPORTWSCALINGNV=2250,
VKCMDSETDISCARDRECTANGLEEXT=2251,
VKCMDSETDISCARDRECTANGLEENABLEEXT=2252,
VKCMDSETDISCARDRECTANGLEMODEEXT=2253,
VKCMDSETSAMPLELOCATIONSEXT=2254,
VKGETPHYSICALDEVICEMULTISAMPLEPROPERTIESEXT=2255,
VKGETPHYSICALDEVICESURFACECAPABILITIES2KHR=2256,
VKGETPHYSICALDEVICESURFACEFORMATS2KHR=2257,
VKGETPHYSICALDEVICEDISPLAYPROPERTIES2KHR=2258,
VKGETPHYSICALDEVICEDISPLAYPLANEPROPERTIES2KHR=2259,
VKGETDISPLAYMODEPROPERTIES2KHR=2260,
VKGETDISPLAYPLANECAPABILITIES2KHR=2261,
VKGETBUFFERMEMORYREQUIREMENTS2=2262,
VKGETBUFFERMEMORYREQUIREMENTS2KHR=2263,
VKGETIMAGEMEMORYREQUIREMENTS2=2264,
VKGETIMAGEMEMORYREQUIREMENTS2KHR=2265,
VKGETIMAGESPARSEMEMORYREQUIREMENTS2=2266,
VKGETIMAGESPARSEMEMORYREQUIREMENTS2KHR=2267,
VKGETDEVICEBUFFERMEMORYREQUIREMENTS=2268,
VKGETDEVICEBUFFERMEMORYREQUIREMENTSKHR=2269,
VKGETDEVICEIMAGEMEMORYREQUIREMENTS=2270,
VKGETDEVICEIMAGEMEMORYREQUIREMENTSKHR=2271,
VKGETDEVICEIMAGESPARSEMEMORYREQUIREMENTS=2272,
VKGETDEVICEIMAGESPARSEMEMORYREQUIREMENTSKHR=2273,
VKCREATESAMPLERYCBCRCONVERSION=2274,
VKCREATESAMPLERYCBCRCONVERSIONKHR=2275,
VKDESTROYSAMPLERYCBCRCONVERSION=2276,
VKDESTROYSAMPLERYCBCRCONVERSIONKHR=2277,
VKGETDEVICEQUEUE2=2278,
VKCREATEVALIDATIONCACHEEXT=2279,
VKDESTROYVALIDATIONCACHEEXT=2280,
VKGETVALIDATIONCACHEDATAEXT=2281,
VKMERGEVALIDATIONCACHESEXT=2282,
VKGETDESCRIPTORSETLAYOUTSUPPORT=2283,
VKGETDESCRIPTORSETLAYOUTSUPPORTKHR=2284,
VKGETSHADERINFOAMD=2289,
VKSETLOCALDIMMINGAMD=2290,
VKGETPHYSICALDEVICECALIBRATEABLETIMEDOMAINSEXT=2291,
VKGETCALIBRATEDTIMESTAMPSEXT=2292,
VKSETDEBUGUTILSOBJECTNAMEEXT=2293,
VKSETDEBUGUTILSOBJECTTAGEXT=2294,
VKQUEUEBEGINDEBUGUTILSLABELEXT=2295,
VKQUEUEENDDEBUGUTILSLABELEXT=2296,
VKQUEUEINSERTDEBUGUTILSLABELEXT=2297,
VKCMDBEGINDEBUGUTILSLABELEXT=2298,
VKCMDENDDEBUGUTILSLABELEXT=2299,
VKCMDINSERTDEBUGUTILSLABELEXT=2300,
VKCREATEDEBUGUTILSMESSENGEREXT=2301,
VKDESTROYDEBUGUTILSMESSENGEREXT=2302,
VKSUBMITDEBUGUTILSMESSAGEEXT=2303,
VKGETMEMORYHOSTPOINTERPROPERTIESEXT=2304,
VKCMDWRITEBUFFERMARKERAMD=2305,
VKCREATERENDERPASS2=2306,
VKCREATERENDERPASS2KHR=2307,
VKCMDBEGINRENDERPASS2=2308,
VKCMDBEGINRENDERPASS2KHR=2309,
VKCMDNEXTSUBPASS2=2310,
VKCMDNEXTSUBPASS2KHR=2311,
VKCMDENDRENDERPASS2=2312,
VKCMDENDRENDERPASS2KHR=2313,
VKGETSEMAPHORECOUNTERVALUE=2314,
VKGETSEMAPHORECOUNTERVALUEKHR=2315,
VKWAITSEMAPHORES=2316,
VKWAITSEMAPHORESKHR=2317,
VKSIGNALSEMAPHORE=2318,
VKSIGNALSEMAPHOREKHR=2319,
VKCMDDRAWINDIRECTCOUNT=2322,
VKCMDDRAWINDIRECTCOUNTKHR=2323,
VKCMDDRAWINDIRECTCOUNTAMD=2324,
VKCMDDRAWINDEXEDINDIRECTCOUNT=2325,
VKCMDDRAWINDEXEDINDIRECTCOUNTKHR=2326,
VKCMDDRAWINDEXEDINDIRECTCOUNTAMD=2327,
VKCMDSETCHECKPOINTNV=2328,
VKGETQUEUECHECKPOINTDATANV=2329,
VKCMDBINDTRANSFORMFEEDBACKBUFFERSEXT=2330,
VKCMDBEGINTRANSFORMFEEDBACKEXT=2331,
VKCMDENDTRANSFORMFEEDBACKEXT=2332,
VKCMDBEGINQUERYINDEXEDEXT=2333,
VKCMDENDQUERYINDEXEDEXT=2334,
VKCMDDRAWINDIRECTBYTECOUNTEXT=2335,
VKCMDSETEXCLUSIVESCISSORNV=2336,
VKCMDSETEXCLUSIVESCISSORENABLENV=2337,
VKCMDBINDSHADINGRATEIMAGENV=2338,
VKCMDSETVIEWPORTSHADINGRATEPALETTENV=2339,
VKCMDSETCOARSESAMPLEORDERNV=2340,
VKCMDDRAWMESHTASKSNV=2341,
VKCMDDRAWMESHTASKSINDIRECTNV=2342,
VKCMDDRAWMESHTASKSINDIRECTCOUNTNV=2343,
VKCMDDRAWMESHTASKSEXT=2344,
VKCMDDRAWMESHTASKSINDIRECTEXT=2345,
VKCMDDRAWMESHTASKSINDIRECTCOUNTEXT=2346,
VKCOMPILEDEFERREDNV=2347,
VKCREATEACCELERATIONSTRUCTURENV=2348,
VKCMDBINDINVOCATIONMASKHUAWEI=2349,
VKDESTROYACCELERATIONSTRUCTUREKHR=2350,
VKDESTROYACCELERATIONSTRUCTURENV=2351,
VKGETACCELERATIONSTRUCTUREMEMORYREQUIREMENTSNV=2352,
VKBINDACCELERATIONSTRUCTUREMEMORYNV=2353,
VKCMDCOPYACCELERATIONSTRUCTURENV=2354,
VKCMDCOPYACCELERATIONSTRUCTUREKHR=2355,
VKCOPYACCELERATIONSTRUCTUREKHR=2356,
VKCMDCOPYACCELERATIONSTRUCTURETOMEMORYKHR=2357,
VKCOPYACCELERATIONSTRUCTURETOMEMORYKHR=2358,
VKCMDCOPYMEMORYTOACCELERATIONSTRUCTUREKHR=2359,
VKCOPYMEMORYTOACCELERATIONSTRUCTUREKHR=2360,
VKCMDWRITEACCELERATIONSTRUCTURESPROPERTIESKHR=2361,
VKCMDWRITEACCELERATIONSTRUCTURESPROPERTIESNV=2362,
VKCMDBUILDACCELERATIONSTRUCTURENV=2363,
VKWRITEACCELERATIONSTRUCTURESPROPERTIESKHR=2364,
VKCMDTRACERAYSKHR=2365,
VKCMDTRACERAYSNV=2366,
VKGETRAYTRACINGSHADERGROUPHANDLESKHR=2367,
VKGETRAYTRACINGSHADERGROUPHANDLESNV=2368,
VKGETRAYTRACINGCAPTUREREPLAYSHADERGROUPHANDLESKHR=2369,
VKGETACCELERATIONSTRUCTUREHANDLENV=2370,
VKCREATERAYTRACINGPIPELINESNV=2372,
VKCREATERAYTRACINGPIPELINESKHR=2374,
VKGETPHYSICALDEVICECOOPERATIVEMATRIXPROPERTIESNV=2375,
VKCMDTRACERAYSINDIRECTKHR=2376,
VKCMDTRACERAYSINDIRECT2KHR=2377,
VKGETDEVICEACCELERATIONSTRUCTURECOMPATIBILITYKHR=2378,
VKGETRAYTRACINGSHADERGROUPSTACKSIZEKHR=2379,
VKCMDSETRAYTRACINGPIPELINESTACKSIZEKHR=2380,
VKGETIMAGEVIEWHANDLENVX=2381,
VKGETIMAGEVIEWADDRESSNVX=2382,
VKENUMERATEPHYSICALDEVICEQUEUEFAMILYPERFORMANCEQUERYCOUNTERSKHR=2387,
VKGETPHYSICALDEVICEQUEUEFAMILYPERFORMANCEQUERYPASSESKHR=2388,
VKACQUIREPROFILINGLOCKKHR=2389,
VKRELEASEPROFILINGLOCKKHR=2390,
VKGETIMAGEDRMFORMATMODIFIERPROPERTIESEXT=2391,
VKGETBUFFEROPAQUECAPTUREADDRESS=2392,
VKGETBUFFEROPAQUECAPTUREADDRESSKHR=2393,
VKGETBUFFERDEVICEADDRESS=2394,
VKGETBUFFERDEVICEADDRESSKHR=2395,
VKGETBUFFERDEVICEADDRESSEXT=2396,
VKCREATEHEADLESSSURFACEEXT=2397,
VKGETPHYSICALDEVICESUPPORTEDFRAMEBUFFERMIXEDSAMPLESCOMBINATIONSNV=2398,
VKINITIALIZEPERFORMANCEAPIINTEL=2399,
VKUNINITIALIZEPERFORMANCEAPIINTEL=2400,
VKCMDSETPERFORMANCEMARKERINTEL=2401,
VKCMDSETPERFORMANCESTREAMMARKERINTEL=2402,
VKCMDSETPERFORMANCEOVERRIDEINTEL=2403,
VKACQUIREPERFORMANCECONFIGURATIONINTEL=2404,
VKRELEASEPERFORMANCECONFIGURATIONINTEL=2405,
VKQUEUESETPERFORMANCECONFIGURATIONINTEL=2406,
VKGETPERFORMANCEPARAMETERINTEL=2407,
VKGETDEVICEMEMORYOPAQUECAPTUREADDRESS=2408,
VKGETDEVICEMEMORYOPAQUECAPTUREADDRESSKHR=2409,
VKGETPIPELINEEXECUTABLEPROPERTIESKHR=2410,
VKGETPIPELINEEXECUTABLESTATISTICSKHR=2411,
VKGETPIPELINEEXECUTABLEINTERNALREPRESENTATIONSKHR=2412,
VKCMDSETLINESTIPPLEEXT=2413,
VKGETPHYSICALDEVICETOOLPROPERTIES=2415,
VKGETPHYSICALDEVICETOOLPROPERTIESEXT=2416,
VKCREATEACCELERATIONSTRUCTUREKHR=2417,
VKCMDBUILDACCELERATIONSTRUCTURESKHR=2418,
VKCMDBUILDACCELERATIONSTRUCTURESINDIRECTKHR=2419,
VKBUILDACCELERATIONSTRUCTURESKHR=2420,
VKGETACCELERATIONSTRUCTUREDEVICEADDRESSKHR=2421,
VKCREATEDEFERREDOPERATIONKHR=2422,
VKDESTROYDEFERREDOPERATIONKHR=2423,
VKGETDEFERREDOPERATIONMAXCONCURRENCYKHR=2424,
VKGETDEFERREDOPERATIONRESULTKHR=2425,
VKDEFERREDOPERATIONJOINKHR=2426,
VKGETPIPELINEINDIRECTMEMORYREQUIREMENTSNV=2427,
VKGETPIPELINEINDIRECTDEVICEADDRESSNV=2428,
VKCMDSETCULLMODE=2429,
VKCMDSETCULLMODEEXT=2430,
VKCMDSETFRONTFACE=2431,
VKCMDSETFRONTFACEEXT=2432,
VKCMDSETPRIMITIVETOPOLOGY=2433,
VKCMDSETPRIMITIVETOPOLOGYEXT=2434,
VKCMDSETVIEWPORTWITHCOUNT=2435,
VKCMDSETVIEWPORTWITHCOUNTEXT=2436,
VKCMDSETSCISSORWITHCOUNT=2437,
VKCMDSETSCISSORWITHCOUNTEXT=2438,
VKCMDBINDINDEXBUFFER2KHR=2439,
VKCMDBINDVERTEXBUFFERS2=2440,
VKCMDBINDVERTEXBUFFERS2EXT=2441,
VKCMDSETDEPTHTESTENABLE=2442,
VKCMDSETDEPTHTESTENABLEEXT=2443,
VKCMDSETDEPTHWRITEENABLE=2444,
VKCMDSETDEPTHWRITEENABLEEXT=2445,
VKCMDSETDEPTHCOMPAREOP=2446,
VKCMDSETDEPTHCOMPAREOPEXT=2447,
VKCMDSETDEPTHBOUNDSTESTENABLE=2448,
VKCMDSETDEPTHBOUNDSTESTENABLEEXT=2449,
VKCMDSETSTENCILTESTENABLE=2450,
VKCMDSETSTENCILTESTENABLEEXT=2451,
VKCMDSETSTENCILOP=2452,
VKCMDSETSTENCILOPEXT=2453,
VKCMDSETPATCHCONTROLPOINTSEXT=2454,
VKCMDSETRASTERIZERDISCARDENABLE=2455,
VKCMDSETRASTERIZERDISCARDENABLEEXT=2456,
VKCMDSETDEPTHBIASENABLE=2457,
VKCMDSETDEPTHBIASENABLEEXT=2458,
VKCMDSETLOGICOPEXT=2459,
VKCMDSETPRIMITIVERESTARTENABLE=2460,
VKCMDSETPRIMITIVERESTARTENABLEEXT=2461,
VKCMDSETTESSELLATIONDOMAINORIGINEXT=2462,
VKCMDSETDEPTHCLAMPENABLEEXT=2463,
VKCMDSETPOLYGONMODEEXT=2464,
VKCMDSETRASTERIZATIONSAMPLESEXT=2465,
VKCMDSETSAMPLEMASKEXT=2466,
VKCMDSETALPHATOCOVERAGEENABLEEXT=2467,
VKCMDSETALPHATOONEENABLEEXT=2468,
VKCMDSETLOGICOPENABLEEXT=2469,
VKCMDSETCOLORBLENDENABLEEXT=2470,
VKCMDSETCOLORBLENDEQUATIONEXT=2471,
VKCMDSETCOLORWRITEMASKEXT=2472,
VKCMDSETRASTERIZATIONSTREAMEXT=2473,
VKCMDSETCONSERVATIVERASTERIZATIONMODEEXT=2474,
VKCMDSETEXTRAPRIMITIVEOVERESTIMATIONSIZEEXT=2475,
VKCMDSETDEPTHCLIPENABLEEXT=2476,
VKCMDSETSAMPLELOCATIONSENABLEEXT=2477,
VKCMDSETCOLORBLENDADVANCEDEXT=2478,
VKCMDSETPROVOKINGVERTEXMODEEXT=2479,
VKCMDSETLINERASTERIZATIONMODEEXT=2480,
VKCMDSETLINESTIPPLEENABLEEXT=2481,
VKCMDSETDEPTHCLIPNEGATIVEONETOONEEXT=2482,
VKCMDSETVIEWPORTWSCALINGENABLENV=2483,
VKCMDSETVIEWPORTSWIZZLENV=2484,
VKCMDSETCOVERAGETOCOLORENABLENV=2485,
VKCMDSETCOVERAGETOCOLORLOCATIONNV=2486,
VKCMDSETCOVERAGEMODULATIONMODENV=2487,
VKCMDSETCOVERAGEMODULATIONTABLEENABLENV=2488,
VKCMDSETCOVERAGEMODULATIONTABLENV=2489,
VKCMDSETSHADINGRATEIMAGEENABLENV=2490,
VKCMDSETCOVERAGEREDUCTIONMODENV=2491,
VKCMDSETREPRESENTATIVEFRAGMENTTESTENABLENV=2492,
VKCREATEPRIVATEDATASLOT=2493,
VKCREATEPRIVATEDATASLOTEXT=2494,
VKDESTROYPRIVATEDATASLOT=2495,
VKDESTROYPRIVATEDATASLOTEXT=2496,
VKSETPRIVATEDATA=2497,
VKSETPRIVATEDATAEXT=2498,
VKGETPRIVATEDATA=2499,
VKGETPRIVATEDATAEXT=2500,
VKCMDCOPYBUFFER2=2501,
VKCMDCOPYBUFFER2KHR=2502,
VKCMDCOPYIMAGE2=2503,
VKCMDCOPYIMAGE2KHR=2504,
VKCMDBLITIMAGE2=2505,
VKCMDBLITIMAGE2KHR=2506,
VKCMDCOPYBUFFERTOIMAGE2=2507,
VKCMDCOPYBUFFERTOIMAGE2KHR=2508,
VKCMDCOPYIMAGETOBUFFER2=2509,
VKCMDCOPYIMAGETOBUFFER2KHR=2510,
VKCMDRESOLVEIMAGE2=2511,
VKCMDRESOLVEIMAGE2KHR=2512,
VKCMDSETFRAGMENTSHADINGRATEKHR=2515,
VKGETPHYSICALDEVICEFRAGMENTSHADINGRATESKHR=2516,
VKCMDSETFRAGMENTSHADINGRATEENUMNV=2517,
VKGETACCELERATIONSTRUCTUREBUILDSIZESKHR=2518,
VKCMDSETVERTEXINPUTEXT=2519,
VKCMDSETCOLORWRITEENABLEEXT=2520,
VKCMDSETEVENT2=2521,
VKCMDSETEVENT2KHR=2522,
VKCMDRESETEVENT2=2523,
VKCMDRESETEVENT2KHR=2524,
VKCMDWAITEVENTS2=2525,
VKCMDWAITEVENTS2KHR=2526,
VKCMDPIPELINEBARRIER2=2527,
VKCMDPIPELINEBARRIER2KHR=2528,
VKQUEUESUBMIT2=2529,
VKQUEUESUBMIT2KHR=2530,
VKCMDWRITETIMESTAMP2=2531,
VKCMDWRITETIMESTAMP2KHR=2532,
VKCMDWRITEBUFFERMARKER2AMD=2533,
VKGETQUEUECHECKPOINTDATA2NV=2534,
VKCOPYMEMORYTOIMAGEEXT=2535,
VKCOPYIMAGETOMEMORYEXT=2536,
VKCOPYIMAGETOIMAGEEXT=2537,
VKTRANSITIONIMAGELAYOUTEXT=2538,
VKGETPHYSICALDEVICEVIDEOCAPABILITIESKHR=2540,
VKGETPHYSICALDEVICEVIDEOFORMATPROPERTIESKHR=2541,
VKCREATEVIDEOSESSIONKHR=2543,
VKDESTROYVIDEOSESSIONKHR=2544,
VKCREATEVIDEOSESSIONPARAMETERSKHR=2545,
VKUPDATEVIDEOSESSIONPARAMETERSKHR=2546,
VKDESTROYVIDEOSESSIONPARAMETERSKHR=2548,
VKGETVIDEOSESSIONMEMORYREQUIREMENTSKHR=2549,
VKBINDVIDEOSESSIONMEMORYKHR=2550,
VKCMDDECODEVIDEOKHR=2551,
VKCMDBEGINVIDEOCODINGKHR=2552,
VKCMDCONTROLVIDEOCODINGKHR=2553,
VKCMDENDVIDEOCODINGKHR=2554,
VKCMDDECOMPRESSMEMORYNV=2556,
VKCMDDECOMPRESSMEMORYINDIRECTCOUNTNV=2557,
VKCREATECUMODULENVX=2558,
VKCREATECUFUNCTIONNVX=2559,
VKDESTROYCUMODULENVX=2560,
VKDESTROYCUFUNCTIONNVX=2561,
VKCMDCULAUNCHKERNELNVX=2562,
VKGETDESCRIPTORSETLAYOUTSIZEEXT=2563,
VKGETDESCRIPTORSETLAYOUTBINDINGOFFSETEXT=2564,
VKGETDESCRIPTOREXT=2565,
VKCMDBINDDESCRIPTORBUFFERSEXT=2566,
VKCMDSETDESCRIPTORBUFFEROFFSETSEXT=2567,
VKCMDBINDDESCRIPTORBUFFEREMBEDDEDSAMPLERSEXT=2568,
VKGETBUFFEROPAQUECAPTUREDESCRIPTORDATAEXT=2569,
VKGETIMAGEOPAQUECAPTUREDESCRIPTORDATAEXT=2570,
VKGETIMAGEVIEWOPAQUECAPTUREDESCRIPTORDATAEXT=2571,
VKGETSAMPLEROPAQUECAPTUREDESCRIPTORDATAEXT=2572,
VKGETACCELERATIONSTRUCTUREOPAQUECAPTUREDESCRIPTORDATAEXT=2573,
VKSETDEVICEMEMORYPRIORITYEXT=2574,
VKACQUIREDRMDISPLAYEXT=2575,
VKGETDRMDISPLAYEXT=2576,
VKWAITFORPRESENTKHR=2577,
VKCMDBEGINRENDERING=2583,
VKCMDBEGINRENDERINGKHR=2584,
VKCMDENDRENDERING=2585,
VKCMDENDRENDERINGKHR=2586,
VKGETDESCRIPTORSETLAYOUTHOSTMAPPINGINFOVALVE=2587,
VKGETDESCRIPTORSETHOSTMAPPINGVALVE=2588,
VKCREATEMICROMAPEXT=2589,
VKCMDBUILDMICROMAPSEXT=2590,
VKBUILDMICROMAPSEXT=2591,
VKDESTROYMICROMAPEXT=2592,
VKCMDCOPYMICROMAPEXT=2593,
VKCOPYMICROMAPEXT=2594,
VKCMDCOPYMICROMAPTOMEMORYEXT=2595,
VKCOPYMICROMAPTOMEMORYEXT=2596,
VKCMDCOPYMEMORYTOMICROMAPEXT=2597,
VKCOPYMEMORYTOMICROMAPEXT=2598,
VKCMDWRITEMICROMAPSPROPERTIESEXT=2599,
VKWRITEMICROMAPSPROPERTIESEXT=2600,
VKGETDEVICEMICROMAPCOMPATIBILITYEXT=2601,
VKGETMICROMAPBUILDSIZESEXT=2602,
VKGETSHADERMODULEIDENTIFIEREXT=2603,
VKGETSHADERMODULECREATEINFOIDENTIFIEREXT=2604,
VKGETIMAGESUBRESOURCELAYOUT2KHR=2605,
VKGETIMAGESUBRESOURCELAYOUT2EXT=2606,
VKGETPIPELINEPROPERTIESEXT=2607,
VKGETFRAMEBUFFERTILEPROPERTIESQCOM=2609,
VKGETDYNAMICRENDERINGTILEPROPERTIESQCOM=2610,
VKGETPHYSICALDEVICEOPTICALFLOWIMAGEFORMATSNV=2611,
VKCREATEOPTICALFLOWSESSIONNV=2612,
VKDESTROYOPTICALFLOWSESSIONNV=2613,
VKBINDOPTICALFLOWSESSIONIMAGENV=2614,
VKCMDOPTICALFLOWEXECUTENV=2615,
VKGETDEVICEFAULTINFOEXT=2616,
VKCMDSETDEPTHBIAS2EXT=2617,
VKRELEASESWAPCHAINIMAGESEXT=2618,
VKGETDEVICEIMAGESUBRESOURCELAYOUTKHR=2619,
VKMAPMEMORY2KHR=2620,
VKUNMAPMEMORY2KHR=2621,
VKCREATESHADERSEXT=2622,
VKDESTROYSHADEREXT=2623,
VKGETSHADERBINARYDATAEXT=2624,
VKCMDBINDSHADERSEXT=2625,
VKGETPHYSICALDEVICECOOPERATIVEMATRIXPROPERTIESKHR=2627,
};

typedef simdjson::dom::element element;
typedef std::unordered_map<std::string_view, element> parsed_map;

parsed_map map_from(simdjson::dom::object object){
    parsed_map result;
    for(auto elem: object){
        result.emplace(std::make_pair(elem.key, elem.value));
    }
    return result;
}

template <typename T> T value_to(simdjson::dom::element elem){
    if (elem.is_uint64()){
        return static_cast<T>(elem.get_uint64());
    }else if (elem.is_int64()){
        return static_cast<T>(elem.get_int64());
    }else{
        return static_cast<T>(elem.get_double());
    }
}

template <> std::string_view value_to<std::string_view>(simdjson::dom::element elem){
    return elem.get_string().value();
}

template <typename T> std::vector<T> array_to(simdjson::dom::array arr){
    std::vector<T> result;
    result.reserve(arr.size());
    
    for(auto elem: arr){
        result.push_back(value_to<T>(elem));
    }
    
    return result;
}
        


typedef struct {
uintptr_t devicememory = 0;
uintptr_t mem;
std::vector<size_t> starts;
std::vector<size_t> lengths;
std::vector<uint64_t> hashes;
std::vector<std::string_view> buffers;
} Sync;

void serialize_Sync(boost::json::object&, Sync&);
void deserialize_Sync(parsed_map&, Sync&);

#include <debug.hpp>
typedef void* pNext;
void* memdup(const void* mem, size_t size);
void* copyVkStruct (const void* data);

        void serialize_struct(boost::json::object&, const VkBaseOutStructure&);
        void deserialize_struct(parsed_map&, VkBaseOutStructure&);
    

        void serialize_struct(boost::json::object&, const VkBaseInStructure&);
        void deserialize_struct(parsed_map&, VkBaseInStructure&);
    

        void serialize_struct(boost::json::object&, const VkOffset2D&);
        void deserialize_struct(parsed_map&, VkOffset2D&);
    

        void serialize_struct(boost::json::object&, const VkOffset3D&);
        void deserialize_struct(parsed_map&, VkOffset3D&);
    

        void serialize_struct(boost::json::object&, const VkExtent2D&);
        void deserialize_struct(parsed_map&, VkExtent2D&);
    

        void serialize_struct(boost::json::object&, const VkExtent3D&);
        void deserialize_struct(parsed_map&, VkExtent3D&);
    

        void serialize_struct(boost::json::object&, const VkViewport&);
        void deserialize_struct(parsed_map&, VkViewport&);
    

        void serialize_struct(boost::json::object&, const VkRect2D&);
        void deserialize_struct(parsed_map&, VkRect2D&);
    

        void serialize_struct(boost::json::object&, const VkClearRect&);
        void deserialize_struct(parsed_map&, VkClearRect&);
    

        void serialize_struct(boost::json::object&, const VkComponentMapping&);
        void deserialize_struct(parsed_map&, VkComponentMapping&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceProperties&);
    

        void serialize_struct(boost::json::object&, const VkExtensionProperties&);
        void deserialize_struct(parsed_map&, VkExtensionProperties&);
    

        void serialize_struct(boost::json::object&, const VkLayerProperties&);
        void deserialize_struct(parsed_map&, VkLayerProperties&);
    

        void serialize_struct(boost::json::object&, const VkApplicationInfo&);
        void deserialize_struct(parsed_map&, VkApplicationInfo&);
    

        void serialize_struct(boost::json::object&, const VkAllocationCallbacks&);
        void deserialize_struct(parsed_map&, VkAllocationCallbacks&);
    

        void serialize_struct(boost::json::object&, const VkDeviceQueueCreateInfo&);
        void deserialize_struct(parsed_map&, VkDeviceQueueCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceCreateInfo&);
        void deserialize_struct(parsed_map&, VkDeviceCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkInstanceCreateInfo&);
        void deserialize_struct(parsed_map&, VkInstanceCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkQueueFamilyProperties&);
        void deserialize_struct(parsed_map&, VkQueueFamilyProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMemoryProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMemoryProperties&);
    

        void serialize_struct(boost::json::object&, const VkMemoryAllocateInfo&);
        void deserialize_struct(parsed_map&, VkMemoryAllocateInfo&);
    

        void serialize_struct(boost::json::object&, const VkMemoryRequirements&);
        void deserialize_struct(parsed_map&, VkMemoryRequirements&);
    

        void serialize_struct(boost::json::object&, const VkSparseImageFormatProperties&);
        void deserialize_struct(parsed_map&, VkSparseImageFormatProperties&);
    

        void serialize_struct(boost::json::object&, const VkSparseImageMemoryRequirements&);
        void deserialize_struct(parsed_map&, VkSparseImageMemoryRequirements&);
    

        void serialize_struct(boost::json::object&, const VkMemoryType&);
        void deserialize_struct(parsed_map&, VkMemoryType&);
    

        void serialize_struct(boost::json::object&, const VkMemoryHeap&);
        void deserialize_struct(parsed_map&, VkMemoryHeap&);
    

        void serialize_struct(boost::json::object&, const VkMappedMemoryRange&);
        void deserialize_struct(parsed_map&, VkMappedMemoryRange&);
    

        void serialize_struct(boost::json::object&, const VkFormatProperties&);
        void deserialize_struct(parsed_map&, VkFormatProperties&);
    

        void serialize_struct(boost::json::object&, const VkImageFormatProperties&);
        void deserialize_struct(parsed_map&, VkImageFormatProperties&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorBufferInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorBufferInfo&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorImageInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorImageInfo&);
    

        void serialize_struct(boost::json::object&, const VkWriteDescriptorSet&);
        void deserialize_struct(parsed_map&, VkWriteDescriptorSet&);
    

        void serialize_struct(boost::json::object&, const VkCopyDescriptorSet&);
        void deserialize_struct(parsed_map&, VkCopyDescriptorSet&);
    

        void serialize_struct(boost::json::object&, const VkBufferUsageFlags2CreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkBufferUsageFlags2CreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkBufferCreateInfo&);
        void deserialize_struct(parsed_map&, VkBufferCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkBufferViewCreateInfo&);
        void deserialize_struct(parsed_map&, VkBufferViewCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkImageSubresource&);
        void deserialize_struct(parsed_map&, VkImageSubresource&);
    

        void serialize_struct(boost::json::object&, const VkImageSubresourceLayers&);
        void deserialize_struct(parsed_map&, VkImageSubresourceLayers&);
    

        void serialize_struct(boost::json::object&, const VkImageSubresourceRange&);
        void deserialize_struct(parsed_map&, VkImageSubresourceRange&);
    

        void serialize_struct(boost::json::object&, const VkMemoryBarrier&);
        void deserialize_struct(parsed_map&, VkMemoryBarrier&);
    

        void serialize_struct(boost::json::object&, const VkBufferMemoryBarrier&);
        void deserialize_struct(parsed_map&, VkBufferMemoryBarrier&);
    

        void serialize_struct(boost::json::object&, const VkImageMemoryBarrier&);
        void deserialize_struct(parsed_map&, VkImageMemoryBarrier&);
    

        void serialize_struct(boost::json::object&, const VkImageCreateInfo&);
        void deserialize_struct(parsed_map&, VkImageCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkSubresourceLayout&);
        void deserialize_struct(parsed_map&, VkSubresourceLayout&);
    

        void serialize_struct(boost::json::object&, const VkImageViewCreateInfo&);
        void deserialize_struct(parsed_map&, VkImageViewCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkBufferCopy&);
        void deserialize_struct(parsed_map&, VkBufferCopy&);
    

        void serialize_struct(boost::json::object&, const VkSparseMemoryBind&);
        void deserialize_struct(parsed_map&, VkSparseMemoryBind&);
    

        void serialize_struct(boost::json::object&, const VkSparseImageMemoryBind&);
        void deserialize_struct(parsed_map&, VkSparseImageMemoryBind&);
    

        void serialize_struct(boost::json::object&, const VkSparseBufferMemoryBindInfo&);
        void deserialize_struct(parsed_map&, VkSparseBufferMemoryBindInfo&);
    

        void serialize_struct(boost::json::object&, const VkSparseImageOpaqueMemoryBindInfo&);
        void deserialize_struct(parsed_map&, VkSparseImageOpaqueMemoryBindInfo&);
    

        void serialize_struct(boost::json::object&, const VkSparseImageMemoryBindInfo&);
        void deserialize_struct(parsed_map&, VkSparseImageMemoryBindInfo&);
    

        void serialize_struct(boost::json::object&, const VkBindSparseInfo&);
        void deserialize_struct(parsed_map&, VkBindSparseInfo&);
    

        void serialize_struct(boost::json::object&, const VkImageCopy&);
        void deserialize_struct(parsed_map&, VkImageCopy&);
    

        void serialize_struct(boost::json::object&, const VkImageBlit&);
        void deserialize_struct(parsed_map&, VkImageBlit&);
    

        void serialize_struct(boost::json::object&, const VkBufferImageCopy&);
        void deserialize_struct(parsed_map&, VkBufferImageCopy&);
    

        void serialize_struct(boost::json::object&, const VkCopyMemoryIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkCopyMemoryIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkCopyMemoryToImageIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkCopyMemoryToImageIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkImageResolve&);
        void deserialize_struct(parsed_map&, VkImageResolve&);
    

        void serialize_struct(boost::json::object&, const VkShaderModuleCreateInfo&);
        void deserialize_struct(parsed_map&, VkShaderModuleCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetLayoutBinding&);
        void deserialize_struct(parsed_map&, VkDescriptorSetLayoutBinding&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetLayoutCreateInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorSetLayoutCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorPoolSize&);
        void deserialize_struct(parsed_map&, VkDescriptorPoolSize&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorPoolCreateInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorPoolCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetAllocateInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorSetAllocateInfo&);
    

        void serialize_struct(boost::json::object&, const VkSpecializationMapEntry&);
        void deserialize_struct(parsed_map&, VkSpecializationMapEntry&);
    

        void serialize_struct(boost::json::object&, const VkSpecializationInfo&);
        void deserialize_struct(parsed_map&, VkSpecializationInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineShaderStageCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineShaderStageCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkComputePipelineCreateInfo&);
        void deserialize_struct(parsed_map&, VkComputePipelineCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkComputePipelineIndirectBufferInfoNV&);
        void deserialize_struct(parsed_map&, VkComputePipelineIndirectBufferInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCreateFlags2CreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkPipelineCreateFlags2CreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVertexInputBindingDescription&);
        void deserialize_struct(parsed_map&, VkVertexInputBindingDescription&);
    

        void serialize_struct(boost::json::object&, const VkVertexInputAttributeDescription&);
        void deserialize_struct(parsed_map&, VkVertexInputAttributeDescription&);
    

        void serialize_struct(boost::json::object&, const VkPipelineVertexInputStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineVertexInputStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineInputAssemblyStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineInputAssemblyStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineTessellationStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineTessellationStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineViewportStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineViewportStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRasterizationStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineRasterizationStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineMultisampleStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineMultisampleStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineColorBlendAttachmentState&);
        void deserialize_struct(parsed_map&, VkPipelineColorBlendAttachmentState&);
    

        void serialize_struct(boost::json::object&, const VkPipelineColorBlendStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineColorBlendStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineDynamicStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineDynamicStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkStencilOpState&);
        void deserialize_struct(parsed_map&, VkStencilOpState&);
    

        void serialize_struct(boost::json::object&, const VkPipelineDepthStencilStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineDepthStencilStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkGraphicsPipelineCreateInfo&);
        void deserialize_struct(parsed_map&, VkGraphicsPipelineCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCacheCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineCacheCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCacheHeaderVersionOne&);
        void deserialize_struct(parsed_map&, VkPipelineCacheHeaderVersionOne&);
    

        void serialize_struct(boost::json::object&, const VkPushConstantRange&);
        void deserialize_struct(parsed_map&, VkPushConstantRange&);
    

        void serialize_struct(boost::json::object&, const VkPipelineLayoutCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineLayoutCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkSamplerCreateInfo&);
        void deserialize_struct(parsed_map&, VkSamplerCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkCommandPoolCreateInfo&);
        void deserialize_struct(parsed_map&, VkCommandPoolCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferAllocateInfo&);
        void deserialize_struct(parsed_map&, VkCommandBufferAllocateInfo&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferInheritanceInfo&);
        void deserialize_struct(parsed_map&, VkCommandBufferInheritanceInfo&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferBeginInfo&);
        void deserialize_struct(parsed_map&, VkCommandBufferBeginInfo&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassBeginInfo&);
        void deserialize_struct(parsed_map&, VkRenderPassBeginInfo&);
    

        void serialize_struct(boost::json::object&, const VkClearColorValue&);
        void deserialize_struct(parsed_map&, VkClearColorValue&);
    

        void serialize_struct(boost::json::object&, const VkClearDepthStencilValue&);
        void deserialize_struct(parsed_map&, VkClearDepthStencilValue&);
    

        void serialize_struct(boost::json::object&, const VkClearValue&);
        void deserialize_struct(parsed_map&, VkClearValue&);
    

        void serialize_struct(boost::json::object&, const VkClearAttachment&);
        void deserialize_struct(parsed_map&, VkClearAttachment&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentDescription&);
        void deserialize_struct(parsed_map&, VkAttachmentDescription&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentReference&);
        void deserialize_struct(parsed_map&, VkAttachmentReference&);
    

        void serialize_struct(boost::json::object&, const VkSubpassDescription&);
        void deserialize_struct(parsed_map&, VkSubpassDescription&);
    

        void serialize_struct(boost::json::object&, const VkSubpassDependency&);
        void deserialize_struct(parsed_map&, VkSubpassDependency&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassCreateInfo&);
        void deserialize_struct(parsed_map&, VkRenderPassCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkEventCreateInfo&);
        void deserialize_struct(parsed_map&, VkEventCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkFenceCreateInfo&);
        void deserialize_struct(parsed_map&, VkFenceCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSparseProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSparseProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceLimits&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceLimits&);
    

        void serialize_struct(boost::json::object&, const VkSemaphoreCreateInfo&);
        void deserialize_struct(parsed_map&, VkSemaphoreCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkQueryPoolCreateInfo&);
        void deserialize_struct(parsed_map&, VkQueryPoolCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkFramebufferCreateInfo&);
        void deserialize_struct(parsed_map&, VkFramebufferCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDrawIndirectCommand&);
        void deserialize_struct(parsed_map&, VkDrawIndirectCommand&);
    

        void serialize_struct(boost::json::object&, const VkDrawIndexedIndirectCommand&);
        void deserialize_struct(parsed_map&, VkDrawIndexedIndirectCommand&);
    

        void serialize_struct(boost::json::object&, const VkDispatchIndirectCommand&);
        void deserialize_struct(parsed_map&, VkDispatchIndirectCommand&);
    

        void serialize_struct(boost::json::object&, const VkMultiDrawInfoEXT&);
        void deserialize_struct(parsed_map&, VkMultiDrawInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkMultiDrawIndexedInfoEXT&);
        void deserialize_struct(parsed_map&, VkMultiDrawIndexedInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSubmitInfo&);
        void deserialize_struct(parsed_map&, VkSubmitInfo&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkDisplayPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPlanePropertiesKHR&);
        void deserialize_struct(parsed_map&, VkDisplayPlanePropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayModeParametersKHR&);
        void deserialize_struct(parsed_map&, VkDisplayModeParametersKHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayModePropertiesKHR&);
        void deserialize_struct(parsed_map&, VkDisplayModePropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayModeCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkDisplayModeCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPlaneCapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkDisplayPlaneCapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplaySurfaceCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkDisplaySurfaceCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPresentInfoKHR&);
        void deserialize_struct(parsed_map&, VkDisplayPresentInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkSurfaceCapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkSurfaceCapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkXlibSurfaceCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkXlibSurfaceCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkXcbSurfaceCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkXcbSurfaceCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkSurfaceFormatKHR&);
        void deserialize_struct(parsed_map&, VkSurfaceFormatKHR&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkSwapchainCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPresentInfoKHR&);
        void deserialize_struct(parsed_map&, VkPresentInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkDebugReportCallbackCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkDebugReportCallbackCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkValidationFlagsEXT&);
        void deserialize_struct(parsed_map&, VkValidationFlagsEXT&);
    

        void serialize_struct(boost::json::object&, const VkValidationFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkValidationFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRasterizationStateRasterizationOrderAMD&);
        void deserialize_struct(parsed_map&, VkPipelineRasterizationStateRasterizationOrderAMD&);
    

        void serialize_struct(boost::json::object&, const VkDebugMarkerObjectNameInfoEXT&);
        void deserialize_struct(parsed_map&, VkDebugMarkerObjectNameInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDebugMarkerObjectTagInfoEXT&);
        void deserialize_struct(parsed_map&, VkDebugMarkerObjectTagInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDebugMarkerMarkerInfoEXT&);
        void deserialize_struct(parsed_map&, VkDebugMarkerMarkerInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDedicatedAllocationImageCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkDedicatedAllocationImageCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkDedicatedAllocationBufferCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkDedicatedAllocationBufferCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkDedicatedAllocationMemoryAllocateInfoNV&);
        void deserialize_struct(parsed_map&, VkDedicatedAllocationMemoryAllocateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkExternalImageFormatPropertiesNV&);
        void deserialize_struct(parsed_map&, VkExternalImageFormatPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkExternalMemoryImageCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkExternalMemoryImageCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkExportMemoryAllocateInfoNV&);
        void deserialize_struct(parsed_map&, VkExportMemoryAllocateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkDevicePrivateDataCreateInfo&);
        void deserialize_struct(parsed_map&, VkDevicePrivateDataCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPrivateDataSlotCreateInfo&);
        void deserialize_struct(parsed_map&, VkPrivateDataSlotCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePrivateDataFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePrivateDataFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultiDrawPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultiDrawPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkGraphicsShaderGroupCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkGraphicsShaderGroupCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkGraphicsPipelineShaderGroupsCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkGraphicsPipelineShaderGroupsCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkBindShaderGroupIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkBindShaderGroupIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkBindIndexBufferIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkBindIndexBufferIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkBindVertexBufferIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkBindVertexBufferIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkSetStateFlagsIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkSetStateFlagsIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkIndirectCommandsStreamNV&);
        void deserialize_struct(parsed_map&, VkIndirectCommandsStreamNV&);
    

        void serialize_struct(boost::json::object&, const VkIndirectCommandsLayoutTokenNV&);
        void deserialize_struct(parsed_map&, VkIndirectCommandsLayoutTokenNV&);
    

        void serialize_struct(boost::json::object&, const VkIndirectCommandsLayoutCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkIndirectCommandsLayoutCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkGeneratedCommandsInfoNV&);
        void deserialize_struct(parsed_map&, VkGeneratedCommandsInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkGeneratedCommandsMemoryRequirementsInfoNV&);
        void deserialize_struct(parsed_map&, VkGeneratedCommandsMemoryRequirementsInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineIndirectDeviceAddressInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineIndirectDeviceAddressInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkBindPipelineIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkBindPipelineIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFeatures2&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFeatures2&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceProperties2&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceProperties2&);
    

        void serialize_struct(boost::json::object&, const VkFormatProperties2&);
        void deserialize_struct(parsed_map&, VkFormatProperties2&);
    

        void serialize_struct(boost::json::object&, const VkImageFormatProperties2&);
        void deserialize_struct(parsed_map&, VkImageFormatProperties2&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageFormatInfo2&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageFormatInfo2&);
    

        void serialize_struct(boost::json::object&, const VkQueueFamilyProperties2&);
        void deserialize_struct(parsed_map&, VkQueueFamilyProperties2&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMemoryProperties2&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMemoryProperties2&);
    

        void serialize_struct(boost::json::object&, const VkSparseImageFormatProperties2&);
        void deserialize_struct(parsed_map&, VkSparseImageFormatProperties2&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSparseImageFormatInfo2&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSparseImageFormatInfo2&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePushDescriptorPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePushDescriptorPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkConformanceVersion&);
        void deserialize_struct(parsed_map&, VkConformanceVersion&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDriverProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDriverProperties&);
    

        void serialize_struct(boost::json::object&, const VkPresentRegionsKHR&);
        void deserialize_struct(parsed_map&, VkPresentRegionsKHR&);
    

        void serialize_struct(boost::json::object&, const VkPresentRegionKHR&);
        void deserialize_struct(parsed_map&, VkPresentRegionKHR&);
    

        void serialize_struct(boost::json::object&, const VkRectLayerKHR&);
        void deserialize_struct(parsed_map&, VkRectLayerKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVariablePointersFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVariablePointersFeatures&);
    

        void serialize_struct(boost::json::object&, const VkExternalMemoryProperties&);
        void deserialize_struct(parsed_map&, VkExternalMemoryProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExternalImageFormatInfo&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExternalImageFormatInfo&);
    

        void serialize_struct(boost::json::object&, const VkExternalImageFormatProperties&);
        void deserialize_struct(parsed_map&, VkExternalImageFormatProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExternalBufferInfo&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExternalBufferInfo&);
    

        void serialize_struct(boost::json::object&, const VkExternalBufferProperties&);
        void deserialize_struct(parsed_map&, VkExternalBufferProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceIDProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceIDProperties&);
    

        void serialize_struct(boost::json::object&, const VkExternalMemoryImageCreateInfo&);
        void deserialize_struct(parsed_map&, VkExternalMemoryImageCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkExternalMemoryBufferCreateInfo&);
        void deserialize_struct(parsed_map&, VkExternalMemoryBufferCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkExportMemoryAllocateInfo&);
        void deserialize_struct(parsed_map&, VkExportMemoryAllocateInfo&);
    

        void serialize_struct(boost::json::object&, const VkImportMemoryFdInfoKHR&);
        void deserialize_struct(parsed_map&, VkImportMemoryFdInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkMemoryFdPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkMemoryFdPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkMemoryGetFdInfoKHR&);
        void deserialize_struct(parsed_map&, VkMemoryGetFdInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExternalSemaphoreInfo&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExternalSemaphoreInfo&);
    

        void serialize_struct(boost::json::object&, const VkExternalSemaphoreProperties&);
        void deserialize_struct(parsed_map&, VkExternalSemaphoreProperties&);
    

        void serialize_struct(boost::json::object&, const VkExportSemaphoreCreateInfo&);
        void deserialize_struct(parsed_map&, VkExportSemaphoreCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkImportSemaphoreFdInfoKHR&);
        void deserialize_struct(parsed_map&, VkImportSemaphoreFdInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkSemaphoreGetFdInfoKHR&);
        void deserialize_struct(parsed_map&, VkSemaphoreGetFdInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExternalFenceInfo&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExternalFenceInfo&);
    

        void serialize_struct(boost::json::object&, const VkExternalFenceProperties&);
        void deserialize_struct(parsed_map&, VkExternalFenceProperties&);
    

        void serialize_struct(boost::json::object&, const VkExportFenceCreateInfo&);
        void deserialize_struct(parsed_map&, VkExportFenceCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkImportFenceFdInfoKHR&);
        void deserialize_struct(parsed_map&, VkImportFenceFdInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkFenceGetFdInfoKHR&);
        void deserialize_struct(parsed_map&, VkFenceGetFdInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultiviewFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultiviewFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultiviewProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultiviewProperties&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassMultiviewCreateInfo&);
        void deserialize_struct(parsed_map&, VkRenderPassMultiviewCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkSurfaceCapabilities2EXT&);
        void deserialize_struct(parsed_map&, VkSurfaceCapabilities2EXT&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPowerInfoEXT&);
        void deserialize_struct(parsed_map&, VkDisplayPowerInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceEventInfoEXT&);
        void deserialize_struct(parsed_map&, VkDeviceEventInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDisplayEventInfoEXT&);
        void deserialize_struct(parsed_map&, VkDisplayEventInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainCounterCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkSwapchainCounterCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceGroupProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceGroupProperties&);
    

        void serialize_struct(boost::json::object&, const VkMemoryAllocateFlagsInfo&);
        void deserialize_struct(parsed_map&, VkMemoryAllocateFlagsInfo&);
    

        void serialize_struct(boost::json::object&, const VkBindBufferMemoryInfo&);
        void deserialize_struct(parsed_map&, VkBindBufferMemoryInfo&);
    

        void serialize_struct(boost::json::object&, const VkBindBufferMemoryDeviceGroupInfo&);
        void deserialize_struct(parsed_map&, VkBindBufferMemoryDeviceGroupInfo&);
    

        void serialize_struct(boost::json::object&, const VkBindImageMemoryInfo&);
        void deserialize_struct(parsed_map&, VkBindImageMemoryInfo&);
    

        void serialize_struct(boost::json::object&, const VkBindImageMemoryDeviceGroupInfo&);
        void deserialize_struct(parsed_map&, VkBindImageMemoryDeviceGroupInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupRenderPassBeginInfo&);
        void deserialize_struct(parsed_map&, VkDeviceGroupRenderPassBeginInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupCommandBufferBeginInfo&);
        void deserialize_struct(parsed_map&, VkDeviceGroupCommandBufferBeginInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupSubmitInfo&);
        void deserialize_struct(parsed_map&, VkDeviceGroupSubmitInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupBindSparseInfo&);
        void deserialize_struct(parsed_map&, VkDeviceGroupBindSparseInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupPresentCapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkDeviceGroupPresentCapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkImageSwapchainCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkImageSwapchainCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkBindImageMemorySwapchainInfoKHR&);
        void deserialize_struct(parsed_map&, VkBindImageMemorySwapchainInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkAcquireNextImageInfoKHR&);
        void deserialize_struct(parsed_map&, VkAcquireNextImageInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupPresentInfoKHR&);
        void deserialize_struct(parsed_map&, VkDeviceGroupPresentInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupDeviceCreateInfo&);
        void deserialize_struct(parsed_map&, VkDeviceGroupDeviceCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceGroupSwapchainCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkDeviceGroupSwapchainCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorUpdateTemplateEntry&);
        void deserialize_struct(parsed_map&, VkDescriptorUpdateTemplateEntry&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorUpdateTemplateCreateInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorUpdateTemplateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkXYColorEXT&);
        void deserialize_struct(parsed_map&, VkXYColorEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePresentIdFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePresentIdFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPresentIdKHR&);
        void deserialize_struct(parsed_map&, VkPresentIdKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePresentWaitFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePresentWaitFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkHdrMetadataEXT&);
        void deserialize_struct(parsed_map&, VkHdrMetadataEXT&);
    

        void serialize_struct(boost::json::object&, const VkDisplayNativeHdrSurfaceCapabilitiesAMD&);
        void deserialize_struct(parsed_map&, VkDisplayNativeHdrSurfaceCapabilitiesAMD&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainDisplayNativeHdrCreateInfoAMD&);
        void deserialize_struct(parsed_map&, VkSwapchainDisplayNativeHdrCreateInfoAMD&);
    

        void serialize_struct(boost::json::object&, const VkRefreshCycleDurationGOOGLE&);
        void deserialize_struct(parsed_map&, VkRefreshCycleDurationGOOGLE&);
    

        void serialize_struct(boost::json::object&, const VkPastPresentationTimingGOOGLE&);
        void deserialize_struct(parsed_map&, VkPastPresentationTimingGOOGLE&);
    

        void serialize_struct(boost::json::object&, const VkPresentTimesInfoGOOGLE&);
        void deserialize_struct(parsed_map&, VkPresentTimesInfoGOOGLE&);
    

        void serialize_struct(boost::json::object&, const VkPresentTimeGOOGLE&);
        void deserialize_struct(parsed_map&, VkPresentTimeGOOGLE&);
    

        void serialize_struct(boost::json::object&, const VkViewportWScalingNV&);
        void deserialize_struct(parsed_map&, VkViewportWScalingNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineViewportWScalingStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineViewportWScalingStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkViewportSwizzleNV&);
        void deserialize_struct(parsed_map&, VkViewportSwizzleNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineViewportSwizzleStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineViewportSwizzleStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDiscardRectanglePropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDiscardRectanglePropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineDiscardRectangleStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineDiscardRectangleStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX&);
    

        void serialize_struct(boost::json::object&, const VkInputAttachmentAspectReference&);
        void deserialize_struct(parsed_map&, VkInputAttachmentAspectReference&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassInputAttachmentAspectCreateInfo&);
        void deserialize_struct(parsed_map&, VkRenderPassInputAttachmentAspectCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSurfaceInfo2KHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSurfaceInfo2KHR&);
    

        void serialize_struct(boost::json::object&, const VkSurfaceCapabilities2KHR&);
        void deserialize_struct(parsed_map&, VkSurfaceCapabilities2KHR&);
    

        void serialize_struct(boost::json::object&, const VkSurfaceFormat2KHR&);
        void deserialize_struct(parsed_map&, VkSurfaceFormat2KHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayProperties2KHR&);
        void deserialize_struct(parsed_map&, VkDisplayProperties2KHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPlaneProperties2KHR&);
        void deserialize_struct(parsed_map&, VkDisplayPlaneProperties2KHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayModeProperties2KHR&);
        void deserialize_struct(parsed_map&, VkDisplayModeProperties2KHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPlaneInfo2KHR&);
        void deserialize_struct(parsed_map&, VkDisplayPlaneInfo2KHR&);
    

        void serialize_struct(boost::json::object&, const VkDisplayPlaneCapabilities2KHR&);
        void deserialize_struct(parsed_map&, VkDisplayPlaneCapabilities2KHR&);
    

        void serialize_struct(boost::json::object&, const VkSharedPresentSurfaceCapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkSharedPresentSurfaceCapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevice16BitStorageFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDevice16BitStorageFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSubgroupProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSubgroupProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures&);
    

        void serialize_struct(boost::json::object&, const VkBufferMemoryRequirementsInfo2&);
        void deserialize_struct(parsed_map&, VkBufferMemoryRequirementsInfo2&);
    

        void serialize_struct(boost::json::object&, const VkDeviceBufferMemoryRequirements&);
        void deserialize_struct(parsed_map&, VkDeviceBufferMemoryRequirements&);
    

        void serialize_struct(boost::json::object&, const VkImageMemoryRequirementsInfo2&);
        void deserialize_struct(parsed_map&, VkImageMemoryRequirementsInfo2&);
    

        void serialize_struct(boost::json::object&, const VkImageSparseMemoryRequirementsInfo2&);
        void deserialize_struct(parsed_map&, VkImageSparseMemoryRequirementsInfo2&);
    

        void serialize_struct(boost::json::object&, const VkDeviceImageMemoryRequirements&);
        void deserialize_struct(parsed_map&, VkDeviceImageMemoryRequirements&);
    

        void serialize_struct(boost::json::object&, const VkMemoryRequirements2&);
        void deserialize_struct(parsed_map&, VkMemoryRequirements2&);
    

        void serialize_struct(boost::json::object&, const VkSparseImageMemoryRequirements2&);
        void deserialize_struct(parsed_map&, VkSparseImageMemoryRequirements2&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePointClippingProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePointClippingProperties&);
    

        void serialize_struct(boost::json::object&, const VkMemoryDedicatedRequirements&);
        void deserialize_struct(parsed_map&, VkMemoryDedicatedRequirements&);
    

        void serialize_struct(boost::json::object&, const VkMemoryDedicatedAllocateInfo&);
        void deserialize_struct(parsed_map&, VkMemoryDedicatedAllocateInfo&);
    

        void serialize_struct(boost::json::object&, const VkImageViewUsageCreateInfo&);
        void deserialize_struct(parsed_map&, VkImageViewUsageCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkImageViewSlicedCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkImageViewSlicedCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineTessellationDomainOriginStateCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineTessellationDomainOriginStateCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkSamplerYcbcrConversionInfo&);
        void deserialize_struct(parsed_map&, VkSamplerYcbcrConversionInfo&);
    

        void serialize_struct(boost::json::object&, const VkSamplerYcbcrConversionCreateInfo&);
        void deserialize_struct(parsed_map&, VkSamplerYcbcrConversionCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkBindImagePlaneMemoryInfo&);
        void deserialize_struct(parsed_map&, VkBindImagePlaneMemoryInfo&);
    

        void serialize_struct(boost::json::object&, const VkImagePlaneMemoryRequirementsInfo&);
        void deserialize_struct(parsed_map&, VkImagePlaneMemoryRequirementsInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSamplerYcbcrConversionFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSamplerYcbcrConversionFeatures&);
    

        void serialize_struct(boost::json::object&, const VkSamplerYcbcrConversionImageFormatProperties&);
        void deserialize_struct(parsed_map&, VkSamplerYcbcrConversionImageFormatProperties&);
    

        void serialize_struct(boost::json::object&, const VkTextureLODGatherFormatPropertiesAMD&);
        void deserialize_struct(parsed_map&, VkTextureLODGatherFormatPropertiesAMD&);
    

        void serialize_struct(boost::json::object&, const VkConditionalRenderingBeginInfoEXT&);
        void deserialize_struct(parsed_map&, VkConditionalRenderingBeginInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkProtectedSubmitInfo&);
        void deserialize_struct(parsed_map&, VkProtectedSubmitInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceProtectedMemoryFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceProtectedMemoryFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceProtectedMemoryProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceProtectedMemoryProperties&);
    

        void serialize_struct(boost::json::object&, const VkDeviceQueueInfo2&);
        void deserialize_struct(parsed_map&, VkDeviceQueueInfo2&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCoverageToColorStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineCoverageToColorStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSamplerFilterMinmaxProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSamplerFilterMinmaxProperties&);
    

        void serialize_struct(boost::json::object&, const VkSampleLocationEXT&);
        void deserialize_struct(parsed_map&, VkSampleLocationEXT&);
    

        void serialize_struct(boost::json::object&, const VkSampleLocationsInfoEXT&);
        void deserialize_struct(parsed_map&, VkSampleLocationsInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentSampleLocationsEXT&);
        void deserialize_struct(parsed_map&, VkAttachmentSampleLocationsEXT&);
    

        void serialize_struct(boost::json::object&, const VkSubpassSampleLocationsEXT&);
        void deserialize_struct(parsed_map&, VkSubpassSampleLocationsEXT&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassSampleLocationsBeginInfoEXT&);
        void deserialize_struct(parsed_map&, VkRenderPassSampleLocationsBeginInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineSampleLocationsStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineSampleLocationsStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSampleLocationsPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSampleLocationsPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkMultisamplePropertiesEXT&);
        void deserialize_struct(parsed_map&, VkMultisamplePropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkSamplerReductionModeCreateInfo&);
        void deserialize_struct(parsed_map&, VkSamplerReductionModeCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultiDrawFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultiDrawFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineColorBlendAdvancedStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineColorBlendAdvancedStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceInlineUniformBlockFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceInlineUniformBlockFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceInlineUniformBlockProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceInlineUniformBlockProperties&);
    

        void serialize_struct(boost::json::object&, const VkWriteDescriptorSetInlineUniformBlock&);
        void deserialize_struct(parsed_map&, VkWriteDescriptorSetInlineUniformBlock&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorPoolInlineUniformBlockCreateInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorPoolInlineUniformBlockCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCoverageModulationStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineCoverageModulationStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkImageFormatListCreateInfo&);
        void deserialize_struct(parsed_map&, VkImageFormatListCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkValidationCacheCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkValidationCacheCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkShaderModuleValidationCacheCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkShaderModuleValidationCacheCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMaintenance3Properties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMaintenance3Properties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMaintenance4Features&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMaintenance4Features&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMaintenance4Properties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMaintenance4Properties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMaintenance5FeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMaintenance5FeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMaintenance5PropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMaintenance5PropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkRenderingAreaInfoKHR&);
        void deserialize_struct(parsed_map&, VkRenderingAreaInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetLayoutSupport&);
        void deserialize_struct(parsed_map&, VkDescriptorSetLayoutSupport&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderDrawParametersFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderDrawParametersFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderFloat16Int8Features&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderFloat16Int8Features&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFloatControlsProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFloatControlsProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceHostQueryResetFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceHostQueryResetFeatures&);
    

        void serialize_struct(boost::json::object&, const VkShaderResourceUsageAMD&);
        void deserialize_struct(parsed_map&, VkShaderResourceUsageAMD&);
    

        void serialize_struct(boost::json::object&, const VkShaderStatisticsInfoAMD&);
        void deserialize_struct(parsed_map&, VkShaderStatisticsInfoAMD&);
    

        void serialize_struct(boost::json::object&, const VkDeviceQueueGlobalPriorityCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkDeviceQueueGlobalPriorityCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkQueueFamilyGlobalPriorityPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkQueueFamilyGlobalPriorityPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkDebugUtilsObjectNameInfoEXT&);
        void deserialize_struct(parsed_map&, VkDebugUtilsObjectNameInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDebugUtilsObjectTagInfoEXT&);
        void deserialize_struct(parsed_map&, VkDebugUtilsObjectTagInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDebugUtilsLabelEXT&);
        void deserialize_struct(parsed_map&, VkDebugUtilsLabelEXT&);
    

        void serialize_struct(boost::json::object&, const VkDebugUtilsMessengerCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkDebugUtilsMessengerCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDebugUtilsMessengerCallbackDataEXT&);
        void deserialize_struct(parsed_map&, VkDebugUtilsMessengerCallbackDataEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDeviceMemoryReportFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDeviceMemoryReportFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceDeviceMemoryReportCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkDeviceDeviceMemoryReportCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceMemoryReportCallbackDataEXT&);
        void deserialize_struct(parsed_map&, VkDeviceMemoryReportCallbackDataEXT&);
    

        void serialize_struct(boost::json::object&, const VkImportMemoryHostPointerInfoEXT&);
        void deserialize_struct(parsed_map&, VkImportMemoryHostPointerInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkMemoryHostPointerPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkMemoryHostPointerPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExternalMemoryHostPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExternalMemoryHostPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceConservativeRasterizationPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceConservativeRasterizationPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkCalibratedTimestampInfoEXT&);
        void deserialize_struct(parsed_map&, VkCalibratedTimestampInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderCorePropertiesAMD&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderCorePropertiesAMD&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderCoreProperties2AMD&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderCoreProperties2AMD&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRasterizationConservativeStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineRasterizationConservativeStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDescriptorIndexingFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDescriptorIndexingFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDescriptorIndexingProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDescriptorIndexingProperties&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetLayoutBindingFlagsCreateInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorSetLayoutBindingFlagsCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetVariableDescriptorCountAllocateInfo&);
        void deserialize_struct(parsed_map&, VkDescriptorSetVariableDescriptorCountAllocateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetVariableDescriptorCountLayoutSupport&);
        void deserialize_struct(parsed_map&, VkDescriptorSetVariableDescriptorCountLayoutSupport&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentDescription2&);
        void deserialize_struct(parsed_map&, VkAttachmentDescription2&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentReference2&);
        void deserialize_struct(parsed_map&, VkAttachmentReference2&);
    

        void serialize_struct(boost::json::object&, const VkSubpassDescription2&);
        void deserialize_struct(parsed_map&, VkSubpassDescription2&);
    

        void serialize_struct(boost::json::object&, const VkSubpassDependency2&);
        void deserialize_struct(parsed_map&, VkSubpassDependency2&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassCreateInfo2&);
        void deserialize_struct(parsed_map&, VkRenderPassCreateInfo2&);
    

        void serialize_struct(boost::json::object&, const VkSubpassBeginInfo&);
        void deserialize_struct(parsed_map&, VkSubpassBeginInfo&);
    

        void serialize_struct(boost::json::object&, const VkSubpassEndInfo&);
        void deserialize_struct(parsed_map&, VkSubpassEndInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTimelineSemaphoreFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTimelineSemaphoreFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTimelineSemaphoreProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTimelineSemaphoreProperties&);
    

        void serialize_struct(boost::json::object&, const VkSemaphoreTypeCreateInfo&);
        void deserialize_struct(parsed_map&, VkSemaphoreTypeCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkTimelineSemaphoreSubmitInfo&);
        void deserialize_struct(parsed_map&, VkTimelineSemaphoreSubmitInfo&);
    

        void serialize_struct(boost::json::object&, const VkSemaphoreWaitInfo&);
        void deserialize_struct(parsed_map&, VkSemaphoreWaitInfo&);
    

        void serialize_struct(boost::json::object&, const VkSemaphoreSignalInfo&);
        void deserialize_struct(parsed_map&, VkSemaphoreSignalInfo&);
    

        void serialize_struct(boost::json::object&, const VkVertexInputBindingDivisorDescriptionEXT&);
        void deserialize_struct(parsed_map&, VkVertexInputBindingDivisorDescriptionEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineVertexInputDivisorStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineVertexInputDivisorStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePCIBusInfoPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePCIBusInfoPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferInheritanceConditionalRenderingInfoEXT&);
        void deserialize_struct(parsed_map&, VkCommandBufferInheritanceConditionalRenderingInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevice8BitStorageFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDevice8BitStorageFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceConditionalRenderingFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceConditionalRenderingFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVulkanMemoryModelFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVulkanMemoryModelFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderAtomicInt64Features&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderAtomicInt64Features&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderAtomicFloatFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderAtomicFloatFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkQueueFamilyCheckpointPropertiesNV&);
        void deserialize_struct(parsed_map&, VkQueueFamilyCheckpointPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkCheckpointDataNV&);
        void deserialize_struct(parsed_map&, VkCheckpointDataNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDepthStencilResolveProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDepthStencilResolveProperties&);
    

        void serialize_struct(boost::json::object&, const VkSubpassDescriptionDepthStencilResolve&);
        void deserialize_struct(parsed_map&, VkSubpassDescriptionDepthStencilResolve&);
    

        void serialize_struct(boost::json::object&, const VkImageViewASTCDecodeModeEXT&);
        void deserialize_struct(parsed_map&, VkImageViewASTCDecodeModeEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceASTCDecodeFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceASTCDecodeFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTransformFeedbackFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTransformFeedbackFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTransformFeedbackPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTransformFeedbackPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRasterizationStateStreamCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineRasterizationStateStreamCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRepresentativeFragmentTestStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineRepresentativeFragmentTestStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExclusiveScissorFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExclusiveScissorFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineViewportExclusiveScissorStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineViewportExclusiveScissorStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCornerSampledImageFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCornerSampledImageFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceComputeShaderDerivativesFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceComputeShaderDerivativesFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderImageFootprintFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderImageFootprintFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCopyMemoryIndirectFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCopyMemoryIndirectFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCopyMemoryIndirectPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCopyMemoryIndirectPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMemoryDecompressionFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMemoryDecompressionFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMemoryDecompressionPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMemoryDecompressionPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkShadingRatePaletteNV&);
        void deserialize_struct(parsed_map&, VkShadingRatePaletteNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineViewportShadingRateImageStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineViewportShadingRateImageStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShadingRateImageFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShadingRateImageFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShadingRateImagePropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShadingRateImagePropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceInvocationMaskFeaturesHUAWEI&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceInvocationMaskFeaturesHUAWEI&);
    

        void serialize_struct(boost::json::object&, const VkCoarseSampleLocationNV&);
        void deserialize_struct(parsed_map&, VkCoarseSampleLocationNV&);
    

        void serialize_struct(boost::json::object&, const VkCoarseSampleOrderCustomNV&);
        void deserialize_struct(parsed_map&, VkCoarseSampleOrderCustomNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineViewportCoarseSampleOrderStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineViewportCoarseSampleOrderStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMeshShaderFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMeshShaderFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMeshShaderPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMeshShaderPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkDrawMeshTasksIndirectCommandNV&);
        void deserialize_struct(parsed_map&, VkDrawMeshTasksIndirectCommandNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMeshShaderFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMeshShaderFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMeshShaderPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMeshShaderPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkDrawMeshTasksIndirectCommandEXT&);
        void deserialize_struct(parsed_map&, VkDrawMeshTasksIndirectCommandEXT&);
    

        void serialize_struct(boost::json::object&, const VkRayTracingShaderGroupCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkRayTracingShaderGroupCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkRayTracingShaderGroupCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkRayTracingShaderGroupCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkRayTracingPipelineCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkRayTracingPipelineCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkRayTracingPipelineCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkRayTracingPipelineCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkGeometryTrianglesNV&);
        void deserialize_struct(parsed_map&, VkGeometryTrianglesNV&);
    

        void serialize_struct(boost::json::object&, const VkGeometryAABBNV&);
        void deserialize_struct(parsed_map&, VkGeometryAABBNV&);
    

        void serialize_struct(boost::json::object&, const VkGeometryDataNV&);
        void deserialize_struct(parsed_map&, VkGeometryDataNV&);
    

        void serialize_struct(boost::json::object&, const VkGeometryNV&);
        void deserialize_struct(parsed_map&, VkGeometryNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureInfoNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkBindAccelerationStructureMemoryInfoNV&);
        void deserialize_struct(parsed_map&, VkBindAccelerationStructureMemoryInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkWriteDescriptorSetAccelerationStructureKHR&);
        void deserialize_struct(parsed_map&, VkWriteDescriptorSetAccelerationStructureKHR&);
    

        void serialize_struct(boost::json::object&, const VkWriteDescriptorSetAccelerationStructureNV&);
        void deserialize_struct(parsed_map&, VkWriteDescriptorSetAccelerationStructureNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureMemoryRequirementsInfoNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureMemoryRequirementsInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceAccelerationStructureFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceAccelerationStructureFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingPipelineFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingPipelineFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayQueryFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayQueryFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceAccelerationStructurePropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceAccelerationStructurePropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingPipelinePropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingPipelinePropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkStridedDeviceAddressRegionKHR&);
        void deserialize_struct(parsed_map&, VkStridedDeviceAddressRegionKHR&);
    

        void serialize_struct(boost::json::object&, const VkTraceRaysIndirectCommandKHR&);
        void deserialize_struct(parsed_map&, VkTraceRaysIndirectCommandKHR&);
    

        void serialize_struct(boost::json::object&, const VkTraceRaysIndirectCommand2KHR&);
        void deserialize_struct(parsed_map&, VkTraceRaysIndirectCommand2KHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkDrmFormatModifierPropertiesListEXT&);
        void deserialize_struct(parsed_map&, VkDrmFormatModifierPropertiesListEXT&);
    

        void serialize_struct(boost::json::object&, const VkDrmFormatModifierPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkDrmFormatModifierPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageDrmFormatModifierInfoEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageDrmFormatModifierInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageDrmFormatModifierListCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkImageDrmFormatModifierListCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageDrmFormatModifierExplicitCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkImageDrmFormatModifierExplicitCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageDrmFormatModifierPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkImageDrmFormatModifierPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageStencilUsageCreateInfo&);
        void deserialize_struct(parsed_map&, VkImageStencilUsageCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceMemoryOverallocationCreateInfoAMD&);
        void deserialize_struct(parsed_map&, VkDeviceMemoryOverallocationCreateInfoAMD&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentDensityMapFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentDensityMapFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentDensityMap2FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentDensityMap2FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentDensityMapPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentDensityMapPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentDensityMap2PropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentDensityMap2PropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassFragmentDensityMapCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkRenderPassFragmentDensityMapCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSubpassFragmentDensityMapOffsetEndInfoQCOM&);
        void deserialize_struct(parsed_map&, VkSubpassFragmentDensityMapOffsetEndInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceScalarBlockLayoutFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceScalarBlockLayoutFeatures&);
    

        void serialize_struct(boost::json::object&, const VkSurfaceProtectedCapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkSurfaceProtectedCapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceUniformBufferStandardLayoutFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceUniformBufferStandardLayoutFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDepthClipEnableFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDepthClipEnableFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRasterizationDepthClipStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineRasterizationDepthClipStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMemoryBudgetPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMemoryBudgetPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMemoryPriorityFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMemoryPriorityFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkMemoryPriorityAllocateInfoEXT&);
        void deserialize_struct(parsed_map&, VkMemoryPriorityAllocateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceBufferDeviceAddressFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceBufferDeviceAddressFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceBufferDeviceAddressFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceBufferDeviceAddressFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkBufferDeviceAddressInfo&);
        void deserialize_struct(parsed_map&, VkBufferDeviceAddressInfo&);
    

        void serialize_struct(boost::json::object&, const VkBufferOpaqueCaptureAddressCreateInfo&);
        void deserialize_struct(parsed_map&, VkBufferOpaqueCaptureAddressCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkBufferDeviceAddressCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkBufferDeviceAddressCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageViewImageFormatInfoEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageViewImageFormatInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkFilterCubicImageViewImageFormatPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkFilterCubicImageViewImageFormatPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImagelessFramebufferFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImagelessFramebufferFeatures&);
    

        void serialize_struct(boost::json::object&, const VkFramebufferAttachmentsCreateInfo&);
        void deserialize_struct(parsed_map&, VkFramebufferAttachmentsCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkFramebufferAttachmentImageInfo&);
        void deserialize_struct(parsed_map&, VkFramebufferAttachmentImageInfo&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassAttachmentBeginInfo&);
        void deserialize_struct(parsed_map&, VkRenderPassAttachmentBeginInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTextureCompressionASTCHDRFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTextureCompressionASTCHDRFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCooperativeMatrixFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCooperativeMatrixFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCooperativeMatrixPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCooperativeMatrixPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkCooperativeMatrixPropertiesNV&);
        void deserialize_struct(parsed_map&, VkCooperativeMatrixPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceYcbcrImageArraysFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceYcbcrImageArraysFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageViewHandleInfoNVX&);
        void deserialize_struct(parsed_map&, VkImageViewHandleInfoNVX&);
    

        void serialize_struct(boost::json::object&, const VkImageViewAddressPropertiesNVX&);
        void deserialize_struct(parsed_map&, VkImageViewAddressPropertiesNVX&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCreationFeedback&);
        void deserialize_struct(parsed_map&, VkPipelineCreationFeedback&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCreationFeedbackCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineCreationFeedbackCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePresentBarrierFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePresentBarrierFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkSurfaceCapabilitiesPresentBarrierNV&);
        void deserialize_struct(parsed_map&, VkSurfaceCapabilitiesPresentBarrierNV&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainPresentBarrierCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkSwapchainPresentBarrierCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePerformanceQueryFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePerformanceQueryFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePerformanceQueryPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePerformanceQueryPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceCounterKHR&);
        void deserialize_struct(parsed_map&, VkPerformanceCounterKHR&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceCounterDescriptionKHR&);
        void deserialize_struct(parsed_map&, VkPerformanceCounterDescriptionKHR&);
    

        void serialize_struct(boost::json::object&, const VkQueryPoolPerformanceCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkQueryPoolPerformanceCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceCounterResultKHR&);
        void deserialize_struct(parsed_map&, VkPerformanceCounterResultKHR&);
    

        void serialize_struct(boost::json::object&, const VkAcquireProfilingLockInfoKHR&);
        void deserialize_struct(parsed_map&, VkAcquireProfilingLockInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceQuerySubmitInfoKHR&);
        void deserialize_struct(parsed_map&, VkPerformanceQuerySubmitInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkHeadlessSurfaceCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkHeadlessSurfaceCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCoverageReductionModeFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCoverageReductionModeFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCoverageReductionStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineCoverageReductionStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkFramebufferMixedSamplesCombinationNV&);
        void deserialize_struct(parsed_map&, VkFramebufferMixedSamplesCombinationNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceValueDataINTEL&);
        void deserialize_struct(parsed_map&, VkPerformanceValueDataINTEL&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceValueINTEL&);
        void deserialize_struct(parsed_map&, VkPerformanceValueINTEL&);
    

        void serialize_struct(boost::json::object&, const VkInitializePerformanceApiInfoINTEL&);
        void deserialize_struct(parsed_map&, VkInitializePerformanceApiInfoINTEL&);
    

        void serialize_struct(boost::json::object&, const VkQueryPoolPerformanceQueryCreateInfoINTEL&);
        void deserialize_struct(parsed_map&, VkQueryPoolPerformanceQueryCreateInfoINTEL&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceMarkerInfoINTEL&);
        void deserialize_struct(parsed_map&, VkPerformanceMarkerInfoINTEL&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceStreamMarkerInfoINTEL&);
        void deserialize_struct(parsed_map&, VkPerformanceStreamMarkerInfoINTEL&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceOverrideInfoINTEL&);
        void deserialize_struct(parsed_map&, VkPerformanceOverrideInfoINTEL&);
    

        void serialize_struct(boost::json::object&, const VkPerformanceConfigurationAcquireInfoINTEL&);
        void deserialize_struct(parsed_map&, VkPerformanceConfigurationAcquireInfoINTEL&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderClockFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderClockFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceIndexTypeUint8FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceIndexTypeUint8FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderSMBuiltinsPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderSMBuiltinsPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderSMBuiltinsFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderSMBuiltinsFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentReferenceStencilLayout&);
        void deserialize_struct(parsed_map&, VkAttachmentReferenceStencilLayout&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentDescriptionStencilLayout&);
        void deserialize_struct(parsed_map&, VkAttachmentDescriptionStencilLayout&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineInfoKHR&);
        void deserialize_struct(parsed_map&, VkPipelineInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineExecutablePropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPipelineExecutablePropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineExecutableInfoKHR&);
        void deserialize_struct(parsed_map&, VkPipelineExecutableInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineExecutableStatisticValueKHR&);
        void deserialize_struct(parsed_map&, VkPipelineExecutableStatisticValueKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineExecutableStatisticKHR&);
        void deserialize_struct(parsed_map&, VkPipelineExecutableStatisticKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineExecutableInternalRepresentationKHR&);
        void deserialize_struct(parsed_map&, VkPipelineExecutableInternalRepresentationKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTexelBufferAlignmentProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTexelBufferAlignmentProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSubgroupSizeControlFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSubgroupSizeControlFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSubgroupSizeControlProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSubgroupSizeControlProperties&);
    

        void serialize_struct(boost::json::object&, const VkPipelineShaderStageRequiredSubgroupSizeCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineShaderStageRequiredSubgroupSizeCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkSubpassShadingPipelineCreateInfoHUAWEI&);
        void deserialize_struct(parsed_map&, VkSubpassShadingPipelineCreateInfoHUAWEI&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSubpassShadingPropertiesHUAWEI&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSubpassShadingPropertiesHUAWEI&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI&);
    

        void serialize_struct(boost::json::object&, const VkMemoryOpaqueCaptureAddressAllocateInfo&);
        void deserialize_struct(parsed_map&, VkMemoryOpaqueCaptureAddressAllocateInfo&);
    

        void serialize_struct(boost::json::object&, const VkDeviceMemoryOpaqueCaptureAddressInfo&);
        void deserialize_struct(parsed_map&, VkDeviceMemoryOpaqueCaptureAddressInfo&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceLineRasterizationFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceLineRasterizationFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceLineRasterizationPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceLineRasterizationPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRasterizationLineStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineRasterizationLineStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePipelineCreationCacheControlFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePipelineCreationCacheControlFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVulkan11Features&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVulkan11Features&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVulkan11Properties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVulkan11Properties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVulkan12Features&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVulkan12Features&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVulkan12Properties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVulkan12Properties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVulkan13Features&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVulkan13Features&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVulkan13Properties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVulkan13Properties&);
    

        void serialize_struct(boost::json::object&, const VkPipelineCompilerControlCreateInfoAMD&);
        void deserialize_struct(parsed_map&, VkPipelineCompilerControlCreateInfoAMD&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCoherentMemoryFeaturesAMD&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCoherentMemoryFeaturesAMD&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceToolProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceToolProperties&);
    

        void serialize_struct(boost::json::object&, const VkSamplerCustomBorderColorCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkSamplerCustomBorderColorCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCustomBorderColorPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCustomBorderColorPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCustomBorderColorFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCustomBorderColorFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkSamplerBorderColorComponentMappingCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkSamplerBorderColorComponentMappingCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceBorderColorSwizzleFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceBorderColorSwizzleFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceOrHostAddressKHR&);
        void deserialize_struct(parsed_map&, VkDeviceOrHostAddressKHR&);
    

        void serialize_struct(boost::json::object&, const VkDeviceOrHostAddressConstKHR&);
        void deserialize_struct(parsed_map&, VkDeviceOrHostAddressConstKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureGeometryTrianglesDataKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureGeometryTrianglesDataKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureGeometryAabbsDataKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureGeometryAabbsDataKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureGeometryInstancesDataKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureGeometryInstancesDataKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureGeometryDataKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureGeometryDataKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureGeometryKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureGeometryKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureBuildGeometryInfoKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureBuildGeometryInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureBuildRangeInfoKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureBuildRangeInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkAabbPositionsKHR&);
        void deserialize_struct(parsed_map&, VkAabbPositionsKHR&);
    

        void serialize_struct(boost::json::object&, const VkTransformMatrixKHR&);
        void deserialize_struct(parsed_map&, VkTransformMatrixKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureInstanceKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureInstanceKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureDeviceAddressInfoKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureDeviceAddressInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureVersionInfoKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureVersionInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkCopyAccelerationStructureInfoKHR&);
        void deserialize_struct(parsed_map&, VkCopyAccelerationStructureInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkCopyAccelerationStructureToMemoryInfoKHR&);
        void deserialize_struct(parsed_map&, VkCopyAccelerationStructureToMemoryInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkCopyMemoryToAccelerationStructureInfoKHR&);
        void deserialize_struct(parsed_map&, VkCopyMemoryToAccelerationStructureInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkRayTracingPipelineInterfaceCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkRayTracingPipelineInterfaceCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineLibraryCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkPipelineLibraryCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExtendedDynamicStateFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExtendedDynamicStateFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExtendedDynamicState2FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExtendedDynamicState2FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExtendedDynamicState3FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExtendedDynamicState3FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExtendedDynamicState3PropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExtendedDynamicState3PropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkColorBlendEquationEXT&);
        void deserialize_struct(parsed_map&, VkColorBlendEquationEXT&);
    

        void serialize_struct(boost::json::object&, const VkColorBlendAdvancedEXT&);
        void deserialize_struct(parsed_map&, VkColorBlendAdvancedEXT&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassTransformBeginInfoQCOM&);
        void deserialize_struct(parsed_map&, VkRenderPassTransformBeginInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkCopyCommandTransformInfoQCOM&);
        void deserialize_struct(parsed_map&, VkCopyCommandTransformInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferInheritanceRenderPassTransformInfoQCOM&);
        void deserialize_struct(parsed_map&, VkCommandBufferInheritanceRenderPassTransformInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDiagnosticsConfigFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDiagnosticsConfigFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkDeviceDiagnosticsConfigCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkDeviceDiagnosticsConfigCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRobustness2FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRobustness2FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRobustness2PropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRobustness2PropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageRobustnessFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageRobustnessFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevice4444FormatsFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevice4444FormatsFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSubpassShadingFeaturesHUAWEI&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSubpassShadingFeaturesHUAWEI&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI&);
    

        void serialize_struct(boost::json::object&, const VkBufferCopy2&);
        void deserialize_struct(parsed_map&, VkBufferCopy2&);
    

        void serialize_struct(boost::json::object&, const VkImageCopy2&);
        void deserialize_struct(parsed_map&, VkImageCopy2&);
    

        void serialize_struct(boost::json::object&, const VkImageBlit2&);
        void deserialize_struct(parsed_map&, VkImageBlit2&);
    

        void serialize_struct(boost::json::object&, const VkBufferImageCopy2&);
        void deserialize_struct(parsed_map&, VkBufferImageCopy2&);
    

        void serialize_struct(boost::json::object&, const VkImageResolve2&);
        void deserialize_struct(parsed_map&, VkImageResolve2&);
    

        void serialize_struct(boost::json::object&, const VkCopyBufferInfo2&);
        void deserialize_struct(parsed_map&, VkCopyBufferInfo2&);
    

        void serialize_struct(boost::json::object&, const VkCopyImageInfo2&);
        void deserialize_struct(parsed_map&, VkCopyImageInfo2&);
    

        void serialize_struct(boost::json::object&, const VkBlitImageInfo2&);
        void deserialize_struct(parsed_map&, VkBlitImageInfo2&);
    

        void serialize_struct(boost::json::object&, const VkCopyBufferToImageInfo2&);
        void deserialize_struct(parsed_map&, VkCopyBufferToImageInfo2&);
    

        void serialize_struct(boost::json::object&, const VkCopyImageToBufferInfo2&);
        void deserialize_struct(parsed_map&, VkCopyImageToBufferInfo2&);
    

        void serialize_struct(boost::json::object&, const VkResolveImageInfo2&);
        void deserialize_struct(parsed_map&, VkResolveImageInfo2&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkFragmentShadingRateAttachmentInfoKHR&);
        void deserialize_struct(parsed_map&, VkFragmentShadingRateAttachmentInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPipelineFragmentShadingRateStateCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkPipelineFragmentShadingRateStateCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShadingRateFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShadingRateFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShadingRatePropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShadingRatePropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShadingRateKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShadingRateKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderTerminateInvocationFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderTerminateInvocationFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkPipelineFragmentShadingRateEnumStateCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkPipelineFragmentShadingRateEnumStateCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureBuildSizesInfoKHR&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureBuildSizesInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImage2DViewOf3DFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImage2DViewOf3DFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkMutableDescriptorTypeListEXT&);
        void deserialize_struct(parsed_map&, VkMutableDescriptorTypeListEXT&);
    

        void serialize_struct(boost::json::object&, const VkMutableDescriptorTypeCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkMutableDescriptorTypeCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDepthClipControlFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDepthClipControlFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineViewportDepthClipControlCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineViewportDepthClipControlCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceExternalMemoryRDMAFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceExternalMemoryRDMAFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkVertexInputBindingDescription2EXT&);
        void deserialize_struct(parsed_map&, VkVertexInputBindingDescription2EXT&);
    

        void serialize_struct(boost::json::object&, const VkVertexInputAttributeDescription2EXT&);
        void deserialize_struct(parsed_map&, VkVertexInputAttributeDescription2EXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceColorWriteEnableFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceColorWriteEnableFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineColorWriteCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineColorWriteCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkMemoryBarrier2&);
        void deserialize_struct(parsed_map&, VkMemoryBarrier2&);
    

        void serialize_struct(boost::json::object&, const VkImageMemoryBarrier2&);
        void deserialize_struct(parsed_map&, VkImageMemoryBarrier2&);
    

        void serialize_struct(boost::json::object&, const VkBufferMemoryBarrier2&);
        void deserialize_struct(parsed_map&, VkBufferMemoryBarrier2&);
    

        void serialize_struct(boost::json::object&, const VkDependencyInfo&);
        void deserialize_struct(parsed_map&, VkDependencyInfo&);
    

        void serialize_struct(boost::json::object&, const VkSemaphoreSubmitInfo&);
        void deserialize_struct(parsed_map&, VkSemaphoreSubmitInfo&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferSubmitInfo&);
        void deserialize_struct(parsed_map&, VkCommandBufferSubmitInfo&);
    

        void serialize_struct(boost::json::object&, const VkSubmitInfo2&);
        void deserialize_struct(parsed_map&, VkSubmitInfo2&);
    

        void serialize_struct(boost::json::object&, const VkQueueFamilyCheckpointProperties2NV&);
        void deserialize_struct(parsed_map&, VkQueueFamilyCheckpointProperties2NV&);
    

        void serialize_struct(boost::json::object&, const VkCheckpointData2NV&);
        void deserialize_struct(parsed_map&, VkCheckpointData2NV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSynchronization2Features&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSynchronization2Features&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceHostImageCopyFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceHostImageCopyFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceHostImageCopyPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceHostImageCopyPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkMemoryToImageCopyEXT&);
        void deserialize_struct(parsed_map&, VkMemoryToImageCopyEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageToMemoryCopyEXT&);
        void deserialize_struct(parsed_map&, VkImageToMemoryCopyEXT&);
    

        void serialize_struct(boost::json::object&, const VkCopyMemoryToImageInfoEXT&);
        void deserialize_struct(parsed_map&, VkCopyMemoryToImageInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkCopyImageToMemoryInfoEXT&);
        void deserialize_struct(parsed_map&, VkCopyImageToMemoryInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkCopyImageToImageInfoEXT&);
        void deserialize_struct(parsed_map&, VkCopyImageToImageInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkHostImageLayoutTransitionInfoEXT&);
        void deserialize_struct(parsed_map&, VkHostImageLayoutTransitionInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSubresourceHostMemcpySizeEXT&);
        void deserialize_struct(parsed_map&, VkSubresourceHostMemcpySizeEXT&);
    

        void serialize_struct(boost::json::object&, const VkHostImageCopyDevicePerformanceQueryEXT&);
        void deserialize_struct(parsed_map&, VkHostImageCopyDevicePerformanceQueryEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceLegacyDitheringFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceLegacyDitheringFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkSubpassResolvePerformanceQueryEXT&);
        void deserialize_struct(parsed_map&, VkSubpassResolvePerformanceQueryEXT&);
    

        void serialize_struct(boost::json::object&, const VkMultisampledRenderToSingleSampledInfoEXT&);
        void deserialize_struct(parsed_map&, VkMultisampledRenderToSingleSampledInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePipelineProtectedAccessFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePipelineProtectedAccessFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkQueueFamilyVideoPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkQueueFamilyVideoPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkQueueFamilyQueryResultStatusPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkQueueFamilyQueryResultStatusPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoProfileListInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoProfileListInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceVideoFormatInfoKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceVideoFormatInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoFormatPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkVideoFormatPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoProfileInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoProfileInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoCapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkVideoCapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoSessionMemoryRequirementsKHR&);
        void deserialize_struct(parsed_map&, VkVideoSessionMemoryRequirementsKHR&);
    

        void serialize_struct(boost::json::object&, const VkBindVideoSessionMemoryInfoKHR&);
        void deserialize_struct(parsed_map&, VkBindVideoSessionMemoryInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoPictureResourceInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoPictureResourceInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoReferenceSlotInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoReferenceSlotInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeCapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeCapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeUsageInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeUsageInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH264ProfileInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH264ProfileInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH264CapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH264CapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH264SessionParametersAddInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH264SessionParametersAddInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH264SessionParametersCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH264SessionParametersCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH264PictureInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH264PictureInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH264DpbSlotInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH264DpbSlotInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH265ProfileInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH265ProfileInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH265CapabilitiesKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH265CapabilitiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH265SessionParametersAddInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH265SessionParametersAddInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH265SessionParametersCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH265SessionParametersCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH265PictureInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH265PictureInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoDecodeH265DpbSlotInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoDecodeH265DpbSlotInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoSessionCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoSessionCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoSessionParametersCreateInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoSessionParametersCreateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoSessionParametersUpdateInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoSessionParametersUpdateInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoBeginCodingInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoBeginCodingInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoEndCodingInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoEndCodingInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkVideoCodingControlInfoKHR&);
        void deserialize_struct(parsed_map&, VkVideoCodingControlInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceInheritedViewportScissorFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceInheritedViewportScissorFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferInheritanceViewportScissorInfoNV&);
        void deserialize_struct(parsed_map&, VkCommandBufferInheritanceViewportScissorInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceProvokingVertexFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceProvokingVertexFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceProvokingVertexPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceProvokingVertexPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRasterizationProvokingVertexStateCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineRasterizationProvokingVertexStateCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkCuModuleCreateInfoNVX&);
        void deserialize_struct(parsed_map&, VkCuModuleCreateInfoNVX&);
    

        void serialize_struct(boost::json::object&, const VkCuFunctionCreateInfoNVX&);
        void deserialize_struct(parsed_map&, VkCuFunctionCreateInfoNVX&);
    

        void serialize_struct(boost::json::object&, const VkCuLaunchInfoNVX&);
        void deserialize_struct(parsed_map&, VkCuLaunchInfoNVX&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDescriptorBufferFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDescriptorBufferFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDescriptorBufferPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDescriptorBufferPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorAddressInfoEXT&);
        void deserialize_struct(parsed_map&, VkDescriptorAddressInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorBufferBindingInfoEXT&);
        void deserialize_struct(parsed_map&, VkDescriptorBufferBindingInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorBufferBindingPushDescriptorBufferHandleEXT&);
        void deserialize_struct(parsed_map&, VkDescriptorBufferBindingPushDescriptorBufferHandleEXT&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorDataEXT&);
        void deserialize_struct(parsed_map&, VkDescriptorDataEXT&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorGetInfoEXT&);
        void deserialize_struct(parsed_map&, VkDescriptorGetInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkBufferCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(parsed_map&, VkBufferCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(parsed_map&, VkImageCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageViewCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(parsed_map&, VkImageViewCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSamplerCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(parsed_map&, VkSamplerCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureCaptureDescriptorDataInfoEXT&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureCaptureDescriptorDataInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkOpaqueCaptureDescriptorDataCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkOpaqueCaptureDescriptorDataCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderIntegerDotProductFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderIntegerDotProductFeatures&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderIntegerDotProductProperties&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderIntegerDotProductProperties&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDrmPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDrmPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingMotionBlurFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingMotionBlurFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureGeometryMotionTrianglesDataNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureGeometryMotionTrianglesDataNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureMotionInfoNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureMotionInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkSRTDataNV&);
        void deserialize_struct(parsed_map&, VkSRTDataNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureSRTMotionInstanceNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureSRTMotionInstanceNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureMatrixMotionInstanceNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureMatrixMotionInstanceNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureMotionInstanceDataNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureMotionInstanceDataNV&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureMotionInstanceNV&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureMotionInstanceNV&);
    

        void serialize_struct(boost::json::object&, const VkMemoryGetRemoteAddressInfoNV&);
        void deserialize_struct(parsed_map&, VkMemoryGetRemoteAddressInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkFormatProperties3&);
        void deserialize_struct(parsed_map&, VkFormatProperties3&);
    

        void serialize_struct(boost::json::object&, const VkDrmFormatModifierPropertiesList2EXT&);
        void deserialize_struct(parsed_map&, VkDrmFormatModifierPropertiesList2EXT&);
    

        void serialize_struct(boost::json::object&, const VkDrmFormatModifierProperties2EXT&);
        void deserialize_struct(parsed_map&, VkDrmFormatModifierProperties2EXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRenderingCreateInfo&);
        void deserialize_struct(parsed_map&, VkPipelineRenderingCreateInfo&);
    

        void serialize_struct(boost::json::object&, const VkRenderingInfo&);
        void deserialize_struct(parsed_map&, VkRenderingInfo&);
    

        void serialize_struct(boost::json::object&, const VkRenderingAttachmentInfo&);
        void deserialize_struct(parsed_map&, VkRenderingAttachmentInfo&);
    

        void serialize_struct(boost::json::object&, const VkRenderingFragmentShadingRateAttachmentInfoKHR&);
        void deserialize_struct(parsed_map&, VkRenderingFragmentShadingRateAttachmentInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkRenderingFragmentDensityMapAttachmentInfoEXT&);
        void deserialize_struct(parsed_map&, VkRenderingFragmentDensityMapAttachmentInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDynamicRenderingFeatures&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDynamicRenderingFeatures&);
    

        void serialize_struct(boost::json::object&, const VkCommandBufferInheritanceRenderingInfo&);
        void deserialize_struct(parsed_map&, VkCommandBufferInheritanceRenderingInfo&);
    

        void serialize_struct(boost::json::object&, const VkAttachmentSampleCountInfoAMD&);
        void deserialize_struct(parsed_map&, VkAttachmentSampleCountInfoAMD&);
    

        void serialize_struct(boost::json::object&, const VkMultiviewPerViewAttributesInfoNVX&);
        void deserialize_struct(parsed_map&, VkMultiviewPerViewAttributesInfoNVX&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageViewMinLodFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageViewMinLodFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageViewMinLodCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkImageViewMinLodCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceLinearColorAttachmentFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceLinearColorAttachmentFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkGraphicsPipelineLibraryCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkGraphicsPipelineLibraryCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetBindingReferenceVALVE&);
        void deserialize_struct(parsed_map&, VkDescriptorSetBindingReferenceVALVE&);
    

        void serialize_struct(boost::json::object&, const VkDescriptorSetLayoutHostMappingInfoVALVE&);
        void deserialize_struct(parsed_map&, VkDescriptorSetLayoutHostMappingInfoVALVE&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineShaderStageModuleIdentifierCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineShaderStageModuleIdentifierCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkShaderModuleIdentifierEXT&);
        void deserialize_struct(parsed_map&, VkShaderModuleIdentifierEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageCompressionControlEXT&);
        void deserialize_struct(parsed_map&, VkImageCompressionControlEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageCompressionControlFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageCompressionControlFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageCompressionPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkImageCompressionPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageSubresource2KHR&);
        void deserialize_struct(parsed_map&, VkImageSubresource2KHR&);
    

        void serialize_struct(boost::json::object&, const VkSubresourceLayout2KHR&);
        void deserialize_struct(parsed_map&, VkSubresourceLayout2KHR&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassCreationControlEXT&);
        void deserialize_struct(parsed_map&, VkRenderPassCreationControlEXT&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassCreationFeedbackInfoEXT&);
        void deserialize_struct(parsed_map&, VkRenderPassCreationFeedbackInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassCreationFeedbackCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkRenderPassCreationFeedbackCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassSubpassFeedbackInfoEXT&);
        void deserialize_struct(parsed_map&, VkRenderPassSubpassFeedbackInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkRenderPassSubpassFeedbackCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkRenderPassSubpassFeedbackCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkMicromapBuildInfoEXT&);
        void deserialize_struct(parsed_map&, VkMicromapBuildInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkMicromapCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkMicromapCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkMicromapVersionInfoEXT&);
        void deserialize_struct(parsed_map&, VkMicromapVersionInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkCopyMicromapInfoEXT&);
        void deserialize_struct(parsed_map&, VkCopyMicromapInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkCopyMicromapToMemoryInfoEXT&);
        void deserialize_struct(parsed_map&, VkCopyMicromapToMemoryInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkCopyMemoryToMicromapInfoEXT&);
        void deserialize_struct(parsed_map&, VkCopyMemoryToMicromapInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkMicromapBuildSizesInfoEXT&);
        void deserialize_struct(parsed_map&, VkMicromapBuildSizesInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkMicromapUsageEXT&);
        void deserialize_struct(parsed_map&, VkMicromapUsageEXT&);
    

        void serialize_struct(boost::json::object&, const VkMicromapTriangleEXT&);
        void deserialize_struct(parsed_map&, VkMicromapTriangleEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceOpacityMicromapFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceOpacityMicromapFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceOpacityMicromapPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceOpacityMicromapPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkAccelerationStructureTrianglesOpacityMicromapEXT&);
        void deserialize_struct(parsed_map&, VkAccelerationStructureTrianglesOpacityMicromapEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelinePropertiesIdentifierEXT&);
        void deserialize_struct(parsed_map&, VkPipelinePropertiesIdentifierEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePipelinePropertiesFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePipelinePropertiesFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD&);
    

        void serialize_struct(boost::json::object&, const VkExternalMemoryAcquireUnmodifiedEXT&);
        void deserialize_struct(parsed_map&, VkExternalMemoryAcquireUnmodifiedEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePipelineRobustnessFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePipelineRobustnessFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPipelineRobustnessCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkPipelineRobustnessCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePipelineRobustnessPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePipelineRobustnessPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkImageViewSampleWeightCreateInfoQCOM&);
        void deserialize_struct(parsed_map&, VkImageViewSampleWeightCreateInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageProcessingFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageProcessingFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageProcessingPropertiesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageProcessingPropertiesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceTilePropertiesFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceTilePropertiesFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkTilePropertiesQCOM&);
        void deserialize_struct(parsed_map&, VkTilePropertiesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceAmigoProfilingFeaturesSEC&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceAmigoProfilingFeaturesSEC&);
    

        void serialize_struct(boost::json::object&, const VkAmigoProfilingSubmitInfoSEC&);
        void deserialize_struct(parsed_map&, VkAmigoProfilingSubmitInfoSEC&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDepthClampZeroOneFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDepthClampZeroOneFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceAddressBindingReportFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceAddressBindingReportFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceAddressBindingCallbackDataEXT&);
        void deserialize_struct(parsed_map&, VkDeviceAddressBindingCallbackDataEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceOpticalFlowFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceOpticalFlowFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceOpticalFlowPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceOpticalFlowPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkOpticalFlowImageFormatInfoNV&);
        void deserialize_struct(parsed_map&, VkOpticalFlowImageFormatInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkOpticalFlowImageFormatPropertiesNV&);
        void deserialize_struct(parsed_map&, VkOpticalFlowImageFormatPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkOpticalFlowSessionCreateInfoNV&);
        void deserialize_struct(parsed_map&, VkOpticalFlowSessionCreateInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkOpticalFlowSessionCreatePrivateDataInfoNV&);
        void deserialize_struct(parsed_map&, VkOpticalFlowSessionCreatePrivateDataInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkOpticalFlowExecuteInfoNV&);
        void deserialize_struct(parsed_map&, VkOpticalFlowExecuteInfoNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFaultFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFaultFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceFaultAddressInfoEXT&);
        void deserialize_struct(parsed_map&, VkDeviceFaultAddressInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceFaultVendorInfoEXT&);
        void deserialize_struct(parsed_map&, VkDeviceFaultVendorInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceFaultCountsEXT&);
        void deserialize_struct(parsed_map&, VkDeviceFaultCountsEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceFaultInfoEXT&);
        void deserialize_struct(parsed_map&, VkDeviceFaultInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDeviceFaultVendorBinaryHeaderVersionOneEXT&);
        void deserialize_struct(parsed_map&, VkDeviceFaultVendorBinaryHeaderVersionOneEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkDepthBiasInfoEXT&);
        void deserialize_struct(parsed_map&, VkDepthBiasInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDepthBiasRepresentationInfoEXT&);
        void deserialize_struct(parsed_map&, VkDepthBiasRepresentationInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkDecompressMemoryRegionNV&);
        void deserialize_struct(parsed_map&, VkDecompressMemoryRegionNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM&);
    

        void serialize_struct(boost::json::object&, const VkFrameBoundaryEXT&);
        void deserialize_struct(parsed_map&, VkFrameBoundaryEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceFrameBoundaryFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceFrameBoundaryFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkSurfacePresentModeEXT&);
        void deserialize_struct(parsed_map&, VkSurfacePresentModeEXT&);
    

        void serialize_struct(boost::json::object&, const VkSurfacePresentScalingCapabilitiesEXT&);
        void deserialize_struct(parsed_map&, VkSurfacePresentScalingCapabilitiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkSurfacePresentModeCompatibilityEXT&);
        void deserialize_struct(parsed_map&, VkSurfacePresentModeCompatibilityEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainPresentFenceInfoEXT&);
        void deserialize_struct(parsed_map&, VkSwapchainPresentFenceInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainPresentModesCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkSwapchainPresentModesCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainPresentModeInfoEXT&);
        void deserialize_struct(parsed_map&, VkSwapchainPresentModeInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkSwapchainPresentScalingCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkSwapchainPresentScalingCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkReleaseSwapchainImagesInfoEXT&);
        void deserialize_struct(parsed_map&, VkReleaseSwapchainImagesInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDepthBiasControlFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDepthBiasControlFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV&);
    

        void serialize_struct(boost::json::object&, const VkDirectDriverLoadingInfoLUNARG&);
        void deserialize_struct(parsed_map&, VkDirectDriverLoadingInfoLUNARG&);
    

        void serialize_struct(boost::json::object&, const VkDirectDriverLoadingListLUNARG&);
        void deserialize_struct(parsed_map&, VkDirectDriverLoadingListLUNARG&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkDeviceImageSubresourceInfoKHR&);
        void deserialize_struct(parsed_map&, VkDeviceImageSubresourceInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderCorePropertiesARM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderCorePropertiesARM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM&);
        void deserialize_struct(parsed_map&, VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkQueryLowLatencySupportNV&);
        void deserialize_struct(parsed_map&, VkQueryLowLatencySupportNV&);
    

        void serialize_struct(boost::json::object&, const VkMemoryMapInfoKHR&);
        void deserialize_struct(parsed_map&, VkMemoryMapInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkMemoryUnmapInfoKHR&);
        void deserialize_struct(parsed_map&, VkMemoryUnmapInfoKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderObjectFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderObjectFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderObjectPropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderObjectPropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkShaderCreateInfoEXT&);
        void deserialize_struct(parsed_map&, VkShaderCreateInfoEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderTileImageFeaturesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderTileImageFeaturesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceShaderTileImagePropertiesEXT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceShaderTileImagePropertiesEXT&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCooperativeMatrixFeaturesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCooperativeMatrixFeaturesKHR&);
    

        void serialize_struct(boost::json::object&, const VkCooperativeMatrixPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkCooperativeMatrixPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCooperativeMatrixPropertiesKHR&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCooperativeMatrixPropertiesKHR&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCubicClampFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCubicClampFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceYcbcrDegammaFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceYcbcrDegammaFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM&);
        void deserialize_struct(parsed_map&, VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceCubicWeightsFeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceCubicWeightsFeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkSamplerCubicWeightsCreateInfoQCOM&);
        void deserialize_struct(parsed_map&, VkSamplerCubicWeightsCreateInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkBlitImageCubicWeightsInfoQCOM&);
        void deserialize_struct(parsed_map&, VkBlitImageCubicWeightsInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageProcessing2FeaturesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageProcessing2FeaturesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceImageProcessing2PropertiesQCOM&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceImageProcessing2PropertiesQCOM&);
    

        void serialize_struct(boost::json::object&, const VkSamplerBlockMatchWindowCreateInfoQCOM&);
        void deserialize_struct(parsed_map&, VkSamplerBlockMatchWindowCreateInfoQCOM&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV&);
    

        void serialize_struct(boost::json::object&, const VkPhysicalDeviceLayeredDriverPropertiesMSFT&);
        void deserialize_struct(parsed_map&, VkPhysicalDeviceLayeredDriverPropertiesMSFT&);
    
void serialize_PFN_vkInternalAllocationNotification(boost::json::object&, const PFN_vkInternalAllocationNotification&);
void handle_PFN_vkInternalAllocationNotification(parsed_map&);
void deserialize_PFN_vkInternalAllocationNotification(parsed_map&, PFN_vkInternalAllocationNotification&);
void serialize_PFN_vkInternalFreeNotification(boost::json::object&, const PFN_vkInternalFreeNotification&);
void handle_PFN_vkInternalFreeNotification(parsed_map&);
void deserialize_PFN_vkInternalFreeNotification(parsed_map&, PFN_vkInternalFreeNotification&);
void serialize_PFN_vkReallocationFunction(boost::json::object&, const PFN_vkReallocationFunction&);
void handle_PFN_vkReallocationFunction(parsed_map&);
void deserialize_PFN_vkReallocationFunction(parsed_map&, PFN_vkReallocationFunction&);
void serialize_PFN_vkAllocationFunction(boost::json::object&, const PFN_vkAllocationFunction&);
void handle_PFN_vkAllocationFunction(parsed_map&);
void deserialize_PFN_vkAllocationFunction(parsed_map&, PFN_vkAllocationFunction&);
void serialize_PFN_vkFreeFunction(boost::json::object&, const PFN_vkFreeFunction&);
void handle_PFN_vkFreeFunction(parsed_map&);
void deserialize_PFN_vkFreeFunction(parsed_map&, PFN_vkFreeFunction&);
void serialize_PFN_vkDebugReportCallbackEXT(boost::json::object&, const PFN_vkDebugReportCallbackEXT&);
void handle_PFN_vkDebugReportCallbackEXT(parsed_map&);
void deserialize_PFN_vkDebugReportCallbackEXT(parsed_map&, PFN_vkDebugReportCallbackEXT&);
void serialize_PFN_vkDebugUtilsMessengerCallbackEXT(boost::json::object&, const PFN_vkDebugUtilsMessengerCallbackEXT&);
void handle_PFN_vkDebugUtilsMessengerCallbackEXT(parsed_map&);
void deserialize_PFN_vkDebugUtilsMessengerCallbackEXT(parsed_map&, PFN_vkDebugUtilsMessengerCallbackEXT&);
void serialize_PFN_vkDeviceMemoryReportCallbackEXT(boost::json::object&, const PFN_vkDeviceMemoryReportCallbackEXT&);
void handle_PFN_vkDeviceMemoryReportCallbackEXT(parsed_map&);
void deserialize_PFN_vkDeviceMemoryReportCallbackEXT(parsed_map&, PFN_vkDeviceMemoryReportCallbackEXT&);
void serialize_PFN_vkGetInstanceProcAddrLUNARG(boost::json::object&, const PFN_vkGetInstanceProcAddrLUNARG&);
void deserialize_PFN_vkGetInstanceProcAddrLUNARG(parsed_map&, PFN_vkGetInstanceProcAddrLUNARG&);
void serialize_VkInstance(boost::json::value&, const VkInstance&);

        void deserialize_VkInstance(element&, VkInstance&);
        void delete_VkInstance(const VkInstance&);
        
void serialize_VkPhysicalDevice(boost::json::value&, const VkPhysicalDevice&);

        void deserialize_VkPhysicalDevice(element&, VkPhysicalDevice&);
        void delete_VkPhysicalDevice(const VkPhysicalDevice&);
        
void serialize_VkDevice(boost::json::value&, const VkDevice&);

        void deserialize_VkDevice(element&, VkDevice&);
        void delete_VkDevice(const VkDevice&);
        
void serialize_VkQueue(boost::json::value&, const VkQueue&);

        void deserialize_VkQueue(element&, VkQueue&);
        void delete_VkQueue(const VkQueue&);
        
void serialize_VkCommandBuffer(boost::json::value&, const VkCommandBuffer&);

        void deserialize_VkCommandBuffer(element&, VkCommandBuffer&);
        void delete_VkCommandBuffer(const VkCommandBuffer&);
        
void serialize_VkDeviceMemory(boost::json::value&, const VkDeviceMemory&);

        void deserialize_VkDeviceMemory(element&, VkDeviceMemory&);
        void delete_VkDeviceMemory(const VkDeviceMemory&);
        
void serialize_VkCommandPool(boost::json::value&, const VkCommandPool&);

        void deserialize_VkCommandPool(element&, VkCommandPool&);
        void delete_VkCommandPool(const VkCommandPool&);
        
void serialize_VkBuffer(boost::json::value&, const VkBuffer&);

        void deserialize_VkBuffer(element&, VkBuffer&);
        void delete_VkBuffer(const VkBuffer&);
        
void serialize_VkBufferView(boost::json::value&, const VkBufferView&);

        void deserialize_VkBufferView(element&, VkBufferView&);
        void delete_VkBufferView(const VkBufferView&);
        
void serialize_VkImage(boost::json::value&, const VkImage&);

        void deserialize_VkImage(element&, VkImage&);
        void delete_VkImage(const VkImage&);
        
void serialize_VkImageView(boost::json::value&, const VkImageView&);

        void deserialize_VkImageView(element&, VkImageView&);
        void delete_VkImageView(const VkImageView&);
        
void serialize_VkShaderModule(boost::json::value&, const VkShaderModule&);

        void deserialize_VkShaderModule(element&, VkShaderModule&);
        void delete_VkShaderModule(const VkShaderModule&);
        
void serialize_VkPipeline(boost::json::value&, const VkPipeline&);

        void deserialize_VkPipeline(element&, VkPipeline&);
        void delete_VkPipeline(const VkPipeline&);
        
void serialize_VkPipelineLayout(boost::json::value&, const VkPipelineLayout&);

        void deserialize_VkPipelineLayout(element&, VkPipelineLayout&);
        void delete_VkPipelineLayout(const VkPipelineLayout&);
        
void serialize_VkSampler(boost::json::value&, const VkSampler&);

        void deserialize_VkSampler(element&, VkSampler&);
        void delete_VkSampler(const VkSampler&);
        
void serialize_VkDescriptorSet(boost::json::value&, const VkDescriptorSet&);

        void deserialize_VkDescriptorSet(element&, VkDescriptorSet&);
        void delete_VkDescriptorSet(const VkDescriptorSet&);
        
void serialize_VkDescriptorSetLayout(boost::json::value&, const VkDescriptorSetLayout&);

        void deserialize_VkDescriptorSetLayout(element&, VkDescriptorSetLayout&);
        void delete_VkDescriptorSetLayout(const VkDescriptorSetLayout&);
        
void serialize_VkDescriptorPool(boost::json::value&, const VkDescriptorPool&);

        void deserialize_VkDescriptorPool(element&, VkDescriptorPool&);
        void delete_VkDescriptorPool(const VkDescriptorPool&);
        
void serialize_VkFence(boost::json::value&, const VkFence&);

        void deserialize_VkFence(element&, VkFence&);
        void delete_VkFence(const VkFence&);
        
void serialize_VkSemaphore(boost::json::value&, const VkSemaphore&);

        void deserialize_VkSemaphore(element&, VkSemaphore&);
        void delete_VkSemaphore(const VkSemaphore&);
        
void serialize_VkEvent(boost::json::value&, const VkEvent&);

        void deserialize_VkEvent(element&, VkEvent&);
        void delete_VkEvent(const VkEvent&);
        
void serialize_VkQueryPool(boost::json::value&, const VkQueryPool&);

        void deserialize_VkQueryPool(element&, VkQueryPool&);
        void delete_VkQueryPool(const VkQueryPool&);
        
void serialize_VkFramebuffer(boost::json::value&, const VkFramebuffer&);

        void deserialize_VkFramebuffer(element&, VkFramebuffer&);
        void delete_VkFramebuffer(const VkFramebuffer&);
        
void serialize_VkRenderPass(boost::json::value&, const VkRenderPass&);

        void deserialize_VkRenderPass(element&, VkRenderPass&);
        void delete_VkRenderPass(const VkRenderPass&);
        
void serialize_VkPipelineCache(boost::json::value&, const VkPipelineCache&);

        void deserialize_VkPipelineCache(element&, VkPipelineCache&);
        void delete_VkPipelineCache(const VkPipelineCache&);
        
void serialize_VkIndirectCommandsLayoutNV(boost::json::value&, const VkIndirectCommandsLayoutNV&);

        void deserialize_VkIndirectCommandsLayoutNV(element&, VkIndirectCommandsLayoutNV&);
        void delete_VkIndirectCommandsLayoutNV(const VkIndirectCommandsLayoutNV&);
        
void serialize_VkDescriptorUpdateTemplate(boost::json::value&, const VkDescriptorUpdateTemplate&);

        void deserialize_VkDescriptorUpdateTemplate(element&, VkDescriptorUpdateTemplate&);
        void delete_VkDescriptorUpdateTemplate(const VkDescriptorUpdateTemplate&);
        
void serialize_VkDescriptorUpdateTemplateKHR(boost::json::value&, const VkDescriptorUpdateTemplateKHR&);

        void deserialize_VkDescriptorUpdateTemplateKHR(element&, VkDescriptorUpdateTemplateKHR&);
        void delete_VkDescriptorUpdateTemplateKHR(const VkDescriptorUpdateTemplateKHR&);
        
void serialize_VkSamplerYcbcrConversion(boost::json::value&, const VkSamplerYcbcrConversion&);

        void deserialize_VkSamplerYcbcrConversion(element&, VkSamplerYcbcrConversion&);
        void delete_VkSamplerYcbcrConversion(const VkSamplerYcbcrConversion&);
        
void serialize_VkSamplerYcbcrConversionKHR(boost::json::value&, const VkSamplerYcbcrConversionKHR&);

        void deserialize_VkSamplerYcbcrConversionKHR(element&, VkSamplerYcbcrConversionKHR&);
        void delete_VkSamplerYcbcrConversionKHR(const VkSamplerYcbcrConversionKHR&);
        
void serialize_VkValidationCacheEXT(boost::json::value&, const VkValidationCacheEXT&);

        void deserialize_VkValidationCacheEXT(element&, VkValidationCacheEXT&);
        void delete_VkValidationCacheEXT(const VkValidationCacheEXT&);
        
void serialize_VkAccelerationStructureKHR(boost::json::value&, const VkAccelerationStructureKHR&);

        void deserialize_VkAccelerationStructureKHR(element&, VkAccelerationStructureKHR&);
        void delete_VkAccelerationStructureKHR(const VkAccelerationStructureKHR&);
        
void serialize_VkAccelerationStructureNV(boost::json::value&, const VkAccelerationStructureNV&);

        void deserialize_VkAccelerationStructureNV(element&, VkAccelerationStructureNV&);
        void delete_VkAccelerationStructureNV(const VkAccelerationStructureNV&);
        
void serialize_VkPerformanceConfigurationINTEL(boost::json::value&, const VkPerformanceConfigurationINTEL&);

        void deserialize_VkPerformanceConfigurationINTEL(element&, VkPerformanceConfigurationINTEL&);
        void delete_VkPerformanceConfigurationINTEL(const VkPerformanceConfigurationINTEL&);
        
void serialize_VkDeferredOperationKHR(boost::json::value&, const VkDeferredOperationKHR&);

        void deserialize_VkDeferredOperationKHR(element&, VkDeferredOperationKHR&);
        void delete_VkDeferredOperationKHR(const VkDeferredOperationKHR&);
        
void serialize_VkPrivateDataSlot(boost::json::value&, const VkPrivateDataSlot&);

        void deserialize_VkPrivateDataSlot(element&, VkPrivateDataSlot&);
        void delete_VkPrivateDataSlot(const VkPrivateDataSlot&);
        
void serialize_VkPrivateDataSlotEXT(boost::json::value&, const VkPrivateDataSlotEXT&);

        void deserialize_VkPrivateDataSlotEXT(element&, VkPrivateDataSlotEXT&);
        void delete_VkPrivateDataSlotEXT(const VkPrivateDataSlotEXT&);
        
void serialize_VkCuModuleNVX(boost::json::value&, const VkCuModuleNVX&);

        void deserialize_VkCuModuleNVX(element&, VkCuModuleNVX&);
        void delete_VkCuModuleNVX(const VkCuModuleNVX&);
        
void serialize_VkCuFunctionNVX(boost::json::value&, const VkCuFunctionNVX&);

        void deserialize_VkCuFunctionNVX(element&, VkCuFunctionNVX&);
        void delete_VkCuFunctionNVX(const VkCuFunctionNVX&);
        
void serialize_VkOpticalFlowSessionNV(boost::json::value&, const VkOpticalFlowSessionNV&);

        void deserialize_VkOpticalFlowSessionNV(element&, VkOpticalFlowSessionNV&);
        void delete_VkOpticalFlowSessionNV(const VkOpticalFlowSessionNV&);
        
void serialize_VkMicromapEXT(boost::json::value&, const VkMicromapEXT&);

        void deserialize_VkMicromapEXT(element&, VkMicromapEXT&);
        void delete_VkMicromapEXT(const VkMicromapEXT&);
        
void serialize_VkShaderEXT(boost::json::value&, const VkShaderEXT&);

        void deserialize_VkShaderEXT(element&, VkShaderEXT&);
        void delete_VkShaderEXT(const VkShaderEXT&);
        
void serialize_VkDisplayKHR(boost::json::value&, const VkDisplayKHR&);

        void deserialize_VkDisplayKHR(element&, VkDisplayKHR&);
        void delete_VkDisplayKHR(const VkDisplayKHR&);
        
void serialize_VkDisplayModeKHR(boost::json::value&, const VkDisplayModeKHR&);

        void deserialize_VkDisplayModeKHR(element&, VkDisplayModeKHR&);
        void delete_VkDisplayModeKHR(const VkDisplayModeKHR&);
        
void serialize_VkSurfaceKHR(boost::json::value&, const VkSurfaceKHR&);

        void deserialize_VkSurfaceKHR(element&, VkSurfaceKHR&);
        void delete_VkSurfaceKHR(const VkSurfaceKHR&);
        
void serialize_VkSwapchainKHR(boost::json::value&, const VkSwapchainKHR&);

        void deserialize_VkSwapchainKHR(element&, VkSwapchainKHR&);
        void delete_VkSwapchainKHR(const VkSwapchainKHR&);
        
void serialize_VkDebugReportCallbackEXT(boost::json::value&, const VkDebugReportCallbackEXT&);

        void deserialize_VkDebugReportCallbackEXT(element&, VkDebugReportCallbackEXT&);
        void delete_VkDebugReportCallbackEXT(const VkDebugReportCallbackEXT&);
        
void serialize_VkDebugUtilsMessengerEXT(boost::json::value&, const VkDebugUtilsMessengerEXT&);

        void deserialize_VkDebugUtilsMessengerEXT(element&, VkDebugUtilsMessengerEXT&);
        void delete_VkDebugUtilsMessengerEXT(const VkDebugUtilsMessengerEXT&);
        
void serialize_VkVideoSessionKHR(boost::json::value&, const VkVideoSessionKHR&);

        void deserialize_VkVideoSessionKHR(element&, VkVideoSessionKHR&);
        void delete_VkVideoSessionKHR(const VkVideoSessionKHR&);
        
void serialize_VkVideoSessionParametersKHR(boost::json::value&, const VkVideoSessionParametersKHR&);

        void deserialize_VkVideoSessionParametersKHR(element&, VkVideoSessionParametersKHR&);
        void delete_VkVideoSessionParametersKHR(const VkVideoSessionParametersKHR&);
        
