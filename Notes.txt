Profiler didn't point me to the biggest source of slowness since they couldn't tell me about IO. I only got the idea that vkCmd could be the problem as I saw in perf that vkCmdBindDescriptorSets was the vk-command that took up the most CPU time, which meant it was likely being called a lot.

However, did cause me to optimize JSON handling for the synchronization hot-path, transportation channel, and hashing, so win-win?

Vulkan applications are written wit hthe assumption that vulkan calls are cheap (many applications have little-to-no caching of objects/reusing objects/persistent mappings, etc.). This is almost always true, except for my driver.
