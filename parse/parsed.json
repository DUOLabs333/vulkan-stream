{
    "external_handles": {
        "Display": true,
        "VisualID": false,
        "Window": false,
        "xcb_connection_t": true,
        "xcb_visualid_t": false,
        "xcb_window_t": false,
        "StdVideoH264ProfileIdc": false,
        "StdVideoH264LevelIdc": false,
        "StdVideoH264ChromaFormatIdc": true,
        "StdVideoH264PocType": true,
        "StdVideoH264SpsFlags": true,
        "StdVideoH264ScalingLists": true,
        "StdVideoH264SequenceParameterSetVui": true,
        "StdVideoH264AspectRatioIdc": true,
        "StdVideoH264HrdParameters": true,
        "StdVideoH264SpsVuiFlags": true,
        "StdVideoH264WeightedBipredIdc": true,
        "StdVideoH264PpsFlags": true,
        "StdVideoH264SliceType": true,
        "StdVideoH264CabacInitIdc": true,
        "StdVideoH264DisableDeblockingFilterIdc": true,
        "StdVideoH264PictureType": true,
        "StdVideoH264ModificationOfPicNumsIdc": true,
        "StdVideoH264MemMgmtControlOp": true,
        "StdVideoDecodeH264PictureInfo": true,
        "StdVideoDecodeH264ReferenceInfo": true,
        "StdVideoDecodeH264PictureInfoFlags": true,
        "StdVideoDecodeH264ReferenceInfoFlags": true,
        "StdVideoH264SequenceParameterSet": true,
        "StdVideoH264PictureParameterSet": true,
        "StdVideoH265ProfileIdc": false,
        "StdVideoH265VideoParameterSet": true,
        "StdVideoH265SequenceParameterSet": true,
        "StdVideoH265PictureParameterSet": true,
        "StdVideoH265DecPicBufMgr": true,
        "StdVideoH265HrdParameters": true,
        "StdVideoH265VpsFlags": true,
        "StdVideoH265LevelIdc": false,
        "StdVideoH265SpsFlags": true,
        "StdVideoH265ScalingLists": true,
        "StdVideoH265SequenceParameterSetVui": true,
        "StdVideoH265PredictorPaletteEntries": true,
        "StdVideoH265PpsFlags": true,
        "StdVideoH265SubLayerHrdParameters": true,
        "StdVideoH265HrdFlags": true,
        "StdVideoH265SpsVuiFlags": true,
        "StdVideoH265SliceType": true,
        "StdVideoH265PictureType": true,
        "StdVideoDecodeH265PictureInfo": true,
        "StdVideoDecodeH265ReferenceInfo": true,
        "StdVideoDecodeH265PictureInfoFlags": true,
        "StdVideoDecodeH265ReferenceInfoFlags": true
    },
    "handles": {
        "VkInstance": 1,
        "VkPhysicalDevice": 1,
        "VkDevice": 1,
        "VkQueue": 1,
        "VkCommandBuffer": 1,
        "VkDeviceMemory": 1,
        "VkCommandPool": 1,
        "VkBuffer": 1,
        "VkBufferView": 1,
        "VkImage": 1,
        "VkImageView": 1,
        "VkShaderModule": 1,
        "VkPipeline": 1,
        "VkPipelineLayout": 1,
        "VkSampler": 1,
        "VkDescriptorSet": 1,
        "VkDescriptorSetLayout": 1,
        "VkDescriptorPool": 1,
        "VkFence": 1,
        "VkSemaphore": 1,
        "VkEvent": 1,
        "VkQueryPool": 1,
        "VkFramebuffer": 1,
        "VkRenderPass": 1,
        "VkPipelineCache": 1,
        "VkIndirectCommandsLayoutNV": 1,
        "VkDescriptorUpdateTemplate": 1,
        "VkDescriptorUpdateTemplateKHR": 1,
        "VkSamplerYcbcrConversion": 1,
        "VkSamplerYcbcrConversionKHR": 1,
        "VkValidationCacheEXT": 1,
        "VkAccelerationStructureKHR": 1,
        "VkAccelerationStructureNV": 1,
        "VkPerformanceConfigurationINTEL": 1,
        "VkDeferredOperationKHR": 1,
        "VkPrivateDataSlot": 1,
        "VkPrivateDataSlotEXT": 1,
        "VkCuModuleNVX": 1,
        "VkCuFunctionNVX": 1,
        "VkOpticalFlowSessionNV": 1,
        "VkMicromapEXT": 1,
        "VkShaderEXT": 1,
        "VkDisplayKHR": 1,
        "VkDisplayModeKHR": 1,
        "VkSurfaceKHR": 1,
        "VkSwapchainKHR": 1,
        "VkDebugReportCallbackEXT": 1,
        "VkDebugUtilsMessengerEXT": 1,
        "VkVideoSessionKHR": 1,
        "VkVideoSessionParametersKHR": 1
    },
    "primitive_types": {
        "int": 1,
        "void": 1,
        "char": 1,
        "float": 1,
        "double": 1,
        "int8_t": 1,
        "uint8_t": 1,
        "int16_t": 1,
        "uint16_t": 1,
        "uint32_t": 1,
        "uint64_t": 1,
        "int32_t": 1,
        "int64_t": 1,
        "size_t": 1,
        "VkFramebufferCreateFlags": 1,
        "VkQueryPoolCreateFlags": 1,
        "VkRenderPassCreateFlags": 1,
        "VkSamplerCreateFlags": 1,
        "VkPipelineLayoutCreateFlags": 1,
        "VkPipelineCacheCreateFlags": 1,
        "VkPipelineDepthStencilStateCreateFlags": 1,
        "VkPipelineDynamicStateCreateFlags": 1,
        "VkPipelineColorBlendStateCreateFlags": 1,
        "VkPipelineMultisampleStateCreateFlags": 1,
        "VkPipelineRasterizationStateCreateFlags": 1,
        "VkPipelineViewportStateCreateFlags": 1,
        "VkPipelineTessellationStateCreateFlags": 1,
        "VkPipelineInputAssemblyStateCreateFlags": 1,
        "VkPipelineVertexInputStateCreateFlags": 1,
        "VkPipelineShaderStageCreateFlags": 1,
        "VkDescriptorSetLayoutCreateFlags": 1,
        "VkBufferViewCreateFlags": 1,
        "VkInstanceCreateFlags": 1,
        "VkDeviceCreateFlags": 1,
        "VkDeviceQueueCreateFlags": 1,
        "VkQueueFlags": 1,
        "VkMemoryPropertyFlags": 1,
        "VkMemoryHeapFlags": 1,
        "VkAccessFlags": 1,
        "VkBufferUsageFlags": 1,
        "VkBufferCreateFlags": 1,
        "VkShaderStageFlags": 1,
        "VkImageUsageFlags": 1,
        "VkImageCreateFlags": 1,
        "VkImageViewCreateFlags": 1,
        "VkPipelineCreateFlags": 1,
        "VkColorComponentFlags": 1,
        "VkFenceCreateFlags": 1,
        "VkSemaphoreCreateFlags": 1,
        "VkFormatFeatureFlags": 1,
        "VkQueryControlFlags": 1,
        "VkQueryResultFlags": 1,
        "VkShaderModuleCreateFlags": 1,
        "VkEventCreateFlags": 1,
        "VkCommandPoolCreateFlags": 1,
        "VkCommandPoolResetFlags": 1,
        "VkCommandBufferResetFlags": 1,
        "VkCommandBufferUsageFlags": 1,
        "VkQueryPipelineStatisticFlags": 1,
        "VkMemoryMapFlags": 1,
        "VkMemoryUnmapFlagsKHR": 1,
        "VkImageAspectFlags": 1,
        "VkSparseMemoryBindFlags": 1,
        "VkSparseImageFormatFlags": 1,
        "VkSubpassDescriptionFlags": 1,
        "VkPipelineStageFlags": 1,
        "VkSampleCountFlags": 1,
        "VkAttachmentDescriptionFlags": 1,
        "VkStencilFaceFlags": 1,
        "VkCullModeFlags": 1,
        "VkDescriptorPoolCreateFlags": 1,
        "VkDescriptorPoolResetFlags": 1,
        "VkDependencyFlags": 1,
        "VkSubgroupFeatureFlags": 1,
        "VkIndirectCommandsLayoutUsageFlagsNV": 1,
        "VkIndirectStateFlagsNV": 1,
        "VkGeometryFlagsKHR": 1,
        "VkGeometryFlagsNV": 1,
        "VkGeometryInstanceFlagsKHR": 1,
        "VkGeometryInstanceFlagsNV": 1,
        "VkBuildAccelerationStructureFlagsKHR": 1,
        "VkBuildAccelerationStructureFlagsNV": 1,
        "VkPrivateDataSlotCreateFlags": 1,
        "VkPrivateDataSlotCreateFlagsEXT": 1,
        "VkAccelerationStructureCreateFlagsKHR": 1,
        "VkDescriptorUpdateTemplateCreateFlags": 1,
        "VkDescriptorUpdateTemplateCreateFlagsKHR": 1,
        "VkPipelineCreationFeedbackFlags": 1,
        "VkPipelineCreationFeedbackFlagsEXT": 1,
        "VkPerformanceCounterDescriptionFlagsKHR": 1,
        "VkAcquireProfilingLockFlagsKHR": 1,
        "VkSemaphoreWaitFlags": 1,
        "VkSemaphoreWaitFlagsKHR": 1,
        "VkPipelineCompilerControlFlagsAMD": 1,
        "VkShaderCorePropertiesFlagsAMD": 1,
        "VkDeviceDiagnosticsConfigFlagsNV": 1,
        "VkAccessFlags2": 1,
        "VkAccessFlags2KHR": 1,
        "VkPipelineStageFlags2": 1,
        "VkPipelineStageFlags2KHR": 1,
        "VkAccelerationStructureMotionInfoFlagsNV": 1,
        "VkAccelerationStructureMotionInstanceFlagsNV": 1,
        "VkFormatFeatureFlags2": 1,
        "VkFormatFeatureFlags2KHR": 1,
        "VkRenderingFlags": 1,
        "VkMemoryDecompressionMethodFlagsNV": 1,
        "VkRenderingFlagsKHR": 1,
        "VkBuildMicromapFlagsEXT": 1,
        "VkMicromapCreateFlagsEXT": 1,
        "VkDirectDriverLoadingFlagsLUNARG": 1,
        "VkPipelineCreateFlags2KHR": 1,
        "VkBufferUsageFlags2KHR": 1,
        "VkCompositeAlphaFlagsKHR": 1,
        "VkDisplayPlaneAlphaFlagsKHR": 1,
        "VkSurfaceTransformFlagsKHR": 1,
        "VkSwapchainCreateFlagsKHR": 1,
        "VkDisplayModeCreateFlagsKHR": 1,
        "VkDisplaySurfaceCreateFlagsKHR": 1,
        "VkXlibSurfaceCreateFlagsKHR": 1,
        "VkXcbSurfaceCreateFlagsKHR": 1,
        "VkHeadlessSurfaceCreateFlagsEXT": 1,
        "VkPeerMemoryFeatureFlags": 1,
        "VkPeerMemoryFeatureFlagsKHR": 1,
        "VkMemoryAllocateFlags": 1,
        "VkMemoryAllocateFlagsKHR": 1,
        "VkDeviceGroupPresentModeFlagsKHR": 1,
        "VkDebugReportFlagsEXT": 1,
        "VkCommandPoolTrimFlags": 1,
        "VkCommandPoolTrimFlagsKHR": 1,
        "VkExternalMemoryHandleTypeFlagsNV": 1,
        "VkExternalMemoryFeatureFlagsNV": 1,
        "VkExternalMemoryHandleTypeFlags": 1,
        "VkExternalMemoryHandleTypeFlagsKHR": 1,
        "VkExternalMemoryFeatureFlags": 1,
        "VkExternalMemoryFeatureFlagsKHR": 1,
        "VkExternalSemaphoreHandleTypeFlags": 1,
        "VkExternalSemaphoreHandleTypeFlagsKHR": 1,
        "VkExternalSemaphoreFeatureFlags": 1,
        "VkExternalSemaphoreFeatureFlagsKHR": 1,
        "VkSemaphoreImportFlags": 1,
        "VkSemaphoreImportFlagsKHR": 1,
        "VkExternalFenceHandleTypeFlags": 1,
        "VkExternalFenceHandleTypeFlagsKHR": 1,
        "VkExternalFenceFeatureFlags": 1,
        "VkExternalFenceFeatureFlagsKHR": 1,
        "VkFenceImportFlags": 1,
        "VkFenceImportFlagsKHR": 1,
        "VkSurfaceCounterFlagsEXT": 1,
        "VkPipelineViewportSwizzleStateCreateFlagsNV": 1,
        "VkPipelineDiscardRectangleStateCreateFlagsEXT": 1,
        "VkPipelineCoverageToColorStateCreateFlagsNV": 1,
        "VkPipelineCoverageModulationStateCreateFlagsNV": 1,
        "VkPipelineCoverageReductionStateCreateFlagsNV": 1,
        "VkValidationCacheCreateFlagsEXT": 1,
        "VkDebugUtilsMessageSeverityFlagsEXT": 1,
        "VkDebugUtilsMessageTypeFlagsEXT": 1,
        "VkDebugUtilsMessengerCreateFlagsEXT": 1,
        "VkDebugUtilsMessengerCallbackDataFlagsEXT": 1,
        "VkDeviceMemoryReportFlagsEXT": 1,
        "VkPipelineRasterizationConservativeStateCreateFlagsEXT": 1,
        "VkDescriptorBindingFlags": 1,
        "VkDescriptorBindingFlagsEXT": 1,
        "VkConditionalRenderingFlagsEXT": 1,
        "VkResolveModeFlags": 1,
        "VkResolveModeFlagsKHR": 1,
        "VkPipelineRasterizationStateStreamCreateFlagsEXT": 1,
        "VkPipelineRasterizationDepthClipStateCreateFlagsEXT": 1,
        "VkToolPurposeFlags": 1,
        "VkToolPurposeFlagsEXT": 1,
        "VkSubmitFlags": 1,
        "VkSubmitFlagsKHR": 1,
        "VkHostImageCopyFlagsEXT": 1,
        "VkGraphicsPipelineLibraryFlagsEXT": 1,
        "VkImageCompressionFlagsEXT": 1,
        "VkImageCompressionFixedRateFlagsEXT": 1,
        "VkDeviceAddressBindingFlagsEXT": 1,
        "VkOpticalFlowGridSizeFlagsNV": 1,
        "VkOpticalFlowUsageFlagsNV": 1,
        "VkOpticalFlowSessionCreateFlagsNV": 1,
        "VkOpticalFlowExecuteFlagsNV": 1,
        "VkFrameBoundaryFlagsEXT": 1,
        "VkPresentScalingFlagsEXT": 1,
        "VkPresentGravityFlagsEXT": 1,
        "VkShaderCreateFlagsEXT": 1,
        "VkVideoCodecOperationFlagsKHR": 1,
        "VkVideoCapabilityFlagsKHR": 1,
        "VkVideoSessionCreateFlagsKHR": 1,
        "VkVideoSessionParametersCreateFlagsKHR": 1,
        "VkVideoBeginCodingFlagsKHR": 1,
        "VkVideoEndCodingFlagsKHR": 1,
        "VkVideoCodingControlFlagsKHR": 1,
        "VkVideoDecodeUsageFlagsKHR": 1,
        "VkVideoDecodeCapabilityFlagsKHR": 1,
        "VkVideoDecodeFlagsKHR": 1,
        "VkVideoDecodeH264PictureLayoutFlagsKHR": 1,
        "VkVideoChromaSubsamplingFlagsKHR": 1,
        "VkVideoComponentBitDepthFlagsKHR": 1,
        "VkAttachmentLoadOp": 1,
        "VkAttachmentStoreOp": 1,
        "VkBlendFactor": 1,
        "VkBlendOp": 1,
        "VkBorderColor": 1,
        "VkFramebufferCreateFlagBits": 1,
        "VkRenderPassCreateFlagBits": 1,
        "VkSamplerCreateFlagBits": 1,
        "VkPipelineCacheHeaderVersion": 1,
        "VkPipelineCacheCreateFlagBits": 1,
        "VkPipelineShaderStageCreateFlagBits": 1,
        "VkDescriptorSetLayoutCreateFlagBits": 1,
        "VkInstanceCreateFlagBits": 1,
        "VkDeviceQueueCreateFlagBits": 1,
        "VkBufferCreateFlagBits": 1,
        "VkBufferUsageFlagBits": 1,
        "VkColorComponentFlagBits": 1,
        "VkComponentSwizzle": 1,
        "VkCommandPoolCreateFlagBits": 1,
        "VkCommandPoolResetFlagBits": 1,
        "VkCommandBufferResetFlagBits": 1,
        "VkCommandBufferLevel": 1,
        "VkCommandBufferUsageFlagBits": 1,
        "VkCompareOp": 1,
        "VkCullModeFlagBits": 1,
        "VkDescriptorType": 1,
        "VkDynamicState": 1,
        "VkFenceCreateFlagBits": 1,
        "VkPolygonMode": 1,
        "VkFormat": 1,
        "VkFormatFeatureFlagBits": 1,
        "VkFrontFace": 1,
        "VkImageAspectFlagBits": 1,
        "VkImageCreateFlagBits": 1,
        "VkImageLayout": 1,
        "VkImageTiling": 1,
        "VkImageType": 1,
        "VkImageUsageFlagBits": 1,
        "VkImageViewCreateFlagBits": 1,
        "VkImageViewType": 1,
        "VkSharingMode": 1,
        "VkIndexType": 1,
        "VkLogicOp": 1,
        "VkMemoryHeapFlagBits": 1,
        "VkAccessFlagBits": 1,
        "VkMemoryPropertyFlagBits": 1,
        "VkPhysicalDeviceType": 1,
        "VkPipelineBindPoint": 1,
        "VkPipelineCreateFlagBits": 1,
        "VkPrimitiveTopology": 1,
        "VkQueryControlFlagBits": 1,
        "VkQueryPipelineStatisticFlagBits": 1,
        "VkQueryResultFlagBits": 1,
        "VkQueryType": 1,
        "VkQueueFlagBits": 1,
        "VkSubpassContents": 1,
        "VkResult": 1,
        "VkShaderStageFlagBits": 1,
        "VkSparseMemoryBindFlagBits": 1,
        "VkStencilFaceFlagBits": 1,
        "VkStencilOp": 1,
        "VkStructureType": 1,
        "VkSystemAllocationScope": 1,
        "VkInternalAllocationType": 1,
        "VkSamplerAddressMode": 1,
        "VkFilter": 1,
        "VkSamplerMipmapMode": 1,
        "VkVertexInputRate": 1,
        "VkPipelineStageFlagBits": 1,
        "VkSparseImageFormatFlagBits": 1,
        "VkSampleCountFlagBits": 1,
        "VkAttachmentDescriptionFlagBits": 1,
        "VkDescriptorPoolCreateFlagBits": 1,
        "VkDependencyFlagBits": 1,
        "VkObjectType": 1,
        "VkEventCreateFlagBits": 1,
        "VkPipelineLayoutCreateFlagBits": 1,
        "VkRayTracingInvocationReorderModeNV": 1,
        "VkIndirectCommandsLayoutUsageFlagBitsNV": 1,
        "VkIndirectCommandsTokenTypeNV": 1,
        "VkIndirectStateFlagBitsNV": 1,
        "VkDescriptorUpdateTemplateType": 1,
        "VkDescriptorUpdateTemplateTypeKHR": 1,
        "VkViewportCoordinateSwizzleNV": 1,
        "VkDiscardRectangleModeEXT": 1,
        "VkSubpassDescriptionFlagBits": 1,
        "VkPointClippingBehavior": 1,
        "VkPointClippingBehaviorKHR": 1,
        "VkCoverageModulationModeNV": 1,
        "VkCoverageReductionModeNV": 1,
        "VkValidationCacheHeaderVersionEXT": 1,
        "VkShaderInfoTypeAMD": 1,
        "VkQueueGlobalPriorityKHR": 1,
        "VkQueueGlobalPriorityEXT": 1,
        "VkTimeDomainEXT": 1,
        "VkConservativeRasterizationModeEXT": 1,
        "VkResolveModeFlagBits": 1,
        "VkResolveModeFlagBitsKHR": 1,
        "VkDescriptorBindingFlagBits": 1,
        "VkDescriptorBindingFlagBitsEXT": 1,
        "VkConditionalRenderingFlagBitsEXT": 1,
        "VkSemaphoreType": 1,
        "VkSemaphoreTypeKHR": 1,
        "VkGeometryFlagBitsKHR": 1,
        "VkGeometryFlagBitsNV": 1,
        "VkGeometryInstanceFlagBitsKHR": 1,
        "VkGeometryInstanceFlagBitsNV": 1,
        "VkBuildAccelerationStructureFlagBitsKHR": 1,
        "VkBuildAccelerationStructureFlagBitsNV": 1,
        "VkAccelerationStructureCreateFlagBitsKHR": 1,
        "VkBuildAccelerationStructureModeKHR": 1,
        "VkCopyAccelerationStructureModeKHR": 1,
        "VkCopyAccelerationStructureModeNV": 1,
        "VkAccelerationStructureTypeKHR": 1,
        "VkAccelerationStructureTypeNV": 1,
        "VkGeometryTypeKHR": 1,
        "VkGeometryTypeNV": 1,
        "VkRayTracingShaderGroupTypeKHR": 1,
        "VkRayTracingShaderGroupTypeNV": 1,
        "VkAccelerationStructureMemoryRequirementsTypeNV": 1,
        "VkAccelerationStructureBuildTypeKHR": 1,
        "VkAccelerationStructureCompatibilityKHR": 1,
        "VkShaderGroupShaderKHR": 1,
        "VkMemoryOverallocationBehaviorAMD": 1,
        "VkDeviceDiagnosticsConfigFlagBitsNV": 1,
        "VkPipelineCreationFeedbackFlagBits": 1,
        "VkPipelineCreationFeedbackFlagBitsEXT": 1,
        "VkPerformanceCounterScopeKHR": 1,
        "VkPerformanceCounterUnitKHR": 1,
        "VkPerformanceCounterStorageKHR": 1,
        "VkPerformanceCounterDescriptionFlagBitsKHR": 1,
        "VkAcquireProfilingLockFlagBitsKHR": 1,
        "VkSemaphoreWaitFlagBits": 1,
        "VkSemaphoreWaitFlagBitsKHR": 1,
        "VkPerformanceConfigurationTypeINTEL": 1,
        "VkQueryPoolSamplingModeINTEL": 1,
        "VkPerformanceOverrideTypeINTEL": 1,
        "VkPerformanceParameterTypeINTEL": 1,
        "VkPerformanceValueTypeINTEL": 1,
        "VkLineRasterizationModeEXT": 1,
        "VkPipelineCompilerControlFlagBitsAMD": 1,
        "VkShaderCorePropertiesFlagBitsAMD": 1,
        "VkToolPurposeFlagBits": 1,
        "VkToolPurposeFlagBitsEXT": 1,
        "VkFragmentShadingRateNV": 1,
        "VkFragmentShadingRateTypeNV": 1,
        "VkSubpassMergeStatusEXT": 1,
        "VkAccessFlagBits2": 1,
        "VkAccessFlagBits2KHR": 1,
        "VkPipelineStageFlagBits2": 1,
        "VkPipelineStageFlagBits2KHR": 1,
        "VkProvokingVertexModeEXT": 1,
        "VkHostImageCopyFlagBitsEXT": 1,
        "VkFormatFeatureFlagBits2": 1,
        "VkFormatFeatureFlagBits2KHR": 1,
        "VkRenderingFlagBits": 1,
        "VkRenderingFlagBitsKHR": 1,
        "VkPipelineDepthStencilStateCreateFlagBits": 1,
        "VkPipelineColorBlendStateCreateFlagBits": 1,
        "VkImageCompressionFlagBitsEXT": 1,
        "VkImageCompressionFixedRateFlagBitsEXT": 1,
        "VkPipelineRobustnessBufferBehaviorEXT": 1,
        "VkPipelineRobustnessImageBehaviorEXT": 1,
        "VkDeviceAddressBindingFlagBitsEXT": 1,
        "VkDeviceAddressBindingTypeEXT": 1,
        "VkMicromapTypeEXT": 1,
        "VkBuildMicromapModeEXT": 1,
        "VkCopyMicromapModeEXT": 1,
        "VkBuildMicromapFlagBitsEXT": 1,
        "VkMicromapCreateFlagBitsEXT": 1,
        "VkOpacityMicromapFormatEXT": 1,
        "VkOpacityMicromapSpecialIndexEXT": 1,
        "VkDeviceFaultVendorBinaryHeaderVersionEXT": 1,
        "VkFrameBoundaryFlagBitsEXT": 1,
        "VkMemoryDecompressionMethodFlagBitsNV": 1,
        "VkDepthBiasRepresentationEXT": 1,
        "VkDirectDriverLoadingModeLUNARG": 1,
        "VkPipelineCreateFlagBits2KHR": 1,
        "VkBufferUsageFlagBits2KHR": 1,
        "VkShaderCreateFlagBitsEXT": 1,
        "VkShaderCodeTypeEXT": 1,
        "VkScopeKHR": 1,
        "VkComponentTypeKHR": 1,
        "VkScopeNV": 1,
        "VkComponentTypeNV": 1,
        "VkCubicFilterWeightsQCOM": 1,
        "VkBlockMatchWindowCompareModeQCOM": 1,
        "VkLayeredDriverUnderlyingApiMSFT": 1,
        "VkColorSpaceKHR": 1,
        "VkCompositeAlphaFlagBitsKHR": 1,
        "VkDisplayPlaneAlphaFlagBitsKHR": 1,
        "VkPresentModeKHR": 1,
        "VkSurfaceTransformFlagBitsKHR": 1,
        "VkDebugReportFlagBitsEXT": 1,
        "VkDebugReportObjectTypeEXT": 1,
        "VkDeviceMemoryReportEventTypeEXT": 1,
        "VkRasterizationOrderAMD": 1,
        "VkExternalMemoryHandleTypeFlagBitsNV": 1,
        "VkExternalMemoryFeatureFlagBitsNV": 1,
        "VkValidationCheckEXT": 1,
        "VkValidationFeatureEnableEXT": 1,
        "VkValidationFeatureDisableEXT": 1,
        "VkExternalMemoryHandleTypeFlagBits": 1,
        "VkExternalMemoryHandleTypeFlagBitsKHR": 1,
        "VkExternalMemoryFeatureFlagBits": 1,
        "VkExternalMemoryFeatureFlagBitsKHR": 1,
        "VkExternalSemaphoreHandleTypeFlagBits": 1,
        "VkExternalSemaphoreHandleTypeFlagBitsKHR": 1,
        "VkExternalSemaphoreFeatureFlagBits": 1,
        "VkExternalSemaphoreFeatureFlagBitsKHR": 1,
        "VkSemaphoreImportFlagBits": 1,
        "VkSemaphoreImportFlagBitsKHR": 1,
        "VkExternalFenceHandleTypeFlagBits": 1,
        "VkExternalFenceHandleTypeFlagBitsKHR": 1,
        "VkExternalFenceFeatureFlagBits": 1,
        "VkExternalFenceFeatureFlagBitsKHR": 1,
        "VkFenceImportFlagBits": 1,
        "VkFenceImportFlagBitsKHR": 1,
        "VkSurfaceCounterFlagBitsEXT": 1,
        "VkDisplayPowerStateEXT": 1,
        "VkDeviceEventTypeEXT": 1,
        "VkDisplayEventTypeEXT": 1,
        "VkPeerMemoryFeatureFlagBits": 1,
        "VkPeerMemoryFeatureFlagBitsKHR": 1,
        "VkMemoryAllocateFlagBits": 1,
        "VkMemoryAllocateFlagBitsKHR": 1,
        "VkDeviceGroupPresentModeFlagBitsKHR": 1,
        "VkSwapchainCreateFlagBitsKHR": 1,
        "VkSubgroupFeatureFlagBits": 1,
        "VkTessellationDomainOrigin": 1,
        "VkTessellationDomainOriginKHR": 1,
        "VkSamplerYcbcrModelConversion": 1,
        "VkSamplerYcbcrModelConversionKHR": 1,
        "VkSamplerYcbcrRange": 1,
        "VkSamplerYcbcrRangeKHR": 1,
        "VkChromaLocation": 1,
        "VkChromaLocationKHR": 1,
        "VkSamplerReductionMode": 1,
        "VkSamplerReductionModeEXT": 1,
        "VkBlendOverlapEXT": 1,
        "VkDebugUtilsMessageSeverityFlagBitsEXT": 1,
        "VkDebugUtilsMessageTypeFlagBitsEXT": 1,
        "VkShaderFloatControlsIndependence": 1,
        "VkShaderFloatControlsIndependenceKHR": 1,
        "VkFragmentShadingRateCombinerOpKHR": 1,
        "VkSubmitFlagBits": 1,
        "VkSubmitFlagBitsKHR": 1,
        "VkGraphicsPipelineLibraryFlagBitsEXT": 1,
        "VkOpticalFlowGridSizeFlagBitsNV": 1,
        "VkOpticalFlowUsageFlagBitsNV": 1,
        "VkOpticalFlowPerformanceLevelNV": 1,
        "VkOpticalFlowSessionBindingPointNV": 1,
        "VkOpticalFlowSessionCreateFlagBitsNV": 1,
        "VkOpticalFlowExecuteFlagBitsNV": 1,
        "VkDeviceFaultAddressTypeEXT": 1,
        "VkPresentScalingFlagBitsEXT": 1,
        "VkPresentGravityFlagBitsEXT": 1,
        "VkVendorId": 1,
        "VkDriverId": 1,
        "VkDriverIdKHR": 1,
        "VkShadingRatePaletteEntryNV": 1,
        "VkCoarseSampleOrderTypeNV": 1,
        "VkPipelineExecutableStatisticFormatKHR": 1,
        "VkVideoCodecOperationFlagBitsKHR": 1,
        "VkVideoChromaSubsamplingFlagBitsKHR": 1,
        "VkVideoComponentBitDepthFlagBitsKHR": 1,
        "VkVideoCapabilityFlagBitsKHR": 1,
        "VkVideoSessionCreateFlagBitsKHR": 1,
        "VkVideoCodingControlFlagBitsKHR": 1,
        "VkQueryResultStatusKHR": 1,
        "VkVideoDecodeUsageFlagBitsKHR": 1,
        "VkVideoDecodeCapabilityFlagBitsKHR": 1,
        "VkVideoDecodeH264PictureLayoutFlagBitsKHR": 1,
        "VkAccelerationStructureMotionInstanceTypeNV": 1
    },
    "basic_types": {
        "VkSampleMask": {
            "type": "uint32_t",
            "num_indirection": 0
        },
        "VkBool32": {
            "type": "uint32_t",
            "num_indirection": 0
        },
        "VkFlags": {
            "type": "uint32_t",
            "num_indirection": 0
        },
        "VkFlags64": {
            "type": "uint64_t",
            "num_indirection": 0
        },
        "VkDeviceSize": {
            "type": "uint64_t",
            "num_indirection": 0
        },
        "VkDeviceAddress": {
            "type": "uint64_t",
            "num_indirection": 0
        },
        "VkRemoteAddressNV": {
            "type": "void",
            "num_indirection": 1
        }
    },
    "pointer_types": {},
    "structs": {
        "VkBaseOutStructure": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBaseOutStructure",
                "num_indirection": 1,
                "value": "",
                "header": "struct VkBaseOutStructure* pNext\n        "
            }
        ],
        "VkBaseInStructure": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkBaseInStructure",
                "num_indirection": 1,
                "value": "",
                "header": "const struct VkBaseInStructure* pNext\n        "
            }
        ],
        "VkOffset2D": [
            {
                "name": "x",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t        x\n            "
            },
            {
                "name": "y",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t        y\n        "
            }
        ],
        "VkOffset3D": [
            {
                "name": "x",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t        x\n            "
            },
            {
                "name": "y",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t        y\n            "
            },
            {
                "name": "z",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t        z\n        "
            }
        ],
        "VkExtent2D": [
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        height\n        "
            }
        ],
        "VkExtent3D": [
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        height\n            "
            },
            {
                "name": "depth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        depth\n        "
            }
        ],
        "VkViewport": [
            {
                "name": "x",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float x\n            "
            },
            {
                "name": "y",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float y\n            "
            },
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float height\n            "
            },
            {
                "name": "minDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                       minDepth\n            "
            },
            {
                "name": "maxDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                       maxDepth\n        "
            }
        ],
        "VkRect2D": [
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D     offset\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D     extent\n        "
            }
        ],
        "VkClearRect": [
            {
                "name": "rect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRect2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkRect2D       rect\n            "
            },
            {
                "name": "baseArrayLayer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       baseArrayLayer\n            "
            },
            {
                "name": "layerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       layerCount\n        "
            }
        ],
        "VkComponentMapping": [
            {
                "name": "r",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentSwizzle",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentSwizzle r\n            "
            },
            {
                "name": "g",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentSwizzle",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentSwizzle g\n            "
            },
            {
                "name": "b",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentSwizzle",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentSwizzle b\n            "
            },
            {
                "name": "a",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentSwizzle",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentSwizzle a\n        "
            }
        ],
        "VkPhysicalDeviceProperties": [
            {
                "name": "apiVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       apiVersion\n            "
            },
            {
                "name": "driverVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       driverVersion\n            "
            },
            {
                "name": "vendorID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       vendorID\n            "
            },
            {
                "name": "deviceID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       deviceID\n            "
            },
            {
                "name": "deviceType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceType",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceType deviceType\n            "
            },
            {
                "name": "deviceName",
                "const": false,
                "length": [
                    "VK_MAX_PHYSICAL_DEVICE_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char           deviceName[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE]\n            "
            },
            {
                "name": "pipelineCacheUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t        pipelineCacheUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "limits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceLimits",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceLimits limits\n            "
            },
            {
                "name": "sparseProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceSparseProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceSparseProperties sparseProperties\n        "
            }
        ],
        "VkExtensionProperties": [
            {
                "name": "extensionName",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char            extensionName[VK_MAX_EXTENSION_NAME_SIZE]extension name\n            "
            },
            {
                "name": "specVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        specVersionversion of the extension specification implemented\n        "
            }
        ],
        "VkLayerProperties": [
            {
                "name": "layerName",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char            layerName[VK_MAX_EXTENSION_NAME_SIZE]layer name\n            "
            },
            {
                "name": "specVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        specVersionversion of the layer specification implemented\n            "
            },
            {
                "name": "implementationVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        implementationVersionbuild or release version of the layer's library\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char            description[VK_MAX_DESCRIPTION_SIZE]Free-form description of the layer\n        "
            }
        ],
        "VkApplicationInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_APPLICATION_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*     pNext\n            "
            },
            {
                "name": "pApplicationName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*     pApplicationName\n            "
            },
            {
                "name": "applicationVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        applicationVersion\n            "
            },
            {
                "name": "pEngineName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*     pEngineName\n            "
            },
            {
                "name": "engineVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        engineVersion\n            "
            },
            {
                "name": "apiVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        apiVersion\n        "
            }
        ],
        "VkAllocationCallbacks": [
            {
                "name": "pUserData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*           pUserData\n            "
            },
            {
                "name": "pfnAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkAllocationFunction",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkAllocationFunction   pfnAllocation\n            "
            },
            {
                "name": "pfnReallocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkReallocationFunction",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkReallocationFunction pfnReallocation\n            "
            },
            {
                "name": "pfnFree",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkFreeFunction",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkFreeFunction    pfnFree\n            "
            },
            {
                "name": "pfnInternalAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkInternalAllocationNotification",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkInternalAllocationNotification pfnInternalAllocation\n            "
            },
            {
                "name": "pfnInternalFree",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkInternalFreeNotification",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkInternalFreeNotification pfnInternalFree\n        "
            }
        ],
        "VkDeviceQueueCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*     pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceQueueCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceQueueCreateFlags    flags\n            "
            },
            {
                "name": "queueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        queueFamilyIndex\n            "
            },
            {
                "name": "queueCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        queueCount\n            "
            },
            {
                "name": "pQueuePriorities",
                "const": true,
                "length": [
                    "queueCount"
                ],
                "type": "float",
                "num_indirection": 1,
                "value": "",
                "header": "const float*    pQueuePriorities\n        "
            }
        ],
        "VkDeviceCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*     pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceCreateFlags    flags\n            "
            },
            {
                "name": "queueCreateInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t        queueCreateInfoCount\n            "
            },
            {
                "name": "pQueueCreateInfos",
                "const": true,
                "length": [
                    "queueCreateInfoCount"
                ],
                "type": "VkDeviceQueueCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDeviceQueueCreateInfo* pQueueCreateInfos\n            "
            },
            {
                "name": "enabledLayerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               enabledLayerCount\n            "
            },
            {
                "name": "ppEnabledLayerNames",
                "const": true,
                "length": [
                    "null-terminated",
                    "enabledLayerCount"
                ],
                "type": "char",
                "num_indirection": 2,
                "value": "",
                "header": "const char* const*      ppEnabledLayerNamesOrdered list of layer names to be enabled\n            "
            },
            {
                "name": "enabledExtensionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               enabledExtensionCount\n            "
            },
            {
                "name": "ppEnabledExtensionNames",
                "const": true,
                "length": [
                    "null-terminated",
                    "enabledExtensionCount"
                ],
                "type": "char",
                "num_indirection": 2,
                "value": "",
                "header": "const char* const*      ppEnabledExtensionNames\n            "
            },
            {
                "name": "pEnabledFeatures",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceFeatures",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPhysicalDeviceFeatures* pEnabledFeatures\n        "
            }
        ],
        "VkInstanceCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*     pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkInstanceCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkInstanceCreateFlags  flags\n            "
            },
            {
                "name": "pApplicationInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkApplicationInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkApplicationInfo* pApplicationInfo\n            "
            },
            {
                "name": "enabledLayerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               enabledLayerCount\n            "
            },
            {
                "name": "ppEnabledLayerNames",
                "const": true,
                "length": [
                    "null-terminated",
                    "enabledLayerCount"
                ],
                "type": "char",
                "num_indirection": 2,
                "value": "",
                "header": "const char* const*      ppEnabledLayerNamesOrdered list of layer names to be enabled\n            "
            },
            {
                "name": "enabledExtensionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               enabledExtensionCount\n            "
            },
            {
                "name": "ppEnabledExtensionNames",
                "const": true,
                "length": [
                    "null-terminated",
                    "enabledExtensionCount"
                ],
                "type": "char",
                "num_indirection": 2,
                "value": "",
                "header": "const char* const*      ppEnabledExtensionNamesExtension names to be enabled\n        "
            }
        ],
        "VkQueueFamilyProperties": [
            {
                "name": "queueFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueueFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueFlags           queueFlagsQueue flags\n            "
            },
            {
                "name": "queueCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               queueCount\n            "
            },
            {
                "name": "timestampValidBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               timestampValidBits\n            "
            },
            {
                "name": "minImageTransferGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D             minImageTransferGranularityMinimum alignment requirement for image transfers\n        "
            }
        ],
        "VkPhysicalDeviceMemoryProperties": [
            {
                "name": "memoryTypeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               memoryTypeCount\n            "
            },
            {
                "name": "memoryTypes",
                "const": false,
                "length": [
                    "VK_MAX_MEMORY_TYPES"
                ],
                "type": "VkMemoryType",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryType           memoryTypes[VK_MAX_MEMORY_TYPES]\n            "
            },
            {
                "name": "memoryHeapCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               memoryHeapCount\n            "
            },
            {
                "name": "memoryHeaps",
                "const": false,
                "length": [
                    "VK_MAX_MEMORY_HEAPS"
                ],
                "type": "VkMemoryHeap",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryHeap           memoryHeaps[VK_MAX_MEMORY_HEAPS]\n        "
            }
        ],
        "VkMemoryAllocateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "allocationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           allocationSizeSize of memory allocation\n            "
            },
            {
                "name": "memoryTypeIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               memoryTypeIndexIndex of the of the memory type to allocate from\n        "
            }
        ],
        "VkMemoryRequirements": [
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sizeSpecified in bytes\n            "
            },
            {
                "name": "alignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           alignmentSpecified in bytes\n            "
            },
            {
                "name": "memoryTypeBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               memoryTypeBitsBitmask of the allowed memory type indices into memoryTypes[] for this object\n        "
            }
        ],
        "VkSparseImageFormatProperties": [
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags       aspectMask\n            "
            },
            {
                "name": "imageGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                                imageGranularity\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseImageFormatFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseImageFormatFlags flags\n        "
            }
        ],
        "VkSparseImageMemoryRequirements": [
            {
                "name": "formatProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseImageFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseImageFormatProperties formatProperties\n            "
            },
            {
                "name": "imageMipTailFirstLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               imageMipTailFirstLod\n            "
            },
            {
                "name": "imageMipTailSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           imageMipTailSizeSpecified in bytes, must be a multiple of sparse block size in bytes / alignment\n            "
            },
            {
                "name": "imageMipTailOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           imageMipTailOffsetSpecified in bytes, must be a multiple of sparse block size in bytes / alignment\n            "
            },
            {
                "name": "imageMipTailStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           imageMipTailStrideSpecified in bytes, must be a multiple of sparse block size in bytes / alignment\n        "
            }
        ],
        "VkMemoryType": [
            {
                "name": "propertyFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryPropertyFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryPropertyFlags  propertyFlagsMemory properties of this memory type\n            "
            },
            {
                "name": "heapIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               heapIndexIndex of the memory heap allocations of this memory type are taken from\n        "
            }
        ],
        "VkMemoryHeap": [
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sizeAvailable memory in the heap\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryHeapFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryHeapFlags      flagsFlags for the heap\n        "
            }
        ],
        "VkMappedMemoryRange": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory         memoryMapped memory object\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           offsetOffset within the memory object where the range starts\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sizeSize of the range within the memory object\n        "
            }
        ],
        "VkFormatProperties": [
            {
                "name": "linearTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags   linearTilingFeaturesFormat features in case of linear tiling\n            "
            },
            {
                "name": "optimalTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags   optimalTilingFeaturesFormat features in case of optimal tiling\n            "
            },
            {
                "name": "bufferFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags   bufferFeaturesFormat features supported by buffers\n        "
            }
        ],
        "VkImageFormatProperties": [
            {
                "name": "maxExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D             maxExtentmax image dimensions for this resource type\n            "
            },
            {
                "name": "maxMipLevels",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxMipLevelsmax number of mipmap levels for this resource type\n            "
            },
            {
                "name": "maxArrayLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxArrayLayersmax array size for this resource type\n            "
            },
            {
                "name": "sampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     sampleCountssupported sample counts for this resource type\n            "
            },
            {
                "name": "maxResourceSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           maxResourceSizemax size (in bytes) of this resource type\n        "
            }
        ],
        "VkDescriptorBufferInfo": [
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer               bufferBuffer used for this descriptor slot.\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           offsetBase offset from buffer start in bytes to update in the descriptor set.\n            "
            },
            {
                "name": "range",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           rangeSize in bytes of the buffer resource for this descriptor update.\n        "
            }
        ],
        "VkDescriptorImageInfo": [
            {
                "name": "sampler",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampler",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampler       samplerSampler to write to the descriptor in case it is a SAMPLER or COMBINED_IMAGE_SAMPLER descriptor. Ignored otherwise.\n            "
            },
            {
                "name": "imageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView     imageViewImage view to write to the descriptor in case it is a SAMPLED_IMAGE, STORAGE_IMAGE, COMBINED_IMAGE_SAMPLER, or INPUT_ATTACHMENT descriptor. Ignored otherwise.\n            "
            },
            {
                "name": "imageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout   imageLayoutLayout the image is expected to be in when accessed using this descriptor (only used if imageView is not VK_NULL_HANDLE).\n        "
            }
        ],
        "VkWriteDescriptorSet": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "dstSet",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorSet",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorSet        dstSetDestination descriptor set\n            "
            },
            {
                "name": "dstBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dstBindingBinding within the destination descriptor set to write\n            "
            },
            {
                "name": "dstArrayElement",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dstArrayElementArray element within the destination binding to write\n            "
            },
            {
                "name": "descriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               descriptorCountNumber of descriptors to write (determines the size of the array pointed by pDescriptors)\n            "
            },
            {
                "name": "descriptorType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorType       descriptorTypeDescriptor type to write (determines which members of the array pointed by pDescriptors are going to be used)\n            "
            },
            {
                "name": "pImageInfo",
                "const": true,
                "length": [
                    "descriptorCount"
                ],
                "type": "VkDescriptorImageInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorImageInfo* pImageInfoSampler, image view, and layout for SAMPLER, COMBINED_IMAGE_SAMPLER, {SAMPLED,STORAGE}_IMAGE, and INPUT_ATTACHMENT descriptor types.\n            "
            },
            {
                "name": "pBufferInfo",
                "const": true,
                "length": [
                    "descriptorCount"
                ],
                "type": "VkDescriptorBufferInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorBufferInfo* pBufferInfoRaw buffer, size, and offset for {UNIFORM,STORAGE}_BUFFER[_DYNAMIC] descriptor types.\n            "
            },
            {
                "name": "pTexelBufferView",
                "const": true,
                "length": [
                    "descriptorCount"
                ],
                "type": "VkBufferView",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferView*    pTexelBufferViewBuffer view to write to the descriptor for {UNIFORM,STORAGE}_TEXEL_BUFFER descriptor types.\n        "
            }
        ],
        "VkCopyDescriptorSet": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "srcSet",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorSet",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorSet        srcSetSource descriptor set\n            "
            },
            {
                "name": "srcBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               srcBindingBinding within the source descriptor set to copy from\n            "
            },
            {
                "name": "srcArrayElement",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               srcArrayElementArray element within the source binding to copy from\n            "
            },
            {
                "name": "dstSet",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorSet",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorSet        dstSetDestination descriptor set\n            "
            },
            {
                "name": "dstBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dstBindingBinding within the destination descriptor set to copy to\n            "
            },
            {
                "name": "dstArrayElement",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dstArrayElementArray element within the destination binding to copy to\n            "
            },
            {
                "name": "descriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               descriptorCountNumber of descriptors to write (determines the size of the array pointed by pDescriptors)\n        "
            }
        ],
        "VkBufferUsageFlags2CreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*    pNext\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferUsageFlags2KHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferUsageFlags2KHR         usage\n        "
            }
        ],
        "VkBufferCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferCreateFlags    flagsBuffer creation flags\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sizeSpecified in bytes\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferUsageFlags     usageBuffer usage flags\n            "
            },
            {
                "name": "sharingMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSharingMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSharingMode          sharingMode\n            "
            },
            {
                "name": "queueFamilyIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               queueFamilyIndexCount\n            "
            },
            {
                "name": "pQueueFamilyIndices",
                "const": true,
                "length": [
                    "queueFamilyIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*        pQueueFamilyIndices\n        "
            }
        ],
        "VkBufferViewCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferViewCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferViewCreateFlags flags\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer               buffer\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat               formatOptionally specifies format of elements\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           offsetSpecified in bytes\n            "
            },
            {
                "name": "range",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           rangeView size specified in bytes\n        "
            }
        ],
        "VkImageSubresource": [
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags     aspectMask\n            "
            },
            {
                "name": "mipLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               mipLevel\n            "
            },
            {
                "name": "arrayLayer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               arrayLayer\n        "
            }
        ],
        "VkImageSubresourceLayers": [
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags     aspectMask\n            "
            },
            {
                "name": "mipLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               mipLevel\n            "
            },
            {
                "name": "baseArrayLayer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               baseArrayLayer\n            "
            },
            {
                "name": "layerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               layerCount\n        "
            }
        ],
        "VkImageSubresourceRange": [
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags     aspectMask\n            "
            },
            {
                "name": "baseMipLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               baseMipLevel\n            "
            },
            {
                "name": "levelCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               levelCount\n            "
            },
            {
                "name": "baseArrayLayer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               baseArrayLayer\n            "
            },
            {
                "name": "layerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               layerCount\n        "
            }
        ],
        "VkMemoryBarrier": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_BARRIER",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          srcAccessMaskMemory accesses from the source of the dependency to synchronize\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          dstAccessMaskMemory accesses from the destination of the dependency to synchronize\n        "
            }
        ],
        "VkBufferMemoryBarrier": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          srcAccessMaskMemory accesses from the source of the dependency to synchronize\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          dstAccessMaskMemory accesses from the destination of the dependency to synchronize\n            "
            },
            {
                "name": "srcQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               srcQueueFamilyIndexQueue family to transition ownership from\n            "
            },
            {
                "name": "dstQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dstQueueFamilyIndexQueue family to transition ownership to\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer               bufferBuffer to sync\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           offsetOffset within the buffer to sync\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sizeAmount of bytes to sync\n        "
            }
        ],
        "VkImageMemoryBarrier": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          srcAccessMaskMemory accesses from the source of the dependency to synchronize\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          dstAccessMaskMemory accesses from the destination of the dependency to synchronize\n            "
            },
            {
                "name": "oldLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout          oldLayoutCurrent layout of the image\n            "
            },
            {
                "name": "newLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout          newLayoutNew layout to transition the image to\n            "
            },
            {
                "name": "srcQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               srcQueueFamilyIndexQueue family to transition ownership from\n            "
            },
            {
                "name": "dstQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dstQueueFamilyIndexQueue family to transition ownership to\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                imageImage to sync\n            "
            },
            {
                "name": "subresourceRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceRange",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceRange subresourceRangeSubresource range to sync\n        "
            }
        ],
        "VkImageCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCreateFlags     flagsImage creation flags\n            "
            },
            {
                "name": "imageType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageType            imageType\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat               format\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D             extent\n            "
            },
            {
                "name": "mipLevels",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               mipLevels\n            "
            },
            {
                "name": "arrayLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               arrayLayers\n            "
            },
            {
                "name": "samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits  samples\n            "
            },
            {
                "name": "tiling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageTiling",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageTiling          tiling\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags      usageImage usage flags\n            "
            },
            {
                "name": "sharingMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSharingMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSharingMode          sharingModeCross-queue-family sharing mode\n            "
            },
            {
                "name": "queueFamilyIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               queueFamilyIndexCountNumber of queue families to share across\n            "
            },
            {
                "name": "pQueueFamilyIndices",
                "const": true,
                "length": [
                    "queueFamilyIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*        pQueueFamilyIndicesArray of queue family indices to share across\n            "
            },
            {
                "name": "initialLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout          initialLayoutInitial image layout for all subresources\n        "
            }
        ],
        "VkSubresourceLayout": [
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           offsetSpecified in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sizeSpecified in bytes\n            "
            },
            {
                "name": "rowPitch",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           rowPitchSpecified in bytes\n            "
            },
            {
                "name": "arrayPitch",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           arrayPitchSpecified in bytes\n            "
            },
            {
                "name": "depthPitch",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           depthPitchSpecified in bytes\n        "
            }
        ],
        "VkImageViewCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageViewCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageViewCreateFlags flags\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                image\n            "
            },
            {
                "name": "viewType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageViewType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageViewType        viewType\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat               format\n            "
            },
            {
                "name": "components",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentMapping",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentMapping     components\n            "
            },
            {
                "name": "subresourceRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceRange",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceRange subresourceRange\n        "
            }
        ],
        "VkBufferCopy": [
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       srcOffsetSpecified in bytes\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       dstOffsetSpecified in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize sizeSpecified in bytes\n        "
            }
        ],
        "VkSparseMemoryBind": [
            {
                "name": "resourceOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           resourceOffsetSpecified in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sizeSpecified in bytes\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory         memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           memoryOffsetSpecified in bytes\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseMemoryBindFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseMemoryBindFlags flags\n        "
            }
        ],
        "VkSparseImageMemoryBind": [
            {
                "name": "subresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresource",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresource     subresource\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             offset\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D             extent\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory         memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           memoryOffsetSpecified in bytes\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseMemoryBindFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseMemoryBindFlags flags\n        "
            }
        ],
        "VkSparseBufferMemoryBindInfo": [
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer buffer\n            "
            },
            {
                "name": "bindCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bindCount\n            "
            },
            {
                "name": "pBinds",
                "const": true,
                "length": [
                    "bindCount"
                ],
                "type": "VkSparseMemoryBind",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSparseMemoryBind* pBinds\n        "
            }
        ],
        "VkSparseImageOpaqueMemoryBindInfo": [
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage image\n            "
            },
            {
                "name": "bindCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bindCount\n            "
            },
            {
                "name": "pBinds",
                "const": true,
                "length": [
                    "bindCount"
                ],
                "type": "VkSparseMemoryBind",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSparseMemoryBind* pBinds\n        "
            }
        ],
        "VkSparseImageMemoryBindInfo": [
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage image\n            "
            },
            {
                "name": "bindCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bindCount\n            "
            },
            {
                "name": "pBinds",
                "const": true,
                "length": [
                    "bindCount"
                ],
                "type": "VkSparseImageMemoryBind",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSparseImageMemoryBind* pBinds\n        "
            }
        ],
        "VkBindSparseInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_SPARSE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "waitSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               waitSemaphoreCount\n            "
            },
            {
                "name": "pWaitSemaphores",
                "const": true,
                "length": [
                    "waitSemaphoreCount"
                ],
                "type": "VkSemaphore",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphore*     pWaitSemaphores\n            "
            },
            {
                "name": "bufferBindCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bufferBindCount\n            "
            },
            {
                "name": "pBufferBinds",
                "const": true,
                "length": [
                    "bufferBindCount"
                ],
                "type": "VkSparseBufferMemoryBindInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSparseBufferMemoryBindInfo* pBufferBinds\n            "
            },
            {
                "name": "imageOpaqueBindCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               imageOpaqueBindCount\n            "
            },
            {
                "name": "pImageOpaqueBinds",
                "const": true,
                "length": [
                    "imageOpaqueBindCount"
                ],
                "type": "VkSparseImageOpaqueMemoryBindInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSparseImageOpaqueMemoryBindInfo* pImageOpaqueBinds\n            "
            },
            {
                "name": "imageBindCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               imageBindCount\n            "
            },
            {
                "name": "pImageBinds",
                "const": true,
                "length": [
                    "imageBindCount"
                ],
                "type": "VkSparseImageMemoryBindInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSparseImageMemoryBindInfo* pImageBinds\n            "
            },
            {
                "name": "signalSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               signalSemaphoreCount\n            "
            },
            {
                "name": "pSignalSemaphores",
                "const": true,
                "length": [
                    "signalSemaphoreCount"
                ],
                "type": "VkSemaphore",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphore*     pSignalSemaphores\n        "
            }
        ],
        "VkImageCopy": [
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers srcSubresource\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             srcOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers dstSubresource\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             dstOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D             extentSpecified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkImageBlit": [
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers srcSubresource\n            "
            },
            {
                "name": "srcOffsets",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             srcOffsets[2]Specified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers dstSubresource\n            "
            },
            {
                "name": "dstOffsets",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             dstOffsets[2]Specified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkBufferImageCopy": [
            {
                "name": "bufferOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           bufferOffsetSpecified in bytes\n            "
            },
            {
                "name": "bufferRowLength",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bufferRowLengthSpecified in texels\n            "
            },
            {
                "name": "bufferImageHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bufferImageHeight\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers imageSubresource\n            "
            },
            {
                "name": "imageOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             imageOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D             imageExtentSpecified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkCopyMemoryIndirectCommandNV": [
            {
                "name": "srcAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                srcAddress\n            "
            },
            {
                "name": "dstAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                dstAddress\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                   sizeSpecified in bytes\n        "
            }
        ],
        "VkCopyMemoryToImageIndirectCommandNV": [
            {
                "name": "srcAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                srcAddress\n            "
            },
            {
                "name": "bufferRowLength",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       bufferRowLengthSpecified in texels\n            "
            },
            {
                "name": "bufferImageHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       bufferImageHeight\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers       imageSubresource\n            "
            },
            {
                "name": "imageOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                     imageOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                     imageExtentSpecified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkImageResolve": [
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers srcSubresource\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             srcOffset\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers dstSubresource\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D             dstOffset\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D             extent\n        "
            }
        ],
        "VkShaderModuleCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNextnoautovalidity because this structure can be either an explicit parameter, or passed in a pNext chain\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderModuleCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderModuleCreateFlags flags\n            "
            },
            {
                "name": "codeSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                 codeSizeSpecified in bytes\n            "
            },
            {
                "name": "pCode",
                "const": true,
                "length": [
                    "codeSize / 4"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*            pCodeBinary code of size codeSize\n        "
            }
        ],
        "VkDescriptorSetLayoutBinding": [
            {
                "name": "binding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bindingBinding number for this entry\n            "
            },
            {
                "name": "descriptorType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorType       descriptorTypeType of the descriptors in this binding\n            "
            },
            {
                "name": "descriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t descriptorCountNumber of descriptors in this binding\n            "
            },
            {
                "name": "stageFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags     stageFlagsShader stages this binding is visible to\n            "
            },
            {
                "name": "pImmutableSamplers",
                "const": true,
                "length": [
                    "descriptorCount"
                ],
                "type": "VkSampler",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSampler*       pImmutableSamplersImmutable samplers (used if descriptor type is SAMPLER or COMBINED_IMAGE_SAMPLER, is either NULL or contains count number of elements)\n        "
            }
        ],
        "VkDescriptorSetLayoutCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorSetLayoutCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorSetLayoutCreateFlags    flags\n            "
            },
            {
                "name": "bindingCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bindingCountNumber of bindings in the descriptor set layout\n            "
            },
            {
                "name": "pBindings",
                "const": true,
                "length": [
                    "bindingCount"
                ],
                "type": "VkDescriptorSetLayoutBinding",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorSetLayoutBinding* pBindingsArray of descriptor set layout bindings\n        "
            }
        ],
        "VkDescriptorPoolSize": [
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorType       type\n            "
            },
            {
                "name": "descriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               descriptorCount\n        "
            }
        ],
        "VkDescriptorPoolCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorPoolCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorPoolCreateFlags  flags\n            "
            },
            {
                "name": "maxSets",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxSets\n            "
            },
            {
                "name": "poolSizeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               poolSizeCount\n            "
            },
            {
                "name": "pPoolSizes",
                "const": true,
                "length": [
                    "poolSizeCount"
                ],
                "type": "VkDescriptorPoolSize",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorPoolSize* pPoolSizes\n        "
            }
        ],
        "VkDescriptorSetAllocateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "descriptorPool",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorPool",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorPool       descriptorPool\n            "
            },
            {
                "name": "descriptorSetCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               descriptorSetCount\n            "
            },
            {
                "name": "pSetLayouts",
                "const": true,
                "length": [
                    "descriptorSetCount"
                ],
                "type": "VkDescriptorSetLayout",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorSetLayout* pSetLayouts\n        "
            }
        ],
        "VkSpecializationMapEntry": [
            {
                "name": "constantID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                     constantIDThe SpecConstant ID specified in the BIL\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                     offsetOffset of the value in the data block\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t sizeSize in bytes of the SpecConstant\n        "
            }
        ],
        "VkSpecializationInfo": [
            {
                "name": "mapEntryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               mapEntryCountNumber of entries in the map\n            "
            },
            {
                "name": "pMapEntries",
                "const": true,
                "length": [
                    "mapEntryCount"
                ],
                "type": "VkSpecializationMapEntry",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSpecializationMapEntry* pMapEntriesArray of map entries\n            "
            },
            {
                "name": "dataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                 dataSizeSize in bytes of pData\n            "
            },
            {
                "name": "pData",
                "const": true,
                "length": [
                    "dataSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*            pDataPointer to SpecConstant data\n        "
            }
        ],
        "VkPipelineShaderStageCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineShaderStageCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineShaderStageCreateFlags    flags\n            "
            },
            {
                "name": "stage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlagBits  stageShader stage\n            "
            },
            {
                "name": "module",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderModule",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderModule moduleModule containing entry point\n            "
            },
            {
                "name": "pName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char* pNameNull-terminated entry point name\n            "
            },
            {
                "name": "pSpecializationInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkSpecializationInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSpecializationInfo* pSpecializationInfo\n        "
            }
        ],
        "VkComputePipelineCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCreateFlags  flagsPipeline creation flags\n            "
            },
            {
                "name": "stage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineShaderStageCreateInfo",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineShaderStageCreateInfo stage\n            "
            },
            {
                "name": "layout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayout       layoutInterface layout of the pipeline\n            "
            },
            {
                "name": "basePipelineHandle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline      basePipelineHandleIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of\n            "
            },
            {
                "name": "basePipelineIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                basePipelineIndexIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of\n        "
            }
        ],
        "VkComputePipelineIndirectBufferInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*   pNext\n            "
            },
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress               deviceAddress\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                  size\n            "
            },
            {
                "name": "pipelineDeviceAddressCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress               pipelineDeviceAddressCaptureReplay\n        "
            }
        ],
        "VkPipelineCreateFlags2CreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*    pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreateFlags2KHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCreateFlags2KHR      flags\n        "
            }
        ],
        "VkVertexInputBindingDescription": [
            {
                "name": "binding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bindingVertex buffer binding id\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               strideDistance between vertices in bytes (0 = no advancement)\n            "
            },
            {
                "name": "inputRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVertexInputRate",
                "num_indirection": 0,
                "value": "",
                "header": "VkVertexInputRate      inputRateThe rate at which the vertex data is consumed\n        "
            }
        ],
        "VkVertexInputAttributeDescription": [
            {
                "name": "location",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               locationlocation of the shader vertex attrib\n            "
            },
            {
                "name": "binding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               bindingVertex buffer binding id\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat               formatformat of source data\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               offsetOffset of first element in bytes from base of vertex\n        "
            }
        ],
        "VkPipelineVertexInputStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineVertexInputStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineVertexInputStateCreateFlags    flags\n            "
            },
            {
                "name": "vertexBindingDescriptionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               vertexBindingDescriptionCountnumber of bindings\n            "
            },
            {
                "name": "pVertexBindingDescriptions",
                "const": true,
                "length": [
                    "vertexBindingDescriptionCount"
                ],
                "type": "VkVertexInputBindingDescription",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVertexInputBindingDescription* pVertexBindingDescriptions\n            "
            },
            {
                "name": "vertexAttributeDescriptionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               vertexAttributeDescriptionCountnumber of attributes\n            "
            },
            {
                "name": "pVertexAttributeDescriptions",
                "const": true,
                "length": [
                    "vertexAttributeDescriptionCount"
                ],
                "type": "VkVertexInputAttributeDescription",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVertexInputAttributeDescription* pVertexAttributeDescriptions\n        "
            }
        ],
        "VkPipelineInputAssemblyStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineInputAssemblyStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineInputAssemblyStateCreateFlags    flags\n            "
            },
            {
                "name": "topology",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPrimitiveTopology",
                "num_indirection": 0,
                "value": "",
                "header": "VkPrimitiveTopology    topology\n            "
            },
            {
                "name": "primitiveRestartEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               primitiveRestartEnable\n        "
            }
        ],
        "VkPipelineTessellationStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineTessellationStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineTessellationStateCreateFlags    flags\n            "
            },
            {
                "name": "patchControlPoints",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               patchControlPoints\n        "
            }
        ],
        "VkPipelineViewportStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineViewportStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineViewportStateCreateFlags    flags\n            "
            },
            {
                "name": "viewportCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               viewportCount\n            "
            },
            {
                "name": "pViewports",
                "const": true,
                "length": [
                    "viewportCount"
                ],
                "type": "VkViewport",
                "num_indirection": 1,
                "value": "",
                "header": "const VkViewport*      pViewports\n            "
            },
            {
                "name": "scissorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               scissorCount\n            "
            },
            {
                "name": "pScissors",
                "const": true,
                "length": [
                    "scissorCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D*        pScissors\n        "
            }
        ],
        "VkPipelineRasterizationStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRasterizationStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRasterizationStateCreateFlags    flags\n            "
            },
            {
                "name": "depthClampEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthClampEnable\n            "
            },
            {
                "name": "rasterizerDiscardEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               rasterizerDiscardEnable\n            "
            },
            {
                "name": "polygonMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPolygonMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkPolygonMode          polygonModeoptional (GL45)\n            "
            },
            {
                "name": "cullMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCullModeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkCullModeFlags        cullMode\n            "
            },
            {
                "name": "frontFace",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFrontFace",
                "num_indirection": 0,
                "value": "",
                "header": "VkFrontFace            frontFace\n            "
            },
            {
                "name": "depthBiasEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthBiasEnable\n            "
            },
            {
                "name": "depthBiasConstantFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  depthBiasConstantFactor\n            "
            },
            {
                "name": "depthBiasClamp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  depthBiasClamp\n            "
            },
            {
                "name": "depthBiasSlopeFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  depthBiasSlopeFactor\n            "
            },
            {
                "name": "lineWidth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  lineWidth\n        "
            }
        ],
        "VkPipelineMultisampleStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineMultisampleStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineMultisampleStateCreateFlags    flags\n            "
            },
            {
                "name": "rasterizationSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits  rasterizationSamplesNumber of samples used for rasterization\n            "
            },
            {
                "name": "sampleShadingEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sampleShadingEnableoptional (GL45)\n            "
            },
            {
                "name": "minSampleShading",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  minSampleShadingoptional (GL45)\n            "
            },
            {
                "name": "pSampleMask",
                "const": true,
                "length": [
                    "(rasterizationSamples + 31) / 32"
                ],
                "type": "VkSampleMask",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSampleMask*    pSampleMaskArray of sampleMask words\n            "
            },
            {
                "name": "alphaToCoverageEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               alphaToCoverageEnable\n            "
            },
            {
                "name": "alphaToOneEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               alphaToOneEnable\n        "
            }
        ],
        "VkPipelineColorBlendAttachmentState": [
            {
                "name": "blendEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               blendEnable\n            "
            },
            {
                "name": "srcColorBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor          srcColorBlendFactor\n            "
            },
            {
                "name": "dstColorBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor          dstColorBlendFactor\n            "
            },
            {
                "name": "colorBlendOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendOp              colorBlendOp\n            "
            },
            {
                "name": "srcAlphaBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor          srcAlphaBlendFactor\n            "
            },
            {
                "name": "dstAlphaBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor          dstAlphaBlendFactor\n            "
            },
            {
                "name": "alphaBlendOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendOp              alphaBlendOp\n            "
            },
            {
                "name": "colorWriteMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkColorComponentFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkColorComponentFlags  colorWriteMask\n        "
            }
        ],
        "VkPipelineColorBlendStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineColorBlendStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineColorBlendStateCreateFlags    flags\n            "
            },
            {
                "name": "logicOpEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               logicOpEnable\n            "
            },
            {
                "name": "logicOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkLogicOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkLogicOp              logicOp\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               attachmentCount# of pAttachments\n            "
            },
            {
                "name": "pAttachments",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkPipelineColorBlendAttachmentState",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineColorBlendAttachmentState* pAttachments\n            "
            },
            {
                "name": "blendConstants",
                "const": false,
                "length": [
                    "4"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  blendConstants[4]\n        "
            }
        ],
        "VkPipelineDynamicStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineDynamicStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineDynamicStateCreateFlags    flags\n            "
            },
            {
                "name": "dynamicStateCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dynamicStateCount\n            "
            },
            {
                "name": "pDynamicStates",
                "const": true,
                "length": [
                    "dynamicStateCount"
                ],
                "type": "VkDynamicState",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDynamicState*  pDynamicStates\n        "
            }
        ],
        "VkStencilOpState": [
            {
                "name": "failOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStencilOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkStencilOp            failOp\n            "
            },
            {
                "name": "passOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStencilOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkStencilOp            passOp\n            "
            },
            {
                "name": "depthFailOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStencilOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkStencilOp            depthFailOp\n            "
            },
            {
                "name": "compareOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCompareOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkCompareOp            compareOp\n            "
            },
            {
                "name": "compareMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               compareMask\n            "
            },
            {
                "name": "writeMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               writeMask\n            "
            },
            {
                "name": "reference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               reference\n        "
            }
        ],
        "VkPipelineDepthStencilStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineDepthStencilStateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineDepthStencilStateCreateFlags    flags\n            "
            },
            {
                "name": "depthTestEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthTestEnable\n            "
            },
            {
                "name": "depthWriteEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthWriteEnable\n            "
            },
            {
                "name": "depthCompareOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCompareOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkCompareOp            depthCompareOp\n            "
            },
            {
                "name": "depthBoundsTestEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthBoundsTestEnableoptional (depth_bounds_test)\n            "
            },
            {
                "name": "stencilTestEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               stencilTestEnable\n            "
            },
            {
                "name": "front",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStencilOpState",
                "num_indirection": 0,
                "value": "",
                "header": "VkStencilOpState       front\n            "
            },
            {
                "name": "back",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStencilOpState",
                "num_indirection": 0,
                "value": "",
                "header": "VkStencilOpState       back\n            "
            },
            {
                "name": "minDepthBounds",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  minDepthBounds\n            "
            },
            {
                "name": "maxDepthBounds",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  maxDepthBounds\n        "
            }
        ],
        "VkGraphicsPipelineCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCreateFlags  flagsPipeline creation flags\n            "
            },
            {
                "name": "stageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t stageCount\n            "
            },
            {
                "name": "pStages",
                "const": true,
                "length": [
                    "stageCount"
                ],
                "type": "VkPipelineShaderStageCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineShaderStageCreateInfo* pStagesOne entry for each active shader stage\n            "
            },
            {
                "name": "pVertexInputState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineVertexInputStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineVertexInputStateCreateInfo* pVertexInputState\n            "
            },
            {
                "name": "pInputAssemblyState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineInputAssemblyStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineInputAssemblyStateCreateInfo* pInputAssemblyState\n            "
            },
            {
                "name": "pTessellationState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineTessellationStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineTessellationStateCreateInfo* pTessellationState\n            "
            },
            {
                "name": "pViewportState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineViewportStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineViewportStateCreateInfo* pViewportState\n            "
            },
            {
                "name": "pRasterizationState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineRasterizationStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineRasterizationStateCreateInfo* pRasterizationState\n            "
            },
            {
                "name": "pMultisampleState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineMultisampleStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineMultisampleStateCreateInfo* pMultisampleState\n            "
            },
            {
                "name": "pDepthStencilState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineDepthStencilStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineDepthStencilStateCreateInfo* pDepthStencilState\n            "
            },
            {
                "name": "pColorBlendState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineColorBlendStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineColorBlendStateCreateInfo* pColorBlendState\n            "
            },
            {
                "name": "pDynamicState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineDynamicStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineDynamicStateCreateInfo* pDynamicState\n            "
            },
            {
                "name": "layout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayout       layoutInterface layout of the pipeline\n            "
            },
            {
                "name": "renderPass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPass",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPass           renderPass\n            "
            },
            {
                "name": "subpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               subpass\n            "
            },
            {
                "name": "basePipelineHandle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline      basePipelineHandleIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of\n            "
            },
            {
                "name": "basePipelineIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                basePipelineIndexIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of\n        "
            }
        ],
        "VkPipelineCacheCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCacheCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCacheCreateFlags    flags\n            "
            },
            {
                "name": "initialDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t           initialDataSizeSize of initial data to populate cache, in bytes\n            "
            },
            {
                "name": "pInitialData",
                "const": true,
                "length": [
                    "initialDataSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*            pInitialDataInitial data to populate cache\n        "
            }
        ],
        "VkPipelineCacheHeaderVersionOne": [
            {
                "name": "headerSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               headerSize\n            "
            },
            {
                "name": "headerVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCacheHeaderVersion",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCacheHeaderVersion headerVersion\n            "
            },
            {
                "name": "vendorID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               vendorID\n            "
            },
            {
                "name": "deviceID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               deviceID\n            "
            },
            {
                "name": "pipelineCacheUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                pipelineCacheUUID[VK_UUID_SIZE]\n        "
            }
        ],
        "VkPushConstantRange": [
            {
                "name": "stageFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags     stageFlagsWhich stages use the range\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               offsetStart of the range, in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               sizeSize of the range, in bytes\n        "
            }
        ],
        "VkPipelineLayoutCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayoutCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayoutCreateFlags    flags\n            "
            },
            {
                "name": "setLayoutCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               setLayoutCountNumber of descriptor sets interfaced by the pipeline\n            "
            },
            {
                "name": "pSetLayouts",
                "const": true,
                "length": [
                    "setLayoutCount"
                ],
                "type": "VkDescriptorSetLayout",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorSetLayout* pSetLayoutsArray of setCount number of descriptor set layout objects defining the layout of the\n            "
            },
            {
                "name": "pushConstantRangeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               pushConstantRangeCountNumber of push-constant ranges used by the pipeline\n            "
            },
            {
                "name": "pPushConstantRanges",
                "const": true,
                "length": [
                    "pushConstantRangeCount"
                ],
                "type": "VkPushConstantRange",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPushConstantRange* pPushConstantRangesArray of pushConstantRangeCount number of ranges used by various shader stages\n        "
            }
        ],
        "VkSamplerCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerCreateFlags   flags\n            "
            },
            {
                "name": "magFilter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFilter",
                "num_indirection": 0,
                "value": "",
                "header": "VkFilter               magFilterFilter mode for magnification\n            "
            },
            {
                "name": "minFilter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFilter",
                "num_indirection": 0,
                "value": "",
                "header": "VkFilter               minFilterFilter mode for minifiation\n            "
            },
            {
                "name": "mipmapMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerMipmapMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerMipmapMode    mipmapModeMipmap selection mode\n            "
            },
            {
                "name": "addressModeU",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerAddressMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerAddressMode   addressModeU\n            "
            },
            {
                "name": "addressModeV",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerAddressMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerAddressMode   addressModeV\n            "
            },
            {
                "name": "addressModeW",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerAddressMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerAddressMode   addressModeW\n            "
            },
            {
                "name": "mipLodBias",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  mipLodBias\n            "
            },
            {
                "name": "anisotropyEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               anisotropyEnable\n            "
            },
            {
                "name": "maxAnisotropy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  maxAnisotropy\n            "
            },
            {
                "name": "compareEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               compareEnable\n            "
            },
            {
                "name": "compareOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCompareOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkCompareOp            compareOp\n            "
            },
            {
                "name": "minLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  minLod\n            "
            },
            {
                "name": "maxLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  maxLod\n            "
            },
            {
                "name": "borderColor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBorderColor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBorderColor          borderColor\n            "
            },
            {
                "name": "unnormalizedCoordinates",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               unnormalizedCoordinates\n        "
            }
        ],
        "VkCommandPoolCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCommandPoolCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkCommandPoolCreateFlags   flagsCommand pool creation flags\n            "
            },
            {
                "name": "queueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               queueFamilyIndex\n        "
            }
        ],
        "VkCommandBufferAllocateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "commandPool",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCommandPool",
                "num_indirection": 0,
                "value": "",
                "header": "VkCommandPool          commandPool\n            "
            },
            {
                "name": "level",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCommandBufferLevel",
                "num_indirection": 0,
                "value": "",
                "header": "VkCommandBufferLevel   level\n            "
            },
            {
                "name": "commandBufferCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               commandBufferCount\n        "
            }
        ],
        "VkCommandBufferInheritanceInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "renderPass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPass",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPass    renderPassRender pass for secondary command buffers\n            "
            },
            {
                "name": "subpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               subpass\n            "
            },
            {
                "name": "framebuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFramebuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkFramebuffer   framebufferFramebuffer for secondary command buffers\n            "
            },
            {
                "name": "occlusionQueryEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               occlusionQueryEnableWhether this secondary command buffer may be executed during an occlusion query\n            "
            },
            {
                "name": "queryFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueryControlFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueryControlFlags    queryFlagsQuery flags used by this secondary command buffer, if executed during an occlusion query\n            "
            },
            {
                "name": "pipelineStatistics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueryPipelineStatisticFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueryPipelineStatisticFlags pipelineStatisticsPipeline statistics that may be counted for this secondary command buffer\n        "
            }
        ],
        "VkCommandBufferBeginInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCommandBufferUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkCommandBufferUsageFlags  flagsCommand buffer usage flags\n            "
            },
            {
                "name": "pInheritanceInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkCommandBufferInheritanceInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkCommandBufferInheritanceInfo*       pInheritanceInfoPointer to inheritance info for secondary command buffers\n        "
            }
        ],
        "VkRenderPassBeginInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "renderPass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPass",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPass           renderPass\n            "
            },
            {
                "name": "framebuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFramebuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkFramebuffer          framebuffer\n            "
            },
            {
                "name": "renderArea",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRect2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkRect2D               renderArea\n            "
            },
            {
                "name": "clearValueCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               clearValueCount\n            "
            },
            {
                "name": "pClearValues",
                "const": true,
                "length": [
                    "clearValueCount"
                ],
                "type": "VkClearValue",
                "num_indirection": 1,
                "value": "",
                "header": "const VkClearValue*    pClearValues\n        "
            }
        ],
        "VkClearColorValue": [
            {
                "name": "float32",
                "const": false,
                "length": [
                    "4"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  float32[4]\n            "
            },
            {
                "name": "int32",
                "const": false,
                "length": [
                    "4"
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                int32[4]\n            "
            },
            {
                "name": "uint32",
                "const": false,
                "length": [
                    "4"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               uint32[4]\n        "
            }
        ],
        "VkClearDepthStencilValue": [
            {
                "name": "depth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  depth\n            "
            },
            {
                "name": "stencil",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               stencil\n        "
            }
        ],
        "VkClearValue": [
            {
                "name": "color",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkClearColorValue",
                "num_indirection": 0,
                "value": "",
                "header": "VkClearColorValue      color\n            "
            },
            {
                "name": "depthStencil",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkClearDepthStencilValue",
                "num_indirection": 0,
                "value": "",
                "header": "VkClearDepthStencilValue depthStencil\n        "
            }
        ],
        "VkClearAttachment": [
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags     aspectMask\n            "
            },
            {
                "name": "colorAttachment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               colorAttachment\n            "
            },
            {
                "name": "clearValue",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkClearValue",
                "num_indirection": 0,
                "value": "",
                "header": "VkClearValue           clearValue\n        "
            }
        ],
        "VkAttachmentDescription": [
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentDescriptionFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentDescriptionFlags flags\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat               format\n            "
            },
            {
                "name": "samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits  samples\n            "
            },
            {
                "name": "loadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp     loadOpLoad operation for color or depth data\n            "
            },
            {
                "name": "storeOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp    storeOpStore operation for color or depth data\n            "
            },
            {
                "name": "stencilLoadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp     stencilLoadOpLoad operation for stencil data\n            "
            },
            {
                "name": "stencilStoreOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp    stencilStoreOpStore operation for stencil data\n            "
            },
            {
                "name": "initialLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout          initialLayout\n            "
            },
            {
                "name": "finalLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout          finalLayout\n        "
            }
        ],
        "VkAttachmentReference": [
            {
                "name": "attachment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               attachment\n            "
            },
            {
                "name": "layout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout          layout\n        "
            }
        ],
        "VkSubpassDescription": [
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubpassDescriptionFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubpassDescriptionFlags flags\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint    pipelineBindPointMust be VK_PIPELINE_BIND_POINT_GRAPHICS for now\n            "
            },
            {
                "name": "inputAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               inputAttachmentCount\n            "
            },
            {
                "name": "pInputAttachments",
                "const": true,
                "length": [
                    "inputAttachmentCount"
                ],
                "type": "VkAttachmentReference",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference* pInputAttachments\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkAttachmentReference",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference* pColorAttachments\n            "
            },
            {
                "name": "pResolveAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkAttachmentReference",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference* pResolveAttachments\n            "
            },
            {
                "name": "pDepthStencilAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkAttachmentReference",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference* pDepthStencilAttachment\n            "
            },
            {
                "name": "preserveAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               preserveAttachmentCount\n            "
            },
            {
                "name": "pPreserveAttachments",
                "const": true,
                "length": [
                    "preserveAttachmentCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pPreserveAttachments\n        "
            }
        ],
        "VkSubpassDependency": [
            {
                "name": "srcSubpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               srcSubpass\n            "
            },
            {
                "name": "dstSubpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dstSubpass\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags   srcStageMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags   dstStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          srcAccessMaskMemory accesses from the source of the dependency to synchronize\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags          dstAccessMaskMemory accesses from the destination of the dependency to synchronize\n            "
            },
            {
                "name": "dependencyFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDependencyFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDependencyFlags      dependencyFlags\n        "
            }
        ],
        "VkRenderPassCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPassCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPassCreateFlags flags\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t   attachmentCount\n            "
            },
            {
                "name": "pAttachments",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkAttachmentDescription",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentDescription* pAttachments\n            "
            },
            {
                "name": "subpassCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               subpassCount\n            "
            },
            {
                "name": "pSubpasses",
                "const": true,
                "length": [
                    "subpassCount"
                ],
                "type": "VkSubpassDescription",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubpassDescription* pSubpasses\n            "
            },
            {
                "name": "dependencyCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       dependencyCount\n            "
            },
            {
                "name": "pDependencies",
                "const": true,
                "length": [
                    "dependencyCount"
                ],
                "type": "VkSubpassDependency",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubpassDependency* pDependencies\n        "
            }
        ],
        "VkEventCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EVENT_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkEventCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkEventCreateFlags     flagsEvent creation flags\n        "
            }
        ],
        "VkFenceCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FENCE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFenceCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkFenceCreateFlags     flagsFence creation flags\n        "
            }
        ],
        "VkPhysicalDeviceFeatures": [
            {
                "name": "robustBufferAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               robustBufferAccessout of bounds buffer accesses are well defined\n            "
            },
            {
                "name": "fullDrawIndexUint32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fullDrawIndexUint32full 32-bit range of indices for indexed draw calls\n            "
            },
            {
                "name": "imageCubeArray",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               imageCubeArrayimage views which are arrays of cube maps\n            "
            },
            {
                "name": "independentBlend",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               independentBlendblending operations are controlled per-attachment\n            "
            },
            {
                "name": "geometryShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               geometryShadergeometry stage\n            "
            },
            {
                "name": "tessellationShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               tessellationShadertessellation control and evaluation stage\n            "
            },
            {
                "name": "sampleRateShading",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sampleRateShadingper-sample shading and interpolation\n            "
            },
            {
                "name": "dualSrcBlend",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               dualSrcBlendblend operations which take two sources\n            "
            },
            {
                "name": "logicOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               logicOplogic operations\n            "
            },
            {
                "name": "multiDrawIndirect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               multiDrawIndirectmulti draw indirect\n            "
            },
            {
                "name": "drawIndirectFirstInstance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               drawIndirectFirstInstanceindirect drawing can use non-zero firstInstance\n            "
            },
            {
                "name": "depthClamp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthClampdepth clamping\n            "
            },
            {
                "name": "depthBiasClamp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthBiasClampdepth bias clamping\n            "
            },
            {
                "name": "fillModeNonSolid",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fillModeNonSolidpoint and wireframe fill modes\n            "
            },
            {
                "name": "depthBounds",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthBoundsdepth bounds test\n            "
            },
            {
                "name": "wideLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               wideLineslines with width greater than 1\n            "
            },
            {
                "name": "largePoints",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               largePointspoints with size greater than 1\n            "
            },
            {
                "name": "alphaToOne",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               alphaToOnethe fragment alpha component can be forced to maximum representable alpha value\n            "
            },
            {
                "name": "multiViewport",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               multiViewportviewport arrays\n            "
            },
            {
                "name": "samplerAnisotropy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               samplerAnisotropyanisotropic sampler filtering\n            "
            },
            {
                "name": "textureCompressionETC2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               textureCompressionETC2ETC texture compression formats\n            "
            },
            {
                "name": "textureCompressionASTC_LDR",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               textureCompressionASTC_LDRASTC LDR texture compression formats\n            "
            },
            {
                "name": "textureCompressionBC",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               textureCompressionBCBC1-7 texture compressed formats\n            "
            },
            {
                "name": "occlusionQueryPrecise",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               occlusionQueryPreciseprecise occlusion queries returning actual sample counts\n            "
            },
            {
                "name": "pipelineStatisticsQuery",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               pipelineStatisticsQuerypipeline statistics query\n            "
            },
            {
                "name": "vertexPipelineStoresAndAtomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               vertexPipelineStoresAndAtomicsstores and atomic ops on storage buffers and images are supported in vertex, tessellation, and geometry stages\n            "
            },
            {
                "name": "fragmentStoresAndAtomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentStoresAndAtomicsstores and atomic ops on storage buffers and images are supported in the fragment stage\n            "
            },
            {
                "name": "shaderTessellationAndGeometryPointSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderTessellationAndGeometryPointSizetessellation and geometry stages can export point size\n            "
            },
            {
                "name": "shaderImageGatherExtended",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderImageGatherExtendedimage gather with run-time values and independent offsets\n            "
            },
            {
                "name": "shaderStorageImageExtendedFormats",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageExtendedFormatsthe extended set of formats can be used for storage images\n            "
            },
            {
                "name": "shaderStorageImageMultisample",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageMultisamplemultisample images can be used for storage images\n            "
            },
            {
                "name": "shaderStorageImageReadWithoutFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageReadWithoutFormatread from storage image does not require format qualifier\n            "
            },
            {
                "name": "shaderStorageImageWriteWithoutFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageWriteWithoutFormatwrite to storage image does not require format qualifier\n            "
            },
            {
                "name": "shaderUniformBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformBufferArrayDynamicIndexingarrays of uniform buffers can be accessed with dynamically uniform indices\n            "
            },
            {
                "name": "shaderSampledImageArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderSampledImageArrayDynamicIndexingarrays of sampled images can be accessed with dynamically uniform indices\n            "
            },
            {
                "name": "shaderStorageBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageBufferArrayDynamicIndexingarrays of storage buffers can be accessed with dynamically uniform indices\n            "
            },
            {
                "name": "shaderStorageImageArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageArrayDynamicIndexingarrays of storage images can be accessed with dynamically uniform indices\n            "
            },
            {
                "name": "shaderClipDistance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderClipDistanceclip distance in shaders\n            "
            },
            {
                "name": "shaderCullDistance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderCullDistancecull distance in shaders\n            "
            },
            {
                "name": "shaderFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderFloat6464-bit floats (doubles) in shaders\n            "
            },
            {
                "name": "shaderInt64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInt6464-bit integers in shaders\n            "
            },
            {
                "name": "shaderInt16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInt1616-bit integers in shaders\n            "
            },
            {
                "name": "shaderResourceResidency",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderResourceResidencyshader can use texture operations that return resource residency information (requires sparseNonResident support)\n            "
            },
            {
                "name": "shaderResourceMinLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderResourceMinLodshader can use texture operations that specify minimum resource LOD\n            "
            },
            {
                "name": "sparseBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseBindingSparse resources support: Resource memory can be managed at opaque page level rather than object level\n            "
            },
            {
                "name": "sparseResidencyBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidencyBufferSparse resources support: GPU can access partially resident buffers \n            "
            },
            {
                "name": "sparseResidencyImage2D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidencyImage2DSparse resources support: GPU can access partially resident 2D (non-MSAA non-depth/stencil) images \n            "
            },
            {
                "name": "sparseResidencyImage3D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidencyImage3DSparse resources support: GPU can access partially resident 3D images \n            "
            },
            {
                "name": "sparseResidency2Samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidency2SamplesSparse resources support: GPU can access partially resident MSAA 2D images with 2 samples\n            "
            },
            {
                "name": "sparseResidency4Samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidency4SamplesSparse resources support: GPU can access partially resident MSAA 2D images with 4 samples\n            "
            },
            {
                "name": "sparseResidency8Samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidency8SamplesSparse resources support: GPU can access partially resident MSAA 2D images with 8 samples\n            "
            },
            {
                "name": "sparseResidency16Samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidency16SamplesSparse resources support: GPU can access partially resident MSAA 2D images with 16 samples\n            "
            },
            {
                "name": "sparseResidencyAliased",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               sparseResidencyAliasedSparse resources support: GPU can correctly access data aliased into multiple locations (opt-in)\n            "
            },
            {
                "name": "variableMultisampleRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               variableMultisampleRatemultisample rate must be the same for all pipelines in a subpass\n            "
            },
            {
                "name": "inheritedQueries",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               inheritedQueriesQueries may be inherited from primary to secondary command buffers\n        "
            }
        ],
        "VkPhysicalDeviceSparseProperties": [
            {
                "name": "residencyStandard2DBlockShape",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           residencyStandard2DBlockShapeSparse resources support: GPU will access all 2D (single sample) sparse resources using the standard sparse image block shapes (based on pixel format)\n            "
            },
            {
                "name": "residencyStandard2DMultisampleBlockShape",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           residencyStandard2DMultisampleBlockShapeSparse resources support: GPU will access all 2D (multisample) sparse resources using the standard sparse image block shapes (based on pixel format)\n            "
            },
            {
                "name": "residencyStandard3DBlockShape",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           residencyStandard3DBlockShapeSparse resources support: GPU will access all 3D sparse resources using the standard sparse image block shapes (based on pixel format)\n            "
            },
            {
                "name": "residencyAlignedMipSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           residencyAlignedMipSizeSparse resources support: Images with mip level dimensions that are NOT a multiple of the sparse image block dimensions will be placed in the mip tail\n            "
            },
            {
                "name": "residencyNonResidentStrict",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           residencyNonResidentStrictSparse resources support: GPU can consistently access non-resident regions of a resource, all reads return as if data is 0, writes are discarded\n        "
            }
        ],
        "VkPhysicalDeviceLimits": [
            {
                "name": "maxImageDimension1D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxImageDimension1Dmax 1D image dimension\n            "
            },
            {
                "name": "maxImageDimension2D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxImageDimension2Dmax 2D image dimension\n            "
            },
            {
                "name": "maxImageDimension3D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxImageDimension3Dmax 3D image dimension\n            "
            },
            {
                "name": "maxImageDimensionCube",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxImageDimensionCubemax cubemap image dimension\n            "
            },
            {
                "name": "maxImageArrayLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxImageArrayLayersmax layers for image arrays\n            "
            },
            {
                "name": "maxTexelBufferElements",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTexelBufferElementsmax texel buffer size (fstexels)\n            "
            },
            {
                "name": "maxUniformBufferRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxUniformBufferRangemax uniform buffer range (bytes)\n            "
            },
            {
                "name": "maxStorageBufferRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxStorageBufferRangemax storage buffer range (bytes)\n            "
            },
            {
                "name": "maxPushConstantsSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPushConstantsSizemax size of the push constants pool (bytes)\n                "
            },
            {
                "name": "maxMemoryAllocationCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxMemoryAllocationCountmax number of device memory allocations supported\n            "
            },
            {
                "name": "maxSamplerAllocationCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxSamplerAllocationCountmax number of samplers that can be allocated on a device\n            "
            },
            {
                "name": "bufferImageGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           bufferImageGranularityGranularity (in bytes) at which buffers and images can be bound to adjacent memory for simultaneous usage\n            "
            },
            {
                "name": "sparseAddressSpaceSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           sparseAddressSpaceSizeTotal address space available for sparse allocations (bytes)\n                "
            },
            {
                "name": "maxBoundDescriptorSets",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxBoundDescriptorSetsmax number of descriptors sets that can be bound to a pipeline\n            "
            },
            {
                "name": "maxPerStageDescriptorSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorSamplersmax number of samplers allowed per-stage in a descriptor set\n            "
            },
            {
                "name": "maxPerStageDescriptorUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUniformBuffersmax number of uniform buffers allowed per-stage in a descriptor set\n            "
            },
            {
                "name": "maxPerStageDescriptorStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorStorageBuffersmax number of storage buffers allowed per-stage in a descriptor set\n            "
            },
            {
                "name": "maxPerStageDescriptorSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorSampledImagesmax number of sampled images allowed per-stage in a descriptor set\n            "
            },
            {
                "name": "maxPerStageDescriptorStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorStorageImagesmax number of storage images allowed per-stage in a descriptor set\n            "
            },
            {
                "name": "maxPerStageDescriptorInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorInputAttachmentsmax number of input attachments allowed per-stage in a descriptor set\n            "
            },
            {
                "name": "maxPerStageResources",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageResourcesmax number of resources allowed by a single stage\n            "
            },
            {
                "name": "maxDescriptorSetSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetSamplersmax number of samplers allowed in all stages in a descriptor set\n            "
            },
            {
                "name": "maxDescriptorSetUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUniformBuffersmax number of uniform buffers allowed in all stages in a descriptor set\n            "
            },
            {
                "name": "maxDescriptorSetUniformBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUniformBuffersDynamicmax number of dynamic uniform buffers allowed in all stages in a descriptor set\n            "
            },
            {
                "name": "maxDescriptorSetStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetStorageBuffersmax number of storage buffers allowed in all stages in a descriptor set\n            "
            },
            {
                "name": "maxDescriptorSetStorageBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetStorageBuffersDynamicmax number of dynamic storage buffers allowed in all stages in a descriptor set\n            "
            },
            {
                "name": "maxDescriptorSetSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetSampledImagesmax number of sampled images allowed in all stages in a descriptor set\n            "
            },
            {
                "name": "maxDescriptorSetStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetStorageImagesmax number of storage images allowed in all stages in a descriptor set\n            "
            },
            {
                "name": "maxDescriptorSetInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetInputAttachmentsmax number of input attachments allowed in all stages in a descriptor set\n                "
            },
            {
                "name": "maxVertexInputAttributes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxVertexInputAttributesmax number of vertex input attribute slots\n            "
            },
            {
                "name": "maxVertexInputBindings",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxVertexInputBindingsmax number of vertex input binding slots\n            "
            },
            {
                "name": "maxVertexInputAttributeOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxVertexInputAttributeOffsetmax vertex input attribute offset added to vertex buffer offset\n            "
            },
            {
                "name": "maxVertexInputBindingStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxVertexInputBindingStridemax vertex input binding stride\n            "
            },
            {
                "name": "maxVertexOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxVertexOutputComponentsmax number of output components written by vertex shader\n                "
            },
            {
                "name": "maxTessellationGenerationLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationGenerationLevelmax level supported by tessellation primitive generator\n            "
            },
            {
                "name": "maxTessellationPatchSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationPatchSizemax patch size (vertices)\n            "
            },
            {
                "name": "maxTessellationControlPerVertexInputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationControlPerVertexInputComponentsmax number of input components per-vertex in TCS\n            "
            },
            {
                "name": "maxTessellationControlPerVertexOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationControlPerVertexOutputComponentsmax number of output components per-vertex in TCS\n            "
            },
            {
                "name": "maxTessellationControlPerPatchOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationControlPerPatchOutputComponentsmax number of output components per-patch in TCS\n            "
            },
            {
                "name": "maxTessellationControlTotalOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationControlTotalOutputComponentsmax total number of per-vertex and per-patch output components in TCS\n                "
            },
            {
                "name": "maxTessellationEvaluationInputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationEvaluationInputComponentsmax number of input components per vertex in TES\n            "
            },
            {
                "name": "maxTessellationEvaluationOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTessellationEvaluationOutputComponentsmax number of output components per vertex in TES\n                "
            },
            {
                "name": "maxGeometryShaderInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxGeometryShaderInvocationsmax invocation count supported in geometry shader\n            "
            },
            {
                "name": "maxGeometryInputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxGeometryInputComponentsmax number of input components read in geometry stage\n            "
            },
            {
                "name": "maxGeometryOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxGeometryOutputComponentsmax number of output components written in geometry stage\n            "
            },
            {
                "name": "maxGeometryOutputVertices",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxGeometryOutputVerticesmax number of vertices that can be emitted in geometry stage\n            "
            },
            {
                "name": "maxGeometryTotalOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxGeometryTotalOutputComponentsmax total number of components (all vertices) written in geometry stage\n                "
            },
            {
                "name": "maxFragmentInputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxFragmentInputComponentsmax number of input components read in fragment stage\n            "
            },
            {
                "name": "maxFragmentOutputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxFragmentOutputAttachmentsmax number of output attachments written in fragment stage\n            "
            },
            {
                "name": "maxFragmentDualSrcAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxFragmentDualSrcAttachmentsmax number of output attachments written when using dual source blending\n            "
            },
            {
                "name": "maxFragmentCombinedOutputResources",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxFragmentCombinedOutputResourcesmax total number of storage buffers, storage images and output buffers\n                "
            },
            {
                "name": "maxComputeSharedMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxComputeSharedMemorySizemax total storage size of work group local storage (bytes)\n            "
            },
            {
                "name": "maxComputeWorkGroupCount",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxComputeWorkGroupCount[3]max num of compute work groups that may be dispatched by a single command (x,y,z)\n            "
            },
            {
                "name": "maxComputeWorkGroupInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxComputeWorkGroupInvocationsmax total compute invocations in a single local work group\n            "
            },
            {
                "name": "maxComputeWorkGroupSize",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxComputeWorkGroupSize[3]max local size of a compute work group (x,y,z)\n            "
            },
            {
                "name": "subPixelPrecisionBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t              subPixelPrecisionBitsnumber bits of subpixel precision in screen x and y\n            "
            },
            {
                "name": "subTexelPrecisionBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t              subTexelPrecisionBitsnumber bits of precision for selecting texel weights\n            "
            },
            {
                "name": "mipmapPrecisionBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t              mipmapPrecisionBitsnumber bits of precision for selecting mipmap weights\n            "
            },
            {
                "name": "maxDrawIndexedIndexValue",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDrawIndexedIndexValuemax index value for indexed draw calls (for 32-bit indices)\n            "
            },
            {
                "name": "maxDrawIndirectCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDrawIndirectCountmax draw count for indirect drawing calls\n            "
            },
            {
                "name": "maxSamplerLodBias",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  maxSamplerLodBiasmax absolute sampler LOD bias\n            "
            },
            {
                "name": "maxSamplerAnisotropy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  maxSamplerAnisotropymax degree of sampler anisotropy\n            "
            },
            {
                "name": "maxViewports",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxViewportsmax number of active viewports\n            "
            },
            {
                "name": "maxViewportDimensions",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxViewportDimensions[2]max viewport dimensions (x,y)\n            "
            },
            {
                "name": "viewportBoundsRange",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                viewportBoundsRange[2]viewport bounds range (min,max)\n            "
            },
            {
                "name": "viewportSubPixelBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t              viewportSubPixelBitsnumber bits of subpixel precision for viewport\n            "
            },
            {
                "name": "minMemoryMapAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t             minMemoryMapAlignmentmin required alignment of pointers returned by MapMemory (bytes)\n            "
            },
            {
                "name": "minTexelBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize       minTexelBufferOffsetAlignmentmin required alignment for texel buffer offsets (bytes) \n            "
            },
            {
                "name": "minUniformBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize       minUniformBufferOffsetAlignmentmin required alignment for uniform buffer sizes and offsets (bytes)\n            "
            },
            {
                "name": "minStorageBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize       minStorageBufferOffsetAlignmentmin required alignment for storage buffer offsets (bytes)\n            "
            },
            {
                "name": "minTexelOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                minTexelOffsetmin texel offset for OpTextureSampleOffset\n            "
            },
            {
                "name": "maxTexelOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTexelOffsetmax texel offset for OpTextureSampleOffset\n            "
            },
            {
                "name": "minTexelGatherOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                minTexelGatherOffsetmin texel offset for OpTextureGatherOffset\n            "
            },
            {
                "name": "maxTexelGatherOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTexelGatherOffsetmax texel offset for OpTextureGatherOffset\n            "
            },
            {
                "name": "minInterpolationOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  minInterpolationOffsetfurthest negative offset for interpolateAtOffset\n            "
            },
            {
                "name": "maxInterpolationOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  maxInterpolationOffsetfurthest positive offset for interpolateAtOffset\n            "
            },
            {
                "name": "subPixelInterpolationOffsetBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t              subPixelInterpolationOffsetBitsnumber of subpixel bits for interpolateAtOffset\n            "
            },
            {
                "name": "maxFramebufferWidth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxFramebufferWidthmax width for a framebuffer\n            "
            },
            {
                "name": "maxFramebufferHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxFramebufferHeightmax height for a framebuffer\n            "
            },
            {
                "name": "maxFramebufferLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxFramebufferLayersmax layer count for a layered framebuffer\n            "
            },
            {
                "name": "framebufferColorSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     framebufferColorSampleCountssupported color sample counts for a framebuffer\n            "
            },
            {
                "name": "framebufferDepthSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     framebufferDepthSampleCountssupported depth sample counts for a framebuffer\n            "
            },
            {
                "name": "framebufferStencilSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     framebufferStencilSampleCountssupported stencil sample counts for a framebuffer\n            "
            },
            {
                "name": "framebufferNoAttachmentsSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     framebufferNoAttachmentsSampleCountssupported sample counts for a subpass which uses no attachments\n            "
            },
            {
                "name": "maxColorAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxColorAttachmentsmax number of color attachments per subpass\n            "
            },
            {
                "name": "sampledImageColorSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     sampledImageColorSampleCountssupported color sample counts for a non-integer sampled image\n            "
            },
            {
                "name": "sampledImageIntegerSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     sampledImageIntegerSampleCountssupported sample counts for an integer image\n            "
            },
            {
                "name": "sampledImageDepthSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     sampledImageDepthSampleCountssupported depth sample counts for a sampled image\n            "
            },
            {
                "name": "sampledImageStencilSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     sampledImageStencilSampleCountssupported stencil sample counts for a sampled image\n            "
            },
            {
                "name": "storageImageSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags     storageImageSampleCountssupported sample counts for a storage image\n            "
            },
            {
                "name": "maxSampleMaskWords",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxSampleMaskWordsmax number of sample mask words\n            "
            },
            {
                "name": "timestampComputeAndGraphics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           timestampComputeAndGraphicstimestamps on graphics and compute queues\n            "
            },
            {
                "name": "timestampPeriod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float              timestampPeriodnumber of nanoseconds it takes for timestamp query value to increment by 1\n            "
            },
            {
                "name": "maxClipDistances",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxClipDistancesmax number of clip distances\n            "
            },
            {
                "name": "maxCullDistances",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxCullDistancesmax number of cull distances\n            "
            },
            {
                "name": "maxCombinedClipAndCullDistances",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxCombinedClipAndCullDistancesmax combined number of user clipping\n            "
            },
            {
                "name": "discreteQueuePriorities",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               discreteQueuePrioritiesdistinct queue priorities available \n            "
            },
            {
                "name": "pointSizeRange",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                pointSizeRange[2]range (min,max) of supported point sizes\n            "
            },
            {
                "name": "lineWidthRange",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                lineWidthRange[2]range (min,max) of supported line widths\n            "
            },
            {
                "name": "pointSizeGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float              pointSizeGranularitygranularity of supported point sizes\n            "
            },
            {
                "name": "lineWidthGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float              lineWidthGranularitygranularity of supported line widths\n            "
            },
            {
                "name": "strictLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           strictLinesline rasterization follows preferred rules\n            "
            },
            {
                "name": "standardSampleLocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           standardSampleLocationssupports standard sample locations for all supported sample counts\n            "
            },
            {
                "name": "optimalBufferCopyOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize       optimalBufferCopyOffsetAlignmentoptimal offset of buffer copies\n            "
            },
            {
                "name": "optimalBufferCopyRowPitchAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize       optimalBufferCopyRowPitchAlignmentoptimal pitch of buffer copies\n            "
            },
            {
                "name": "nonCoherentAtomSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize       nonCoherentAtomSizeminimum size and alignment for non-coherent host-mapped device memory access\n        "
            }
        ],
        "VkSemaphoreCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphoreCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphoreCreateFlags flagsSemaphore creation flags\n        "
            }
        ],
        "VkQueryPoolCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueryPoolCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueryPoolCreateFlags flags\n            "
            },
            {
                "name": "queryType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueryType",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueryType            queryType\n            "
            },
            {
                "name": "queryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               queryCount\n            "
            },
            {
                "name": "pipelineStatistics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueryPipelineStatisticFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueryPipelineStatisticFlags pipelineStatisticsOptional\n        "
            }
        ],
        "VkFramebufferCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFramebufferCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkFramebufferCreateFlags    flags\n            "
            },
            {
                "name": "renderPass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPass",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPass                           renderPass\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               attachmentCount\n            "
            },
            {
                "name": "pAttachments",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkImageView",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageView*     pAttachments\n            "
            },
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               height\n            "
            },
            {
                "name": "layers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               layers\n        "
            }
        ],
        "VkDrawIndirectCommand": [
            {
                "name": "vertexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       vertexCount\n            "
            },
            {
                "name": "instanceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       instanceCount\n            "
            },
            {
                "name": "firstVertex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       firstVertex\n            "
            },
            {
                "name": "firstInstance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t firstInstance\n        "
            }
        ],
        "VkDrawIndexedIndirectCommand": [
            {
                "name": "indexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       indexCount\n            "
            },
            {
                "name": "instanceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       instanceCount\n            "
            },
            {
                "name": "firstIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       firstIndex\n            "
            },
            {
                "name": "vertexOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                        vertexOffset\n            "
            },
            {
                "name": "firstInstance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t firstInstance\n        "
            }
        ],
        "VkDispatchIndirectCommand": [
            {
                "name": "x",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t x\n            "
            },
            {
                "name": "y",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t y\n            "
            },
            {
                "name": "z",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t z\n        "
            }
        ],
        "VkMultiDrawInfoEXT": [
            {
                "name": "firstVertex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t firstVertex\n            "
            },
            {
                "name": "vertexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t vertexCount\n        "
            }
        ],
        "VkMultiDrawIndexedInfoEXT": [
            {
                "name": "firstIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t firstIndex\n            "
            },
            {
                "name": "indexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t indexCount\n            "
            },
            {
                "name": "vertexOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t vertexOffset\n        "
            }
        ],
        "VkSubmitInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBMIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "waitSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       waitSemaphoreCount\n            "
            },
            {
                "name": "pWaitSemaphores",
                "const": true,
                "length": [
                    "waitSemaphoreCount"
                ],
                "type": "VkSemaphore",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphore*     pWaitSemaphores\n            "
            },
            {
                "name": "pWaitDstStageMask",
                "const": true,
                "length": [
                    "waitSemaphoreCount"
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineStageFlags*           pWaitDstStageMask\n            "
            },
            {
                "name": "commandBufferCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       commandBufferCount\n            "
            },
            {
                "name": "pCommandBuffers",
                "const": true,
                "length": [
                    "commandBufferCount"
                ],
                "type": "VkCommandBuffer",
                "num_indirection": 1,
                "value": "",
                "header": "const VkCommandBuffer*     pCommandBuffers\n            "
            },
            {
                "name": "signalSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t       signalSemaphoreCount\n            "
            },
            {
                "name": "pSignalSemaphores",
                "const": true,
                "length": [
                    "signalSemaphoreCount"
                ],
                "type": "VkSemaphore",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphore*     pSignalSemaphores\n        "
            }
        ],
        "VkDisplayPropertiesKHR": [
            {
                "name": "display",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayKHR                     displayHandle of the display object\n            "
            },
            {
                "name": "displayName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*                      displayNameName of the display\n            "
            },
            {
                "name": "physicalDimensions",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       physicalDimensionsIn millimeters?\n            "
            },
            {
                "name": "physicalResolution",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       physicalResolutionMax resolution for CRT?\n            "
            },
            {
                "name": "supportedTransforms",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagsKHR       supportedTransformsone or more bits from VkSurfaceTransformFlagsKHR\n            "
            },
            {
                "name": "planeReorderPossible",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         planeReorderPossibleVK_TRUE if the overlay plane's z-order can be changed on this display.\n            "
            },
            {
                "name": "persistentContent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         persistentContentVK_TRUE if this is a \"smart\" display that supports self-refresh/internal buffering.\n        "
            }
        ],
        "VkDisplayPlanePropertiesKHR": [
            {
                "name": "currentDisplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayKHR                     currentDisplayDisplay the plane is currently associated with.  Will be VK_NULL_HANDLE if the plane is not in use.\n            "
            },
            {
                "name": "currentStackIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         currentStackIndexCurrent z-order of the plane.\n        "
            }
        ],
        "VkDisplayModeParametersKHR": [
            {
                "name": "visibleRegion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       visibleRegionVisible scanout region.\n            "
            },
            {
                "name": "refreshRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t   refreshRateNumber of times per second the display is updated.\n        "
            }
        ],
        "VkDisplayModePropertiesKHR": [
            {
                "name": "displayMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayModeKHR                 displayModeHandle of this display mode.\n            "
            },
            {
                "name": "parameters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayModeParametersKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayModeParametersKHR       parametersThe parameters this mode uses.\n        "
            }
        ],
        "VkDisplayModeCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayModeCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayModeCreateFlagsKHR      flags\n            "
            },
            {
                "name": "parameters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayModeParametersKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayModeParametersKHR       parametersThe parameters this mode uses.\n        "
            }
        ],
        "VkDisplayPlaneCapabilitiesKHR": [
            {
                "name": "supportedAlpha",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayPlaneAlphaFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayPlaneAlphaFlagsKHR      supportedAlphaTypes of alpha blending supported, if any.\n            "
            },
            {
                "name": "minSrcPosition",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                       minSrcPositionDoes the plane have any position and extent restrictions?\n            "
            },
            {
                "name": "maxSrcPosition",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                       maxSrcPosition\n            "
            },
            {
                "name": "minSrcExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       minSrcExtent\n            "
            },
            {
                "name": "maxSrcExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxSrcExtent\n            "
            },
            {
                "name": "minDstPosition",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                       minDstPosition\n            "
            },
            {
                "name": "maxDstPosition",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                       maxDstPosition\n            "
            },
            {
                "name": "minDstExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       minDstExtent\n            "
            },
            {
                "name": "maxDstExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxDstExtent\n        "
            }
        ],
        "VkDisplaySurfaceCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplaySurfaceCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplaySurfaceCreateFlagsKHR   flags\n            "
            },
            {
                "name": "displayMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayModeKHR                 displayModeThe mode to use when displaying this surface\n            "
            },
            {
                "name": "planeIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         planeIndexThe plane on which this surface appears.  Must be between 0 and the value returned by vkGetPhysicalDeviceDisplayPlanePropertiesKHR() in pPropertyCount.\n            "
            },
            {
                "name": "planeStackIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         planeStackIndexThe z-order of the plane.\n            "
            },
            {
                "name": "transform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagBitsKHR    transformTransform to apply to the images as part of the scanout operation\n            "
            },
            {
                "name": "globalAlpha",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                            globalAlphaGlobal alpha value.  Must be between 0 and 1, inclusive.  Ignored if alphaMode is not VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR\n            "
            },
            {
                "name": "alphaMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayPlaneAlphaFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayPlaneAlphaFlagBitsKHR   alphaModeWhat type of alpha blending to use.  Must be a bit from vkGetDisplayPlanePropertiesKHR::supportedAlpha.\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       imageExtentsize of the images to use with this surface\n        "
            }
        ],
        "VkDisplayPresentInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "srcRect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRect2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkRect2D                         srcRectRectangle within the presentable image to read pixel data from when presenting to the display.\n            "
            },
            {
                "name": "dstRect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRect2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkRect2D                         dstRectRectangle within the current display mode's visible region to display srcRectangle in.\n            "
            },
            {
                "name": "persistent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         persistentFor smart displays, use buffered mode.  If the display properties member \"persistentMode\" is VK_FALSE, this member must always be VK_FALSE.\n        "
            }
        ],
        "VkSurfaceCapabilitiesKHR": [
            {
                "name": "minImageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         minImageCountSupported minimum number of images for the surface\n            "
            },
            {
                "name": "maxImageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxImageCountSupported maximum number of images for the surface, 0 for unlimited\n            "
            },
            {
                "name": "currentExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       currentExtentCurrent image width and height for the surface, (0, 0) if undefined\n            "
            },
            {
                "name": "minImageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       minImageExtentSupported minimum image width and height for the surface\n            "
            },
            {
                "name": "maxImageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxImageExtentSupported maximum image width and height for the surface\n            "
            },
            {
                "name": "maxImageArrayLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxImageArrayLayersSupported maximum number of image layers for the surface\n            "
            },
            {
                "name": "supportedTransforms",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagsKHR       supportedTransforms1 or more bits representing the transforms supported\n            "
            },
            {
                "name": "currentTransform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagBitsKHR    currentTransformThe surface's current transform relative to the device's natural orientation\n            "
            },
            {
                "name": "supportedCompositeAlpha",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCompositeAlphaFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkCompositeAlphaFlagsKHR         supportedCompositeAlpha1 or more bits representing the alpha compositing modes supported\n            "
            },
            {
                "name": "supportedUsageFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                supportedUsageFlagsSupported image usage flags for the surface\n        "
            }
        ],
        "VkXlibSurfaceCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkXlibSurfaceCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkXlibSurfaceCreateFlagsKHR   flags\n            "
            },
            {
                "name": "dpy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "Display",
                "num_indirection": 1,
                "value": "",
                "header": "Display*                         dpy\n            "
            },
            {
                "name": "window",
                "const": false,
                "length": [
                    ""
                ],
                "type": "Window",
                "num_indirection": 0,
                "value": "",
                "header": "Window                           window\n        "
            }
        ],
        "VkXcbSurfaceCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkXcbSurfaceCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkXcbSurfaceCreateFlagsKHR   flags\n            "
            },
            {
                "name": "connection",
                "const": false,
                "length": [
                    ""
                ],
                "type": "xcb_connection_t",
                "num_indirection": 1,
                "value": "",
                "header": "xcb_connection_t*                connection\n            "
            },
            {
                "name": "window",
                "const": false,
                "length": [
                    ""
                ],
                "type": "xcb_window_t",
                "num_indirection": 0,
                "value": "",
                "header": "xcb_window_t                     window\n        "
            }
        ],
        "VkSurfaceFormatKHR": [
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         formatSupported pair of rendering format\n            "
            },
            {
                "name": "colorSpace",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkColorSpaceKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkColorSpaceKHR                  colorSpaceand color space for the surface\n        "
            }
        ],
        "VkSwapchainCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSwapchainCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSwapchainCreateFlagsKHR        flags\n            "
            },
            {
                "name": "surface",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceKHR                     surfaceThe swapchain's target surface\n            "
            },
            {
                "name": "minImageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         minImageCountMinimum number of presentation images the application needs\n            "
            },
            {
                "name": "imageFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         imageFormatFormat of the presentation images\n            "
            },
            {
                "name": "imageColorSpace",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkColorSpaceKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkColorSpaceKHR                  imageColorSpaceColorspace of the presentation images\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       imageExtentDimensions of the presentation images\n            "
            },
            {
                "name": "imageArrayLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         imageArrayLayersDetermines the number of views for multiview/stereo presentation\n            "
            },
            {
                "name": "imageUsage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                imageUsageBits indicating how the presentation images will be used\n            "
            },
            {
                "name": "imageSharingMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSharingMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSharingMode                    imageSharingModeSharing mode used for the presentation images\n            "
            },
            {
                "name": "queueFamilyIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         queueFamilyIndexCountNumber of queue families having access to the images in case of concurrent sharing mode\n            "
            },
            {
                "name": "pQueueFamilyIndices",
                "const": true,
                "length": [
                    "queueFamilyIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*                  pQueueFamilyIndicesArray of queue family indices having access to the images in case of concurrent sharing mode\n            "
            },
            {
                "name": "preTransform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagBitsKHR    preTransformThe transform, relative to the device's natural orientation, applied to the image content prior to presentation\n            "
            },
            {
                "name": "compositeAlpha",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCompositeAlphaFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkCompositeAlphaFlagBitsKHR      compositeAlphaThe alpha blending mode used when compositing this surface with other surfaces in the window system\n            "
            },
            {
                "name": "presentMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentModeKHR                 presentModeWhich presentation mode to use for presents on this swap chain\n            "
            },
            {
                "name": "clipped",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         clippedSpecifies whether presentable images may be affected by window clip regions\n            "
            },
            {
                "name": "oldSwapchain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSwapchainKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSwapchainKHR                         oldSwapchainExisting swap chain to replace, if any\n            "
            }
        ],
        "VkPresentInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PRESENT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*  pNext\n            "
            },
            {
                "name": "waitSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         waitSemaphoreCountNumber of semaphores to wait for before presenting\n            "
            },
            {
                "name": "pWaitSemaphores",
                "const": true,
                "length": [
                    "waitSemaphoreCount"
                ],
                "type": "VkSemaphore",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphore* pWaitSemaphoresSemaphores to wait for before presenting\n            "
            },
            {
                "name": "swapchainCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         swapchainCountNumber of swapchains to present in this call\n            "
            },
            {
                "name": "pSwapchains",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "VkSwapchainKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSwapchainKHR* pSwapchainsSwapchains to present an image from\n            "
            },
            {
                "name": "pImageIndices",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pImageIndicesIndices of which presentable images to present\n            "
            },
            {
                "name": "pResults",
                "const": false,
                "length": [
                    "swapchainCount"
                ],
                "type": "VkResult",
                "num_indirection": 1,
                "value": "",
                "header": "VkResult* pResultsOptional (i.e. if non-NULL) VkResult for each swapchain\n        "
            }
        ],
        "VkDebugReportCallbackCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDebugReportFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDebugReportFlagsEXT            flagsIndicates which events call this callback\n            "
            },
            {
                "name": "pfnCallback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkDebugReportCallbackEXT",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkDebugReportCallbackEXT     pfnCallbackFunction pointer of a callback function\n            "
            },
            {
                "name": "pUserData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*            pUserDataUser data provided to callback function\n        "
            }
        ],
        "VkValidationFlagsEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT",
                "header": "VkStructureType                  sTypeMust be VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "disabledValidationCheckCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         disabledValidationCheckCountNumber of validation checks to disable\n            "
            },
            {
                "name": "pDisabledValidationChecks",
                "const": true,
                "length": [
                    "disabledValidationCheckCount"
                ],
                "type": "VkValidationCheckEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkValidationCheckEXT* pDisabledValidationChecksValidation checks to disable\n        "
            }
        ],
        "VkValidationFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT",
                "header": "VkStructureType  sTypeMust be VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "enabledValidationFeatureCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         enabledValidationFeatureCountNumber of validation features to enable\n            "
            },
            {
                "name": "pEnabledValidationFeatures",
                "const": true,
                "length": [
                    "enabledValidationFeatureCount"
                ],
                "type": "VkValidationFeatureEnableEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkValidationFeatureEnableEXT* pEnabledValidationFeaturesValidation features to enable\n            "
            },
            {
                "name": "disabledValidationFeatureCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         disabledValidationFeatureCountNumber of validation features to disable\n            "
            },
            {
                "name": "pDisabledValidationFeatures",
                "const": true,
                "length": [
                    "disabledValidationFeatureCount"
                ],
                "type": "VkValidationFeatureDisableEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkValidationFeatureDisableEXT* pDisabledValidationFeaturesValidation features to disable\n        "
            }
        ],
        "VkPipelineRasterizationStateRasterizationOrderAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "rasterizationOrder",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRasterizationOrderAMD",
                "num_indirection": 0,
                "value": "",
                "header": "VkRasterizationOrderAMD          rasterizationOrderRasterization order to use for the pipeline\n        "
            }
        ],
        "VkDebugMarkerObjectNameInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "objectType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDebugReportObjectTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDebugReportObjectTypeEXT       objectTypeThe type of the object\n            "
            },
            {
                "name": "object",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         objectThe handle of the object, cast to uint64_t\n            "
            },
            {
                "name": "pObjectName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char* pObjectNameName to apply to the object\n        "
            }
        ],
        "VkDebugMarkerObjectTagInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "objectType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDebugReportObjectTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDebugReportObjectTypeEXT       objectTypeThe type of the object\n            "
            },
            {
                "name": "object",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         objectThe handle of the object, cast to uint64_t\n            "
            },
            {
                "name": "tagName",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         tagNameThe name of the tag to set on the object\n            "
            },
            {
                "name": "tagSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           tagSizeThe length in bytes of the tag data\n            "
            },
            {
                "name": "pTag",
                "const": true,
                "length": [
                    "tagSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*        pTagTag data to attach to the object\n        "
            }
        ],
        "VkDebugMarkerMarkerInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "pMarkerName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char* pMarkerNameName of the debug marker\n            "
            },
            {
                "name": "color",
                "const": false,
                "length": [
                    "4"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float            color[4]Optional color for debug marker\n        "
            }
        ],
        "VkDedicatedAllocationImageCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "dedicatedAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         dedicatedAllocationWhether this image uses a dedicated allocation\n        "
            }
        ],
        "VkDedicatedAllocationBufferCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "dedicatedAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         dedicatedAllocationWhether this buffer uses a dedicated allocation\n        "
            }
        ],
        "VkDedicatedAllocationMemoryAllocateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage          imageImage that this allocation will be bound to\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer         bufferBuffer that this allocation will be bound to\n        "
            }
        ],
        "VkExternalImageFormatPropertiesNV": [
            {
                "name": "imageFormatProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageFormatProperties          imageFormatProperties\n            "
            },
            {
                "name": "externalMemoryFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryFeatureFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryFeatureFlagsNV   externalMemoryFeatures\n            "
            },
            {
                "name": "exportFromImportedHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagsNV exportFromImportedHandleTypes\n            "
            },
            {
                "name": "compatibleHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagsNV compatibleHandleTypes\n        "
            }
        ],
        "VkExternalMemoryImageCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagsNV handleTypes\n        "
            }
        ],
        "VkExportMemoryAllocateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagsNV handleTypes\n        "
            }
        ],
        "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "deviceGeneratedCommands",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       deviceGeneratedCommands\n        "
            }
        ],
        "VkPhysicalDeviceDeviceGeneratedCommandsComputeFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*          pNext\n            "
            },
            {
                "name": "deviceGeneratedCompute",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       deviceGeneratedCompute\n            "
            },
            {
                "name": "deviceGeneratedComputePipelines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       deviceGeneratedComputePipelines\n            "
            },
            {
                "name": "deviceGeneratedComputeCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       deviceGeneratedComputeCaptureReplay\n        "
            }
        ],
        "VkDevicePrivateDataCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "privateDataSlotRequestCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               privateDataSlotRequestCount\n        "
            }
        ],
        "VkDevicePrivateDataCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "privateDataSlotRequestCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               privateDataSlotRequestCount\n        "
            }
        ],
        "VkPrivateDataSlotCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPrivateDataSlotCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPrivateDataSlotCreateFlags        flags\n        "
            }
        ],
        "VkPrivateDataSlotCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPrivateDataSlotCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPrivateDataSlotCreateFlags        flags\n        "
            }
        ],
        "VkPhysicalDevicePrivateDataFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                  pNext\n            "
            },
            {
                "name": "privateData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                               privateData\n        "
            }
        ],
        "VkPhysicalDevicePrivateDataFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                  pNext\n            "
            },
            {
                "name": "privateData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                               privateData\n        "
            }
        ],
        "VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "maxGraphicsShaderGroupCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxGraphicsShaderGroupCount\n            "
            },
            {
                "name": "maxIndirectSequenceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxIndirectSequenceCount\n            "
            },
            {
                "name": "maxIndirectCommandsTokenCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxIndirectCommandsTokenCount\n            "
            },
            {
                "name": "maxIndirectCommandsStreamCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxIndirectCommandsStreamCount\n            "
            },
            {
                "name": "maxIndirectCommandsTokenOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxIndirectCommandsTokenOffset\n            "
            },
            {
                "name": "maxIndirectCommandsStreamStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxIndirectCommandsStreamStride\n            "
            },
            {
                "name": "minSequencesCountBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         minSequencesCountBufferOffsetAlignment\n            "
            },
            {
                "name": "minSequencesIndexBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         minSequencesIndexBufferOffsetAlignment\n            "
            },
            {
                "name": "minIndirectCommandsBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         minIndirectCommandsBufferOffsetAlignment\n        "
            }
        ],
        "VkPhysicalDeviceMultiDrawPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "maxMultiDrawCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxMultiDrawCount\n        "
            }
        ],
        "VkGraphicsShaderGroupCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "stageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   stageCount\n            "
            },
            {
                "name": "pStages",
                "const": true,
                "length": [
                    "stageCount"
                ],
                "type": "VkPipelineShaderStageCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineShaderStageCreateInfo*    pStages\n            "
            },
            {
                "name": "pVertexInputState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineVertexInputStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineVertexInputStateCreateInfo*                pVertexInputState\n            "
            },
            {
                "name": "pTessellationState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineTessellationStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineTessellationStateCreateInfo*               pTessellationState\n        "
            }
        ],
        "VkGraphicsPipelineShaderGroupsCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                pNext\n            "
            },
            {
                "name": "groupCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   groupCount\n            "
            },
            {
                "name": "pGroups",
                "const": true,
                "length": [
                    "groupCount"
                ],
                "type": "VkGraphicsShaderGroupCreateInfoNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkGraphicsShaderGroupCreateInfoNV*  pGroups\n            "
            },
            {
                "name": "pipelineCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   pipelineCount\n            "
            },
            {
                "name": "pPipelines",
                "const": true,
                "length": [
                    "pipelineCount"
                ],
                "type": "VkPipeline",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipeline*                      pPipelines\n        "
            }
        ],
        "VkBindShaderGroupIndirectCommandNV": [
            {
                "name": "groupIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         groupIndex\n        "
            }
        ],
        "VkBindIndexBufferIndirectCommandNV": [
            {
                "name": "bufferAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress  bufferAddress\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         size\n            "
            },
            {
                "name": "indexType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndexType",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndexType      indexType\n        "
            }
        ],
        "VkBindVertexBufferIndirectCommandNV": [
            {
                "name": "bufferAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress  bufferAddress\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         size\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         stride\n        "
            }
        ],
        "VkSetStateFlagsIndirectCommandNV": [
            {
                "name": "data",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t          data\n        "
            }
        ],
        "VkIndirectCommandsStreamNV": [
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer      buffer\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize  offset\n        "
            }
        ],
        "VkIndirectCommandsLayoutTokenNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "tokenType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndirectCommandsTokenTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndirectCommandsTokenTypeNV  tokenType\n            "
            },
            {
                "name": "stream",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       stream\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       offset\n            "
            },
            {
                "name": "vertexBindingUnit",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                vertexBindingUnit\n            "
            },
            {
                "name": "vertexDynamicStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                vertexDynamicStride\n            "
            },
            {
                "name": "pushconstantPipelineLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayout        pushconstantPipelineLayout\n            "
            },
            {
                "name": "pushconstantShaderStageFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags      pushconstantShaderStageFlags\n            "
            },
            {
                "name": "pushconstantOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                pushconstantOffset\n            "
            },
            {
                "name": "pushconstantSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                pushconstantSize\n            "
            },
            {
                "name": "indirectStateFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndirectStateFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndirectStateFlagsNV  indirectStateFlags\n            "
            },
            {
                "name": "indexTypeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                indexTypeCount\n            "
            },
            {
                "name": "pIndexTypes",
                "const": true,
                "length": [
                    "indexTypeCount"
                ],
                "type": "VkIndexType",
                "num_indirection": 1,
                "value": "",
                "header": "const VkIndexType* pIndexTypes\n            "
            },
            {
                "name": "pIndexTypeValues",
                "const": true,
                "length": [
                    "indexTypeCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*    pIndexTypeValues\n        "
            }
        ],
        "VkIndirectCommandsLayoutCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                             pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndirectCommandsLayoutUsageFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndirectCommandsLayoutUsageFlagsNV    flags\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint                     pipelineBindPoint\n            "
            },
            {
                "name": "tokenCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                tokenCount\n            "
            },
            {
                "name": "pTokens",
                "const": true,
                "length": [
                    "tokenCount"
                ],
                "type": "VkIndirectCommandsLayoutTokenNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkIndirectCommandsLayoutTokenNV*  pTokens\n            "
            },
            {
                "name": "streamCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                streamCount\n            "
            },
            {
                "name": "pStreamStrides",
                "const": true,
                "length": [
                    "streamCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*       pStreamStrides\n        "
            }
        ],
        "VkGeneratedCommandsInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint                pipelineBindPoint\n            "
            },
            {
                "name": "pipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline                         pipeline\n            "
            },
            {
                "name": "indirectCommandsLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndirectCommandsLayoutNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndirectCommandsLayoutNV         indirectCommandsLayout\n            "
            },
            {
                "name": "streamCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           streamCount\n            "
            },
            {
                "name": "pStreams",
                "const": true,
                "length": [
                    "streamCount"
                ],
                "type": "VkIndirectCommandsStreamNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkIndirectCommandsStreamNV*  pStreams\n            "
            },
            {
                "name": "sequencesCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           sequencesCount\n            "
            },
            {
                "name": "preprocessBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                           preprocessBuffer\n            "
            },
            {
                "name": "preprocessOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       preprocessOffset\n            "
            },
            {
                "name": "preprocessSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       preprocessSize\n            "
            },
            {
                "name": "sequencesCountBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer           sequencesCountBuffer\n            "
            },
            {
                "name": "sequencesCountOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       sequencesCountOffset\n            "
            },
            {
                "name": "sequencesIndexBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer           sequencesIndexBuffer\n            "
            },
            {
                "name": "sequencesIndexOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       sequencesIndexOffset\n        "
            }
        ],
        "VkGeneratedCommandsMemoryRequirementsInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                 pNext\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint         pipelineBindPoint\n            "
            },
            {
                "name": "pipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline  pipeline\n            "
            },
            {
                "name": "indirectCommandsLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndirectCommandsLayoutNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndirectCommandsLayoutNV  indirectCommandsLayout\n            "
            },
            {
                "name": "maxSequencesCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    maxSequencesCount\n        "
            }
        ],
        "VkPipelineIndirectDeviceAddressInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*   pNext\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint           pipelineBindPoint\n            "
            },
            {
                "name": "pipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline                    pipeline\n        "
            }
        ],
        "VkBindPipelineIndirectCommandNV": [
            {
                "name": "pipelineAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress               pipelineAddress\n        "
            }
        ],
        "VkPhysicalDeviceFeatures2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "features",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceFeatures",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceFeatures         features\n        "
            }
        ],
        "VkPhysicalDeviceFeatures2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "features",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceFeatures",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceFeatures         features\n        "
            }
        ],
        "VkPhysicalDeviceProperties2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "properties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceProperties       properties\n        "
            }
        ],
        "VkPhysicalDeviceProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "properties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceProperties       properties\n        "
            }
        ],
        "VkFormatProperties2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "formatProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatProperties               formatProperties\n        "
            }
        ],
        "VkFormatProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "formatProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatProperties               formatProperties\n        "
            }
        ],
        "VkImageFormatProperties2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "imageFormatProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageFormatProperties          imageFormatProperties\n        "
            }
        ],
        "VkImageFormatProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "imageFormatProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageFormatProperties          imageFormatProperties\n        "
            }
        ],
        "VkPhysicalDeviceImageFormatInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         format\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageType                      type\n            "
            },
            {
                "name": "tiling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageTiling",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageTiling                    tiling\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                usage\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCreateFlags flags\n        "
            }
        ],
        "VkPhysicalDeviceImageFormatInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         format\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageType                      type\n            "
            },
            {
                "name": "tiling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageTiling",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageTiling                    tiling\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                usage\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCreateFlags flags\n        "
            }
        ],
        "VkQueueFamilyProperties2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "queueFamilyProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueueFamilyProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueFamilyProperties       queueFamilyProperties\n        "
            }
        ],
        "VkQueueFamilyProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "queueFamilyProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueueFamilyProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueFamilyProperties       queueFamilyProperties\n        "
            }
        ],
        "VkPhysicalDeviceMemoryProperties2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "memoryProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceMemoryProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceMemoryProperties memoryProperties\n        "
            }
        ],
        "VkPhysicalDeviceMemoryProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "memoryProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPhysicalDeviceMemoryProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDeviceMemoryProperties memoryProperties\n        "
            }
        ],
        "VkSparseImageFormatProperties2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "properties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseImageFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseImageFormatProperties properties\n        "
            }
        ],
        "VkSparseImageFormatProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "properties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseImageFormatProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseImageFormatProperties properties\n        "
            }
        ],
        "VkPhysicalDeviceSparseImageFormatInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         format\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageType                      type\n            "
            },
            {
                "name": "samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits            samples\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                usage\n            "
            },
            {
                "name": "tiling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageTiling",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageTiling                    tiling\n        "
            }
        ],
        "VkPhysicalDeviceSparseImageFormatInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         format\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageType                      type\n            "
            },
            {
                "name": "samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits            samples\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                usage\n            "
            },
            {
                "name": "tiling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageTiling",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageTiling                    tiling\n        "
            }
        ],
        "VkPhysicalDevicePushDescriptorPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxPushDescriptors",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPushDescriptors\n        "
            }
        ],
        "VkConformanceVersion": [
            {
                "name": "major",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          major\n            "
            },
            {
                "name": "minor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          minor\n            "
            },
            {
                "name": "subminor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          subminor\n            "
            },
            {
                "name": "patch",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          patch\n        "
            }
        ],
        "VkConformanceVersionKHR": [
            {
                "name": "major",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          major\n            "
            },
            {
                "name": "minor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          minor\n            "
            },
            {
                "name": "subminor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          subminor\n            "
            },
            {
                "name": "patch",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          patch\n        "
            }
        ],
        "VkPhysicalDeviceDriverProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "driverID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDriverId",
                "num_indirection": 0,
                "value": "",
                "header": "VkDriverId                  driverID\n            "
            },
            {
                "name": "driverName",
                "const": false,
                "length": [
                    "VK_MAX_DRIVER_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                        driverName[VK_MAX_DRIVER_NAME_SIZE]\n            "
            },
            {
                "name": "driverInfo",
                "const": false,
                "length": [
                    "VK_MAX_DRIVER_INFO_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                        driverInfo[VK_MAX_DRIVER_INFO_SIZE]\n            "
            },
            {
                "name": "conformanceVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkConformanceVersion",
                "num_indirection": 0,
                "value": "",
                "header": "VkConformanceVersion        conformanceVersion\n        "
            }
        ],
        "VkPhysicalDeviceDriverPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "driverID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDriverId",
                "num_indirection": 0,
                "value": "",
                "header": "VkDriverId                  driverID\n            "
            },
            {
                "name": "driverName",
                "const": false,
                "length": [
                    "VK_MAX_DRIVER_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                        driverName[VK_MAX_DRIVER_NAME_SIZE]\n            "
            },
            {
                "name": "driverInfo",
                "const": false,
                "length": [
                    "VK_MAX_DRIVER_INFO_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                        driverInfo[VK_MAX_DRIVER_INFO_SIZE]\n            "
            },
            {
                "name": "conformanceVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkConformanceVersion",
                "num_indirection": 0,
                "value": "",
                "header": "VkConformanceVersion        conformanceVersion\n        "
            }
        ],
        "VkPresentRegionsKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "swapchainCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         swapchainCountCopy of VkPresentInfoKHR::swapchainCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "VkPresentRegionKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPresentRegionKHR*   pRegionsThe regions that have changed\n        "
            }
        ],
        "VkPresentRegionKHR": [
            {
                "name": "rectangleCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         rectangleCountNumber of rectangles in pRectangles\n            "
            },
            {
                "name": "pRectangles",
                "const": true,
                "length": [
                    "rectangleCount"
                ],
                "type": "VkRectLayerKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRectLayerKHR*   pRectanglesArray of rectangles that have changed in a swapchain's image(s)\n        "
            }
        ],
        "VkRectLayerKHR": [
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                       offsetupper-left corner of a rectangle that has not changed, in pixels of a presentation images\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D extentDimensions of a rectangle that has not changed, in pixels of a presentation images\n            "
            },
            {
                "name": "layer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         layerLayer of a swapchain's image(s), for stereoscopic-3D images\n        "
            }
        ],
        "VkPhysicalDeviceVariablePointersFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "variablePointersStorageBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointersStorageBuffer\n            "
            },
            {
                "name": "variablePointers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointers\n        "
            }
        ],
        "VkPhysicalDeviceVariablePointersFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "variablePointersStorageBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointersStorageBuffer\n            "
            },
            {
                "name": "variablePointers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointers\n        "
            }
        ],
        "VkPhysicalDeviceVariablePointerFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "variablePointersStorageBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointersStorageBuffer\n            "
            },
            {
                "name": "variablePointers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointers\n        "
            }
        ],
        "VkPhysicalDeviceVariablePointerFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "variablePointersStorageBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointersStorageBuffer\n            "
            },
            {
                "name": "variablePointers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointers\n        "
            }
        ],
        "VkExternalMemoryProperties": [
            {
                "name": "externalMemoryFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryFeatureFlags  externalMemoryFeatures\n            "
            },
            {
                "name": "exportFromImportedHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags exportFromImportedHandleTypes\n            "
            },
            {
                "name": "compatibleHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags compatibleHandleTypes\n        "
            }
        ],
        "VkExternalMemoryPropertiesKHR": [
            {
                "name": "externalMemoryFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryFeatureFlags  externalMemoryFeatures\n            "
            },
            {
                "name": "exportFromImportedHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags exportFromImportedHandleTypes\n            "
            },
            {
                "name": "compatibleHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags compatibleHandleTypes\n        "
            }
        ],
        "VkPhysicalDeviceExternalImageFormatInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkPhysicalDeviceExternalImageFormatInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkExternalImageFormatProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "externalMemoryProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryProperties externalMemoryProperties\n        "
            }
        ],
        "VkExternalImageFormatPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "externalMemoryProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryProperties externalMemoryProperties\n        "
            }
        ],
        "VkPhysicalDeviceExternalBufferInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferCreateFlags flags\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferUsageFlags               usage\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkPhysicalDeviceExternalBufferInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferCreateFlags flags\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferUsageFlags               usage\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkExternalBufferProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "externalMemoryProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryProperties    externalMemoryProperties\n        "
            }
        ],
        "VkExternalBufferPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "externalMemoryProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryProperties    externalMemoryProperties\n        "
            }
        ],
        "VkPhysicalDeviceIDProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "deviceUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                     deviceUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "driverUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                     driverUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "deviceLUID",
                "const": false,
                "length": [
                    "VK_LUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                     deviceLUID[VK_LUID_SIZE]\n            "
            },
            {
                "name": "deviceNodeMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    deviceNodeMask\n            "
            },
            {
                "name": "deviceLUIDValid",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    deviceLUIDValid\n        "
            }
        ],
        "VkPhysicalDeviceIDPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "deviceUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                     deviceUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "driverUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                     driverUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "deviceLUID",
                "const": false,
                "length": [
                    "VK_LUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                     deviceLUID[VK_LUID_SIZE]\n            "
            },
            {
                "name": "deviceNodeMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    deviceNodeMask\n            "
            },
            {
                "name": "deviceLUIDValid",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    deviceLUIDValid\n        "
            }
        ],
        "VkExternalMemoryImageCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkExternalMemoryImageCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkExternalMemoryBufferCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkExternalMemoryBufferCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkExportMemoryAllocateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkExportMemoryAllocateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkImportMemoryFdInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n            "
            },
            {
                "name": "fd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int",
                "num_indirection": 0,
                "value": "",
                "header": "int                              fd\n        "
            }
        ],
        "VkMemoryFdPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "memoryTypeBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         memoryTypeBits\n        "
            }
        ],
        "VkMemoryGetFdInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkPhysicalDeviceExternalSemaphoreInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkPhysicalDeviceExternalSemaphoreInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkExternalSemaphoreProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "exportFromImportedHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlags exportFromImportedHandleTypes\n            "
            },
            {
                "name": "compatibleHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlags compatibleHandleTypes\n            "
            },
            {
                "name": "externalSemaphoreFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreFeatureFlags externalSemaphoreFeatures\n        "
            }
        ],
        "VkExternalSemaphorePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "exportFromImportedHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlags exportFromImportedHandleTypes\n            "
            },
            {
                "name": "compatibleHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlags compatibleHandleTypes\n            "
            },
            {
                "name": "externalSemaphoreFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreFeatureFlags externalSemaphoreFeatures\n        "
            }
        ],
        "VkExportSemaphoreCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkExportSemaphoreCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkImportSemaphoreFdInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "semaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphore",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphore    semaphore\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphoreImportFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphoreImportFlags flags\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlagBits handleType\n            "
            },
            {
                "name": "fd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int",
                "num_indirection": 0,
                "value": "",
                "header": "int                              fd\n        "
            }
        ],
        "VkSemaphoreGetFdInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "semaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphore",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphore                      semaphore\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalSemaphoreHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalSemaphoreHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkPhysicalDeviceExternalFenceInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkPhysicalDeviceExternalFenceInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkExternalFenceProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "exportFromImportedHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlags exportFromImportedHandleTypes\n            "
            },
            {
                "name": "compatibleHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlags compatibleHandleTypes\n            "
            },
            {
                "name": "externalFenceFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceFeatureFlags externalFenceFeatures\n        "
            }
        ],
        "VkExternalFencePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "exportFromImportedHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlags exportFromImportedHandleTypes\n            "
            },
            {
                "name": "compatibleHandleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlags compatibleHandleTypes\n            "
            },
            {
                "name": "externalFenceFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceFeatureFlags externalFenceFeatures\n        "
            }
        ],
        "VkExportFenceCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkExportFenceCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "handleTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlags handleTypes\n        "
            }
        ],
        "VkImportFenceFdInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "fence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFence",
                "num_indirection": 0,
                "value": "",
                "header": "VkFence              fence\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFenceImportFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkFenceImportFlags  flags\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlagBits   handleType\n            "
            },
            {
                "name": "fd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int",
                "num_indirection": 0,
                "value": "",
                "header": "int                                    fd\n        "
            }
        ],
        "VkFenceGetFdInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "fence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFence",
                "num_indirection": 0,
                "value": "",
                "header": "VkFence                                fence\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalFenceHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalFenceHandleTypeFlagBits   handleType\n        "
            }
        ],
        "VkPhysicalDeviceMultiviewFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "multiview",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewMultiple views in a renderpass\n            "
            },
            {
                "name": "multiviewGeometryShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewGeometryShaderMultiple views in a renderpass w/ geometry shader\n            "
            },
            {
                "name": "multiviewTessellationShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewTessellationShaderMultiple views in a renderpass w/ tessellation shader\n        "
            }
        ],
        "VkPhysicalDeviceMultiviewFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "multiview",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewMultiple views in a renderpass\n            "
            },
            {
                "name": "multiviewGeometryShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewGeometryShaderMultiple views in a renderpass w/ geometry shader\n            "
            },
            {
                "name": "multiviewTessellationShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewTessellationShaderMultiple views in a renderpass w/ tessellation shader\n        "
            }
        ],
        "VkPhysicalDeviceMultiviewProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxMultiviewViewCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxMultiviewViewCountmax number of views in a subpass\n            "
            },
            {
                "name": "maxMultiviewInstanceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxMultiviewInstanceIndexmax instance index for a draw in a multiview subpass\n        "
            }
        ],
        "VkPhysicalDeviceMultiviewPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxMultiviewViewCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxMultiviewViewCountmax number of views in a subpass\n            "
            },
            {
                "name": "maxMultiviewInstanceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxMultiviewInstanceIndexmax instance index for a draw in a multiview subpass\n        "
            }
        ],
        "VkRenderPassMultiviewCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO",
                "header": "VkStructureType        sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "subpassCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               subpassCount\n            "
            },
            {
                "name": "pViewMasks",
                "const": true,
                "length": [
                    "subpassCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*     pViewMasks\n            "
            },
            {
                "name": "dependencyCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dependencyCount\n            "
            },
            {
                "name": "pViewOffsets",
                "const": true,
                "length": [
                    "dependencyCount"
                ],
                "type": "int32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const int32_t*   pViewOffsets\n            "
            },
            {
                "name": "correlationMaskCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               correlationMaskCount\n            "
            },
            {
                "name": "pCorrelationMasks",
                "const": true,
                "length": [
                    "correlationMaskCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pCorrelationMasks\n        "
            }
        ],
        "VkRenderPassMultiviewCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO",
                "header": "VkStructureType        sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "subpassCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               subpassCount\n            "
            },
            {
                "name": "pViewMasks",
                "const": true,
                "length": [
                    "subpassCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*     pViewMasks\n            "
            },
            {
                "name": "dependencyCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               dependencyCount\n            "
            },
            {
                "name": "pViewOffsets",
                "const": true,
                "length": [
                    "dependencyCount"
                ],
                "type": "int32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const int32_t*   pViewOffsets\n            "
            },
            {
                "name": "correlationMaskCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               correlationMaskCount\n            "
            },
            {
                "name": "pCorrelationMasks",
                "const": true,
                "length": [
                    "correlationMaskCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pCorrelationMasks\n        "
            }
        ],
        "VkSurfaceCapabilities2EXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "minImageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         minImageCountSupported minimum number of images for the surface\n            "
            },
            {
                "name": "maxImageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxImageCountSupported maximum number of images for the surface, 0 for unlimited\n            "
            },
            {
                "name": "currentExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       currentExtentCurrent image width and height for the surface, (0, 0) if undefined\n            "
            },
            {
                "name": "minImageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       minImageExtentSupported minimum image width and height for the surface\n            "
            },
            {
                "name": "maxImageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxImageExtentSupported maximum image width and height for the surface\n            "
            },
            {
                "name": "maxImageArrayLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxImageArrayLayersSupported maximum number of image layers for the surface\n            "
            },
            {
                "name": "supportedTransforms",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagsKHR       supportedTransforms1 or more bits representing the transforms supported\n            "
            },
            {
                "name": "currentTransform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagBitsKHR    currentTransformThe surface's current transform relative to the device's natural orientation\n            "
            },
            {
                "name": "supportedCompositeAlpha",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCompositeAlphaFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkCompositeAlphaFlagsKHR         supportedCompositeAlpha1 or more bits representing the alpha compositing modes supported\n            "
            },
            {
                "name": "supportedUsageFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                supportedUsageFlagsSupported image usage flags for the surface\n            "
            },
            {
                "name": "supportedSurfaceCounters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceCounterFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceCounterFlagsEXT supportedSurfaceCounters\n        "
            }
        ],
        "VkDisplayPowerInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "powerState",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayPowerStateEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayPowerStateEXT           powerState\n        "
            }
        ],
        "VkDeviceEventInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceEvent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceEventTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceEventTypeEXT             deviceEvent\n        "
            }
        ],
        "VkDisplayEventInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "displayEvent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayEventTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayEventTypeEXT            displayEvent\n        "
            }
        ],
        "VkSwapchainCounterCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "surfaceCounters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceCounterFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceCounterFlagsEXT         surfaceCounters\n        "
            }
        ],
        "VkPhysicalDeviceGroupProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "physicalDeviceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         physicalDeviceCount\n            "
            },
            {
                "name": "physicalDevices",
                "const": false,
                "length": [
                    "VK_MAX_DEVICE_GROUP_SIZE"
                ],
                "type": "VkPhysicalDevice",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDevice                 physicalDevices[VK_MAX_DEVICE_GROUP_SIZE]\n            "
            },
            {
                "name": "subsetAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         subsetAllocation\n        "
            }
        ],
        "VkPhysicalDeviceGroupPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "physicalDeviceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         physicalDeviceCount\n            "
            },
            {
                "name": "physicalDevices",
                "const": false,
                "length": [
                    "VK_MAX_DEVICE_GROUP_SIZE"
                ],
                "type": "VkPhysicalDevice",
                "num_indirection": 0,
                "value": "",
                "header": "VkPhysicalDevice                 physicalDevices[VK_MAX_DEVICE_GROUP_SIZE]\n            "
            },
            {
                "name": "subsetAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         subsetAllocation\n        "
            }
        ],
        "VkMemoryAllocateFlagsInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryAllocateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryAllocateFlags flags\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceMask\n        "
            }
        ],
        "VkMemoryAllocateFlagsInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryAllocateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryAllocateFlags flags\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceMask\n        "
            }
        ],
        "VkBindBufferMemoryInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                         buffer\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     memoryOffset\n        "
            }
        ],
        "VkBindBufferMemoryInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                         buffer\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     memoryOffset\n        "
            }
        ],
        "VkBindBufferMemoryDeviceGroupInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         deviceIndexCount\n            "
            },
            {
                "name": "pDeviceIndices",
                "const": true,
                "length": [
                    "deviceIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*  pDeviceIndices\n        "
            }
        ],
        "VkBindBufferMemoryDeviceGroupInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         deviceIndexCount\n            "
            },
            {
                "name": "pDeviceIndices",
                "const": true,
                "length": [
                    "deviceIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*  pDeviceIndices\n        "
            }
        ],
        "VkBindImageMemoryInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                          image\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     memoryOffset\n        "
            }
        ],
        "VkBindImageMemoryInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                          image\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     memoryOffset\n        "
            }
        ],
        "VkBindImageMemoryDeviceGroupInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         deviceIndexCount\n            "
            },
            {
                "name": "pDeviceIndices",
                "const": true,
                "length": [
                    "deviceIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*  pDeviceIndices\n            "
            },
            {
                "name": "splitInstanceBindRegionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         splitInstanceBindRegionCount\n            "
            },
            {
                "name": "pSplitInstanceBindRegions",
                "const": true,
                "length": [
                    "splitInstanceBindRegionCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D*  pSplitInstanceBindRegions\n        "
            }
        ],
        "VkBindImageMemoryDeviceGroupInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         deviceIndexCount\n            "
            },
            {
                "name": "pDeviceIndices",
                "const": true,
                "length": [
                    "deviceIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*  pDeviceIndices\n            "
            },
            {
                "name": "splitInstanceBindRegionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         splitInstanceBindRegionCount\n            "
            },
            {
                "name": "pSplitInstanceBindRegions",
                "const": true,
                "length": [
                    "splitInstanceBindRegionCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D*  pSplitInstanceBindRegions\n        "
            }
        ],
        "VkDeviceGroupRenderPassBeginInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceMask\n            "
            },
            {
                "name": "deviceRenderAreaCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         deviceRenderAreaCount\n            "
            },
            {
                "name": "pDeviceRenderAreas",
                "const": true,
                "length": [
                    "deviceRenderAreaCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D*  pDeviceRenderAreas\n        "
            }
        ],
        "VkDeviceGroupRenderPassBeginInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceMask\n            "
            },
            {
                "name": "deviceRenderAreaCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         deviceRenderAreaCount\n            "
            },
            {
                "name": "pDeviceRenderAreas",
                "const": true,
                "length": [
                    "deviceRenderAreaCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D*  pDeviceRenderAreas\n        "
            }
        ],
        "VkDeviceGroupCommandBufferBeginInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceMask\n        "
            }
        ],
        "VkDeviceGroupCommandBufferBeginInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceMask\n        "
            }
        ],
        "VkDeviceGroupSubmitInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "waitSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         waitSemaphoreCount\n            "
            },
            {
                "name": "pWaitSemaphoreDeviceIndices",
                "const": true,
                "length": [
                    "waitSemaphoreCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*    pWaitSemaphoreDeviceIndices\n            "
            },
            {
                "name": "commandBufferCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         commandBufferCount\n            "
            },
            {
                "name": "pCommandBufferDeviceMasks",
                "const": true,
                "length": [
                    "commandBufferCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*    pCommandBufferDeviceMasks\n            "
            },
            {
                "name": "signalSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         signalSemaphoreCount\n            "
            },
            {
                "name": "pSignalSemaphoreDeviceIndices",
                "const": true,
                "length": [
                    "signalSemaphoreCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*  pSignalSemaphoreDeviceIndices\n        "
            }
        ],
        "VkDeviceGroupSubmitInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "waitSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         waitSemaphoreCount\n            "
            },
            {
                "name": "pWaitSemaphoreDeviceIndices",
                "const": true,
                "length": [
                    "waitSemaphoreCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*    pWaitSemaphoreDeviceIndices\n            "
            },
            {
                "name": "commandBufferCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         commandBufferCount\n            "
            },
            {
                "name": "pCommandBufferDeviceMasks",
                "const": true,
                "length": [
                    "commandBufferCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*    pCommandBufferDeviceMasks\n            "
            },
            {
                "name": "signalSemaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         signalSemaphoreCount\n            "
            },
            {
                "name": "pSignalSemaphoreDeviceIndices",
                "const": true,
                "length": [
                    "signalSemaphoreCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*  pSignalSemaphoreDeviceIndices\n        "
            }
        ],
        "VkDeviceGroupBindSparseInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "resourceDeviceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         resourceDeviceIndex\n            "
            },
            {
                "name": "memoryDeviceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         memoryDeviceIndex\n        "
            }
        ],
        "VkDeviceGroupBindSparseInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "resourceDeviceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         resourceDeviceIndex\n            "
            },
            {
                "name": "memoryDeviceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         memoryDeviceIndex\n        "
            }
        ],
        "VkDeviceGroupPresentCapabilitiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "presentMask",
                "const": false,
                "length": [
                    "VK_MAX_DEVICE_GROUP_SIZE"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         presentMask[VK_MAX_DEVICE_GROUP_SIZE]\n            "
            },
            {
                "name": "modes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceGroupPresentModeFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceGroupPresentModeFlagsKHR modes\n        "
            }
        ],
        "VkImageSwapchainCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "swapchain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSwapchainKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSwapchainKHR   swapchain\n        "
            }
        ],
        "VkBindImageMemorySwapchainInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "swapchain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSwapchainKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSwapchainKHR swapchain\n            "
            },
            {
                "name": "imageIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         imageIndex\n        "
            }
        ],
        "VkAcquireNextImageInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "swapchain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSwapchainKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSwapchainKHR swapchain\n            "
            },
            {
                "name": "timeout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         timeout\n            "
            },
            {
                "name": "semaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphore",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphore semaphore\n            "
            },
            {
                "name": "fence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFence",
                "num_indirection": 0,
                "value": "",
                "header": "VkFence fence\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceMask\n        "
            }
        ],
        "VkDeviceGroupPresentInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "swapchainCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         swapchainCount\n            "
            },
            {
                "name": "pDeviceMasks",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pDeviceMasks\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceGroupPresentModeFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceGroupPresentModeFlagBitsKHR mode\n        "
            }
        ],
        "VkDeviceGroupDeviceCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "physicalDeviceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         physicalDeviceCount\n            "
            },
            {
                "name": "pPhysicalDevices",
                "const": true,
                "length": [
                    "physicalDeviceCount"
                ],
                "type": "VkPhysicalDevice",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPhysicalDevice*  pPhysicalDevices\n        "
            }
        ],
        "VkDeviceGroupDeviceCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "physicalDeviceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         physicalDeviceCount\n            "
            },
            {
                "name": "pPhysicalDevices",
                "const": true,
                "length": [
                    "physicalDeviceCount"
                ],
                "type": "VkPhysicalDevice",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPhysicalDevice*  pPhysicalDevices\n        "
            }
        ],
        "VkDeviceGroupSwapchainCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "modes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceGroupPresentModeFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceGroupPresentModeFlagsKHR                         modes\n        "
            }
        ],
        "VkDescriptorUpdateTemplateEntry": [
            {
                "name": "dstBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         dstBindingBinding within the destination descriptor set to write\n            "
            },
            {
                "name": "dstArrayElement",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         dstArrayElementArray element within the destination binding to write\n            "
            },
            {
                "name": "descriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         descriptorCountNumber of descriptors to write\n            "
            },
            {
                "name": "descriptorType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorType                 descriptorTypeDescriptor type to write\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           offsetOffset into pData where the descriptors to update are stored\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           strideStride between two descriptors in pData when writing more than one descriptor\n        "
            }
        ],
        "VkDescriptorUpdateTemplateEntryKHR": [
            {
                "name": "dstBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         dstBindingBinding within the destination descriptor set to write\n            "
            },
            {
                "name": "dstArrayElement",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         dstArrayElementArray element within the destination binding to write\n            "
            },
            {
                "name": "descriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         descriptorCountNumber of descriptors to write\n            "
            },
            {
                "name": "descriptorType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorType                 descriptorTypeDescriptor type to write\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           offsetOffset into pData where the descriptors to update are stored\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           strideStride between two descriptors in pData when writing more than one descriptor\n        "
            }
        ],
        "VkDescriptorUpdateTemplateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                               pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorUpdateTemplateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorUpdateTemplateCreateFlags    flags\n            "
            },
            {
                "name": "descriptorUpdateEntryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 descriptorUpdateEntryCountNumber of descriptor update entries to use for the update template\n            "
            },
            {
                "name": "pDescriptorUpdateEntries",
                "const": true,
                "length": [
                    "descriptorUpdateEntryCount"
                ],
                "type": "VkDescriptorUpdateTemplateEntry",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorUpdateTemplateEntry* pDescriptorUpdateEntriesDescriptor update entries for the template\n            "
            },
            {
                "name": "templateType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorUpdateTemplateType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorUpdateTemplateType templateType\n            "
            },
            {
                "name": "descriptorSetLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorSetLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorSetLayout descriptorSetLayout\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint pipelineBindPoint\n            "
            },
            {
                "name": "pipelineLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayout pipelineLayoutIf used for push descriptors, this is the only allowed layout\n            "
            },
            {
                "name": "set",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t set\n        "
            }
        ],
        "VkDescriptorUpdateTemplateCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                               pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorUpdateTemplateCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorUpdateTemplateCreateFlags    flags\n            "
            },
            {
                "name": "descriptorUpdateEntryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 descriptorUpdateEntryCountNumber of descriptor update entries to use for the update template\n            "
            },
            {
                "name": "pDescriptorUpdateEntries",
                "const": true,
                "length": [
                    "descriptorUpdateEntryCount"
                ],
                "type": "VkDescriptorUpdateTemplateEntry",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorUpdateTemplateEntry* pDescriptorUpdateEntriesDescriptor update entries for the template\n            "
            },
            {
                "name": "templateType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorUpdateTemplateType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorUpdateTemplateType templateType\n            "
            },
            {
                "name": "descriptorSetLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorSetLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorSetLayout descriptorSetLayout\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint pipelineBindPoint\n            "
            },
            {
                "name": "pipelineLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayout pipelineLayoutIf used for push descriptors, this is the only allowed layout\n            "
            },
            {
                "name": "set",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t set\n        "
            }
        ],
        "VkXYColorEXT": [
            {
                "name": "x",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float   x\n            "
            },
            {
                "name": "y",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float   y\n        "
            }
        ],
        "VkPhysicalDevicePresentIdFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "presentId",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         presentIdPresent ID in VkPresentInfoKHR\n        "
            }
        ],
        "VkPresentIdKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PRESENT_ID_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "swapchainCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         swapchainCountCopy of VkPresentInfoKHR::swapchainCount\n            "
            },
            {
                "name": "pPresentIds",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t* pPresentIdsPresent ID values for each swapchain\n        "
            }
        ],
        "VkPhysicalDevicePresentWaitFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "presentWait",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         presentWaitvkWaitForPresentKHR is supported\n        "
            }
        ],
        "VkHdrMetadataEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_HDR_METADATA_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*    pNext\n                "
            },
            {
                "name": "displayPrimaryRed",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkXYColorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkXYColorEXT   displayPrimaryRedDisplay primary's Red\n            "
            },
            {
                "name": "displayPrimaryGreen",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkXYColorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkXYColorEXT   displayPrimaryGreenDisplay primary's Green\n            "
            },
            {
                "name": "displayPrimaryBlue",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkXYColorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkXYColorEXT   displayPrimaryBlueDisplay primary's Blue\n            "
            },
            {
                "name": "whitePoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkXYColorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkXYColorEXT   whitePointDisplay primary's Blue\n            "
            },
            {
                "name": "maxLuminance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float          maxLuminanceDisplay maximum luminance\n            "
            },
            {
                "name": "minLuminance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float          minLuminanceDisplay minimum luminance\n                "
            },
            {
                "name": "maxContentLightLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float          maxContentLightLevelContent maximum luminance\n            "
            },
            {
                "name": "maxFrameAverageLightLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float          maxFrameAverageLightLevel\n        "
            }
        ],
        "VkDisplayNativeHdrSurfaceCapabilitiesAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*          pNext\n            "
            },
            {
                "name": "localDimmingSupport",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32       localDimmingSupport\n        "
            }
        ],
        "VkSwapchainDisplayNativeHdrCreateInfoAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*    pNext\n            "
            },
            {
                "name": "localDimmingEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32       localDimmingEnable\n        "
            }
        ],
        "VkRefreshCycleDurationGOOGLE": [
            {
                "name": "refreshDuration",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         refreshDurationNumber of nanoseconds from the start of one refresh cycle to the next\n        "
            }
        ],
        "VkPastPresentationTimingGOOGLE": [
            {
                "name": "presentID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         presentIDApplication-provided identifier, previously given to vkQueuePresentKHR\n            "
            },
            {
                "name": "desiredPresentTime",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         desiredPresentTimeEarliest time an image should have been presented, previously given to vkQueuePresentKHR\n            "
            },
            {
                "name": "actualPresentTime",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         actualPresentTimeTime the image was actually displayed\n            "
            },
            {
                "name": "earliestPresentTime",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         earliestPresentTimeEarliest time the image could have been displayed\n            "
            },
            {
                "name": "presentMargin",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         presentMarginHow early vkQueuePresentKHR was processed vs. how soon it needed to be and make earliestPresentTime\n        "
            }
        ],
        "VkPresentTimesInfoGOOGLE": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "swapchainCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         swapchainCountCopy of VkPresentInfoKHR::swapchainCount\n            "
            },
            {
                "name": "pTimes",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "VkPresentTimeGOOGLE",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPresentTimeGOOGLE*   pTimesThe earliest times to present images\n        "
            }
        ],
        "VkPresentTimeGOOGLE": [
            {
                "name": "presentID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         presentIDApplication-provided identifier\n            "
            },
            {
                "name": "desiredPresentTime",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         desiredPresentTimeEarliest time an image should be presented\n        "
            }
        ],
        "VkViewportWScalingNV": [
            {
                "name": "xcoeff",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float          xcoeff\n            "
            },
            {
                "name": "ycoeff",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float          ycoeff\n        "
            }
        ],
        "VkPipelineViewportWScalingStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "viewportWScalingEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               viewportWScalingEnable\n            "
            },
            {
                "name": "viewportCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               viewportCount\n            "
            },
            {
                "name": "pViewportWScalings",
                "const": true,
                "length": [
                    "viewportCount"
                ],
                "type": "VkViewportWScalingNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkViewportWScalingNV*      pViewportWScalings\n        "
            }
        ],
        "VkViewportSwizzleNV": [
            {
                "name": "x",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkViewportCoordinateSwizzleNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkViewportCoordinateSwizzleNV          x\n            "
            },
            {
                "name": "y",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkViewportCoordinateSwizzleNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkViewportCoordinateSwizzleNV          y\n            "
            },
            {
                "name": "z",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkViewportCoordinateSwizzleNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkViewportCoordinateSwizzleNV          z\n            "
            },
            {
                "name": "w",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkViewportCoordinateSwizzleNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkViewportCoordinateSwizzleNV          w\n        "
            }
        ],
        "VkPipelineViewportSwizzleStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineViewportSwizzleStateCreateFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineViewportSwizzleStateCreateFlagsNV    flags\n            "
            },
            {
                "name": "viewportCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               viewportCount\n            "
            },
            {
                "name": "pViewportSwizzles",
                "const": true,
                "length": [
                    "viewportCount"
                ],
                "type": "VkViewportSwizzleNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkViewportSwizzleNV*      pViewportSwizzles\n        "
            }
        ],
        "VkPhysicalDeviceDiscardRectanglePropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxDiscardRectangles",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDiscardRectanglesmax number of active discard rectangles\n        "
            }
        ],
        "VkPipelineDiscardRectangleStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                       pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineDiscardRectangleStateCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineDiscardRectangleStateCreateFlagsEXT     flags\n            "
            },
            {
                "name": "discardRectangleMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDiscardRectangleModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDiscardRectangleModeEXT                                         discardRectangleMode\n            "
            },
            {
                "name": "discardRectangleCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                          discardRectangleCount\n            "
            },
            {
                "name": "pDiscardRectangles",
                "const": true,
                "length": [
                    "discardRectangleCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D* pDiscardRectangles\n        "
            }
        ],
        "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "perViewPositionAllComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         perViewPositionAllComponents\n        "
            }
        ],
        "VkInputAttachmentAspectReference": [
            {
                "name": "subpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                        subpass\n            "
            },
            {
                "name": "inputAttachmentIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                        inputAttachmentIndex\n            "
            },
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags              aspectMask\n        "
            }
        ],
        "VkInputAttachmentAspectReferenceKHR": [
            {
                "name": "subpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                        subpass\n            "
            },
            {
                "name": "inputAttachmentIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                        inputAttachmentIndex\n            "
            },
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags              aspectMask\n        "
            }
        ],
        "VkRenderPassInputAttachmentAspectCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                     pNext\n            "
            },
            {
                "name": "aspectReferenceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                        aspectReferenceCount\n            "
            },
            {
                "name": "pAspectReferences",
                "const": true,
                "length": [
                    "aspectReferenceCount"
                ],
                "type": "VkInputAttachmentAspectReference",
                "num_indirection": 1,
                "value": "",
                "header": "const VkInputAttachmentAspectReference* pAspectReferences\n        "
            }
        ],
        "VkRenderPassInputAttachmentAspectCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                     pNext\n            "
            },
            {
                "name": "aspectReferenceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                        aspectReferenceCount\n            "
            },
            {
                "name": "pAspectReferences",
                "const": true,
                "length": [
                    "aspectReferenceCount"
                ],
                "type": "VkInputAttachmentAspectReference",
                "num_indirection": 1,
                "value": "",
                "header": "const VkInputAttachmentAspectReference* pAspectReferences\n        "
            }
        ],
        "VkPhysicalDeviceSurfaceInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "surface",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceKHR surface\n        "
            }
        ],
        "VkSurfaceCapabilities2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*   pNext\n            "
            },
            {
                "name": "surfaceCapabilities",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceCapabilitiesKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceCapabilitiesKHR surfaceCapabilities\n        "
            }
        ],
        "VkSurfaceFormat2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "surfaceFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceFormatKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceFormatKHR surfaceFormat\n        "
            }
        ],
        "VkDisplayProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "displayProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayPropertiesKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayPropertiesKHR displayProperties\n        "
            }
        ],
        "VkDisplayPlaneProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "displayPlaneProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayPlanePropertiesKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayPlanePropertiesKHR displayPlaneProperties\n        "
            }
        ],
        "VkDisplayModeProperties2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "displayModeProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayModePropertiesKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayModePropertiesKHR displayModeProperties\n        "
            }
        ],
        "VkDisplayPlaneInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayModeKHR mode\n            "
            },
            {
                "name": "planeIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t planeIndex\n        "
            }
        ],
        "VkDisplayPlaneCapabilities2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "capabilities",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDisplayPlaneCapabilitiesKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDisplayPlaneCapabilitiesKHR capabilities\n        "
            }
        ],
        "VkSharedPresentSurfaceCapabilitiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "sharedPresentSupportedUsageFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags sharedPresentSupportedUsageFlagsSupported image usage flags if swapchain created using a shared present mode\n        "
            }
        ],
        "VkPhysicalDevice16BitStorageFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "storageBuffer16BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageBuffer16BitAccess16-bit integer/floating-point variables supported in BufferBlock\n            "
            },
            {
                "name": "uniformAndStorageBuffer16BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformAndStorageBuffer16BitAccess16-bit integer/floating-point variables supported in BufferBlock and Block\n            "
            },
            {
                "name": "storagePushConstant16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storagePushConstant1616-bit integer/floating-point variables supported in PushConstant\n            "
            },
            {
                "name": "storageInputOutput16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageInputOutput1616-bit integer/floating-point variables supported in shader inputs and outputs\n        "
            }
        ],
        "VkPhysicalDevice16BitStorageFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "storageBuffer16BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageBuffer16BitAccess16-bit integer/floating-point variables supported in BufferBlock\n            "
            },
            {
                "name": "uniformAndStorageBuffer16BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformAndStorageBuffer16BitAccess16-bit integer/floating-point variables supported in BufferBlock and Block\n            "
            },
            {
                "name": "storagePushConstant16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storagePushConstant1616-bit integer/floating-point variables supported in PushConstant\n            "
            },
            {
                "name": "storageInputOutput16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageInputOutput1616-bit integer/floating-point variables supported in shader inputs and outputs\n        "
            }
        ],
        "VkPhysicalDeviceSubgroupProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                   pNext\n            "
            },
            {
                "name": "subgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                     subgroupSizeThe size of a subgroup for this queue.\n            "
            },
            {
                "name": "supportedStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags            supportedStagesBitfield of what shader stages support subgroup operations\n            "
            },
            {
                "name": "supportedOperations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubgroupFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubgroupFeatureFlags        supportedOperationsBitfield of what subgroup operations are supported.\n            "
            },
            {
                "name": "quadOperationsInAllStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 quadOperationsInAllStagesFlag to specify whether quad operations are available in all stages.\n        "
            }
        ],
        "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "shaderSubgroupExtendedTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 shaderSubgroupExtendedTypesFlag to specify whether subgroup operations with extended types are supported\n        "
            }
        ],
        "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "shaderSubgroupExtendedTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 shaderSubgroupExtendedTypesFlag to specify whether subgroup operations with extended types are supported\n        "
            }
        ],
        "VkBufferMemoryRequirementsInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                                             buffer\n        "
            }
        ],
        "VkBufferMemoryRequirementsInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                                             buffer\n        "
            }
        ],
        "VkDeviceBufferMemoryRequirements": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                           pNext\n            "
            },
            {
                "name": "pCreateInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkBufferCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferCreateInfo*                                                             pCreateInfo\n        "
            }
        ],
        "VkDeviceBufferMemoryRequirementsKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                           pNext\n            "
            },
            {
                "name": "pCreateInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkBufferCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferCreateInfo*                                                             pCreateInfo\n        "
            }
        ],
        "VkImageMemoryRequirementsInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                                              image\n        "
            }
        ],
        "VkImageMemoryRequirementsInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                                              image\n        "
            }
        ],
        "VkImageSparseMemoryRequirementsInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                                              image\n        "
            }
        ],
        "VkImageSparseMemoryRequirementsInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                                              image\n        "
            }
        ],
        "VkDeviceImageMemoryRequirements": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "pCreateInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkImageCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageCreateInfo*                                                             pCreateInfo\n            "
            },
            {
                "name": "planeAspect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlagBits                                                planeAspect\n        "
            }
        ],
        "VkDeviceImageMemoryRequirementsKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "pCreateInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkImageCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageCreateInfo*                                                             pCreateInfo\n            "
            },
            {
                "name": "planeAspect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlagBits                                                planeAspect\n        "
            }
        ],
        "VkMemoryRequirements2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "memoryRequirements",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryRequirements",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryRequirements                                                 memoryRequirements\n        "
            }
        ],
        "VkMemoryRequirements2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "memoryRequirements",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryRequirements",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryRequirements                                                 memoryRequirements\n        "
            }
        ],
        "VkSparseImageMemoryRequirements2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                       pNext\n            "
            },
            {
                "name": "memoryRequirements",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseImageMemoryRequirements",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseImageMemoryRequirements                                      memoryRequirements\n        "
            }
        ],
        "VkSparseImageMemoryRequirements2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                       pNext\n            "
            },
            {
                "name": "memoryRequirements",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSparseImageMemoryRequirements",
                "num_indirection": 0,
                "value": "",
                "header": "VkSparseImageMemoryRequirements                                      memoryRequirements\n        "
            }
        ],
        "VkPhysicalDevicePointClippingProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "pointClippingBehavior",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPointClippingBehavior",
                "num_indirection": 0,
                "value": "",
                "header": "VkPointClippingBehavior     pointClippingBehavior\n        "
            }
        ],
        "VkPhysicalDevicePointClippingPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "pointClippingBehavior",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPointClippingBehavior",
                "num_indirection": 0,
                "value": "",
                "header": "VkPointClippingBehavior     pointClippingBehavior\n        "
            }
        ],
        "VkMemoryDedicatedRequirements": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "prefersDedicatedAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         prefersDedicatedAllocation\n            "
            },
            {
                "name": "requiresDedicatedAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         requiresDedicatedAllocation\n        "
            }
        ],
        "VkMemoryDedicatedRequirementsKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "prefersDedicatedAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         prefersDedicatedAllocation\n            "
            },
            {
                "name": "requiresDedicatedAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         requiresDedicatedAllocation\n        "
            }
        ],
        "VkMemoryDedicatedAllocateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage          imageImage that this allocation will be bound to\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer         bufferBuffer that this allocation will be bound to\n        "
            }
        ],
        "VkMemoryDedicatedAllocateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage          imageImage that this allocation will be bound to\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer         bufferBuffer that this allocation will be bound to\n        "
            }
        ],
        "VkImageViewUsageCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags usage\n        "
            }
        ],
        "VkImageViewSlicedCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "sliceOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t sliceOffset\n            "
            },
            {
                "name": "sliceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t sliceCount\n        "
            }
        ],
        "VkImageViewUsageCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags usage\n        "
            }
        ],
        "VkPipelineTessellationDomainOriginStateCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "domainOrigin",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkTessellationDomainOrigin",
                "num_indirection": 0,
                "value": "",
                "header": "VkTessellationDomainOrigin    domainOrigin\n        "
            }
        ],
        "VkPipelineTessellationDomainOriginStateCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "domainOrigin",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkTessellationDomainOrigin",
                "num_indirection": 0,
                "value": "",
                "header": "VkTessellationDomainOrigin    domainOrigin\n        "
            }
        ],
        "VkSamplerYcbcrConversionInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "conversion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerYcbcrConversion",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerYcbcrConversion      conversion\n        "
            }
        ],
        "VkSamplerYcbcrConversionInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "conversion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerYcbcrConversion",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerYcbcrConversion      conversion\n        "
            }
        ],
        "VkSamplerYcbcrConversionCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         format\n            "
            },
            {
                "name": "ycbcrModel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerYcbcrModelConversion",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerYcbcrModelConversion ycbcrModel\n            "
            },
            {
                "name": "ycbcrRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerYcbcrRange",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerYcbcrRange           ycbcrRange\n            "
            },
            {
                "name": "components",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentMapping",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentMapping               components\n            "
            },
            {
                "name": "xChromaOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkChromaLocation",
                "num_indirection": 0,
                "value": "",
                "header": "VkChromaLocation              xChromaOffset\n            "
            },
            {
                "name": "yChromaOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkChromaLocation",
                "num_indirection": 0,
                "value": "",
                "header": "VkChromaLocation              yChromaOffset\n            "
            },
            {
                "name": "chromaFilter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFilter",
                "num_indirection": 0,
                "value": "",
                "header": "VkFilter                         chromaFilter\n            "
            },
            {
                "name": "forceExplicitReconstruction",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         forceExplicitReconstruction\n        "
            }
        ],
        "VkSamplerYcbcrConversionCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         format\n            "
            },
            {
                "name": "ycbcrModel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerYcbcrModelConversion",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerYcbcrModelConversion ycbcrModel\n            "
            },
            {
                "name": "ycbcrRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerYcbcrRange",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerYcbcrRange           ycbcrRange\n            "
            },
            {
                "name": "components",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentMapping",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentMapping               components\n            "
            },
            {
                "name": "xChromaOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkChromaLocation",
                "num_indirection": 0,
                "value": "",
                "header": "VkChromaLocation              xChromaOffset\n            "
            },
            {
                "name": "yChromaOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkChromaLocation",
                "num_indirection": 0,
                "value": "",
                "header": "VkChromaLocation              yChromaOffset\n            "
            },
            {
                "name": "chromaFilter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFilter",
                "num_indirection": 0,
                "value": "",
                "header": "VkFilter                         chromaFilter\n            "
            },
            {
                "name": "forceExplicitReconstruction",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         forceExplicitReconstruction\n        "
            }
        ],
        "VkBindImagePlaneMemoryInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "planeAspect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlagBits            planeAspect\n        "
            }
        ],
        "VkBindImagePlaneMemoryInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "planeAspect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlagBits            planeAspect\n        "
            }
        ],
        "VkImagePlaneMemoryRequirementsInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "planeAspect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlagBits            planeAspect\n        "
            }
        ],
        "VkImagePlaneMemoryRequirementsInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "planeAspect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlagBits            planeAspect\n        "
            }
        ],
        "VkPhysicalDeviceSamplerYcbcrConversionFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "samplerYcbcrConversion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         samplerYcbcrConversionSampler color conversion supported\n        "
            }
        ],
        "VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "samplerYcbcrConversion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         samplerYcbcrConversionSampler color conversion supported\n        "
            }
        ],
        "VkSamplerYcbcrConversionImageFormatProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "combinedImageSamplerDescriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         combinedImageSamplerDescriptorCount\n        "
            }
        ],
        "VkSamplerYcbcrConversionImageFormatPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "combinedImageSamplerDescriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         combinedImageSamplerDescriptorCount\n        "
            }
        ],
        "VkTextureLODGatherFormatPropertiesAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "supportsTextureGatherLODBiasAMD",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         supportsTextureGatherLODBiasAMD\n        "
            }
        ],
        "VkConditionalRenderingBeginInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                         buffer\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     offset\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkConditionalRenderingFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkConditionalRenderingFlagsEXT    flags\n        "
            }
        ],
        "VkProtectedSubmitInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                     pNext\n            "
            },
            {
                "name": "protectedSubmit",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                        protectedSubmitSubmit protected command buffers\n        "
            }
        ],
        "VkPhysicalDeviceProtectedMemoryFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "protectedMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            protectedMemory\n        "
            }
        ],
        "VkPhysicalDeviceProtectedMemoryProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "protectedNoFault",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            protectedNoFault\n        "
            }
        ],
        "VkDeviceQueueInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceQueueCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceQueueCreateFlags            flags\n            "
            },
            {
                "name": "queueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            queueFamilyIndex\n            "
            },
            {
                "name": "queueIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            queueIndex\n        "
            }
        ],
        "VkPipelineCoverageToColorStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCoverageToColorStateCreateFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCoverageToColorStateCreateFlagsNV                    flags\n            "
            },
            {
                "name": "coverageToColorEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         coverageToColorEnable\n            "
            },
            {
                "name": "coverageToColorLocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         coverageToColorLocation\n        "
            }
        ],
        "VkPhysicalDeviceSamplerFilterMinmaxProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "filterMinmaxSingleComponentFormats",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               filterMinmaxSingleComponentFormats\n            "
            },
            {
                "name": "filterMinmaxImageComponentMapping",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               filterMinmaxImageComponentMapping\n        "
            }
        ],
        "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "filterMinmaxSingleComponentFormats",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               filterMinmaxSingleComponentFormats\n            "
            },
            {
                "name": "filterMinmaxImageComponentMapping",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               filterMinmaxImageComponentMapping\n        "
            }
        ],
        "VkSampleLocationEXT": [
            {
                "name": "x",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                            x\n            "
            },
            {
                "name": "y",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                            y\n        "
            }
        ],
        "VkSampleLocationsInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "sampleLocationsPerPixel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits  sampleLocationsPerPixel\n            "
            },
            {
                "name": "sampleLocationGridSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                             sampleLocationGridSize\n            "
            },
            {
                "name": "sampleLocationsCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               sampleLocationsCount\n            "
            },
            {
                "name": "pSampleLocations",
                "const": true,
                "length": [
                    "sampleLocationsCount"
                ],
                "type": "VkSampleLocationEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSampleLocationEXT* pSampleLocations\n        "
            }
        ],
        "VkAttachmentSampleLocationsEXT": [
            {
                "name": "attachmentIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         attachmentIndex\n            "
            },
            {
                "name": "sampleLocationsInfo",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleLocationsInfoEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleLocationsInfoEXT         sampleLocationsInfo\n        "
            }
        ],
        "VkSubpassSampleLocationsEXT": [
            {
                "name": "subpassIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         subpassIndex\n            "
            },
            {
                "name": "sampleLocationsInfo",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleLocationsInfoEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleLocationsInfoEXT         sampleLocationsInfo\n        "
            }
        ],
        "VkRenderPassSampleLocationsBeginInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "attachmentInitialSampleLocationsCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         attachmentInitialSampleLocationsCount\n            "
            },
            {
                "name": "pAttachmentInitialSampleLocations",
                "const": true,
                "length": [
                    "attachmentInitialSampleLocationsCount"
                ],
                "type": "VkAttachmentSampleLocationsEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentSampleLocationsEXT* pAttachmentInitialSampleLocations\n            "
            },
            {
                "name": "postSubpassSampleLocationsCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         postSubpassSampleLocationsCount\n            "
            },
            {
                "name": "pPostSubpassSampleLocations",
                "const": true,
                "length": [
                    "postSubpassSampleLocationsCount"
                ],
                "type": "VkSubpassSampleLocationsEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubpassSampleLocationsEXT* pPostSubpassSampleLocations\n        "
            }
        ],
        "VkPipelineSampleLocationsStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "sampleLocationsEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         sampleLocationsEnable\n            "
            },
            {
                "name": "sampleLocationsInfo",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleLocationsInfoEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleLocationsInfoEXT         sampleLocationsInfo\n        "
            }
        ],
        "VkPhysicalDeviceSampleLocationsPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "sampleLocationSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags               sampleLocationSampleCounts\n            "
            },
            {
                "name": "maxSampleLocationGridSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxSampleLocationGridSize\n            "
            },
            {
                "name": "sampleLocationCoordinateRange",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                            sampleLocationCoordinateRange[2]\n            "
            },
            {
                "name": "sampleLocationSubPixelBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         sampleLocationSubPixelBits\n            "
            },
            {
                "name": "variableSampleLocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variableSampleLocations\n        "
            }
        ],
        "VkMultisamplePropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxSampleLocationGridSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxSampleLocationGridSize\n        "
            }
        ],
        "VkSamplerReductionModeCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "reductionMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerReductionMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerReductionMode           reductionMode\n        "
            }
        ],
        "VkSamplerReductionModeCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "reductionMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSamplerReductionMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSamplerReductionMode           reductionMode\n        "
            }
        ],
        "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "advancedBlendCoherentOperations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         advancedBlendCoherentOperations\n        "
            }
        ],
        "VkPhysicalDeviceMultiDrawFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                     pNext\n            "
            },
            {
                "name": "multiDraw",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        multiDraw\n        "
            }
        ],
        "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "advancedBlendMaxColorAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         advancedBlendMaxColorAttachments\n            "
            },
            {
                "name": "advancedBlendIndependentBlend",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         advancedBlendIndependentBlend\n            "
            },
            {
                "name": "advancedBlendNonPremultipliedSrcColor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         advancedBlendNonPremultipliedSrcColor\n            "
            },
            {
                "name": "advancedBlendNonPremultipliedDstColor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         advancedBlendNonPremultipliedDstColor\n            "
            },
            {
                "name": "advancedBlendCorrelatedOverlap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         advancedBlendCorrelatedOverlap\n            "
            },
            {
                "name": "advancedBlendAllOperations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         advancedBlendAllOperations\n        "
            }
        ],
        "VkPipelineColorBlendAdvancedStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "srcPremultiplied",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               srcPremultiplied\n            "
            },
            {
                "name": "dstPremultiplied",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               dstPremultiplied\n            "
            },
            {
                "name": "blendOverlap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendOverlapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendOverlapEXT      blendOverlap\n        "
            }
        ],
        "VkPhysicalDeviceInlineUniformBlockFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "inlineUniformBlock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               inlineUniformBlock\n            "
            },
            {
                "name": "descriptorBindingInlineUniformBlockUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingInlineUniformBlockUpdateAfterBind\n        "
            }
        ],
        "VkPhysicalDeviceInlineUniformBlockFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "inlineUniformBlock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               inlineUniformBlock\n            "
            },
            {
                "name": "descriptorBindingInlineUniformBlockUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingInlineUniformBlockUpdateAfterBind\n        "
            }
        ],
        "VkPhysicalDeviceInlineUniformBlockProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxInlineUniformBlockSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxInlineUniformBlockSize\n            "
            },
            {
                "name": "maxPerStageDescriptorInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorInlineUniformBlocks\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks\n            "
            },
            {
                "name": "maxDescriptorSetInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetInlineUniformBlocks\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindInlineUniformBlocks\n        "
            }
        ],
        "VkPhysicalDeviceInlineUniformBlockPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxInlineUniformBlockSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxInlineUniformBlockSize\n            "
            },
            {
                "name": "maxPerStageDescriptorInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorInlineUniformBlocks\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks\n            "
            },
            {
                "name": "maxDescriptorSetInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetInlineUniformBlocks\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindInlineUniformBlocks\n        "
            }
        ],
        "VkWriteDescriptorSetInlineUniformBlock": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "dataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    dataSize\n            "
            },
            {
                "name": "pData",
                "const": true,
                "length": [
                    "dataSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*  pData\n        "
            }
        ],
        "VkWriteDescriptorSetInlineUniformBlockEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "dataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    dataSize\n            "
            },
            {
                "name": "pData",
                "const": true,
                "length": [
                    "dataSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*  pData\n        "
            }
        ],
        "VkDescriptorPoolInlineUniformBlockCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "maxInlineUniformBlockBindings",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    maxInlineUniformBlockBindings\n        "
            }
        ],
        "VkDescriptorPoolInlineUniformBlockCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "maxInlineUniformBlockBindings",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    maxInlineUniformBlockBindings\n        "
            }
        ],
        "VkPipelineCoverageModulationStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCoverageModulationStateCreateFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCoverageModulationStateCreateFlagsNV                   flags\n            "
            },
            {
                "name": "coverageModulationMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCoverageModulationModeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkCoverageModulationModeNV                                                       coverageModulationMode\n            "
            },
            {
                "name": "coverageModulationTableEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                         coverageModulationTableEnable\n            "
            },
            {
                "name": "coverageModulationTableCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                         coverageModulationTableCount\n            "
            },
            {
                "name": "pCoverageModulationTable",
                "const": true,
                "length": [
                    "coverageModulationTableCount"
                ],
                "type": "float",
                "num_indirection": 1,
                "value": "",
                "header": "const float* pCoverageModulationTable\n        "
            }
        ],
        "VkImageFormatListCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "viewFormatCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               viewFormatCount\n            "
            },
            {
                "name": "pViewFormats",
                "const": true,
                "length": [
                    "viewFormatCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*  pViewFormats\n        "
            }
        ],
        "VkImageFormatListCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "viewFormatCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               viewFormatCount\n            "
            },
            {
                "name": "pViewFormats",
                "const": true,
                "length": [
                    "viewFormatCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*  pViewFormats\n        "
            }
        ],
        "VkValidationCacheCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkValidationCacheCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkValidationCacheCreateFlagsEXT    flags\n            "
            },
            {
                "name": "initialDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                 initialDataSize\n            "
            },
            {
                "name": "pInitialData",
                "const": true,
                "length": [
                    "initialDataSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*            pInitialData\n        "
            }
        ],
        "VkShaderModuleValidationCacheCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "validationCache",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkValidationCacheEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkValidationCacheEXT    validationCache\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance3Properties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxPerSetDescriptors",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerSetDescriptors\n            "
            },
            {
                "name": "maxMemoryAllocationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     maxMemoryAllocationSize\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance3PropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxPerSetDescriptors",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerSetDescriptors\n            "
            },
            {
                "name": "maxMemoryAllocationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     maxMemoryAllocationSize\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance4Features": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maintenance4",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                         maintenance4\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance4FeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maintenance4",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                         maintenance4\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance4Properties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxBufferSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     maxBufferSize\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance4PropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxBufferSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     maxBufferSize\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance5FeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maintenance5",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                         maintenance5\n        "
            }
        ],
        "VkPhysicalDeviceMaintenance5PropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "earlyFragmentMultisampleCoverageAfterSampleCounting",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     earlyFragmentMultisampleCoverageAfterSampleCounting\n            "
            },
            {
                "name": "earlyFragmentSampleMaskTestBeforeSampleCounting",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     earlyFragmentSampleMaskTestBeforeSampleCounting\n            "
            },
            {
                "name": "depthStencilSwizzleOneSupport",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     depthStencilSwizzleOneSupport\n            "
            },
            {
                "name": "polygonModePointSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     polygonModePointSize\n            "
            },
            {
                "name": "nonStrictSinglePixelWideLinesUseParallelogram",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     nonStrictSinglePixelWideLinesUseParallelogram\n            "
            },
            {
                "name": "nonStrictWideLinesUseParallelogram",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     nonStrictWideLinesUseParallelogram\n        "
            }
        ],
        "VkRenderingAreaInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   viewMask\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachmentFormats",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*           pColorAttachmentFormats\n            "
            },
            {
                "name": "depthAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                             depthAttachmentFormat\n            "
            },
            {
                "name": "stencilAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                             stencilAttachmentFormat\n        "
            }
        ],
        "VkDescriptorSetLayoutSupport": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "supported",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32         supported\n        "
            }
        ],
        "VkDescriptorSetLayoutSupportKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "supported",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32         supported\n        "
            }
        ],
        "VkPhysicalDeviceShaderDrawParametersFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "shaderDrawParameters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDrawParameters\n        "
            }
        ],
        "VkPhysicalDeviceShaderDrawParameterFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "shaderDrawParameters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDrawParameters\n        "
            }
        ],
        "VkPhysicalDeviceShaderFloat16Int8Features": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "shaderFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderFloat1616-bit floats (halfs) in shaders\n            "
            },
            {
                "name": "shaderInt8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderInt88-bit integers in shaders\n        "
            }
        ],
        "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "shaderFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderFloat1616-bit floats (halfs) in shaders\n            "
            },
            {
                "name": "shaderInt8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderInt88-bit integers in shaders\n        "
            }
        ],
        "VkPhysicalDeviceFloat16Int8FeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "shaderFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderFloat1616-bit floats (halfs) in shaders\n            "
            },
            {
                "name": "shaderInt8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderInt88-bit integers in shaders\n        "
            }
        ],
        "VkPhysicalDeviceFloatControlsProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "denormBehaviorIndependence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderFloatControlsIndependence",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderFloatControlsIndependence denormBehaviorIndependence\n            "
            },
            {
                "name": "roundingModeIndependence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderFloatControlsIndependence",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderFloatControlsIndependence roundingModeIndependence\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat16An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat32An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat64An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderDenormPreserveFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat16An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormPreserveFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat32An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormPreserveFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat64An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat16An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat32An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat64An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat16An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat32An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat64An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat16An implementation can support RTZ\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat32An implementation can support RTZ\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat64An implementation can support RTZ\n        "
            }
        ],
        "VkPhysicalDeviceFloatControlsPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "denormBehaviorIndependence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderFloatControlsIndependence",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderFloatControlsIndependence denormBehaviorIndependence\n            "
            },
            {
                "name": "roundingModeIndependence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderFloatControlsIndependence",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderFloatControlsIndependence roundingModeIndependence\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat16An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat32An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat64An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderDenormPreserveFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat16An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormPreserveFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat32An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormPreserveFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat64An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat16An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat32An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat64An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat16An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat32An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat64An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat16An implementation can support RTZ\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat32An implementation can support RTZ\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat64An implementation can support RTZ\n        "
            }
        ],
        "VkPhysicalDeviceHostQueryResetFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "hostQueryReset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           hostQueryReset\n        "
            }
        ],
        "VkPhysicalDeviceHostQueryResetFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "hostQueryReset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           hostQueryReset\n        "
            }
        ],
        "VkShaderResourceUsageAMD": [
            {
                "name": "numUsedVgprs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t numUsedVgprs\n            "
            },
            {
                "name": "numUsedSgprs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t numUsedSgprs\n            "
            },
            {
                "name": "ldsSizePerLocalWorkGroup",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t ldsSizePerLocalWorkGroup\n            "
            },
            {
                "name": "ldsUsageSizeInBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t ldsUsageSizeInBytes\n            "
            },
            {
                "name": "scratchMemUsageInBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t scratchMemUsageInBytes\n        "
            }
        ],
        "VkShaderStatisticsInfoAMD": [
            {
                "name": "shaderStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags shaderStageMask\n            "
            },
            {
                "name": "resourceUsage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderResourceUsageAMD",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderResourceUsageAMD resourceUsage\n            "
            },
            {
                "name": "numPhysicalVgprs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t numPhysicalVgprs\n            "
            },
            {
                "name": "numPhysicalSgprs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t numPhysicalSgprs\n            "
            },
            {
                "name": "numAvailableVgprs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t numAvailableVgprs\n            "
            },
            {
                "name": "numAvailableSgprs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t numAvailableSgprs\n            "
            },
            {
                "name": "computeWorkGroupSize",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t computeWorkGroupSize[3]\n        "
            }
        ],
        "VkDeviceQueueGlobalPriorityCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "globalPriority",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueueGlobalPriorityKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueGlobalPriorityKHR       globalPriority\n        "
            }
        ],
        "VkDeviceQueueGlobalPriorityCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "globalPriority",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueueGlobalPriorityKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueGlobalPriorityKHR       globalPriority\n        "
            }
        ],
        "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "globalPriorityQuery",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    globalPriorityQuery\n        "
            }
        ],
        "VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "globalPriorityQuery",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    globalPriorityQuery\n        "
            }
        ],
        "VkQueueFamilyGlobalPriorityPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "priorityCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                     priorityCount\n            "
            },
            {
                "name": "priorities",
                "const": false,
                "length": [
                    "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR"
                ],
                "type": "VkQueueGlobalPriorityKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueGlobalPriorityKHR priorities[VK_MAX_GLOBAL_PRIORITY_SIZE_KHR]\n        "
            }
        ],
        "VkQueueFamilyGlobalPriorityPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "priorityCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                     priorityCount\n            "
            },
            {
                "name": "priorities",
                "const": false,
                "length": [
                    "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR"
                ],
                "type": "VkQueueGlobalPriorityKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueGlobalPriorityKHR priorities[VK_MAX_GLOBAL_PRIORITY_SIZE_KHR]\n        "
            }
        ],
        "VkDebugUtilsObjectNameInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "objectType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkObjectType",
                "num_indirection": 0,
                "value": "",
                "header": "VkObjectType                                           objectType\n            "
            },
            {
                "name": "objectHandle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                               objectHandle\n            "
            },
            {
                "name": "pObjectName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*      pObjectName\n        "
            }
        ],
        "VkDebugUtilsObjectTagInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "objectType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkObjectType",
                "num_indirection": 0,
                "value": "",
                "header": "VkObjectType                           objectType\n            "
            },
            {
                "name": "objectHandle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                               objectHandle\n            "
            },
            {
                "name": "tagName",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                               tagName\n            "
            },
            {
                "name": "tagSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                                 tagSize\n            "
            },
            {
                "name": "pTag",
                "const": true,
                "length": [
                    "tagSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*              pTag\n        "
            }
        ],
        "VkDebugUtilsLabelEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "pLabelName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*      pLabelName\n            "
            },
            {
                "name": "color",
                "const": false,
                "length": [
                    "4"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                  color[4]\n        "
            }
        ],
        "VkDebugUtilsMessengerCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                          pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDebugUtilsMessengerCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDebugUtilsMessengerCreateFlagsEXT  flags\n            "
            },
            {
                "name": "messageSeverity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDebugUtilsMessageSeverityFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDebugUtilsMessageSeverityFlagsEXT                  messageSeverity\n            "
            },
            {
                "name": "messageType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDebugUtilsMessageTypeFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDebugUtilsMessageTypeFlagsEXT                      messageType\n            "
            },
            {
                "name": "pfnUserCallback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkDebugUtilsMessengerCallbackEXT",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkDebugUtilsMessengerCallbackEXT                 pfnUserCallback\n            "
            },
            {
                "name": "pUserData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*                                pUserData\n        "
            }
        ],
        "VkDebugUtilsMessengerCallbackDataEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                        pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDebugUtilsMessengerCallbackDataFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDebugUtilsMessengerCallbackDataFlagsEXT                          flags\n            "
            },
            {
                "name": "pMessageIdName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*                                  pMessageIdName\n            "
            },
            {
                "name": "messageIdNumber",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                                                            messageIdNumber\n            "
            },
            {
                "name": "pMessage",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*                                                  pMessage\n            "
            },
            {
                "name": "queueLabelCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                           queueLabelCount\n            "
            },
            {
                "name": "pQueueLabels",
                "const": true,
                "length": [
                    "queueLabelCount"
                ],
                "type": "VkDebugUtilsLabelEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDebugUtilsLabelEXT*                  pQueueLabels\n            "
            },
            {
                "name": "cmdBufLabelCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                           cmdBufLabelCount\n            "
            },
            {
                "name": "pCmdBufLabels",
                "const": true,
                "length": [
                    "cmdBufLabelCount"
                ],
                "type": "VkDebugUtilsLabelEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDebugUtilsLabelEXT*                 pCmdBufLabels\n            "
            },
            {
                "name": "objectCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                           objectCount\n            "
            },
            {
                "name": "pObjects",
                "const": true,
                "length": [
                    "objectCount"
                ],
                "type": "VkDebugUtilsObjectNameInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDebugUtilsObjectNameInfoEXT*             pObjects\n        "
            }
        ],
        "VkPhysicalDeviceDeviceMemoryReportFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "deviceMemoryReport",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    deviceMemoryReport\n        "
            }
        ],
        "VkDeviceDeviceMemoryReportCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemoryReportFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemoryReportFlagsEXT        flags\n            "
            },
            {
                "name": "pfnUserCallback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkDeviceMemoryReportCallbackEXT",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkDeviceMemoryReportCallbackEXT pfnUserCallback\n            "
            },
            {
                "name": "pUserData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*                               pUserData\n        "
            }
        ],
        "VkDeviceMemoryReportCallbackDataEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemoryReportFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemoryReportFlagsEXT     flags\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemoryReportEventTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemoryReportEventTypeEXT type\n            "
            },
            {
                "name": "memoryObjectId",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         memoryObjectId\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     size\n            "
            },
            {
                "name": "objectType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkObjectType",
                "num_indirection": 0,
                "value": "",
                "header": "VkObjectType                     objectType\n            "
            },
            {
                "name": "objectHandle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t objectHandle\n            "
            },
            {
                "name": "heapIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         heapIndex\n        "
            }
        ],
        "VkImportMemoryHostPointerInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n            "
            },
            {
                "name": "pHostPointer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void* pHostPointer\n        "
            }
        ],
        "VkMemoryHostPointerPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "memoryTypeBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t memoryTypeBits\n        "
            }
        ],
        "VkPhysicalDeviceExternalMemoryHostPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "minImportedHostPointerAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize minImportedHostPointerAlignment\n        "
            }
        ],
        "VkPhysicalDeviceConservativeRasterizationPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "primitiveOverestimationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                 primitiveOverestimationSizeThe size in pixels the primitive is enlarged at each edge during conservative rasterization\n            "
            },
            {
                "name": "maxExtraPrimitiveOverestimationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                      maxExtraPrimitiveOverestimationSizeThe maximum additional overestimation the client can specify in the pipeline state\n            "
            },
            {
                "name": "extraPrimitiveOverestimationSizeGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                   extraPrimitiveOverestimationSizeGranularityThe granularity of extra overestimation sizes the implementations supports between 0 and maxExtraOverestimationSize\n            "
            },
            {
                "name": "primitiveUnderestimation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               primitiveUnderestimationtrue if the implementation supports conservative rasterization underestimation mode\n            "
            },
            {
                "name": "conservativePointAndLineRasterization",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               conservativePointAndLineRasterizationtrue if conservative rasterization also applies to points and lines\n            "
            },
            {
                "name": "degenerateTrianglesRasterized",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32              degenerateTrianglesRasterizedtrue if degenerate triangles (those with zero area after snap) are rasterized\n            "
            },
            {
                "name": "degenerateLinesRasterized",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32              degenerateLinesRasterizedtrue if degenerate lines (those with zero length after snap) are rasterized\n            "
            },
            {
                "name": "fullyCoveredFragmentShaderInputVariable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fullyCoveredFragmentShaderInputVariabletrue if the implementation supports the FullyCoveredEXT SPIR-V builtin fragment shader input variable\n            "
            },
            {
                "name": "conservativeRasterizationPostDepthCoverage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               conservativeRasterizationPostDepthCoveragetrue if the implementation supports both conservative rasterization and post depth coverage sample coverage mask\n        "
            }
        ],
        "VkCalibratedTimestampInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "timeDomain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkTimeDomainEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkTimeDomainEXT        timeDomain\n        "
            }
        ],
        "VkPhysicalDeviceShaderCorePropertiesAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "shaderEngineCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t shaderEngineCountnumber of shader engines\n            "
            },
            {
                "name": "shaderArraysPerEngineCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t shaderArraysPerEngineCountnumber of shader arrays\n            "
            },
            {
                "name": "computeUnitsPerShaderArray",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t computeUnitsPerShaderArraynumber of physical CUs per shader array\n            "
            },
            {
                "name": "simdPerComputeUnit",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t simdPerComputeUnitnumber of SIMDs per compute unit\n            "
            },
            {
                "name": "wavefrontsPerSimd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t wavefrontsPerSimdnumber of wavefront slots in each SIMD\n            "
            },
            {
                "name": "wavefrontSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t      wavefrontSizemaximum number of threads per wavefront\n            "
            },
            {
                "name": "sgprsPerSimd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t sgprsPerSimdnumber of physical SGPRs per SIMD\n            "
            },
            {
                "name": "minSgprAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t      minSgprAllocationminimum number of SGPRs that can be allocated by a wave\n            "
            },
            {
                "name": "maxSgprAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t      maxSgprAllocationnumber of available SGPRs\n            "
            },
            {
                "name": "sgprAllocationGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t   sgprAllocationGranularitySGPRs are allocated in groups of this size\n            "
            },
            {
                "name": "vgprsPerSimd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t vgprsPerSimdnumber of physical VGPRs per SIMD\n            "
            },
            {
                "name": "minVgprAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t      minVgprAllocationminimum number of VGPRs that can be allocated by a wave\n            "
            },
            {
                "name": "maxVgprAllocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t      maxVgprAllocationnumber of available VGPRs\n            "
            },
            {
                "name": "vgprAllocationGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t   vgprAllocationGranularityVGPRs are allocated in groups of this size\n        "
            }
        ],
        "VkPhysicalDeviceShaderCoreProperties2AMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNextPointer to next structure\n            "
            },
            {
                "name": "shaderCoreFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderCorePropertiesFlagsAMD",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderCorePropertiesFlagsAMD shaderCoreFeaturesfeatures supported by the shader core\n            "
            },
            {
                "name": "activeComputeUnitCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t activeComputeUnitCountnumber of active compute units across all shader engines/arrays\n        "
            }
        ],
        "VkPipelineRasterizationConservativeStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRasterizationConservativeStateCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRasterizationConservativeStateCreateFlagsEXT           flagsReserved\n            "
            },
            {
                "name": "conservativeRasterizationMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkConservativeRasterizationModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkConservativeRasterizationModeEXT                                               conservativeRasterizationModeConservative rasterization mode\n            "
            },
            {
                "name": "extraPrimitiveOverestimationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                                            extraPrimitiveOverestimationSizeExtra overestimation to add to the primitive\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorIndexingFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "shaderInputAttachmentArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInputAttachmentArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderUniformTexelBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformTexelBufferArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderStorageTexelBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageTexelBufferArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderUniformBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderSampledImageArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderSampledImageArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageImageArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderInputAttachmentArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInputAttachmentArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderUniformTexelBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformTexelBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageTexelBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageTexelBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "descriptorBindingUniformBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingUniformBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingSampledImageUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingSampledImageUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageImageUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingStorageImageUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingStorageBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingUniformTexelBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingUniformTexelBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageTexelBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingStorageTexelBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingUpdateUnusedWhilePending",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingUpdateUnusedWhilePending\n            "
            },
            {
                "name": "descriptorBindingPartiallyBound",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingPartiallyBound\n            "
            },
            {
                "name": "descriptorBindingVariableDescriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingVariableDescriptorCount\n            "
            },
            {
                "name": "runtimeDescriptorArray",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               runtimeDescriptorArray\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorIndexingFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "shaderInputAttachmentArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInputAttachmentArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderUniformTexelBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformTexelBufferArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderStorageTexelBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageTexelBufferArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderUniformBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderSampledImageArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderSampledImageArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageImageArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderInputAttachmentArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInputAttachmentArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderUniformTexelBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformTexelBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageTexelBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageTexelBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "descriptorBindingUniformBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingUniformBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingSampledImageUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingSampledImageUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageImageUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingStorageImageUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingStorageBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingUniformTexelBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingUniformTexelBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageTexelBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingStorageTexelBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingUpdateUnusedWhilePending",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingUpdateUnusedWhilePending\n            "
            },
            {
                "name": "descriptorBindingPartiallyBound",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingPartiallyBound\n            "
            },
            {
                "name": "descriptorBindingVariableDescriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               descriptorBindingVariableDescriptorCount\n            "
            },
            {
                "name": "runtimeDescriptorArray",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               runtimeDescriptorArray\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorIndexingProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxUpdateAfterBindDescriptorsInAllPools",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxUpdateAfterBindDescriptorsInAllPools\n            "
            },
            {
                "name": "shaderUniformBufferArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformBufferArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderSampledImageArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderSampledImageArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderStorageBufferArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageBufferArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderStorageImageArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderInputAttachmentArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInputAttachmentArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "robustBufferAccessUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               robustBufferAccessUpdateAfterBind\n            "
            },
            {
                "name": "quadDivergentImplicitLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               quadDivergentImplicitLod\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindSamplers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindUniformBuffers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindStorageBuffers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindSampledImages\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindStorageImages\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindInputAttachments\n            "
            },
            {
                "name": "maxPerStageUpdateAfterBindResources",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageUpdateAfterBindResources\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindSamplers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindUniformBuffers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindUniformBuffersDynamic\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindStorageBuffers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindStorageBuffersDynamic\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindSampledImages\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindStorageImages\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindInputAttachments\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorIndexingPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxUpdateAfterBindDescriptorsInAllPools",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxUpdateAfterBindDescriptorsInAllPools\n            "
            },
            {
                "name": "shaderUniformBufferArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderUniformBufferArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderSampledImageArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderSampledImageArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderStorageBufferArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageBufferArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderStorageImageArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderStorageImageArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderInputAttachmentArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               shaderInputAttachmentArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "robustBufferAccessUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               robustBufferAccessUpdateAfterBind\n            "
            },
            {
                "name": "quadDivergentImplicitLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               quadDivergentImplicitLod\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindSamplers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindUniformBuffers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindStorageBuffers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindSampledImages\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindStorageImages\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageDescriptorUpdateAfterBindInputAttachments\n            "
            },
            {
                "name": "maxPerStageUpdateAfterBindResources",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPerStageUpdateAfterBindResources\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindSamplers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindUniformBuffers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindUniformBuffersDynamic\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindStorageBuffers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindStorageBuffersDynamic\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindSampledImages\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindStorageImages\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxDescriptorSetUpdateAfterBindInputAttachments\n        "
            }
        ],
        "VkDescriptorSetLayoutBindingFlagsCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                        pNext\n            "
            },
            {
                "name": "bindingCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                           bindingCount\n            "
            },
            {
                "name": "pBindingFlags",
                "const": true,
                "length": [
                    "bindingCount"
                ],
                "type": "VkDescriptorBindingFlags",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorBindingFlags* pBindingFlags\n        "
            }
        ],
        "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                        pNext\n            "
            },
            {
                "name": "bindingCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                           bindingCount\n            "
            },
            {
                "name": "pBindingFlags",
                "const": true,
                "length": [
                    "bindingCount"
                ],
                "type": "VkDescriptorBindingFlags",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorBindingFlags* pBindingFlags\n        "
            }
        ],
        "VkDescriptorSetVariableDescriptorCountAllocateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "descriptorSetCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               descriptorSetCount\n            "
            },
            {
                "name": "pDescriptorCounts",
                "const": true,
                "length": [
                    "descriptorSetCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pDescriptorCounts\n        "
            }
        ],
        "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "descriptorSetCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               descriptorSetCount\n            "
            },
            {
                "name": "pDescriptorCounts",
                "const": true,
                "length": [
                    "descriptorSetCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pDescriptorCounts\n        "
            }
        ],
        "VkDescriptorSetVariableDescriptorCountLayoutSupport": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "maxVariableDescriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxVariableDescriptorCount\n        "
            }
        ],
        "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "maxVariableDescriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxVariableDescriptorCount\n        "
            }
        ],
        "VkAttachmentDescription2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentDescriptionFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentDescriptionFlags flags\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                     format\n            "
            },
            {
                "name": "samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits                        samples\n            "
            },
            {
                "name": "loadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp                           loadOpLoad operation for color or depth data\n            "
            },
            {
                "name": "storeOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp                          storeOpStore operation for color or depth data\n            "
            },
            {
                "name": "stencilLoadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp                           stencilLoadOpLoad operation for stencil data\n            "
            },
            {
                "name": "stencilStoreOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp                          stencilStoreOpStore operation for stencil data\n            "
            },
            {
                "name": "initialLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                initialLayout\n            "
            },
            {
                "name": "finalLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                finalLayout\n        "
            }
        ],
        "VkAttachmentDescription2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentDescriptionFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentDescriptionFlags flags\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                     format\n            "
            },
            {
                "name": "samples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits                        samples\n            "
            },
            {
                "name": "loadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp                           loadOpLoad operation for color or depth data\n            "
            },
            {
                "name": "storeOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp                          storeOpStore operation for color or depth data\n            "
            },
            {
                "name": "stencilLoadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp                           stencilLoadOpLoad operation for stencil data\n            "
            },
            {
                "name": "stencilStoreOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp                          stencilStoreOpStore operation for stencil data\n            "
            },
            {
                "name": "initialLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                initialLayout\n            "
            },
            {
                "name": "finalLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                finalLayout\n        "
            }
        ],
        "VkAttachmentReference2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "attachment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          attachment\n            "
            },
            {
                "name": "layout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                     layout\n            "
            },
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags aspectMask\n        "
            }
        ],
        "VkAttachmentReference2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "attachment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          attachment\n            "
            },
            {
                "name": "layout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                     layout\n            "
            },
            {
                "name": "aspectMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageAspectFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageAspectFlags aspectMask\n        "
            }
        ],
        "VkSubpassDescription2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                           pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubpassDescriptionFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubpassDescriptionFlags                   flags\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint                                         pipelineBindPoint\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                    viewMask\n            "
            },
            {
                "name": "inputAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    inputAttachmentCount\n            "
            },
            {
                "name": "pInputAttachments",
                "const": true,
                "length": [
                    "inputAttachmentCount"
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*    pInputAttachments\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*    pColorAttachments\n            "
            },
            {
                "name": "pResolveAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2* pResolveAttachments\n            "
            },
            {
                "name": "pDepthStencilAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*               pDepthStencilAttachment\n            "
            },
            {
                "name": "preserveAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    preserveAttachmentCount\n            "
            },
            {
                "name": "pPreserveAttachments",
                "const": true,
                "length": [
                    "preserveAttachmentCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*               pPreserveAttachments\n        "
            }
        ],
        "VkSubpassDescription2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                           pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubpassDescriptionFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubpassDescriptionFlags                   flags\n            "
            },
            {
                "name": "pipelineBindPoint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineBindPoint",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineBindPoint                                         pipelineBindPoint\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                    viewMask\n            "
            },
            {
                "name": "inputAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    inputAttachmentCount\n            "
            },
            {
                "name": "pInputAttachments",
                "const": true,
                "length": [
                    "inputAttachmentCount"
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*    pInputAttachments\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*    pColorAttachments\n            "
            },
            {
                "name": "pResolveAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2* pResolveAttachments\n            "
            },
            {
                "name": "pDepthStencilAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*               pDepthStencilAttachment\n            "
            },
            {
                "name": "preserveAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    preserveAttachmentCount\n            "
            },
            {
                "name": "pPreserveAttachments",
                "const": true,
                "length": [
                    "preserveAttachmentCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*               pPreserveAttachments\n        "
            }
        ],
        "VkSubpassDependency2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "srcSubpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          srcSubpass\n            "
            },
            {
                "name": "dstSubpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          dstSubpass\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags srcStageMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags dstStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags     srcAccessMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags     dstAccessMask\n            "
            },
            {
                "name": "dependencyFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDependencyFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDependencyFlags dependencyFlags\n            "
            },
            {
                "name": "viewOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                           viewOffset\n        "
            }
        ],
        "VkSubpassDependency2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "srcSubpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          srcSubpass\n            "
            },
            {
                "name": "dstSubpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          dstSubpass\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags srcStageMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags dstStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags     srcAccessMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags     dstAccessMask\n            "
            },
            {
                "name": "dependencyFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDependencyFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDependencyFlags dependencyFlags\n            "
            },
            {
                "name": "viewOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                           viewOffset\n        "
            }
        ],
        "VkRenderPassCreateInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                              pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPassCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPassCreateFlags                  flags\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 attachmentCount\n            "
            },
            {
                "name": "pAttachments",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkAttachmentDescription2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentDescription2*    pAttachments\n            "
            },
            {
                "name": "subpassCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                 subpassCount\n            "
            },
            {
                "name": "pSubpasses",
                "const": true,
                "length": [
                    "subpassCount"
                ],
                "type": "VkSubpassDescription2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubpassDescription2*          pSubpasses\n            "
            },
            {
                "name": "dependencyCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 dependencyCount\n            "
            },
            {
                "name": "pDependencies",
                "const": true,
                "length": [
                    "dependencyCount"
                ],
                "type": "VkSubpassDependency2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubpassDependency2*        pDependencies\n            "
            },
            {
                "name": "correlatedViewMaskCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 correlatedViewMaskCount\n            "
            },
            {
                "name": "pCorrelatedViewMasks",
                "const": true,
                "length": [
                    "correlatedViewMaskCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*            pCorrelatedViewMasks\n        "
            }
        ],
        "VkRenderPassCreateInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                              pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPassCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPassCreateFlags                  flags\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 attachmentCount\n            "
            },
            {
                "name": "pAttachments",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkAttachmentDescription2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentDescription2*    pAttachments\n            "
            },
            {
                "name": "subpassCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                 subpassCount\n            "
            },
            {
                "name": "pSubpasses",
                "const": true,
                "length": [
                    "subpassCount"
                ],
                "type": "VkSubpassDescription2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubpassDescription2*          pSubpasses\n            "
            },
            {
                "name": "dependencyCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 dependencyCount\n            "
            },
            {
                "name": "pDependencies",
                "const": true,
                "length": [
                    "dependencyCount"
                ],
                "type": "VkSubpassDependency2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubpassDependency2*        pDependencies\n            "
            },
            {
                "name": "correlatedViewMaskCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 correlatedViewMaskCount\n            "
            },
            {
                "name": "pCorrelatedViewMasks",
                "const": true,
                "length": [
                    "correlatedViewMaskCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*            pCorrelatedViewMasks\n        "
            }
        ],
        "VkSubpassBeginInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "contents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubpassContents",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubpassContents      contents\n        "
            }
        ],
        "VkSubpassBeginInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "contents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubpassContents",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubpassContents      contents\n        "
            }
        ],
        "VkSubpassEndInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n        "
            }
        ],
        "VkSubpassEndInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_END_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n        "
            }
        ],
        "VkPhysicalDeviceTimelineSemaphoreFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "timelineSemaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               timelineSemaphore\n        "
            }
        ],
        "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "timelineSemaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               timelineSemaphore\n        "
            }
        ],
        "VkPhysicalDeviceTimelineSemaphoreProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxTimelineSemaphoreValueDifference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t               maxTimelineSemaphoreValueDifference\n        "
            }
        ],
        "VkPhysicalDeviceTimelineSemaphorePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxTimelineSemaphoreValueDifference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t               maxTimelineSemaphoreValueDifference\n        "
            }
        ],
        "VkSemaphoreTypeCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "semaphoreType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphoreType",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphoreType        semaphoreType\n            "
            },
            {
                "name": "initialValue",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t               initialValue\n        "
            }
        ],
        "VkSemaphoreTypeCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "semaphoreType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphoreType",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphoreType        semaphoreType\n            "
            },
            {
                "name": "initialValue",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t               initialValue\n        "
            }
        ],
        "VkTimelineSemaphoreSubmitInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "waitSemaphoreValueCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         waitSemaphoreValueCount\n            "
            },
            {
                "name": "pWaitSemaphoreValues",
                "const": true,
                "length": [
                    "waitSemaphoreValueCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t* pWaitSemaphoreValues\n            "
            },
            {
                "name": "signalSemaphoreValueCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         signalSemaphoreValueCount\n            "
            },
            {
                "name": "pSignalSemaphoreValues",
                "const": true,
                "length": [
                    "signalSemaphoreValueCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t* pSignalSemaphoreValues\n        "
            }
        ],
        "VkTimelineSemaphoreSubmitInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "waitSemaphoreValueCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         waitSemaphoreValueCount\n            "
            },
            {
                "name": "pWaitSemaphoreValues",
                "const": true,
                "length": [
                    "waitSemaphoreValueCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t* pWaitSemaphoreValues\n            "
            },
            {
                "name": "signalSemaphoreValueCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         signalSemaphoreValueCount\n            "
            },
            {
                "name": "pSignalSemaphoreValues",
                "const": true,
                "length": [
                    "signalSemaphoreValueCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t* pSignalSemaphoreValues\n        "
            }
        ],
        "VkSemaphoreWaitInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphoreWaitFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphoreWaitFlags flags\n            "
            },
            {
                "name": "semaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               semaphoreCount\n            "
            },
            {
                "name": "pSemaphores",
                "const": true,
                "length": [
                    "semaphoreCount"
                ],
                "type": "VkSemaphore",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphore* pSemaphores\n            "
            },
            {
                "name": "pValues",
                "const": true,
                "length": [
                    "semaphoreCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t*    pValues\n        "
            }
        ],
        "VkSemaphoreWaitInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphoreWaitFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphoreWaitFlags flags\n            "
            },
            {
                "name": "semaphoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               semaphoreCount\n            "
            },
            {
                "name": "pSemaphores",
                "const": true,
                "length": [
                    "semaphoreCount"
                ],
                "type": "VkSemaphore",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphore* pSemaphores\n            "
            },
            {
                "name": "pValues",
                "const": true,
                "length": [
                    "semaphoreCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t*    pValues\n        "
            }
        ],
        "VkSemaphoreSignalInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "semaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphore",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphore            semaphore\n            "
            },
            {
                "name": "value",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t               value\n        "
            }
        ],
        "VkSemaphoreSignalInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "semaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphore",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphore            semaphore\n            "
            },
            {
                "name": "value",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t               value\n        "
            }
        ],
        "VkVertexInputBindingDivisorDescriptionEXT": [
            {
                "name": "binding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t          binding\n            "
            },
            {
                "name": "divisor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t          divisor\n        "
            }
        ],
        "VkPipelineVertexInputDivisorStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "vertexBindingDivisorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            vertexBindingDivisorCount\n            "
            },
            {
                "name": "pVertexBindingDivisors",
                "const": true,
                "length": [
                    "vertexBindingDivisorCount"
                ],
                "type": "VkVertexInputBindingDivisorDescriptionEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVertexInputBindingDivisorDescriptionEXT*      pVertexBindingDivisors\n        "
            }
        ],
        "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxVertexAttribDivisor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxVertexAttribDivisormax value of vertex attribute divisor\n        "
            }
        ],
        "VkPhysicalDevicePCIBusInfoPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "pciDomain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               pciDomain\n            "
            },
            {
                "name": "pciBus",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               pciBus\n            "
            },
            {
                "name": "pciDevice",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               pciDevice\n            "
            },
            {
                "name": "pciFunction",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               pciFunction\n        "
            }
        ],
        "VkCommandBufferInheritanceConditionalRenderingInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "conditionalRenderingEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            conditionalRenderingEnableWhether this secondary command buffer may be executed during an active conditional rendering\n        "
            }
        ],
        "VkPhysicalDevice8BitStorageFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "storageBuffer8BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageBuffer8BitAccess8-bit integer variables supported in StorageBuffer\n            "
            },
            {
                "name": "uniformAndStorageBuffer8BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformAndStorageBuffer8BitAccess8-bit integer variables supported in StorageBuffer and Uniform\n            "
            },
            {
                "name": "storagePushConstant8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storagePushConstant88-bit integer variables supported in PushConstant\n        "
            }
        ],
        "VkPhysicalDevice8BitStorageFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "storageBuffer8BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageBuffer8BitAccess8-bit integer variables supported in StorageBuffer\n            "
            },
            {
                "name": "uniformAndStorageBuffer8BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformAndStorageBuffer8BitAccess8-bit integer variables supported in StorageBuffer and Uniform\n            "
            },
            {
                "name": "storagePushConstant8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storagePushConstant88-bit integer variables supported in PushConstant\n        "
            }
        ],
        "VkPhysicalDeviceConditionalRenderingFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "conditionalRendering",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           conditionalRendering\n            "
            },
            {
                "name": "inheritedConditionalRendering",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           inheritedConditionalRendering\n        "
            }
        ],
        "VkPhysicalDeviceVulkanMemoryModelFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "vulkanMemoryModel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModel\n            "
            },
            {
                "name": "vulkanMemoryModelDeviceScope",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModelDeviceScope\n            "
            },
            {
                "name": "vulkanMemoryModelAvailabilityVisibilityChains",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModelAvailabilityVisibilityChains\n        "
            }
        ],
        "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "vulkanMemoryModel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModel\n            "
            },
            {
                "name": "vulkanMemoryModelDeviceScope",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModelDeviceScope\n            "
            },
            {
                "name": "vulkanMemoryModelAvailabilityVisibilityChains",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModelAvailabilityVisibilityChains\n        "
            }
        ],
        "VkPhysicalDeviceShaderAtomicInt64Features": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shaderBufferInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferInt64Atomics\n            "
            },
            {
                "name": "shaderSharedInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedInt64Atomics\n        "
            }
        ],
        "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shaderBufferInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferInt64Atomics\n            "
            },
            {
                "name": "shaderSharedInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedInt64Atomics\n        "
            }
        ],
        "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shaderBufferFloat32Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat32Atomics\n            "
            },
            {
                "name": "shaderBufferFloat32AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat32AtomicAdd\n            "
            },
            {
                "name": "shaderBufferFloat64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat64Atomics\n            "
            },
            {
                "name": "shaderBufferFloat64AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat64AtomicAdd\n            "
            },
            {
                "name": "shaderSharedFloat32Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat32Atomics\n            "
            },
            {
                "name": "shaderSharedFloat32AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat32AtomicAdd\n            "
            },
            {
                "name": "shaderSharedFloat64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat64Atomics\n            "
            },
            {
                "name": "shaderSharedFloat64AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat64AtomicAdd\n            "
            },
            {
                "name": "shaderImageFloat32Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderImageFloat32Atomics\n            "
            },
            {
                "name": "shaderImageFloat32AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderImageFloat32AtomicAdd\n            "
            },
            {
                "name": "sparseImageFloat32Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            sparseImageFloat32Atomics\n            "
            },
            {
                "name": "sparseImageFloat32AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            sparseImageFloat32AtomicAdd\n        "
            }
        ],
        "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shaderBufferFloat16Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat16Atomics\n            "
            },
            {
                "name": "shaderBufferFloat16AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat16AtomicAdd\n            "
            },
            {
                "name": "shaderBufferFloat16AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat16AtomicMinMax\n            "
            },
            {
                "name": "shaderBufferFloat32AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat32AtomicMinMax\n            "
            },
            {
                "name": "shaderBufferFloat64AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderBufferFloat64AtomicMinMax\n            "
            },
            {
                "name": "shaderSharedFloat16Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat16Atomics\n            "
            },
            {
                "name": "shaderSharedFloat16AtomicAdd",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat16AtomicAdd\n            "
            },
            {
                "name": "shaderSharedFloat16AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat16AtomicMinMax\n            "
            },
            {
                "name": "shaderSharedFloat32AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat32AtomicMinMax\n            "
            },
            {
                "name": "shaderSharedFloat64AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSharedFloat64AtomicMinMax\n            "
            },
            {
                "name": "shaderImageFloat32AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderImageFloat32AtomicMinMax\n            "
            },
            {
                "name": "sparseImageFloat32AtomicMinMax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            sparseImageFloat32AtomicMinMax\n        "
            }
        ],
        "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "vertexAttributeInstanceRateDivisor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           vertexAttributeInstanceRateDivisor\n            "
            },
            {
                "name": "vertexAttributeInstanceRateZeroDivisor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           vertexAttributeInstanceRateZeroDivisor\n        "
            }
        ],
        "VkQueueFamilyCheckpointPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*           pNext\n            "
            },
            {
                "name": "checkpointExecutionStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags checkpointExecutionStageMask\n        "
            }
        ],
        "VkCheckpointDataNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "stage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlagBits   stage\n            "
            },
            {
                "name": "pCheckpointMarker",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void* pCheckpointMarker\n        "
            }
        ],
        "VkPhysicalDeviceDepthStencilResolveProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                pNext\n            "
            },
            {
                "name": "supportedDepthResolveModes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlags                   supportedDepthResolveModessupported depth resolve modes\n            "
            },
            {
                "name": "supportedStencilResolveModes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlags                   supportedStencilResolveModessupported stencil resolve modes\n            "
            },
            {
                "name": "independentResolveNone",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                             independentResolveNonedepth and stencil resolve modes can be set independently if one of them is none\n            "
            },
            {
                "name": "independentResolve",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                             independentResolvedepth and stencil resolve modes can be set independently\n        "
            }
        ],
        "VkPhysicalDeviceDepthStencilResolvePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                pNext\n            "
            },
            {
                "name": "supportedDepthResolveModes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlags                   supportedDepthResolveModessupported depth resolve modes\n            "
            },
            {
                "name": "supportedStencilResolveModes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlags                   supportedStencilResolveModessupported stencil resolve modes\n            "
            },
            {
                "name": "independentResolveNone",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                             independentResolveNonedepth and stencil resolve modes can be set independently if one of them is none\n            "
            },
            {
                "name": "independentResolve",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                             independentResolvedepth and stencil resolve modes can be set independently\n        "
            }
        ],
        "VkSubpassDescriptionDepthStencilResolve": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "depthResolveMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlagBits              depthResolveModedepth resolve mode\n            "
            },
            {
                "name": "stencilResolveMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlagBits              stencilResolveModestencil resolve mode\n            "
            },
            {
                "name": "pDepthStencilResolveAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*            pDepthStencilResolveAttachmentdepth/stencil resolve attachment\n        "
            }
        ],
        "VkSubpassDescriptionDepthStencilResolveKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "depthResolveMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlagBits              depthResolveModedepth resolve mode\n            "
            },
            {
                "name": "stencilResolveMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlagBits              stencilResolveModestencil resolve mode\n            "
            },
            {
                "name": "pDepthStencilResolveAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2*            pDepthStencilResolveAttachmentdepth/stencil resolve attachment\n        "
            }
        ],
        "VkImageViewASTCDecodeModeEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "decodeMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                         decodeMode\n        "
            }
        ],
        "VkPhysicalDeviceASTCDecodeFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "decodeModeSharedExponent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         decodeModeSharedExponent\n        "
            }
        ],
        "VkPhysicalDeviceTransformFeedbackFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "transformFeedback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               transformFeedback\n            "
            },
            {
                "name": "geometryStreams",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               geometryStreams\n        "
            }
        ],
        "VkPhysicalDeviceTransformFeedbackPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxTransformFeedbackStreams",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTransformFeedbackStreams\n            "
            },
            {
                "name": "maxTransformFeedbackBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTransformFeedbackBuffers\n            "
            },
            {
                "name": "maxTransformFeedbackBufferSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           maxTransformFeedbackBufferSize\n            "
            },
            {
                "name": "maxTransformFeedbackStreamDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTransformFeedbackStreamDataSize\n            "
            },
            {
                "name": "maxTransformFeedbackBufferDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTransformFeedbackBufferDataSize\n            "
            },
            {
                "name": "maxTransformFeedbackBufferDataStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxTransformFeedbackBufferDataStride\n            "
            },
            {
                "name": "transformFeedbackQueries",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               transformFeedbackQueries\n            "
            },
            {
                "name": "transformFeedbackStreamsLinesTriangles",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               transformFeedbackStreamsLinesTriangles\n            "
            },
            {
                "name": "transformFeedbackRasterizationStreamSelect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               transformFeedbackRasterizationStreamSelect\n            "
            },
            {
                "name": "transformFeedbackDraw",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               transformFeedbackDraw\n        "
            }
        ],
        "VkPipelineRasterizationStateStreamCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRasterizationStateStreamCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRasterizationStateStreamCreateFlagsEXT                 flags\n            "
            },
            {
                "name": "rasterizationStream",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                         rasterizationStream\n        "
            }
        ],
        "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "representativeFragmentTest",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       representativeFragmentTest\n        "
            }
        ],
        "VkPipelineRepresentativeFragmentTestStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*    pNext\n            "
            },
            {
                "name": "representativeFragmentTestEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32       representativeFragmentTestEnable\n        "
            }
        ],
        "VkPhysicalDeviceExclusiveScissorFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "exclusiveScissor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         exclusiveScissor\n        "
            }
        ],
        "VkPipelineViewportExclusiveScissorStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                       pNext\n            "
            },
            {
                "name": "exclusiveScissorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                          exclusiveScissorCount\n            "
            },
            {
                "name": "pExclusiveScissors",
                "const": true,
                "length": [
                    "exclusiveScissorCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D* pExclusiveScissors\n        "
            }
        ],
        "VkPhysicalDeviceCornerSampledImageFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                              pNext\n            "
            },
            {
                "name": "cornerSampledImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           cornerSampledImage\n        "
            }
        ],
        "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "computeDerivativeGroupQuads",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         computeDerivativeGroupQuads\n            "
            },
            {
                "name": "computeDerivativeGroupLinear",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         computeDerivativeGroupLinear\n        "
            }
        ],
        "VkPhysicalDeviceShaderImageFootprintFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                              pNext\n            "
            },
            {
                "name": "imageFootprint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           imageFootprint\n        "
            }
        ],
        "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "dedicatedAllocationImageAliasing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         dedicatedAllocationImageAliasing\n        "
            }
        ],
        "VkPhysicalDeviceCopyMemoryIndirectFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "indirectCopy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         indirectCopy\n        "
            }
        ],
        "VkPhysicalDeviceCopyMemoryIndirectPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "supportedQueues",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueueFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueueFlags        supportedQueuesBitfield of which queues are supported for indirect copy\n        "
            }
        ],
        "VkPhysicalDeviceMemoryDecompressionFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*       pNext\n            "
            },
            {
                "name": "memoryDecompression",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    memoryDecompression\n        "
            }
        ],
        "VkPhysicalDeviceMemoryDecompressionPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "decompressionMethods",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryDecompressionMethodFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryDecompressionMethodFlagsNV    decompressionMethods\n            "
            },
            {
                "name": "maxDecompressionIndirectCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t             maxDecompressionIndirectCount\n        "
            }
        ],
        "VkShadingRatePaletteNV": [
            {
                "name": "shadingRatePaletteEntryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                               shadingRatePaletteEntryCount\n            "
            },
            {
                "name": "pShadingRatePaletteEntries",
                "const": true,
                "length": [
                    "shadingRatePaletteEntryCount"
                ],
                "type": "VkShadingRatePaletteEntryNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkShadingRatePaletteEntryNV*  pShadingRatePaletteEntries\n        "
            }
        ],
        "VkPipelineViewportShadingRateImageStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                             pNext\n            "
            },
            {
                "name": "shadingRateImageEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                shadingRateImageEnable\n            "
            },
            {
                "name": "viewportCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                viewportCount\n            "
            },
            {
                "name": "pShadingRatePalettes",
                "const": true,
                "length": [
                    "viewportCount"
                ],
                "type": "VkShadingRatePaletteNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkShadingRatePaletteNV* pShadingRatePalettes\n        "
            }
        ],
        "VkPhysicalDeviceShadingRateImageFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shadingRateImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shadingRateImage\n            "
            },
            {
                "name": "shadingRateCoarseSampleOrder",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shadingRateCoarseSampleOrder\n        "
            }
        ],
        "VkPhysicalDeviceShadingRateImagePropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shadingRateTexelSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                     shadingRateTexelSize\n            "
            },
            {
                "name": "shadingRatePaletteSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            shadingRatePaletteSize\n            "
            },
            {
                "name": "shadingRateMaxCoarseSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            shadingRateMaxCoarseSamples\n        "
            }
        ],
        "VkPhysicalDeviceInvocationMaskFeaturesHUAWEI": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "invocationMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            invocationMask\n        "
            }
        ],
        "VkCoarseSampleLocationNV": [
            {
                "name": "pixelX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            pixelX\n            "
            },
            {
                "name": "pixelY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            pixelY\n            "
            },
            {
                "name": "sample",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            sample\n        "
            }
        ],
        "VkCoarseSampleOrderCustomNV": [
            {
                "name": "shadingRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShadingRatePaletteEntryNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkShadingRatePaletteEntryNV         shadingRate\n            "
            },
            {
                "name": "sampleCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            sampleCount\n            "
            },
            {
                "name": "sampleLocationCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            sampleLocationCount\n            "
            },
            {
                "name": "pSampleLocations",
                "const": true,
                "length": [
                    "sampleLocationCount"
                ],
                "type": "VkCoarseSampleLocationNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkCoarseSampleLocationNV* pSampleLocations\n        "
            }
        ],
        "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                            pNext\n            "
            },
            {
                "name": "sampleOrderType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCoarseSampleOrderTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkCoarseSampleOrderTypeNV                                              sampleOrderType\n            "
            },
            {
                "name": "customSampleOrderCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               customSampleOrderCount\n            "
            },
            {
                "name": "pCustomSampleOrders",
                "const": true,
                "length": [
                    "customSampleOrderCount"
                ],
                "type": "VkCoarseSampleOrderCustomNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkCoarseSampleOrderCustomNV*        pCustomSampleOrders\n        "
            }
        ],
        "VkPhysicalDeviceMeshShaderFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "taskShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            taskShader\n            "
            },
            {
                "name": "meshShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            meshShader\n        "
            }
        ],
        "VkPhysicalDeviceMeshShaderPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "maxDrawMeshTasksCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxDrawMeshTasksCount\n            "
            },
            {
                "name": "maxTaskWorkGroupInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskWorkGroupInvocations\n            "
            },
            {
                "name": "maxTaskWorkGroupSize",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskWorkGroupSize[3]\n            "
            },
            {
                "name": "maxTaskTotalMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskTotalMemorySize\n            "
            },
            {
                "name": "maxTaskOutputCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskOutputCount\n            "
            },
            {
                "name": "maxMeshWorkGroupInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshWorkGroupInvocations\n            "
            },
            {
                "name": "maxMeshWorkGroupSize",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshWorkGroupSize[3]\n            "
            },
            {
                "name": "maxMeshTotalMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshTotalMemorySize\n            "
            },
            {
                "name": "maxMeshOutputVertices",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshOutputVertices\n            "
            },
            {
                "name": "maxMeshOutputPrimitives",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshOutputPrimitives\n            "
            },
            {
                "name": "maxMeshMultiviewViewCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshMultiviewViewCount\n            "
            },
            {
                "name": "meshOutputPerVertexGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         meshOutputPerVertexGranularity\n            "
            },
            {
                "name": "meshOutputPerPrimitiveGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         meshOutputPerPrimitiveGranularity\n        "
            }
        ],
        "VkDrawMeshTasksIndirectCommandNV": [
            {
                "name": "taskCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               taskCount\n            "
            },
            {
                "name": "firstTask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               firstTask\n        "
            }
        ],
        "VkPhysicalDeviceMeshShaderFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "taskShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            taskShader\n            "
            },
            {
                "name": "meshShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            meshShader\n            "
            },
            {
                "name": "multiviewMeshShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            multiviewMeshShader\n            "
            },
            {
                "name": "primitiveFragmentShadingRateMeshShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            primitiveFragmentShadingRateMeshShader\n            "
            },
            {
                "name": "meshShaderQueries",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            meshShaderQueries\n        "
            }
        ],
        "VkPhysicalDeviceMeshShaderPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "maxTaskWorkGroupTotalCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskWorkGroupTotalCount\n            "
            },
            {
                "name": "maxTaskWorkGroupCount",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskWorkGroupCount[3]\n            "
            },
            {
                "name": "maxTaskWorkGroupInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskWorkGroupInvocations\n            "
            },
            {
                "name": "maxTaskWorkGroupSize",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskWorkGroupSize[3]\n            "
            },
            {
                "name": "maxTaskPayloadSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskPayloadSize\n            "
            },
            {
                "name": "maxTaskSharedMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskSharedMemorySize\n            "
            },
            {
                "name": "maxTaskPayloadAndSharedMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxTaskPayloadAndSharedMemorySize\n            "
            },
            {
                "name": "maxMeshWorkGroupTotalCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshWorkGroupTotalCount\n            "
            },
            {
                "name": "maxMeshWorkGroupCount",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshWorkGroupCount[3]\n            "
            },
            {
                "name": "maxMeshWorkGroupInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshWorkGroupInvocations\n            "
            },
            {
                "name": "maxMeshWorkGroupSize",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshWorkGroupSize[3]\n            "
            },
            {
                "name": "maxMeshSharedMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshSharedMemorySize\n            "
            },
            {
                "name": "maxMeshPayloadAndSharedMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshPayloadAndSharedMemorySize\n            "
            },
            {
                "name": "maxMeshOutputMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshOutputMemorySize\n            "
            },
            {
                "name": "maxMeshPayloadAndOutputMemorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshPayloadAndOutputMemorySize\n            "
            },
            {
                "name": "maxMeshOutputComponents",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshOutputComponents\n            "
            },
            {
                "name": "maxMeshOutputVertices",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshOutputVertices\n            "
            },
            {
                "name": "maxMeshOutputPrimitives",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshOutputPrimitives\n            "
            },
            {
                "name": "maxMeshOutputLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshOutputLayers\n            "
            },
            {
                "name": "maxMeshMultiviewViewCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxMeshMultiviewViewCount\n            "
            },
            {
                "name": "meshOutputPerVertexGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         meshOutputPerVertexGranularity\n            "
            },
            {
                "name": "meshOutputPerPrimitiveGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         meshOutputPerPrimitiveGranularity\n            "
            },
            {
                "name": "maxPreferredTaskWorkGroupInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxPreferredTaskWorkGroupInvocations\n            "
            },
            {
                "name": "maxPreferredMeshWorkGroupInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxPreferredMeshWorkGroupInvocations\n            "
            },
            {
                "name": "prefersLocalInvocationVertexOutput",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         prefersLocalInvocationVertexOutput\n            "
            },
            {
                "name": "prefersLocalInvocationPrimitiveOutput",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         prefersLocalInvocationPrimitiveOutput\n            "
            },
            {
                "name": "prefersCompactVertexOutput",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         prefersCompactVertexOutput\n            "
            },
            {
                "name": "prefersCompactPrimitiveOutput",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         prefersCompactPrimitiveOutput\n        "
            }
        ],
        "VkDrawMeshTasksIndirectCommandEXT": [
            {
                "name": "groupCountX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t groupCountX\n            "
            },
            {
                "name": "groupCountY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t groupCountY\n            "
            },
            {
                "name": "groupCountZ",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t groupCountZ\n        "
            }
        ],
        "VkRayTracingShaderGroupCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRayTracingShaderGroupTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkRayTracingShaderGroupTypeKHR type\n            "
            },
            {
                "name": "generalShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               generalShader\n            "
            },
            {
                "name": "closestHitShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               closestHitShader\n            "
            },
            {
                "name": "anyHitShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               anyHitShader\n            "
            },
            {
                "name": "intersectionShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               intersectionShader\n        "
            }
        ],
        "VkRayTracingShaderGroupCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRayTracingShaderGroupTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkRayTracingShaderGroupTypeKHR type\n            "
            },
            {
                "name": "generalShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               generalShader\n            "
            },
            {
                "name": "closestHitShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               closestHitShader\n            "
            },
            {
                "name": "anyHitShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               anyHitShader\n            "
            },
            {
                "name": "intersectionShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               intersectionShader\n            "
            },
            {
                "name": "pShaderGroupCaptureReplayHandle",
                "const": true,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void* pShaderGroupCaptureReplayHandle\n        "
            }
        ],
        "VkRayTracingPipelineCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCreateFlags  flagsPipeline creation flags\n            "
            },
            {
                "name": "stageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               stageCount\n            "
            },
            {
                "name": "pStages",
                "const": true,
                "length": [
                    "stageCount"
                ],
                "type": "VkPipelineShaderStageCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineShaderStageCreateInfo* pStagesOne entry for each active shader stage\n            "
            },
            {
                "name": "groupCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               groupCount\n            "
            },
            {
                "name": "pGroups",
                "const": true,
                "length": [
                    "groupCount"
                ],
                "type": "VkRayTracingShaderGroupCreateInfoNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRayTracingShaderGroupCreateInfoNV* pGroups\n            "
            },
            {
                "name": "maxRecursionDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxRecursionDepth\n            "
            },
            {
                "name": "layout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayout       layoutInterface layout of the pipeline\n            "
            },
            {
                "name": "basePipelineHandle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline      basePipelineHandleIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of\n            "
            },
            {
                "name": "basePipelineIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                basePipelineIndexIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of\n        "
            }
        ],
        "VkRayTracingPipelineCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCreateFlags  flagsPipeline creation flags\n            "
            },
            {
                "name": "stageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t stageCount\n            "
            },
            {
                "name": "pStages",
                "const": true,
                "length": [
                    "stageCount"
                ],
                "type": "VkPipelineShaderStageCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineShaderStageCreateInfo* pStagesOne entry for each active shader stage\n            "
            },
            {
                "name": "groupCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t groupCount\n            "
            },
            {
                "name": "pGroups",
                "const": true,
                "length": [
                    "groupCount"
                ],
                "type": "VkRayTracingShaderGroupCreateInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRayTracingShaderGroupCreateInfoKHR* pGroups\n            "
            },
            {
                "name": "maxPipelineRayRecursionDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxPipelineRayRecursionDepth\n            "
            },
            {
                "name": "pLibraryInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineLibraryCreateInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineLibraryCreateInfoKHR* pLibraryInfo\n            "
            },
            {
                "name": "pLibraryInterface",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkRayTracingPipelineInterfaceCreateInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRayTracingPipelineInterfaceCreateInfoKHR* pLibraryInterface\n            "
            },
            {
                "name": "pDynamicState",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkPipelineDynamicStateCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipelineDynamicStateCreateInfo* pDynamicState\n            "
            },
            {
                "name": "layout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineLayout       layoutInterface layout of the pipeline\n            "
            },
            {
                "name": "basePipelineHandle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline      basePipelineHandleIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is nonzero, it specifies the handle of the base pipeline this is a derivative of\n            "
            },
            {
                "name": "basePipelineIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                basePipelineIndexIf VK_PIPELINE_CREATE_DERIVATIVE_BIT is set and this value is not -1, it specifies an index into pCreateInfos of the base pipeline this is a derivative of\n        "
            }
        ],
        "VkGeometryTrianglesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "vertexData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer   vertexData\n            "
            },
            {
                "name": "vertexOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize               vertexOffset\n            "
            },
            {
                "name": "vertexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                   vertexCount\n            "
            },
            {
                "name": "vertexStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize               vertexStride\n            "
            },
            {
                "name": "vertexFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                   vertexFormat\n            "
            },
            {
                "name": "indexData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer   indexData\n            "
            },
            {
                "name": "indexOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize               indexOffset\n            "
            },
            {
                "name": "indexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                   indexCount\n            "
            },
            {
                "name": "indexType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndexType",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndexType                indexType\n            "
            },
            {
                "name": "transformData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer   transformDataOptional reference to array of floats representing a 3x4 row major affine transformation matrix.\n            "
            },
            {
                "name": "transformOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize               transformOffset\n        "
            }
        ],
        "VkGeometryAABBNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "aabbData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer   aabbData\n            "
            },
            {
                "name": "numAABBs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                   numAABBs\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                   strideStride in bytes between AABBs\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize               offsetOffset in bytes of the first AABB in aabbData\n        "
            }
        ],
        "VkGeometryDataNV": [
            {
                "name": "triangles",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryTrianglesNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryTrianglesNV                  triangles\n            "
            },
            {
                "name": "aabbs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryAABBNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryAABBNV                       aabbs\n        "
            }
        ],
        "VkGeometryNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GEOMETRY_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                   pNext\n            "
            },
            {
                "name": "geometryType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryTypeKHR                  geometryType\n            "
            },
            {
                "name": "geometry",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryDataNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryDataNV                              geometry\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryFlagsKHR flags\n        "
            }
        ],
        "VkAccelerationStructureInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureTypeNV         type\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuildAccelerationStructureFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuildAccelerationStructureFlagsNV flags\n            "
            },
            {
                "name": "instanceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               instanceCount\n            "
            },
            {
                "name": "geometryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               geometryCount\n            "
            },
            {
                "name": "pGeometries",
                "const": true,
                "length": [
                    "geometryCount"
                ],
                "type": "VkGeometryNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkGeometryNV* pGeometries\n        "
            }
        ],
        "VkAccelerationStructureCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "compactedSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                           compactedSize\n            "
            },
            {
                "name": "info",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureInfoNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureInfoNV          info\n        "
            }
        ],
        "VkBindAccelerationStructureMemoryInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*     pNext\n            "
            },
            {
                "name": "accelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureNV       accelerationStructure\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     memoryOffset\n            "
            },
            {
                "name": "deviceIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         deviceIndexCount\n            "
            },
            {
                "name": "pDeviceIndices",
                "const": true,
                "length": [
                    "deviceIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*  pDeviceIndices\n        "
            }
        ],
        "VkWriteDescriptorSetAccelerationStructureKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "accelerationStructureCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         accelerationStructureCount\n            "
            },
            {
                "name": "pAccelerationStructures",
                "const": true,
                "length": [
                    "accelerationStructureCount"
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAccelerationStructureKHR* pAccelerationStructures\n        "
            }
        ],
        "VkWriteDescriptorSetAccelerationStructureNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*      pNext\n            "
            },
            {
                "name": "accelerationStructureCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         accelerationStructureCount\n            "
            },
            {
                "name": "pAccelerationStructures",
                "const": true,
                "length": [
                    "accelerationStructureCount"
                ],
                "type": "VkAccelerationStructureNV",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAccelerationStructureNV* pAccelerationStructures\n        "
            }
        ],
        "VkAccelerationStructureMemoryRequirementsInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                          pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureMemoryRequirementsTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureMemoryRequirementsTypeNV                     type\n            "
            },
            {
                "name": "accelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureNV                                           accelerationStructure\n        "
            }
        ],
        "VkPhysicalDeviceAccelerationStructureFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "accelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         accelerationStructure\n            "
            },
            {
                "name": "accelerationStructureCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         accelerationStructureCaptureReplay\n            "
            },
            {
                "name": "accelerationStructureIndirectBuild",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         accelerationStructureIndirectBuild\n            "
            },
            {
                "name": "accelerationStructureHostCommands",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         accelerationStructureHostCommands\n            "
            },
            {
                "name": "descriptorBindingAccelerationStructureUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingAccelerationStructureUpdateAfterBind\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingPipelineFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "rayTracingPipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayTracingPipeline\n            "
            },
            {
                "name": "rayTracingPipelineShaderGroupHandleCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayTracingPipelineShaderGroupHandleCaptureReplay\n            "
            },
            {
                "name": "rayTracingPipelineShaderGroupHandleCaptureReplayMixed",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayTracingPipelineShaderGroupHandleCaptureReplayMixed\n            "
            },
            {
                "name": "rayTracingPipelineTraceRaysIndirect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayTracingPipelineTraceRaysIndirect\n            "
            },
            {
                "name": "rayTraversalPrimitiveCulling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayTraversalPrimitiveCulling\n        "
            }
        ],
        "VkPhysicalDeviceRayQueryFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "rayQuery",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayQuery\n        "
            }
        ],
        "VkPhysicalDeviceAccelerationStructurePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "maxGeometryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         maxGeometryCount\n            "
            },
            {
                "name": "maxInstanceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         maxInstanceCount\n            "
            },
            {
                "name": "maxPrimitiveCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         maxPrimitiveCount\n            "
            },
            {
                "name": "maxPerStageDescriptorAccelerationStructures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorAccelerationStructures\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindAccelerationStructures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorUpdateAfterBindAccelerationStructures\n            "
            },
            {
                "name": "maxDescriptorSetAccelerationStructures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetAccelerationStructures\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindAccelerationStructures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindAccelerationStructures\n            "
            },
            {
                "name": "minAccelerationStructureScratchOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         minAccelerationStructureScratchOffsetAlignment\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingPipelinePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "shaderGroupHandleSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    shaderGroupHandleSize\n            "
            },
            {
                "name": "maxRayRecursionDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxRayRecursionDepth\n            "
            },
            {
                "name": "maxShaderGroupStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxShaderGroupStride\n            "
            },
            {
                "name": "shaderGroupBaseAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    shaderGroupBaseAlignment\n            "
            },
            {
                "name": "shaderGroupHandleCaptureReplaySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    shaderGroupHandleCaptureReplaySize\n            "
            },
            {
                "name": "maxRayDispatchInvocationCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxRayDispatchInvocationCount\n            "
            },
            {
                "name": "shaderGroupHandleAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                      shaderGroupHandleAlignment\n            "
            },
            {
                "name": "maxRayHitAttributeSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxRayHitAttributeSize\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "shaderGroupHandleSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    shaderGroupHandleSize\n            "
            },
            {
                "name": "maxRecursionDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxRecursionDepth\n            "
            },
            {
                "name": "maxShaderGroupStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxShaderGroupStride\n            "
            },
            {
                "name": "shaderGroupBaseAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                    shaderGroupBaseAlignment\n            "
            },
            {
                "name": "maxGeometryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         maxGeometryCount\n            "
            },
            {
                "name": "maxInstanceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         maxInstanceCount\n            "
            },
            {
                "name": "maxTriangleCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         maxTriangleCount\n            "
            },
            {
                "name": "maxDescriptorSetAccelerationStructures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetAccelerationStructures\n        "
            }
        ],
        "VkStridedDeviceAddressRegionKHR": [
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress  deviceAddress\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     stride\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     size\n        "
            }
        ],
        "VkTraceRaysIndirectCommandKHR": [
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               height\n            "
            },
            {
                "name": "depth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               depth\n        "
            }
        ],
        "VkTraceRaysIndirectCommand2KHR": [
            {
                "name": "raygenShaderRecordAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress        raygenShaderRecordAddress\n            "
            },
            {
                "name": "raygenShaderRecordSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           raygenShaderRecordSize\n            "
            },
            {
                "name": "missShaderBindingTableAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress        missShaderBindingTableAddress\n            "
            },
            {
                "name": "missShaderBindingTableSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           missShaderBindingTableSize\n            "
            },
            {
                "name": "missShaderBindingTableStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           missShaderBindingTableStride\n            "
            },
            {
                "name": "hitShaderBindingTableAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress        hitShaderBindingTableAddress\n            "
            },
            {
                "name": "hitShaderBindingTableSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           hitShaderBindingTableSize\n            "
            },
            {
                "name": "hitShaderBindingTableStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           hitShaderBindingTableStride\n            "
            },
            {
                "name": "callableShaderBindingTableAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress        callableShaderBindingTableAddress\n            "
            },
            {
                "name": "callableShaderBindingTableSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           callableShaderBindingTableSize\n            "
            },
            {
                "name": "callableShaderBindingTableStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize           callableShaderBindingTableStride\n            "
            },
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               height\n            "
            },
            {
                "name": "depth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               depth\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingMaintenance1FeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "rayTracingMaintenance1",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayTracingMaintenance1\n            "
            },
            {
                "name": "rayTracingPipelineTraceRaysIndirect2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rayTracingPipelineTraceRaysIndirect2\n        "
            }
        ],
        "VkDrmFormatModifierPropertiesListEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "drmFormatModifierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t drmFormatModifierCount\n            "
            },
            {
                "name": "pDrmFormatModifierProperties",
                "const": false,
                "length": [
                    "drmFormatModifierCount"
                ],
                "type": "VkDrmFormatModifierPropertiesEXT",
                "num_indirection": 1,
                "value": "",
                "header": "VkDrmFormatModifierPropertiesEXT* pDrmFormatModifierProperties\n        "
            }
        ],
        "VkDrmFormatModifierPropertiesEXT": [
            {
                "name": "drmFormatModifier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t drmFormatModifier\n            "
            },
            {
                "name": "drmFormatModifierPlaneCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t drmFormatModifierPlaneCount\n            "
            },
            {
                "name": "drmFormatModifierTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags drmFormatModifierTilingFeatures\n        "
            }
        ],
        "VkPhysicalDeviceImageDrmFormatModifierInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "drmFormatModifier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t drmFormatModifier\n            "
            },
            {
                "name": "sharingMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSharingMode",
                "num_indirection": 0,
                "value": "",
                "header": "VkSharingMode sharingMode\n            "
            },
            {
                "name": "queueFamilyIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t queueFamilyIndexCount\n            "
            },
            {
                "name": "pQueueFamilyIndices",
                "const": true,
                "length": [
                    "queueFamilyIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pQueueFamilyIndices\n        "
            }
        ],
        "VkImageDrmFormatModifierListCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "drmFormatModifierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t drmFormatModifierCount\n            "
            },
            {
                "name": "pDrmFormatModifiers",
                "const": true,
                "length": [
                    "drmFormatModifierCount"
                ],
                "type": "uint64_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint64_t* pDrmFormatModifiers\n        "
            }
        ],
        "VkImageDrmFormatModifierExplicitCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "drmFormatModifier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t drmFormatModifier\n            "
            },
            {
                "name": "drmFormatModifierPlaneCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t drmFormatModifierPlaneCount\n            "
            },
            {
                "name": "pPlaneLayouts",
                "const": true,
                "length": [
                    "drmFormatModifierPlaneCount"
                ],
                "type": "VkSubresourceLayout",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSubresourceLayout* pPlaneLayouts\n        "
            }
        ],
        "VkImageDrmFormatModifierPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "drmFormatModifier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t drmFormatModifier\n        "
            }
        ],
        "VkImageStencilUsageCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "stencilUsage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags stencilUsage\n        "
            }
        ],
        "VkImageStencilUsageCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "stencilUsage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags stencilUsage\n        "
            }
        ],
        "VkDeviceMemoryOverallocationCreateInfoAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "overallocationBehavior",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryOverallocationBehaviorAMD",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryOverallocationBehaviorAMD overallocationBehavior\n        "
            }
        ],
        "VkPhysicalDeviceFragmentDensityMapFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "fragmentDensityMap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         fragmentDensityMap\n            "
            },
            {
                "name": "fragmentDensityMapDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         fragmentDensityMapDynamic\n            "
            },
            {
                "name": "fragmentDensityMapNonSubsampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         fragmentDensityMapNonSubsampledImages\n        "
            }
        ],
        "VkPhysicalDeviceFragmentDensityMap2FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "fragmentDensityMapDeferred",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         fragmentDensityMapDeferred\n        "
            }
        ],
        "VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "fragmentDensityMapOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         fragmentDensityMapOffset\n        "
            }
        ],
        "VkPhysicalDeviceFragmentDensityMapPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "minFragmentDensityTexelSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       minFragmentDensityTexelSize\n            "
            },
            {
                "name": "maxFragmentDensityTexelSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxFragmentDensityTexelSize\n            "
            },
            {
                "name": "fragmentDensityInvocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     fragmentDensityInvocations\n        "
            }
        ],
        "VkPhysicalDeviceFragmentDensityMap2PropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "subsampledLoads",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                  subsampledLoads\n            "
            },
            {
                "name": "subsampledCoarseReconstructionEarlyAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                  subsampledCoarseReconstructionEarlyAccess\n            "
            },
            {
                "name": "maxSubsampledArrayLayers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxSubsampledArrayLayers\n            "
            },
            {
                "name": "maxDescriptorSetSubsampledSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxDescriptorSetSubsampledSamplers\n        "
            }
        ],
        "VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "fragmentDensityOffsetGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       fragmentDensityOffsetGranularity\n        "
            }
        ],
        "VkRenderPassFragmentDensityMapCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "fragmentDensityMapAttachment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentReference",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentReference            fragmentDensityMapAttachment\n        "
            }
        ],
        "VkSubpassFragmentDensityMapOffsetEndInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "fragmentDensityOffsetCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           fragmentDensityOffsetCount\n            "
            },
            {
                "name": "pFragmentDensityOffsets",
                "const": true,
                "length": [
                    "fragmentDensityOffsetCount"
                ],
                "type": "VkOffset2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkOffset2D* pFragmentDensityOffsets\n        "
            }
        ],
        "VkPhysicalDeviceScalarBlockLayoutFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "scalarBlockLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            scalarBlockLayout\n        "
            }
        ],
        "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "scalarBlockLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            scalarBlockLayout\n        "
            }
        ],
        "VkSurfaceProtectedCapabilitiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "supportsProtected",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 supportsProtectedRepresents if surface can be protected\n        "
            }
        ],
        "VkPhysicalDeviceUniformBufferStandardLayoutFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "uniformBufferStandardLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            uniformBufferStandardLayout\n        "
            }
        ],
        "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "uniformBufferStandardLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            uniformBufferStandardLayout\n        "
            }
        ],
        "VkPhysicalDeviceDepthClipEnableFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "depthClipEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               depthClipEnable\n        "
            }
        ],
        "VkPipelineRasterizationDepthClipStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                 pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRasterizationDepthClipStateCreateFlagsEXT         flagsReserved\n            "
            },
            {
                "name": "depthClipEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                    depthClipEnable\n        "
            }
        ],
        "VkPhysicalDeviceMemoryBudgetPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "heapBudget",
                "const": false,
                "length": [
                    "VK_MAX_MEMORY_HEAPS"
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       heapBudget[VK_MAX_MEMORY_HEAPS]\n            "
            },
            {
                "name": "heapUsage",
                "const": false,
                "length": [
                    "VK_MAX_MEMORY_HEAPS"
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       heapUsage[VK_MAX_MEMORY_HEAPS]\n        "
            }
        ],
        "VkPhysicalDeviceMemoryPriorityFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "memoryPriority",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           memoryPriority\n        "
            }
        ],
        "VkMemoryPriorityAllocateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "priority",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                              priority\n        "
            }
        ],
        "VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "pageableDeviceLocalMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           pageableDeviceLocalMemory\n        "
            }
        ],
        "VkPhysicalDeviceBufferDeviceAddressFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "bufferDeviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddress\n            "
            },
            {
                "name": "bufferDeviceAddressCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressCaptureReplay\n            "
            },
            {
                "name": "bufferDeviceAddressMultiDevice",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressMultiDevice\n        "
            }
        ],
        "VkPhysicalDeviceBufferDeviceAddressFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "bufferDeviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddress\n            "
            },
            {
                "name": "bufferDeviceAddressCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressCaptureReplay\n            "
            },
            {
                "name": "bufferDeviceAddressMultiDevice",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressMultiDevice\n        "
            }
        ],
        "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "bufferDeviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddress\n            "
            },
            {
                "name": "bufferDeviceAddressCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressCaptureReplay\n            "
            },
            {
                "name": "bufferDeviceAddressMultiDevice",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressMultiDevice\n        "
            }
        ],
        "VkPhysicalDeviceBufferAddressFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "bufferDeviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddress\n            "
            },
            {
                "name": "bufferDeviceAddressCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressCaptureReplay\n            "
            },
            {
                "name": "bufferDeviceAddressMultiDevice",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bufferDeviceAddressMultiDevice\n        "
            }
        ],
        "VkBufferDeviceAddressInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                               buffer\n        "
            }
        ],
        "VkBufferDeviceAddressInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                               buffer\n        "
            }
        ],
        "VkBufferDeviceAddressInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                               buffer\n        "
            }
        ],
        "VkBufferOpaqueCaptureAddressCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "opaqueCaptureAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         opaqueCaptureAddress\n        "
            }
        ],
        "VkBufferOpaqueCaptureAddressCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "opaqueCaptureAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         opaqueCaptureAddress\n        "
            }
        ],
        "VkBufferDeviceAddressCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                  deviceAddress\n        "
            }
        ],
        "VkPhysicalDeviceImageViewImageFormatInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "imageViewType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageViewType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageViewType                  imageViewType\n        "
            }
        ],
        "VkFilterCubicImageViewImageFormatPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "filterCubic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         filterCubicThe combinations of format, image type (and image view type if provided) can be filtered with VK_FILTER_CUBIC_EXT\n            "
            },
            {
                "name": "filterCubicMinmax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         filterCubicMinmaxThe combination of format, image type (and image view type if provided) can be filtered with VK_FILTER_CUBIC_EXT and ReductionMode of Min or Max\n        "
            }
        ],
        "VkPhysicalDeviceImagelessFramebufferFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                    pNext\n            "
            },
            {
                "name": "imagelessFramebuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                 imagelessFramebuffer\n        "
            }
        ],
        "VkPhysicalDeviceImagelessFramebufferFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                    pNext\n            "
            },
            {
                "name": "imagelessFramebuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                 imagelessFramebuffer\n        "
            }
        ],
        "VkFramebufferAttachmentsCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "attachmentImageInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 attachmentImageInfoCount\n            "
            },
            {
                "name": "pAttachmentImageInfos",
                "const": true,
                "length": [
                    "attachmentImageInfoCount"
                ],
                "type": "VkFramebufferAttachmentImageInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFramebufferAttachmentImageInfo* pAttachmentImageInfos\n        "
            }
        ],
        "VkFramebufferAttachmentsCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "attachmentImageInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 attachmentImageInfoCount\n            "
            },
            {
                "name": "pAttachmentImageInfos",
                "const": true,
                "length": [
                    "attachmentImageInfoCount"
                ],
                "type": "VkFramebufferAttachmentImageInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFramebufferAttachmentImageInfo* pAttachmentImageInfos\n        "
            }
        ],
        "VkFramebufferAttachmentImageInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCreateFlags       flagsImage creation flags\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                        usageImage usage flags\n            "
            },
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 height\n            "
            },
            {
                "name": "layerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 layerCount\n            "
            },
            {
                "name": "viewFormatCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 viewFormatCount\n            "
            },
            {
                "name": "pViewFormats",
                "const": true,
                "length": [
                    "viewFormatCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*    pViewFormats\n        "
            }
        ],
        "VkFramebufferAttachmentImageInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCreateFlags       flagsImage creation flags\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                        usageImage usage flags\n            "
            },
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 height\n            "
            },
            {
                "name": "layerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 layerCount\n            "
            },
            {
                "name": "viewFormatCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 viewFormatCount\n            "
            },
            {
                "name": "pViewFormats",
                "const": true,
                "length": [
                    "viewFormatCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*    pViewFormats\n        "
            }
        ],
        "VkRenderPassAttachmentBeginInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 attachmentCount\n            "
            },
            {
                "name": "pAttachments",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkImageView",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageView* pAttachments\n        "
            }
        ],
        "VkRenderPassAttachmentBeginInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                 attachmentCount\n            "
            },
            {
                "name": "pAttachments",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkImageView",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageView* pAttachments\n        "
            }
        ],
        "VkPhysicalDeviceTextureCompressionASTCHDRFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "textureCompressionASTC_HDR",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               textureCompressionASTC_HDR\n        "
            }
        ],
        "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "textureCompressionASTC_HDR",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               textureCompressionASTC_HDR\n        "
            }
        ],
        "VkPhysicalDeviceCooperativeMatrixFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "cooperativeMatrix",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            cooperativeMatrix\n            "
            },
            {
                "name": "cooperativeMatrixRobustBufferAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            cooperativeMatrixRobustBufferAccess\n        "
            }
        ],
        "VkPhysicalDeviceCooperativeMatrixPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "cooperativeMatrixSupportedStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags                  cooperativeMatrixSupportedStages\n        "
            }
        ],
        "VkCooperativeMatrixPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "MSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            MSize\n            "
            },
            {
                "name": "NSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            NSize\n            "
            },
            {
                "name": "KSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            KSize\n            "
            },
            {
                "name": "AType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeNV                   AType\n            "
            },
            {
                "name": "BType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeNV                   BType\n            "
            },
            {
                "name": "CType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeNV                   CType\n            "
            },
            {
                "name": "DType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeNV                   DType\n            "
            },
            {
                "name": "scope",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkScopeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkScopeNV                           scope\n        "
            }
        ],
        "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "ycbcrImageArrays",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           ycbcrImageArrays\n        "
            }
        ],
        "VkImageViewHandleInfoNVX": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "imageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                         imageView\n            "
            },
            {
                "name": "descriptorType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorType                    descriptorType\n            "
            },
            {
                "name": "sampler",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampler",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampler           sampler\n        "
            }
        ],
        "VkImageViewAddressPropertiesNVX": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress    deviceAddress\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize       size\n        "
            }
        ],
        "VkPipelineCreationFeedback": [
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreationFeedbackFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCreationFeedbackFlags     flags\n            "
            },
            {
                "name": "duration",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                            duration\n        "
            }
        ],
        "VkPipelineCreationFeedbackEXT": [
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreationFeedbackFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCreationFeedbackFlags     flags\n            "
            },
            {
                "name": "duration",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                            duration\n        "
            }
        ],
        "VkPipelineCreationFeedbackCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "pPipelineCreationFeedback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreationFeedback",
                "num_indirection": 1,
                "value": "",
                "header": "VkPipelineCreationFeedback*         pPipelineCreationFeedbackOutput pipeline creation feedback.\n            "
            },
            {
                "name": "pipelineStageCreationFeedbackCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t            pipelineStageCreationFeedbackCount\n            "
            },
            {
                "name": "pPipelineStageCreationFeedbacks",
                "const": false,
                "length": [
                    "pipelineStageCreationFeedbackCount"
                ],
                "type": "VkPipelineCreationFeedback",
                "num_indirection": 1,
                "value": "",
                "header": "VkPipelineCreationFeedback* pPipelineStageCreationFeedbacksOne entry for each shader stage specified in the parent Vk*PipelineCreateInfo struct\n        "
            }
        ],
        "VkPipelineCreationFeedbackCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "pPipelineCreationFeedback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCreationFeedback",
                "num_indirection": 1,
                "value": "",
                "header": "VkPipelineCreationFeedback*         pPipelineCreationFeedbackOutput pipeline creation feedback.\n            "
            },
            {
                "name": "pipelineStageCreationFeedbackCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t            pipelineStageCreationFeedbackCount\n            "
            },
            {
                "name": "pPipelineStageCreationFeedbacks",
                "const": false,
                "length": [
                    "pipelineStageCreationFeedbackCount"
                ],
                "type": "VkPipelineCreationFeedback",
                "num_indirection": 1,
                "value": "",
                "header": "VkPipelineCreationFeedback* pPipelineStageCreationFeedbacksOne entry for each shader stage specified in the parent Vk*PipelineCreateInfo struct\n        "
            }
        ],
        "VkPhysicalDevicePresentBarrierFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "presentBarrier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            presentBarrier\n        "
            }
        ],
        "VkSurfaceCapabilitiesPresentBarrierNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "presentBarrierSupported",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32       presentBarrierSupported\n        "
            }
        ],
        "VkSwapchainPresentBarrierCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "presentBarrierEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32    presentBarrierEnable\n        "
            }
        ],
        "VkPhysicalDevicePerformanceQueryFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "performanceCounterQueryPools",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         performanceCounterQueryPoolsperformance counters supported in query pools\n            "
            },
            {
                "name": "performanceCounterMultipleQueryPools",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         performanceCounterMultipleQueryPoolsperformance counters from multiple query pools can be accessed in the same primary command buffer\n        "
            }
        ],
        "VkPhysicalDevicePerformanceQueryPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "allowCommandBufferQueryCopies",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 allowCommandBufferQueryCopiesFlag to specify whether performance queries are allowed to be used in vkCmdCopyQueryPoolResults\n        "
            }
        ],
        "VkPerformanceCounterKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "unit",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceCounterUnitKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceCounterUnitKHR        unit\n            "
            },
            {
                "name": "scope",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceCounterScopeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceCounterScopeKHR       scope\n            "
            },
            {
                "name": "storage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceCounterStorageKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceCounterStorageKHR     storage\n            "
            },
            {
                "name": "uuid",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t uuid[VK_UUID_SIZE]\n        "
            }
        ],
        "VkPerformanceCounterDescriptionKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                   pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceCounterDescriptionFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceCounterDescriptionFlagsKHR flags\n            "
            },
            {
                "name": "name",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                                    name[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "category",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                                    category[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                                    description[VK_MAX_DESCRIPTION_SIZE]\n        "
            }
        ],
        "VkQueryPoolPerformanceCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                             pNext\n            "
            },
            {
                "name": "queueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                queueFamilyIndex\n            "
            },
            {
                "name": "counterIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                counterIndexCount\n            "
            },
            {
                "name": "pCounterIndices",
                "const": true,
                "length": [
                    "counterIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t* pCounterIndices\n        "
            }
        ],
        "VkPerformanceCounterResultKHR": [
            {
                "name": "int32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t  int32\n            "
            },
            {
                "name": "int64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int64_t",
                "num_indirection": 0,
                "value": "",
                "header": "int64_t  int64\n            "
            },
            {
                "name": "uint32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t uint32\n            "
            },
            {
                "name": "uint64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t uint64\n            "
            },
            {
                "name": "float32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float    float32\n            "
            },
            {
                "name": "float64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "double",
                "num_indirection": 0,
                "value": "",
                "header": "double   float64\n        "
            }
        ],
        "VkAcquireProfilingLockInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAcquireProfilingLockFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAcquireProfilingLockFlagsKHR flagsAcquire profiling lock flags\n            "
            },
            {
                "name": "timeout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t timeout\n        "
            }
        ],
        "VkPerformanceQuerySubmitInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "counterPassIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t            counterPassIndexIndex for which counter pass to submit\n        "
            }
        ],
        "VkHeadlessSurfaceCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkHeadlessSurfaceCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkHeadlessSurfaceCreateFlagsEXT   flags\n        "
            }
        ],
        "VkPhysicalDeviceCoverageReductionModeFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "coverageReductionMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       coverageReductionMode\n        "
            }
        ],
        "VkPipelineCoverageReductionStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                        pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCoverageReductionStateCreateFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCoverageReductionStateCreateFlagsNV      flags\n            "
            },
            {
                "name": "coverageReductionMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCoverageReductionModeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkCoverageReductionModeNV                                          coverageReductionMode\n        "
            }
        ],
        "VkFramebufferMixedSamplesCombinationNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                      pNext\n            "
            },
            {
                "name": "coverageReductionMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCoverageReductionModeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkCoverageReductionModeNV  coverageReductionMode\n            "
            },
            {
                "name": "rasterizationSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits      rasterizationSamples\n            "
            },
            {
                "name": "depthStencilSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags         depthStencilSamples\n            "
            },
            {
                "name": "colorSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags         colorSamples\n        "
            }
        ],
        "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "shaderIntegerFunctions2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderIntegerFunctions2\n        "
            }
        ],
        "VkPerformanceValueDataINTEL": [
            {
                "name": "value32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           value32\n            "
            },
            {
                "name": "value64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                           value64\n            "
            },
            {
                "name": "valueFloat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                               valueFloat\n            "
            },
            {
                "name": "valueBool",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                             valueBool\n            "
            },
            {
                "name": "valueString",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*  valueString\n        "
            }
        ],
        "VkPerformanceValueINTEL": [
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceValueTypeINTEL",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceValueTypeINTEL        type\n            "
            },
            {
                "name": "data",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceValueDataINTEL",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceValueDataINTEL        data\n        "
            }
        ],
        "VkInitializePerformanceApiInfoINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "pUserData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*               pUserData\n        "
            }
        ],
        "VkQueryPoolPerformanceQueryCreateInfoINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "performanceCountersSampling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueryPoolSamplingModeINTEL",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueryPoolSamplingModeINTEL        performanceCountersSampling\n        "
            }
        ],
        "VkQueryPoolCreateInfoINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "performanceCountersSampling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkQueryPoolSamplingModeINTEL",
                "num_indirection": 0,
                "value": "",
                "header": "VkQueryPoolSamplingModeINTEL        performanceCountersSampling\n        "
            }
        ],
        "VkPerformanceMarkerInfoINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "marker",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                            marker\n        "
            }
        ],
        "VkPerformanceStreamMarkerInfoINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "marker",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            marker\n        "
            }
        ],
        "VkPerformanceOverrideInfoINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceOverrideTypeINTEL",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceOverrideTypeINTEL      type\n            "
            },
            {
                "name": "enable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            enable\n            "
            },
            {
                "name": "parameter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                            parameter\n        "
            }
        ],
        "VkPerformanceConfigurationAcquireInfoINTEL": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                         pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPerformanceConfigurationTypeINTEL",
                "num_indirection": 0,
                "value": "",
                "header": "VkPerformanceConfigurationTypeINTEL type\n        "
            }
        ],
        "VkPhysicalDeviceShaderClockFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shaderSubgroupClock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderSubgroupClock\n            "
            },
            {
                "name": "shaderDeviceClock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderDeviceClock\n        "
            }
        ],
        "VkPhysicalDeviceIndexTypeUint8FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "indexTypeUint8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           indexTypeUint8\n        "
            }
        ],
        "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "shaderSMCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       shaderSMCount\n            "
            },
            {
                "name": "shaderWarpsPerSM",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       shaderWarpsPerSM\n        "
            }
        ],
        "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "shaderSMBuiltins",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       shaderSMBuiltins\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNextPointer to next structure\n            "
            },
            {
                "name": "fragmentShaderSampleInterlock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShaderSampleInterlock\n            "
            },
            {
                "name": "fragmentShaderPixelInterlock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShaderPixelInterlock\n            "
            },
            {
                "name": "fragmentShaderShadingRateInterlock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShaderShadingRateInterlock\n        "
            }
        ],
        "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "separateDepthStencilLayouts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       separateDepthStencilLayouts\n        "
            }
        ],
        "VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "separateDepthStencilLayouts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       separateDepthStencilLayouts\n        "
            }
        ],
        "VkAttachmentReferenceStencilLayout": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "stencilLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                  stencilLayout\n        "
            }
        ],
        "VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "primitiveTopologyListRestart",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     primitiveTopologyListRestart\n            "
            },
            {
                "name": "primitiveTopologyPatchListRestart",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     primitiveTopologyPatchListRestart\n        "
            }
        ],
        "VkAttachmentReferenceStencilLayoutKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "stencilLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                  stencilLayout\n        "
            }
        ],
        "VkAttachmentDescriptionStencilLayout": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "stencilInitialLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                  stencilInitialLayout\n            "
            },
            {
                "name": "stencilFinalLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                  stencilFinalLayout\n        "
            }
        ],
        "VkAttachmentDescriptionStencilLayoutKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "stencilInitialLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                  stencilInitialLayout\n            "
            },
            {
                "name": "stencilFinalLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                  stencilFinalLayout\n        "
            }
        ],
        "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "pipelineExecutableInfo",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           pipelineExecutableInfo\n        "
            }
        ],
        "VkPipelineInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "pipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline         pipeline\n        "
            }
        ],
        "VkPipelineInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "pipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline         pipeline\n        "
            }
        ],
        "VkPipelineExecutablePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "stages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags stages\n            "
            },
            {
                "name": "name",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char               name[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char               description[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "subgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t           subgroupSize\n        "
            }
        ],
        "VkPipelineExecutableInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "pipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipeline",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipeline         pipeline\n            "
            },
            {
                "name": "executableIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t           executableIndex\n        "
            }
        ],
        "VkPipelineExecutableStatisticValueKHR": [
            {
                "name": "b32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           b32\n            "
            },
            {
                "name": "i64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int64_t",
                "num_indirection": 0,
                "value": "",
                "header": "int64_t            i64\n            "
            },
            {
                "name": "u64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t           u64\n            "
            },
            {
                "name": "f64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "double",
                "num_indirection": 0,
                "value": "",
                "header": "double             f64\n        "
            }
        ],
        "VkPipelineExecutableStatisticKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "name",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char               name[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char               description[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineExecutableStatisticFormatKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineExecutableStatisticFormatKHR format\n            "
            },
            {
                "name": "value",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineExecutableStatisticValueKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineExecutableStatisticValueKHR  value\n        "
            }
        ],
        "VkPipelineExecutableInternalRepresentationKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "name",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char               name[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char               description[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "isText",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           isText\n            "
            },
            {
                "name": "dataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t             dataSize\n            "
            },
            {
                "name": "pData",
                "const": false,
                "length": [
                    "dataSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void* pData\n        "
            }
        ],
        "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "shaderDemoteToHelperInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   shaderDemoteToHelperInvocation\n        "
            }
        ],
        "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "shaderDemoteToHelperInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   shaderDemoteToHelperInvocation\n        "
            }
        ],
        "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "texelBufferAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           texelBufferAlignment\n        "
            }
        ],
        "VkPhysicalDeviceTexelBufferAlignmentProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "storageTexelBufferOffsetAlignmentBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       storageTexelBufferOffsetAlignmentBytes\n            "
            },
            {
                "name": "storageTexelBufferOffsetSingleTexelAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageTexelBufferOffsetSingleTexelAlignment\n            "
            },
            {
                "name": "uniformTexelBufferOffsetAlignmentBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       uniformTexelBufferOffsetAlignmentBytes\n            "
            },
            {
                "name": "uniformTexelBufferOffsetSingleTexelAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformTexelBufferOffsetSingleTexelAlignment\n        "
            }
        ],
        "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "storageTexelBufferOffsetAlignmentBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       storageTexelBufferOffsetAlignmentBytes\n            "
            },
            {
                "name": "storageTexelBufferOffsetSingleTexelAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageTexelBufferOffsetSingleTexelAlignment\n            "
            },
            {
                "name": "uniformTexelBufferOffsetAlignmentBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       uniformTexelBufferOffsetAlignmentBytes\n            "
            },
            {
                "name": "uniformTexelBufferOffsetSingleTexelAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformTexelBufferOffsetSingleTexelAlignment\n        "
            }
        ],
        "VkPhysicalDeviceSubgroupSizeControlFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "subgroupSizeControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               subgroupSizeControl\n            "
            },
            {
                "name": "computeFullSubgroups",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               computeFullSubgroups\n        "
            }
        ],
        "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "subgroupSizeControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               subgroupSizeControl\n            "
            },
            {
                "name": "computeFullSubgroups",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               computeFullSubgroups\n        "
            }
        ],
        "VkPhysicalDeviceSubgroupSizeControlProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "minSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t minSubgroupSizeThe minimum subgroup size supported by this device\n            "
            },
            {
                "name": "maxSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t maxSubgroupSizeThe maximum subgroup size supported by this device\n            "
            },
            {
                "name": "maxComputeWorkgroupSubgroups",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t maxComputeWorkgroupSubgroupsThe maximum number of subgroups supported in a workgroup\n            "
            },
            {
                "name": "requiredSubgroupSizeStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags         requiredSubgroupSizeStagesThe shader stages that support specifying a subgroup size\n        "
            }
        ],
        "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "minSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t minSubgroupSizeThe minimum subgroup size supported by this device\n            "
            },
            {
                "name": "maxSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t maxSubgroupSizeThe maximum subgroup size supported by this device\n            "
            },
            {
                "name": "maxComputeWorkgroupSubgroups",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t maxComputeWorkgroupSubgroupsThe maximum number of subgroups supported in a workgroup\n            "
            },
            {
                "name": "requiredSubgroupSizeStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags         requiredSubgroupSizeStagesThe shader stages that support specifying a subgroup size\n        "
            }
        ],
        "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "requiredSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               requiredSubgroupSize\n        "
            }
        ],
        "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "requiredSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               requiredSubgroupSize\n        "
            }
        ],
        "VkShaderRequiredSubgroupSizeCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "requiredSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               requiredSubgroupSize\n        "
            }
        ],
        "VkSubpassShadingPipelineCreateInfoHUAWEI": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "renderPass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPass",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderPass           renderPass\n            "
            },
            {
                "name": "subpass",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               subpass\n        "
            }
        ],
        "VkPhysicalDeviceSubpassShadingPropertiesHUAWEI": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxSubpassShadingWorkgroupSizeAspectRatio",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxSubpassShadingWorkgroupSizeAspectRatio\n        "
            }
        ],
        "VkPhysicalDeviceClusterCullingShaderPropertiesHUAWEI": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "maxWorkGroupCount",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t           maxWorkGroupCount[3]\n            "
            },
            {
                "name": "maxWorkGroupSize",
                "const": false,
                "length": [
                    "3"
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t           maxWorkGroupSize[3]\n            "
            },
            {
                "name": "maxOutputClusterCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               maxOutputClusterCount\n            "
            },
            {
                "name": "indirectBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize         indirectBufferOffsetAlignment\n        "
            }
        ],
        "VkMemoryOpaqueCaptureAddressAllocateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                   pNext\n            "
            },
            {
                "name": "opaqueCaptureAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                      opaqueCaptureAddress\n        "
            }
        ],
        "VkMemoryOpaqueCaptureAddressAllocateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                   pNext\n            "
            },
            {
                "name": "opaqueCaptureAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                      opaqueCaptureAddress\n        "
            }
        ],
        "VkDeviceMemoryOpaqueCaptureAddressInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n        "
            }
        ],
        "VkDeviceMemoryOpaqueCaptureAddressInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                   memory\n        "
            }
        ],
        "VkPhysicalDeviceLineRasterizationFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "rectangularLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           rectangularLines\n            "
            },
            {
                "name": "bresenhamLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           bresenhamLines\n            "
            },
            {
                "name": "smoothLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           smoothLines\n            "
            },
            {
                "name": "stippledRectangularLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           stippledRectangularLines\n            "
            },
            {
                "name": "stippledBresenhamLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           stippledBresenhamLines\n            "
            },
            {
                "name": "stippledSmoothLines",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           stippledSmoothLines\n        "
            }
        ],
        "VkPhysicalDeviceLineRasterizationPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "lineSubPixelPrecisionBits",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            lineSubPixelPrecisionBits\n        "
            }
        ],
        "VkPipelineRasterizationLineStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                      pNext\n            "
            },
            {
                "name": "lineRasterizationMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkLineRasterizationModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkLineRasterizationModeEXT                                       lineRasterizationMode\n            "
            },
            {
                "name": "stippledLineEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                         stippledLineEnable\n            "
            },
            {
                "name": "lineStippleFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                         lineStippleFactor\n            "
            },
            {
                "name": "lineStipplePattern",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint16_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint16_t                                                         lineStipplePattern\n        "
            }
        ],
        "VkPhysicalDevicePipelineCreationCacheControlFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "pipelineCreationCacheControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32              pipelineCreationCacheControl\n        "
            }
        ],
        "VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "pipelineCreationCacheControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32              pipelineCreationCacheControl\n        "
            }
        ],
        "VkPhysicalDeviceVulkan11Features": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "storageBuffer16BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageBuffer16BitAccess16-bit integer/floating-point variables supported in BufferBlock\n            "
            },
            {
                "name": "uniformAndStorageBuffer16BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformAndStorageBuffer16BitAccess16-bit integer/floating-point variables supported in BufferBlock and Block\n            "
            },
            {
                "name": "storagePushConstant16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storagePushConstant1616-bit integer/floating-point variables supported in PushConstant\n            "
            },
            {
                "name": "storageInputOutput16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageInputOutput1616-bit integer/floating-point variables supported in shader inputs and outputs\n            "
            },
            {
                "name": "multiview",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewMultiple views in a renderpass\n            "
            },
            {
                "name": "multiviewGeometryShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewGeometryShaderMultiple views in a renderpass w/ geometry shader\n            "
            },
            {
                "name": "multiviewTessellationShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewTessellationShaderMultiple views in a renderpass w/ tessellation shader\n            "
            },
            {
                "name": "variablePointersStorageBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointersStorageBuffer\n            "
            },
            {
                "name": "variablePointers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         variablePointers\n            "
            },
            {
                "name": "protectedMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         protectedMemory\n            "
            },
            {
                "name": "samplerYcbcrConversion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         samplerYcbcrConversionSampler color conversion supported\n            "
            },
            {
                "name": "shaderDrawParameters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDrawParameters\n        "
            }
        ],
        "VkPhysicalDeviceVulkan11Properties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*      pNext\n            "
            },
            {
                "name": "deviceUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          deviceUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "driverUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          driverUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "deviceLUID",
                "const": false,
                "length": [
                    "VK_LUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                          deviceLUID[VK_LUID_SIZE]\n            "
            },
            {
                "name": "deviceNodeMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         deviceNodeMask\n            "
            },
            {
                "name": "deviceLUIDValid",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         deviceLUIDValid\n            "
            },
            {
                "name": "subgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                      subgroupSizeThe size of a subgroup for this queue.\n            "
            },
            {
                "name": "subgroupSupportedStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags            subgroupSupportedStagesBitfield of what shader stages support subgroup operations\n            "
            },
            {
                "name": "subgroupSupportedOperations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubgroupFeatureFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubgroupFeatureFlags        subgroupSupportedOperationsBitfield of what subgroup operations are supported.\n            "
            },
            {
                "name": "subgroupQuadOperationsInAllStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                      subgroupQuadOperationsInAllStagesFlag to specify whether quad operations are available in all stages.\n            "
            },
            {
                "name": "pointClippingBehavior",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPointClippingBehavior",
                "num_indirection": 0,
                "value": "",
                "header": "VkPointClippingBehavior     pointClippingBehavior\n            "
            },
            {
                "name": "maxMultiviewViewCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxMultiviewViewCountmax number of views in a subpass\n            "
            },
            {
                "name": "maxMultiviewInstanceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxMultiviewInstanceIndexmax instance index for a draw in a multiview subpass\n            "
            },
            {
                "name": "protectedNoFault",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    protectedNoFault\n            "
            },
            {
                "name": "maxPerSetDescriptors",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerSetDescriptors\n            "
            },
            {
                "name": "maxMemoryAllocationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     maxMemoryAllocationSize\n        "
            }
        ],
        "VkPhysicalDeviceVulkan12Features": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "samplerMirrorClampToEdge",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         samplerMirrorClampToEdge\n            "
            },
            {
                "name": "drawIndirectCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         drawIndirectCount\n            "
            },
            {
                "name": "storageBuffer8BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storageBuffer8BitAccess8-bit integer variables supported in StorageBuffer\n            "
            },
            {
                "name": "uniformAndStorageBuffer8BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformAndStorageBuffer8BitAccess8-bit integer variables supported in StorageBuffer and Uniform\n            "
            },
            {
                "name": "storagePushConstant8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         storagePushConstant88-bit integer variables supported in PushConstant\n            "
            },
            {
                "name": "shaderBufferInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderBufferInt64Atomics\n            "
            },
            {
                "name": "shaderSharedInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSharedInt64Atomics\n            "
            },
            {
                "name": "shaderFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderFloat1616-bit floats (halfs) in shaders\n            "
            },
            {
                "name": "shaderInt8",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderInt88-bit integers in shaders\n            "
            },
            {
                "name": "descriptorIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorIndexing\n            "
            },
            {
                "name": "shaderInputAttachmentArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderInputAttachmentArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderUniformTexelBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderUniformTexelBufferArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderStorageTexelBufferArrayDynamicIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderStorageTexelBufferArrayDynamicIndexing\n            "
            },
            {
                "name": "shaderUniformBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderUniformBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderSampledImageArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSampledImageArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderStorageBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageImageArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderStorageImageArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderInputAttachmentArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderInputAttachmentArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderUniformTexelBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderUniformTexelBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "shaderStorageTexelBufferArrayNonUniformIndexing",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderStorageTexelBufferArrayNonUniformIndexing\n            "
            },
            {
                "name": "descriptorBindingUniformBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingUniformBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingSampledImageUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingSampledImageUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageImageUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingStorageImageUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingStorageBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingUniformTexelBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingUniformTexelBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingStorageTexelBufferUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingStorageTexelBufferUpdateAfterBind\n            "
            },
            {
                "name": "descriptorBindingUpdateUnusedWhilePending",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingUpdateUnusedWhilePending\n            "
            },
            {
                "name": "descriptorBindingPartiallyBound",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingPartiallyBound\n            "
            },
            {
                "name": "descriptorBindingVariableDescriptorCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingVariableDescriptorCount\n            "
            },
            {
                "name": "runtimeDescriptorArray",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         runtimeDescriptorArray\n            "
            },
            {
                "name": "samplerFilterMinmax",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         samplerFilterMinmax\n            "
            },
            {
                "name": "scalarBlockLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         scalarBlockLayout\n            "
            },
            {
                "name": "imagelessFramebuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         imagelessFramebuffer\n            "
            },
            {
                "name": "uniformBufferStandardLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         uniformBufferStandardLayout\n            "
            },
            {
                "name": "shaderSubgroupExtendedTypes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSubgroupExtendedTypes\n            "
            },
            {
                "name": "separateDepthStencilLayouts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         separateDepthStencilLayouts\n            "
            },
            {
                "name": "hostQueryReset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         hostQueryReset\n            "
            },
            {
                "name": "timelineSemaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         timelineSemaphore\n            "
            },
            {
                "name": "bufferDeviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         bufferDeviceAddress\n            "
            },
            {
                "name": "bufferDeviceAddressCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         bufferDeviceAddressCaptureReplay\n            "
            },
            {
                "name": "bufferDeviceAddressMultiDevice",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         bufferDeviceAddressMultiDevice\n            "
            },
            {
                "name": "vulkanMemoryModel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModel\n            "
            },
            {
                "name": "vulkanMemoryModelDeviceScope",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModelDeviceScope\n            "
            },
            {
                "name": "vulkanMemoryModelAvailabilityVisibilityChains",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         vulkanMemoryModelAvailabilityVisibilityChains\n            "
            },
            {
                "name": "shaderOutputViewportIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderOutputViewportIndex\n            "
            },
            {
                "name": "shaderOutputLayer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderOutputLayer\n            "
            },
            {
                "name": "subgroupBroadcastDynamicId",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         subgroupBroadcastDynamicId\n        "
            }
        ],
        "VkPhysicalDeviceVulkan12Properties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "driverID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDriverId",
                "num_indirection": 0,
                "value": "",
                "header": "VkDriverId                       driverID\n            "
            },
            {
                "name": "driverName",
                "const": false,
                "length": [
                    "VK_MAX_DRIVER_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                             driverName[VK_MAX_DRIVER_NAME_SIZE]\n            "
            },
            {
                "name": "driverInfo",
                "const": false,
                "length": [
                    "VK_MAX_DRIVER_INFO_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                             driverInfo[VK_MAX_DRIVER_INFO_SIZE]\n            "
            },
            {
                "name": "conformanceVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkConformanceVersion",
                "num_indirection": 0,
                "value": "",
                "header": "VkConformanceVersion             conformanceVersion\n            "
            },
            {
                "name": "denormBehaviorIndependence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderFloatControlsIndependence",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderFloatControlsIndependence denormBehaviorIndependence\n            "
            },
            {
                "name": "roundingModeIndependence",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderFloatControlsIndependence",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderFloatControlsIndependence roundingModeIndependence\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat16An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat32An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderSignedZeroInfNanPreserveFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSignedZeroInfNanPreserveFloat64An implementation can preserve signed zero, nan, inf\n            "
            },
            {
                "name": "shaderDenormPreserveFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat16An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormPreserveFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat32An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormPreserveFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormPreserveFloat64An implementation can preserve  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat16An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat32An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderDenormFlushToZeroFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDenormFlushToZeroFloat64An implementation can flush to zero  denormals\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat16An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat32An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTEFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTEFloat64An implementation can support RTE\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat16",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat16An implementation can support RTZ\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat32",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat32An implementation can support RTZ\n            "
            },
            {
                "name": "shaderRoundingModeRTZFloat64",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderRoundingModeRTZFloat64An implementation can support RTZ\n            "
            },
            {
                "name": "maxUpdateAfterBindDescriptorsInAllPools",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxUpdateAfterBindDescriptorsInAllPools\n            "
            },
            {
                "name": "shaderUniformBufferArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderUniformBufferArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderSampledImageArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderSampledImageArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderStorageBufferArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderStorageBufferArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderStorageImageArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderStorageImageArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "shaderInputAttachmentArrayNonUniformIndexingNative",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderInputAttachmentArrayNonUniformIndexingNative\n            "
            },
            {
                "name": "robustBufferAccessUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         robustBufferAccessUpdateAfterBind\n            "
            },
            {
                "name": "quadDivergentImplicitLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         quadDivergentImplicitLod\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorUpdateAfterBindSamplers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorUpdateAfterBindUniformBuffers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorUpdateAfterBindStorageBuffers\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorUpdateAfterBindSampledImages\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorUpdateAfterBindStorageImages\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageDescriptorUpdateAfterBindInputAttachments\n            "
            },
            {
                "name": "maxPerStageUpdateAfterBindResources",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxPerStageUpdateAfterBindResources\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindSamplers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindUniformBuffers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindUniformBuffersDynamic\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindStorageBuffers\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindStorageBuffersDynamic\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindSampledImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindSampledImages\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindStorageImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindStorageImages\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindInputAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDescriptorSetUpdateAfterBindInputAttachments\n            "
            },
            {
                "name": "supportedDepthResolveModes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlags               supportedDepthResolveModessupported depth resolve modes\n            "
            },
            {
                "name": "supportedStencilResolveModes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlags               supportedStencilResolveModessupported stencil resolve modes\n            "
            },
            {
                "name": "independentResolveNone",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         independentResolveNonedepth and stencil resolve modes can be set independently if one of them is none\n            "
            },
            {
                "name": "independentResolve",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         independentResolvedepth and stencil resolve modes can be set independently\n            "
            },
            {
                "name": "filterMinmaxSingleComponentFormats",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         filterMinmaxSingleComponentFormats\n            "
            },
            {
                "name": "filterMinmaxImageComponentMapping",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         filterMinmaxImageComponentMapping\n            "
            },
            {
                "name": "maxTimelineSemaphoreValueDifference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         maxTimelineSemaphoreValueDifference\n            "
            },
            {
                "name": "framebufferIntegerColorSampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags framebufferIntegerColorSampleCounts\n        "
            }
        ],
        "VkPhysicalDeviceVulkan13Features": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "robustImageAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         robustImageAccess\n            "
            },
            {
                "name": "inlineUniformBlock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         inlineUniformBlock\n            "
            },
            {
                "name": "descriptorBindingInlineUniformBlockUpdateAfterBind",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         descriptorBindingInlineUniformBlockUpdateAfterBind\n            "
            },
            {
                "name": "pipelineCreationCacheControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         pipelineCreationCacheControl\n            "
            },
            {
                "name": "privateData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         privateData\n            "
            },
            {
                "name": "shaderDemoteToHelperInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderDemoteToHelperInvocation\n            "
            },
            {
                "name": "shaderTerminateInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderTerminateInvocation\n            "
            },
            {
                "name": "subgroupSizeControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         subgroupSizeControl\n            "
            },
            {
                "name": "computeFullSubgroups",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         computeFullSubgroups\n            "
            },
            {
                "name": "synchronization2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         synchronization2\n            "
            },
            {
                "name": "textureCompressionASTC_HDR",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         textureCompressionASTC_HDR\n            "
            },
            {
                "name": "shaderZeroInitializeWorkgroupMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderZeroInitializeWorkgroupMemory\n            "
            },
            {
                "name": "dynamicRendering",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         dynamicRendering\n            "
            },
            {
                "name": "shaderIntegerDotProduct",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         shaderIntegerDotProduct\n            "
            },
            {
                "name": "maintenance4",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         maintenance4\n        "
            }
        ],
        "VkPhysicalDeviceVulkan13Properties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "minSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t minSubgroupSizeThe minimum subgroup size supported by this device\n            "
            },
            {
                "name": "maxSubgroupSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t maxSubgroupSizeThe maximum subgroup size supported by this device\n            "
            },
            {
                "name": "maxComputeWorkgroupSubgroups",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t maxComputeWorkgroupSubgroupsThe maximum number of subgroups supported in a workgroup\n            "
            },
            {
                "name": "requiredSubgroupSizeStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags         requiredSubgroupSizeStagesThe shader stages that support specifying a subgroup size\n            "
            },
            {
                "name": "maxInlineUniformBlockSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxInlineUniformBlockSize\n            "
            },
            {
                "name": "maxPerStageDescriptorInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxPerStageDescriptorInlineUniformBlocks\n            "
            },
            {
                "name": "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks\n            "
            },
            {
                "name": "maxDescriptorSetInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxDescriptorSetInlineUniformBlocks\n            "
            },
            {
                "name": "maxDescriptorSetUpdateAfterBindInlineUniformBlocks",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxDescriptorSetUpdateAfterBindInlineUniformBlocks\n            "
            },
            {
                "name": "maxInlineUniformTotalSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       maxInlineUniformTotalSize\n            "
            },
            {
                "name": "integerDotProduct8BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct8BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct8BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct8BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct8BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct8BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct4x8BitPackedUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct4x8BitPackedSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct4x8BitPackedMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct16BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct16BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct16BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct32BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct32BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct32BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct64BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct64BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProduct64BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating8BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating8BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating16BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating16BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating32BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating32BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating64BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating64BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                   integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "storageTexelBufferOffsetAlignmentBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                storageTexelBufferOffsetAlignmentBytes\n            "
            },
            {
                "name": "storageTexelBufferOffsetSingleTexelAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                  storageTexelBufferOffsetSingleTexelAlignment\n            "
            },
            {
                "name": "uniformTexelBufferOffsetAlignmentBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                uniformTexelBufferOffsetAlignmentBytes\n            "
            },
            {
                "name": "uniformTexelBufferOffsetSingleTexelAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                  uniformTexelBufferOffsetSingleTexelAlignment\n            "
            },
            {
                "name": "maxBufferSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                   maxBufferSize\n        "
            }
        ],
        "VkPipelineCompilerControlCreateInfoAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD",
                "header": "VkStructureType   sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                            pNext\n            "
            },
            {
                "name": "compilerControlFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineCompilerControlFlagsAMD",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineCompilerControlFlagsAMD                                      compilerControlFlags\n        "
            }
        ],
        "VkPhysicalDeviceCoherentMemoryFeaturesAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "deviceCoherentMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           deviceCoherentMemory\n        "
            }
        ],
        "VkPhysicalDeviceToolProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "name",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  name[VK_MAX_EXTENSION_NAME_SIZE]\n            "
            },
            {
                "name": "version",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  version[VK_MAX_EXTENSION_NAME_SIZE]\n            "
            },
            {
                "name": "purposes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkToolPurposeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkToolPurposeFlags    purposes\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  description[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "layer",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  layer[VK_MAX_EXTENSION_NAME_SIZE]\n        "
            }
        ],
        "VkPhysicalDeviceToolPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "name",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  name[VK_MAX_EXTENSION_NAME_SIZE]\n            "
            },
            {
                "name": "version",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  version[VK_MAX_EXTENSION_NAME_SIZE]\n            "
            },
            {
                "name": "purposes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkToolPurposeFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkToolPurposeFlags    purposes\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  description[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "layer",
                "const": false,
                "length": [
                    "VK_MAX_EXTENSION_NAME_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                  layer[VK_MAX_EXTENSION_NAME_SIZE]\n        "
            }
        ],
        "VkSamplerCustomBorderColorCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                            pNext\n            "
            },
            {
                "name": "customBorderColor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkClearColorValue",
                "num_indirection": 0,
                "value": "",
                "header": "VkClearColorValue                                                                      customBorderColor\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                                               format\n        "
            }
        ],
        "VkPhysicalDeviceCustomBorderColorPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                                   pNext\n            "
            },
            {
                "name": "maxCustomBorderColorSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                                      maxCustomBorderColorSamplers\n        "
            }
        ],
        "VkPhysicalDeviceCustomBorderColorFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "customBorderColors",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           customBorderColors\n            "
            },
            {
                "name": "customBorderColorWithoutFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           customBorderColorWithoutFormat\n        "
            }
        ],
        "VkSamplerBorderColorComponentMappingCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                       pNext\n            "
            },
            {
                "name": "components",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentMapping",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentMapping                                                                                components\n            "
            },
            {
                "name": "srgb",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                                          srgb\n        "
            }
        ],
        "VkPhysicalDeviceBorderColorSwizzleFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "borderColorSwizzle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     borderColorSwizzle\n            "
            },
            {
                "name": "borderColorSwizzleFromImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     borderColorSwizzleFromImage\n        "
            }
        ],
        "VkDeviceOrHostAddressKHR": [
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress            deviceAddress\n            "
            },
            {
                "name": "hostAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*                      hostAddress\n        "
            }
        ],
        "VkDeviceOrHostAddressConstKHR": [
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress            deviceAddress\n            "
            },
            {
                "name": "hostAddress",
                "const": true,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*                hostAddress\n        "
            }
        ],
        "VkAccelerationStructureGeometryTrianglesDataKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                   pNext\n            "
            },
            {
                "name": "vertexFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                      vertexFormat\n            "
            },
            {
                "name": "vertexData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                 vertexData\n            "
            },
            {
                "name": "vertexStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                                  vertexStride\n            "
            },
            {
                "name": "maxVertex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      maxVertex\n            "
            },
            {
                "name": "indexType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndexType",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndexType                                   indexType\n            "
            },
            {
                "name": "indexData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                 indexData\n            "
            },
            {
                "name": "transformData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                 transformData\n        "
            }
        ],
        "VkAccelerationStructureGeometryAabbsDataKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                           pNext\n            "
            },
            {
                "name": "data",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR         data\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                          stride\n        "
            }
        ],
        "VkAccelerationStructureGeometryInstancesDataKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                           pNext\n            "
            },
            {
                "name": "arrayOfPointers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                              arrayOfPointers\n            "
            },
            {
                "name": "data",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR         data\n        "
            }
        ],
        "VkAccelerationStructureGeometryDataKHR": [
            {
                "name": "triangles",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureGeometryTrianglesDataKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureGeometryTrianglesDataKHR triangles\n            "
            },
            {
                "name": "aabbs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureGeometryAabbsDataKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureGeometryAabbsDataKHR         aabbs\n            "
            },
            {
                "name": "instances",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureGeometryInstancesDataKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureGeometryInstancesDataKHR instances\n        "
            }
        ],
        "VkAccelerationStructureGeometryKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "geometryType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryTypeKHR                      geometryType\n            "
            },
            {
                "name": "geometry",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureGeometryDataKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureGeometryDataKHR geometry\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryFlagsKHR     flags\n        "
            }
        ],
        "VkAccelerationStructureBuildGeometryInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                        pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureTypeKHR                                     type\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuildAccelerationStructureFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuildAccelerationStructureFlagsKHR               flags\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuildAccelerationStructureModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuildAccelerationStructureModeKHR          mode\n            "
            },
            {
                "name": "srcAccelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR                   srcAccelerationStructure\n            "
            },
            {
                "name": "dstAccelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR                   dstAccelerationStructure\n            "
            },
            {
                "name": "geometryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                           geometryCount\n            "
            },
            {
                "name": "pGeometries",
                "const": true,
                "length": [
                    "geometryCount"
                ],
                "type": "VkAccelerationStructureGeometryKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAccelerationStructureGeometryKHR*    pGeometries\n            "
            },
            {
                "name": "ppGeometries",
                "const": true,
                "length": [
                    "1",
                    "geometryCount"
                ],
                "type": "VkAccelerationStructureGeometryKHR",
                "num_indirection": 2,
                "value": "",
                "header": "const VkAccelerationStructureGeometryKHR* const*   ppGeometries\n            "
            },
            {
                "name": "scratchData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressKHR                                           scratchData\n        "
            }
        ],
        "VkAccelerationStructureBuildRangeInfoKHR": [
            {
                "name": "primitiveCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                primitiveCount\n            "
            },
            {
                "name": "primitiveOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                primitiveOffset\n            "
            },
            {
                "name": "firstVertex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                firstVertex\n            "
            },
            {
                "name": "transformOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                transformOffset\n        "
            }
        ],
        "VkAccelerationStructureCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                             pNext\n            "
            },
            {
                "name": "createFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureCreateFlagsKHR   createFlags\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                                buffer\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                                            offsetSpecified in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                                            size\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureTypeKHR                          type\n            "
            },
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                         deviceAddress\n        "
            }
        ],
        "VkAabbPositionsKHR": [
            {
                "name": "minX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   minX\n            "
            },
            {
                "name": "minY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   minY\n            "
            },
            {
                "name": "minZ",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   minZ\n            "
            },
            {
                "name": "maxX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   maxX\n            "
            },
            {
                "name": "maxY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   maxY\n            "
            },
            {
                "name": "maxZ",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   maxZ\n        "
            }
        ],
        "VkAabbPositionsNV": [
            {
                "name": "minX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   minX\n            "
            },
            {
                "name": "minY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   minY\n            "
            },
            {
                "name": "minZ",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   minZ\n            "
            },
            {
                "name": "maxX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   maxX\n            "
            },
            {
                "name": "maxY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   maxY\n            "
            },
            {
                "name": "maxZ",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   maxZ\n        "
            }
        ],
        "VkTransformMatrixKHR": [
            {
                "name": "matrix",
                "const": false,
                "length": [
                    "4",
                    "3"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   matrix[3][4]\n        "
            }
        ],
        "VkTransformMatrixNV": [
            {
                "name": "matrix",
                "const": false,
                "length": [
                    "4",
                    "3"
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                                                   matrix[3][4]\n        "
            }
        ],
        "VkAccelerationStructureInstanceKHR": [
            {
                "name": "transform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkTransformMatrixKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkTransformMatrixKHR                                    transform\n            "
            },
            {
                "name": "instanceCustomIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceCustomIndex:24\n            "
            },
            {
                "name": "mask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                mask:8\n            "
            },
            {
                "name": "instanceShaderBindingTableRecordOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceShaderBindingTableRecordOffset:24\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryInstanceFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryInstanceFlagsKHR              flags:8\n            "
            },
            {
                "name": "accelerationStructureReference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                                accelerationStructureReference\n        "
            }
        ],
        "VkAccelerationStructureInstanceNV": [
            {
                "name": "transform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkTransformMatrixKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkTransformMatrixKHR                                    transform\n            "
            },
            {
                "name": "instanceCustomIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceCustomIndex:24\n            "
            },
            {
                "name": "mask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                mask:8\n            "
            },
            {
                "name": "instanceShaderBindingTableRecordOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceShaderBindingTableRecordOffset:24\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryInstanceFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryInstanceFlagsKHR              flags:8\n            "
            },
            {
                "name": "accelerationStructureReference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                                accelerationStructureReference\n        "
            }
        ],
        "VkAccelerationStructureDeviceAddressInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "accelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR                             accelerationStructure\n        "
            }
        ],
        "VkAccelerationStructureVersionInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "pVersionData",
                "const": true,
                "length": [
                    "2*VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint8_t*                    pVersionData\n        "
            }
        ],
        "VkCopyAccelerationStructureInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "src",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR                             src\n            "
            },
            {
                "name": "dst",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR                             dst\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCopyAccelerationStructureModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkCopyAccelerationStructureModeKHR                     mode\n        "
            }
        ],
        "VkCopyAccelerationStructureToMemoryInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "src",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR                             src\n            "
            },
            {
                "name": "dst",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressKHR                               dst\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCopyAccelerationStructureModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkCopyAccelerationStructureModeKHR                     mode\n        "
            }
        ],
        "VkCopyMemoryToAccelerationStructureInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "src",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                          src\n            "
            },
            {
                "name": "dst",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR                             dst\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCopyAccelerationStructureModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkCopyAccelerationStructureModeKHR                     mode\n        "
            }
        ],
        "VkRayTracingPipelineInterfaceCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "maxPipelineRayPayloadSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               maxPipelineRayPayloadSize\n            "
            },
            {
                "name": "maxPipelineRayHitAttributeSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               maxPipelineRayHitAttributeSize\n        "
            }
        ],
        "VkPipelineLibraryCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "libraryCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               libraryCount\n            "
            },
            {
                "name": "pLibraries",
                "const": true,
                "length": [
                    "libraryCount"
                ],
                "type": "VkPipeline",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPipeline*                   pLibraries\n        "
            }
        ],
        "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "extendedDynamicState",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           extendedDynamicState\n        "
            }
        ],
        "VkPhysicalDeviceExtendedDynamicState2FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "extendedDynamicState2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState2\n            "
            },
            {
                "name": "extendedDynamicState2LogicOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState2LogicOp\n            "
            },
            {
                "name": "extendedDynamicState2PatchControlPoints",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState2PatchControlPoints\n        "
            }
        ],
        "VkPhysicalDeviceExtendedDynamicState3FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "extendedDynamicState3TessellationDomainOrigin",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3TessellationDomainOrigin\n            "
            },
            {
                "name": "extendedDynamicState3DepthClampEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3DepthClampEnable\n            "
            },
            {
                "name": "extendedDynamicState3PolygonMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3PolygonMode\n            "
            },
            {
                "name": "extendedDynamicState3RasterizationSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3RasterizationSamples\n            "
            },
            {
                "name": "extendedDynamicState3SampleMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3SampleMask\n            "
            },
            {
                "name": "extendedDynamicState3AlphaToCoverageEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3AlphaToCoverageEnable\n            "
            },
            {
                "name": "extendedDynamicState3AlphaToOneEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3AlphaToOneEnable\n            "
            },
            {
                "name": "extendedDynamicState3LogicOpEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3LogicOpEnable\n            "
            },
            {
                "name": "extendedDynamicState3ColorBlendEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ColorBlendEnable\n            "
            },
            {
                "name": "extendedDynamicState3ColorBlendEquation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ColorBlendEquation\n            "
            },
            {
                "name": "extendedDynamicState3ColorWriteMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ColorWriteMask\n            "
            },
            {
                "name": "extendedDynamicState3RasterizationStream",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3RasterizationStream\n            "
            },
            {
                "name": "extendedDynamicState3ConservativeRasterizationMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ConservativeRasterizationMode\n            "
            },
            {
                "name": "extendedDynamicState3ExtraPrimitiveOverestimationSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ExtraPrimitiveOverestimationSize\n            "
            },
            {
                "name": "extendedDynamicState3DepthClipEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3DepthClipEnable\n            "
            },
            {
                "name": "extendedDynamicState3SampleLocationsEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3SampleLocationsEnable\n            "
            },
            {
                "name": "extendedDynamicState3ColorBlendAdvanced",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ColorBlendAdvanced\n            "
            },
            {
                "name": "extendedDynamicState3ProvokingVertexMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ProvokingVertexMode\n            "
            },
            {
                "name": "extendedDynamicState3LineRasterizationMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3LineRasterizationMode\n            "
            },
            {
                "name": "extendedDynamicState3LineStippleEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3LineStippleEnable\n            "
            },
            {
                "name": "extendedDynamicState3DepthClipNegativeOneToOne",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3DepthClipNegativeOneToOne\n            "
            },
            {
                "name": "extendedDynamicState3ViewportWScalingEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ViewportWScalingEnable\n            "
            },
            {
                "name": "extendedDynamicState3ViewportSwizzle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ViewportSwizzle\n            "
            },
            {
                "name": "extendedDynamicState3CoverageToColorEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3CoverageToColorEnable\n            "
            },
            {
                "name": "extendedDynamicState3CoverageToColorLocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3CoverageToColorLocation\n            "
            },
            {
                "name": "extendedDynamicState3CoverageModulationMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3CoverageModulationMode\n            "
            },
            {
                "name": "extendedDynamicState3CoverageModulationTableEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3CoverageModulationTableEnable\n            "
            },
            {
                "name": "extendedDynamicState3CoverageModulationTable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3CoverageModulationTable\n            "
            },
            {
                "name": "extendedDynamicState3CoverageReductionMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3CoverageReductionMode\n            "
            },
            {
                "name": "extendedDynamicState3RepresentativeFragmentTestEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3RepresentativeFragmentTestEnable\n            "
            },
            {
                "name": "extendedDynamicState3ShadingRateImageEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     extendedDynamicState3ShadingRateImageEnable\n        "
            }
        ],
        "VkPhysicalDeviceExtendedDynamicState3PropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "dynamicPrimitiveTopologyUnrestricted",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 dynamicPrimitiveTopologyUnrestricted\n        "
            }
        ],
        "VkColorBlendEquationEXT": [
            {
                "name": "srcColorBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor               srcColorBlendFactor\n            "
            },
            {
                "name": "dstColorBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor               dstColorBlendFactor\n            "
            },
            {
                "name": "colorBlendOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendOp                   colorBlendOp\n            "
            },
            {
                "name": "srcAlphaBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor               srcAlphaBlendFactor\n            "
            },
            {
                "name": "dstAlphaBlendFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendFactor",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendFactor               dstAlphaBlendFactor\n            "
            },
            {
                "name": "alphaBlendOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendOp                   alphaBlendOp\n        "
            }
        ],
        "VkColorBlendAdvancedEXT": [
            {
                "name": "advancedBlendOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendOp                   advancedBlendOp\n            "
            },
            {
                "name": "srcPremultiplied",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    srcPremultiplied\n            "
            },
            {
                "name": "dstPremultiplied",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    dstPremultiplied\n            "
            },
            {
                "name": "blendOverlap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlendOverlapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlendOverlapEXT           blendOverlap\n            "
            },
            {
                "name": "clampResults",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    clampResults\n        "
            }
        ],
        "VkRenderPassTransformBeginInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                           pNextPointer to next structure\n            "
            },
            {
                "name": "transform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagBitsKHR   transform\n        "
            }
        ],
        "VkCopyCommandTransformInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*     pNext\n            "
            },
            {
                "name": "transform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagBitsKHR   transform\n        "
            }
        ],
        "VkCommandBufferInheritanceRenderPassTransformInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                           pNextPointer to next structure\n            "
            },
            {
                "name": "transform",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSurfaceTransformFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSurfaceTransformFlagBitsKHR   transform\n            "
            },
            {
                "name": "renderArea",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRect2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkRect2D                        renderArea\n        "
            }
        ],
        "VkPhysicalDeviceDiagnosticsConfigFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "diagnosticsConfig",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       diagnosticsConfig\n        "
            }
        ],
        "VkDeviceDiagnosticsConfigCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                         pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceDiagnosticsConfigFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceDiagnosticsConfigFlagsNV    flags\n        "
            }
        ],
        "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*          pNext\n            "
            },
            {
                "name": "shaderZeroInitializeWorkgroupMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32       shaderZeroInitializeWorkgroupMemory\n        "
            }
        ],
        "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*          pNext\n            "
            },
            {
                "name": "shaderZeroInitializeWorkgroupMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32       shaderZeroInitializeWorkgroupMemory\n        "
            }
        ],
        "VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "shaderSubgroupUniformControlFlow",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 shaderSubgroupUniformControlFlow\n        "
            }
        ],
        "VkPhysicalDeviceRobustness2FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "robustBufferAccess2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           robustBufferAccess2\n            "
            },
            {
                "name": "robustImageAccess2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           robustImageAccess2\n            "
            },
            {
                "name": "nullDescriptor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           nullDescriptor\n        "
            }
        ],
        "VkPhysicalDeviceRobustness2PropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "robustStorageBufferAccessSizeAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize    robustStorageBufferAccessSizeAlignment\n            "
            },
            {
                "name": "robustUniformBufferAccessSizeAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize    robustUniformBufferAccessSizeAlignment\n        "
            }
        ],
        "VkPhysicalDeviceImageRobustnessFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "robustImageAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           robustImageAccess\n        "
            }
        ],
        "VkPhysicalDeviceImageRobustnessFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "robustImageAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           robustImageAccess\n        "
            }
        ],
        "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "workgroupMemoryExplicitLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           workgroupMemoryExplicitLayout\n            "
            },
            {
                "name": "workgroupMemoryExplicitLayoutScalarBlockLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           workgroupMemoryExplicitLayoutScalarBlockLayout\n            "
            },
            {
                "name": "workgroupMemoryExplicitLayout8BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           workgroupMemoryExplicitLayout8BitAccess\n            "
            },
            {
                "name": "workgroupMemoryExplicitLayout16BitAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           workgroupMemoryExplicitLayout16BitAccess\n        "
            }
        ],
        "VkPhysicalDevice4444FormatsFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "formatA4R4G4B4",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           formatA4R4G4B4\n            "
            },
            {
                "name": "formatA4B4G4R4",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           formatA4B4G4R4\n        "
            }
        ],
        "VkPhysicalDeviceSubpassShadingFeaturesHUAWEI": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "subpassShading",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           subpassShading\n        "
            }
        ],
        "VkPhysicalDeviceClusterCullingShaderFeaturesHUAWEI": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI",
                "header": "VkStructureType  sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*pNext\n            "
            },
            {
                "name": "clustercullingShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 clustercullingShader\n            "
            },
            {
                "name": "multiviewClusterCullingShader",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 multiviewClusterCullingShader\n       "
            }
        ],
        "VkBufferCopy2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_COPY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       srcOffsetSpecified in bytes\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       dstOffsetSpecified in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize sizeSpecified in bytes\n        "
            }
        ],
        "VkBufferCopy2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_COPY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       srcOffsetSpecified in bytes\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       dstOffsetSpecified in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize sizeSpecified in bytes\n        "
            }
        ],
        "VkImageCopy2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_COPY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           srcSubresource\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         srcOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           dstSubresource\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         dstOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                         extentSpecified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkImageCopy2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_COPY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           srcSubresource\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         srcOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           dstSubresource\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         dstOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                         extentSpecified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkImageBlit2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_BLIT_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           srcSubresource\n            "
            },
            {
                "name": "srcOffsets",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         srcOffsets[2]Specified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           dstSubresource\n            "
            },
            {
                "name": "dstOffsets",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         dstOffsets[2]Specified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkImageBlit2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_BLIT_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           srcSubresource\n            "
            },
            {
                "name": "srcOffsets",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         srcOffsets[2]Specified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           dstSubresource\n            "
            },
            {
                "name": "dstOffsets",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         dstOffsets[2]Specified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkBufferImageCopy2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "bufferOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       bufferOffsetSpecified in bytes\n            "
            },
            {
                "name": "bufferRowLength",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           bufferRowLengthSpecified in texels\n            "
            },
            {
                "name": "bufferImageHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           bufferImageHeight\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           imageSubresource\n            "
            },
            {
                "name": "imageOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         imageOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                         imageExtentSpecified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkBufferImageCopy2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "bufferOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       bufferOffsetSpecified in bytes\n            "
            },
            {
                "name": "bufferRowLength",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           bufferRowLengthSpecified in texels\n            "
            },
            {
                "name": "bufferImageHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           bufferImageHeight\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           imageSubresource\n            "
            },
            {
                "name": "imageOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         imageOffsetSpecified in pixels for both compressed and uncompressed images\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                         imageExtentSpecified in pixels for both compressed and uncompressed images\n        "
            }
        ],
        "VkImageResolve2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           srcSubresource\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         srcOffset\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           dstSubresource\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         dstOffset\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                         extent\n        "
            }
        ],
        "VkImageResolve2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           srcSubresource\n            "
            },
            {
                "name": "srcOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         srcOffset\n            "
            },
            {
                "name": "dstSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers           dstSubresource\n            "
            },
            {
                "name": "dstOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                         dstOffset\n            "
            },
            {
                "name": "extent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                         extent\n        "
            }
        ],
        "VkCopyBufferInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                           srcBuffer\n            "
            },
            {
                "name": "dstBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                           dstBuffer\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkBufferCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferCopy2* pRegions\n        "
            }
        ],
        "VkCopyBufferInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                           srcBuffer\n            "
            },
            {
                "name": "dstBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                           dstBuffer\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkBufferCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferCopy2* pRegions\n        "
            }
        ],
        "VkCopyImageInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                            srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                      srcImageLayout\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                            dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                      dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageCopy2* pRegions\n        "
            }
        ],
        "VkCopyImageInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                            srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                      srcImageLayout\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                            dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                      dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageCopy2* pRegions\n        "
            }
        ],
        "VkBlitImageInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          srcImageLayout\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageBlit2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageBlit2*  pRegions\n            "
            },
            {
                "name": "filter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFilter",
                "num_indirection": 0,
                "value": "",
                "header": "VkFilter                               filter\n        "
            }
        ],
        "VkBlitImageInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          srcImageLayout\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageBlit2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageBlit2*  pRegions\n            "
            },
            {
                "name": "filter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFilter",
                "num_indirection": 0,
                "value": "",
                "header": "VkFilter                               filter\n        "
            }
        ],
        "VkCopyBufferToImageInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                 pNext\n            "
            },
            {
                "name": "srcBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                    srcBuffer\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                     dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                               dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkBufferImageCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferImageCopy2* pRegions\n        "
            }
        ],
        "VkCopyBufferToImageInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                 pNext\n            "
            },
            {
                "name": "srcBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                    srcBuffer\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                     dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                               dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkBufferImageCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferImageCopy2* pRegions\n        "
            }
        ],
        "VkCopyImageToBufferInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                   pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                       srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                 srcImageLayout\n            "
            },
            {
                "name": "dstBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                      dstBuffer\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkBufferImageCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferImageCopy2*   pRegions\n        "
            }
        ],
        "VkCopyImageToBufferInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                   pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                       srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                 srcImageLayout\n            "
            },
            {
                "name": "dstBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                      dstBuffer\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkBufferImageCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferImageCopy2*   pRegions\n        "
            }
        ],
        "VkResolveImageInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              srcImageLayout\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageResolve2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageResolve2*   pRegions\n        "
            }
        ],
        "VkResolveImageInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              srcImageLayout\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageResolve2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageResolve2*   pRegions\n        "
            }
        ],
        "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "shaderImageInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderImageInt64Atomics\n            "
            },
            {
                "name": "sparseImageInt64Atomics",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            sparseImageInt64Atomics\n        "
            }
        ],
        "VkFragmentShadingRateAttachmentInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "pFragmentShadingRateAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkAttachmentReference2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkAttachmentReference2* pFragmentShadingRateAttachment\n            "
            },
            {
                "name": "shadingRateAttachmentTexelSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                 shadingRateAttachmentTexelSize\n        "
            }
        ],
        "VkPipelineFragmentShadingRateStateCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                pNext\n            "
            },
            {
                "name": "fragmentSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                                 fragmentSize\n            "
            },
            {
                "name": "combinerOps",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkFragmentShadingRateCombinerOpKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkFragmentShadingRateCombinerOpKHR         combinerOps[2]\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShadingRateFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "pipelineFragmentShadingRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           pipelineFragmentShadingRate\n            "
            },
            {
                "name": "primitiveFragmentShadingRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           primitiveFragmentShadingRate\n            "
            },
            {
                "name": "attachmentFragmentShadingRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32           attachmentFragmentShadingRate\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShadingRatePropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "minFragmentShadingRateAttachmentTexelSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D             minFragmentShadingRateAttachmentTexelSize\n            "
            },
            {
                "name": "maxFragmentShadingRateAttachmentTexelSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D             maxFragmentShadingRateAttachmentTexelSize\n            "
            },
            {
                "name": "maxFragmentShadingRateAttachmentTexelSizeAspectRatio",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                maxFragmentShadingRateAttachmentTexelSizeAspectRatio\n            "
            },
            {
                "name": "primitiveFragmentShadingRateWithMultipleViewports",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               primitiveFragmentShadingRateWithMultipleViewports\n            "
            },
            {
                "name": "layeredShadingRateAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               layeredShadingRateAttachments\n            "
            },
            {
                "name": "fragmentShadingRateNonTrivialCombinerOps",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateNonTrivialCombinerOps\n            "
            },
            {
                "name": "maxFragmentSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D             maxFragmentSize\n            "
            },
            {
                "name": "maxFragmentSizeAspectRatio",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                maxFragmentSizeAspectRatio\n            "
            },
            {
                "name": "maxFragmentShadingRateCoverageSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                   maxFragmentShadingRateCoverageSamples\n            "
            },
            {
                "name": "maxFragmentShadingRateRasterizationSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits  maxFragmentShadingRateRasterizationSamples\n            "
            },
            {
                "name": "fragmentShadingRateWithShaderDepthStencilWrites",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateWithShaderDepthStencilWrites\n            "
            },
            {
                "name": "fragmentShadingRateWithSampleMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateWithSampleMask\n            "
            },
            {
                "name": "fragmentShadingRateWithShaderSampleMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateWithShaderSampleMask\n            "
            },
            {
                "name": "fragmentShadingRateWithConservativeRasterization",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateWithConservativeRasterization\n            "
            },
            {
                "name": "fragmentShadingRateWithFragmentShaderInterlock",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateWithFragmentShaderInterlock\n            "
            },
            {
                "name": "fragmentShadingRateWithCustomSampleLocations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateWithCustomSampleLocations\n            "
            },
            {
                "name": "fragmentShadingRateStrictMultiplyCombiner",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShadingRateStrictMultiplyCombiner\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShadingRateKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "sampleCounts",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlags sampleCounts\n            "
            },
            {
                "name": "fragmentSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D         fragmentSize\n        "
            }
        ],
        "VkPhysicalDeviceShaderTerminateInvocationFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "shaderTerminateInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                       shaderTerminateInvocation\n        "
            }
        ],
        "VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "shaderTerminateInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                       shaderTerminateInvocation\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "fragmentShadingRateEnums",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           fragmentShadingRateEnums\n            "
            },
            {
                "name": "supersampleFragmentShadingRates",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           supersampleFragmentShadingRates\n            "
            },
            {
                "name": "noInvocationFragmentShadingRates",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           noInvocationFragmentShadingRates\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                              pNext\n            "
            },
            {
                "name": "maxFragmentShadingRateInvocationCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits              maxFragmentShadingRateInvocationCount\n        "
            }
        ],
        "VkPipelineFragmentShadingRateEnumStateCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "shadingRateType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFragmentShadingRateTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkFragmentShadingRateTypeNV        shadingRateType\n            "
            },
            {
                "name": "shadingRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFragmentShadingRateNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkFragmentShadingRateNV            shadingRate\n            "
            },
            {
                "name": "combinerOps",
                "const": false,
                "length": [
                    "2"
                ],
                "type": "VkFragmentShadingRateCombinerOpKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkFragmentShadingRateCombinerOpKHR combinerOps[2]\n        "
            }
        ],
        "VkAccelerationStructureBuildSizesInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "accelerationStructureSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       accelerationStructureSize\n            "
            },
            {
                "name": "updateScratchSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       updateScratchSize\n            "
            },
            {
                "name": "buildScratchSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       buildScratchSize\n        "
            }
        ],
        "VkPhysicalDeviceImage2DViewOf3DFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                     pNext\n            "
            },
            {
                "name": "image2DViewOf3D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        image2DViewOf3D\n            "
            },
            {
                "name": "sampler2DViewOf3D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        sampler2DViewOf3D\n        "
            }
        ],
        "VkPhysicalDeviceImageSlicedViewOf3DFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                     pNext\n            "
            },
            {
                "name": "imageSlicedViewOf3D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        imageSlicedViewOf3D\n        "
            }
        ],
        "VkPhysicalDeviceAttachmentFeedbackLoopDynamicStateFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "attachmentFeedbackLoopDynamicState",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        attachmentFeedbackLoopDynamicState\n        "
            }
        ],
        "VkPhysicalDeviceMutableDescriptorTypeFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "mutableDescriptorType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        mutableDescriptorType\n        "
            }
        ],
        "VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "mutableDescriptorType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        mutableDescriptorType\n        "
            }
        ],
        "VkMutableDescriptorTypeListEXT": [
            {
                "name": "descriptorTypeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          descriptorTypeCount\n            "
            },
            {
                "name": "pDescriptorTypes",
                "const": true,
                "length": [
                    "descriptorTypeCount"
                ],
                "type": "VkDescriptorType",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorType* pDescriptorTypes\n        "
            }
        ],
        "VkMutableDescriptorTypeListVALVE": [
            {
                "name": "descriptorTypeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          descriptorTypeCount\n            "
            },
            {
                "name": "pDescriptorTypes",
                "const": true,
                "length": [
                    "descriptorTypeCount"
                ],
                "type": "VkDescriptorType",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorType* pDescriptorTypes\n        "
            }
        ],
        "VkMutableDescriptorTypeCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                       pNext\n            "
            },
            {
                "name": "mutableDescriptorTypeListCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          mutableDescriptorTypeListCount\n            "
            },
            {
                "name": "pMutableDescriptorTypeLists",
                "const": true,
                "length": [
                    "mutableDescriptorTypeListCount"
                ],
                "type": "VkMutableDescriptorTypeListEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkMutableDescriptorTypeListEXT* pMutableDescriptorTypeLists\n        "
            }
        ],
        "VkMutableDescriptorTypeCreateInfoVALVE": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                       pNext\n            "
            },
            {
                "name": "mutableDescriptorTypeListCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          mutableDescriptorTypeListCount\n            "
            },
            {
                "name": "pMutableDescriptorTypeLists",
                "const": true,
                "length": [
                    "mutableDescriptorTypeListCount"
                ],
                "type": "VkMutableDescriptorTypeListEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkMutableDescriptorTypeListEXT* pMutableDescriptorTypeLists\n        "
            }
        ],
        "VkPhysicalDeviceDepthClipControlFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "depthClipControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                    depthClipControl\n        "
            }
        ],
        "VkPipelineViewportDepthClipControlCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "negativeOneToOne",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                    negativeOneToOne\n        "
            }
        ],
        "VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "vertexInputDynamicState",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           vertexInputDynamicState\n        "
            }
        ],
        "VkPhysicalDeviceExternalMemoryRDMAFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "externalMemoryRDMA",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           externalMemoryRDMA\n        "
            }
        ],
        "VkVertexInputBindingDescription2EXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "binding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       binding\n            "
            },
            {
                "name": "stride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       stride\n            "
            },
            {
                "name": "inputRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVertexInputRate",
                "num_indirection": 0,
                "value": "",
                "header": "VkVertexInputRate              inputRate\n            "
            },
            {
                "name": "divisor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       divisor\n        "
            }
        ],
        "VkVertexInputAttributeDescription2EXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "location",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       locationlocation of the shader vertex attrib\n            "
            },
            {
                "name": "binding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       bindingVertex buffer binding id\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                       formatformat of source data\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       offsetOffset of first element in bytes from base of vertex\n        "
            }
        ],
        "VkPhysicalDeviceColorWriteEnableFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "colorWriteEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     colorWriteEnable\n        "
            }
        ],
        "VkPipelineColorWriteCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "attachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               attachmentCount# of pAttachments\n            "
            },
            {
                "name": "pColorWriteEnables",
                "const": true,
                "length": [
                    "attachmentCount"
                ],
                "type": "VkBool32",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBool32*  pColorWriteEnables\n        "
            }
        ],
        "VkMemoryBarrier2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  srcStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         srcAccessMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  dstStageMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         dstAccessMask\n        "
            }
        ],
        "VkMemoryBarrier2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  srcStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         srcAccessMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  dstStageMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         dstAccessMask\n        "
            }
        ],
        "VkImageMemoryBarrier2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  srcStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         srcAccessMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  dstStageMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         dstAccessMask\n            "
            },
            {
                "name": "oldLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          oldLayout\n            "
            },
            {
                "name": "newLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          newLayout\n            "
            },
            {
                "name": "srcQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               srcQueueFamilyIndex\n            "
            },
            {
                "name": "dstQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               dstQueueFamilyIndex\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                image\n            "
            },
            {
                "name": "subresourceRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceRange",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceRange                subresourceRange\n        "
            }
        ],
        "VkImageMemoryBarrier2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  srcStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         srcAccessMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  dstStageMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         dstAccessMask\n            "
            },
            {
                "name": "oldLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          oldLayout\n            "
            },
            {
                "name": "newLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                          newLayout\n            "
            },
            {
                "name": "srcQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               srcQueueFamilyIndex\n            "
            },
            {
                "name": "dstQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               dstQueueFamilyIndex\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                image\n            "
            },
            {
                "name": "subresourceRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceRange",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceRange                subresourceRange\n        "
            }
        ],
        "VkBufferMemoryBarrier2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  srcStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         srcAccessMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  dstStageMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         dstAccessMask\n            "
            },
            {
                "name": "srcQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               srcQueueFamilyIndex\n            "
            },
            {
                "name": "dstQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               dstQueueFamilyIndex\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                               buffer\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                           offset\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                           size\n        "
            }
        ],
        "VkBufferMemoryBarrier2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "srcStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  srcStageMask\n            "
            },
            {
                "name": "srcAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         srcAccessMask\n            "
            },
            {
                "name": "dstStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2  dstStageMask\n            "
            },
            {
                "name": "dstAccessMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccessFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccessFlags2         dstAccessMask\n            "
            },
            {
                "name": "srcQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               srcQueueFamilyIndex\n            "
            },
            {
                "name": "dstQueueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               dstQueueFamilyIndex\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                               buffer\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                           offset\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                           size\n        "
            }
        ],
        "VkDependencyInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEPENDENCY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                  pNext\n            "
            },
            {
                "name": "dependencyFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDependencyFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDependencyFlags                            dependencyFlags\n            "
            },
            {
                "name": "memoryBarrierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                     memoryBarrierCount\n            "
            },
            {
                "name": "pMemoryBarriers",
                "const": true,
                "length": [
                    "memoryBarrierCount"
                ],
                "type": "VkMemoryBarrier2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkMemoryBarrier2*             pMemoryBarriers\n            "
            },
            {
                "name": "bufferMemoryBarrierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                     bufferMemoryBarrierCount\n            "
            },
            {
                "name": "pBufferMemoryBarriers",
                "const": true,
                "length": [
                    "bufferMemoryBarrierCount"
                ],
                "type": "VkBufferMemoryBarrier2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferMemoryBarrier2* pBufferMemoryBarriers\n            "
            },
            {
                "name": "imageMemoryBarrierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                     imageMemoryBarrierCount\n            "
            },
            {
                "name": "pImageMemoryBarriers",
                "const": true,
                "length": [
                    "imageMemoryBarrierCount"
                ],
                "type": "VkImageMemoryBarrier2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageMemoryBarrier2*   pImageMemoryBarriers\n        "
            }
        ],
        "VkDependencyInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEPENDENCY_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                  pNext\n            "
            },
            {
                "name": "dependencyFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDependencyFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkDependencyFlags                            dependencyFlags\n            "
            },
            {
                "name": "memoryBarrierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                     memoryBarrierCount\n            "
            },
            {
                "name": "pMemoryBarriers",
                "const": true,
                "length": [
                    "memoryBarrierCount"
                ],
                "type": "VkMemoryBarrier2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkMemoryBarrier2*             pMemoryBarriers\n            "
            },
            {
                "name": "bufferMemoryBarrierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                     bufferMemoryBarrierCount\n            "
            },
            {
                "name": "pBufferMemoryBarriers",
                "const": true,
                "length": [
                    "bufferMemoryBarrierCount"
                ],
                "type": "VkBufferMemoryBarrier2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBufferMemoryBarrier2* pBufferMemoryBarriers\n            "
            },
            {
                "name": "imageMemoryBarrierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                     imageMemoryBarrierCount\n            "
            },
            {
                "name": "pImageMemoryBarriers",
                "const": true,
                "length": [
                    "imageMemoryBarrierCount"
                ],
                "type": "VkImageMemoryBarrier2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageMemoryBarrier2*   pImageMemoryBarriers\n        "
            }
        ],
        "VkSemaphoreSubmitInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO",
                "header": "VkStructureType           sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                pNext\n            "
            },
            {
                "name": "semaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphore",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphore                                                                semaphore\n            "
            },
            {
                "name": "value",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                                                   value\n            "
            },
            {
                "name": "stageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2                                      stageMask\n            "
            },
            {
                "name": "deviceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   deviceIndex\n        "
            }
        ],
        "VkSemaphoreSubmitInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO",
                "header": "VkStructureType           sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                pNext\n            "
            },
            {
                "name": "semaphore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSemaphore",
                "num_indirection": 0,
                "value": "",
                "header": "VkSemaphore                                                                semaphore\n            "
            },
            {
                "name": "value",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                                                   value\n            "
            },
            {
                "name": "stageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2                                      stageMask\n            "
            },
            {
                "name": "deviceIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   deviceIndex\n        "
            }
        ],
        "VkCommandBufferSubmitInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO",
                "header": "VkStructureType      sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                pNext\n            "
            },
            {
                "name": "commandBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCommandBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkCommandBuffer                                                            commandBuffer\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   deviceMask\n        "
            }
        ],
        "VkCommandBufferSubmitInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO",
                "header": "VkStructureType      sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                pNext\n            "
            },
            {
                "name": "commandBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCommandBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkCommandBuffer                                                            commandBuffer\n            "
            },
            {
                "name": "deviceMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   deviceMask\n        "
            }
        ],
        "VkSubmitInfo2": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBMIT_INFO_2",
                "header": "VkStructureType                   sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubmitFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubmitFlags                                              flags\n            "
            },
            {
                "name": "waitSemaphoreInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   waitSemaphoreInfoCount\n            "
            },
            {
                "name": "pWaitSemaphoreInfos",
                "const": true,
                "length": [
                    "waitSemaphoreInfoCount"
                ],
                "type": "VkSemaphoreSubmitInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphoreSubmitInfo*                  pWaitSemaphoreInfos\n            "
            },
            {
                "name": "commandBufferInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   commandBufferInfoCount\n            "
            },
            {
                "name": "pCommandBufferInfos",
                "const": true,
                "length": [
                    "commandBufferInfoCount"
                ],
                "type": "VkCommandBufferSubmitInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkCommandBufferSubmitInfo*              pCommandBufferInfos\n            "
            },
            {
                "name": "signalSemaphoreInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   signalSemaphoreInfoCount\n            "
            },
            {
                "name": "pSignalSemaphoreInfos",
                "const": true,
                "length": [
                    "signalSemaphoreInfoCount"
                ],
                "type": "VkSemaphoreSubmitInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphoreSubmitInfo*                pSignalSemaphoreInfos\n        "
            }
        ],
        "VkSubmitInfo2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBMIT_INFO_2",
                "header": "VkStructureType                   sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubmitFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubmitFlags                                              flags\n            "
            },
            {
                "name": "waitSemaphoreInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   waitSemaphoreInfoCount\n            "
            },
            {
                "name": "pWaitSemaphoreInfos",
                "const": true,
                "length": [
                    "waitSemaphoreInfoCount"
                ],
                "type": "VkSemaphoreSubmitInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphoreSubmitInfo*                  pWaitSemaphoreInfos\n            "
            },
            {
                "name": "commandBufferInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   commandBufferInfoCount\n            "
            },
            {
                "name": "pCommandBufferInfos",
                "const": true,
                "length": [
                    "commandBufferInfoCount"
                ],
                "type": "VkCommandBufferSubmitInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkCommandBufferSubmitInfo*              pCommandBufferInfos\n            "
            },
            {
                "name": "signalSemaphoreInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   signalSemaphoreInfoCount\n            "
            },
            {
                "name": "pSignalSemaphoreInfos",
                "const": true,
                "length": [
                    "signalSemaphoreInfoCount"
                ],
                "type": "VkSemaphoreSubmitInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSemaphoreSubmitInfo*                pSignalSemaphoreInfos\n        "
            }
        ],
        "VkQueueFamilyCheckpointProperties2NV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*           pNext\n            "
            },
            {
                "name": "checkpointExecutionStageMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2 checkpointExecutionStageMask\n        "
            }
        ],
        "VkCheckpointData2NV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "stage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineStageFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineStageFlags2   stage\n            "
            },
            {
                "name": "pCheckpointMarker",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void* pCheckpointMarker\n        "
            }
        ],
        "VkPhysicalDeviceSynchronization2Features": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "synchronization2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           synchronization2\n        "
            }
        ],
        "VkPhysicalDeviceSynchronization2FeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "synchronization2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           synchronization2\n        "
            }
        ],
        "VkPhysicalDeviceHostImageCopyFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "hostImageCopy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     hostImageCopy\n        "
            }
        ],
        "VkPhysicalDeviceHostImageCopyPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                        pNext\n            "
            },
            {
                "name": "copySrcLayoutCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                  copySrcLayoutCount\n            "
            },
            {
                "name": "pCopySrcLayouts",
                "const": false,
                "length": [
                    "copySrcLayoutCount"
                ],
                "type": "VkImageLayout",
                "num_indirection": 1,
                "value": "",
                "header": "VkImageLayout*   pCopySrcLayouts\n            "
            },
            {
                "name": "copyDstLayoutCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                  copyDstLayoutCount\n            "
            },
            {
                "name": "pCopyDstLayouts",
                "const": false,
                "length": [
                    "copyDstLayoutCount"
                ],
                "type": "VkImageLayout",
                "num_indirection": 1,
                "value": "",
                "header": "VkImageLayout*   pCopyDstLayouts\n            "
            },
            {
                "name": "optimalTilingLayoutUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                                   optimalTilingLayoutUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "identicalMemoryTypeRequirements",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                 identicalMemoryTypeRequirements\n        "
            }
        ],
        "VkMemoryToImageCopyEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "pHostPointer",
                "const": true,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*                                    pHostPointer\n            "
            },
            {
                "name": "memoryRowLength",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       memoryRowLengthSpecified in texels\n            "
            },
            {
                "name": "memoryImageHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       memoryImageHeight\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers                       imageSubresource\n            "
            },
            {
                "name": "imageOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                                     imageOffset\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                                     imageExtent\n        "
            }
        ],
        "VkImageToMemoryCopyEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "pHostPointer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*                                          pHostPointer\n            "
            },
            {
                "name": "memoryRowLength",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       memoryRowLengthSpecified in texels\n            "
            },
            {
                "name": "memoryImageHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       memoryImageHeight\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceLayers",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceLayers                       imageSubresource\n            "
            },
            {
                "name": "imageOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset3D                                     imageOffset\n            "
            },
            {
                "name": "imageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                                     imageExtent\n        "
            }
        ],
        "VkCopyMemoryToImageInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkHostImageCopyFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkHostImageCopyFlagsEXT    flags\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkMemoryToImageCopyEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkMemoryToImageCopyEXT* pRegions\n        "
            }
        ],
        "VkCopyImageToMemoryInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkHostImageCopyFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkHostImageCopyFlagsEXT    flags\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              srcImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageToMemoryCopyEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageToMemoryCopyEXT* pRegions\n        "
            }
        ],
        "VkCopyImageToImageInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkHostImageCopyFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkHostImageCopyFlagsEXT    flags\n            "
            },
            {
                "name": "srcImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    srcImage\n            "
            },
            {
                "name": "srcImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              srcImageLayout\n            "
            },
            {
                "name": "dstImage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                                    dstImage\n            "
            },
            {
                "name": "dstImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                              dstImageLayout\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkImageCopy2",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageCopy2*      pRegions\n        "
            }
        ],
        "VkHostImageLayoutTransitionInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*  pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                      image\n            "
            },
            {
                "name": "oldLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                oldLayout\n            "
            },
            {
                "name": "newLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                newLayout\n            "
            },
            {
                "name": "subresourceRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresourceRange",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresourceRange      subresourceRange\n        "
            }
        ],
        "VkSubresourceHostMemcpySizeEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                 sizeSpecified in bytes\n        "
            }
        ],
        "VkHostImageCopyDevicePerformanceQueryEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "optimalDeviceAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     optimalDeviceAccessSpecifies if device access is optimal\n            "
            },
            {
                "name": "identicalMemoryLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     identicalMemoryLayoutSpecifies if memory layout is identical\n        "
            }
        ],
        "VkPhysicalDevicePrimitivesGeneratedQueryFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "primitivesGeneratedQuery",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               primitivesGeneratedQuery\n            "
            },
            {
                "name": "primitivesGeneratedQueryWithRasterizerDiscard",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               primitivesGeneratedQueryWithRasterizerDiscard\n            "
            },
            {
                "name": "primitivesGeneratedQueryWithNonZeroStreams",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               primitivesGeneratedQueryWithNonZeroStreams\n        "
            }
        ],
        "VkPhysicalDeviceLegacyDitheringFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                  pNext\n            "
            },
            {
                "name": "legacyDithering",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               legacyDithering\n        "
            }
        ],
        "VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*   pNext\n            "
            },
            {
                "name": "multisampledRenderToSingleSampled",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                multisampledRenderToSingleSampled\n        "
            }
        ],
        "VkSubpassResolvePerformanceQueryEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "optimal",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 optimal\n        "
            }
        ],
        "VkMultisampledRenderToSingleSampledInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*   pNext\n            "
            },
            {
                "name": "multisampledRenderToSingleSampledEnable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                      multisampledRenderToSingleSampledEnable\n            "
            },
            {
                "name": "rasterizationSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits         rasterizationSamples\n        "
            }
        ],
        "VkPhysicalDevicePipelineProtectedAccessFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "pipelineProtectedAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               pipelineProtectedAccess\n        "
            }
        ],
        "VkQueueFamilyVideoPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_VIDEO_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                              pNext\n            "
            },
            {
                "name": "videoCodecOperations",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoCodecOperationFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoCodecOperationFlagsKHR  videoCodecOperations\n        "
            }
        ],
        "VkQueueFamilyQueryResultStatusPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                              pNext\n            "
            },
            {
                "name": "queryResultStatusSupport",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                           queryResultStatusSupport\n        "
            }
        ],
        "VkVideoProfileListInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                   pNext\n            "
            },
            {
                "name": "profileCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      profileCount\n            "
            },
            {
                "name": "pProfiles",
                "const": true,
                "length": [
                    "profileCount"
                ],
                "type": "VkVideoProfileInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoProfileInfoKHR*               pProfiles\n        "
            }
        ],
        "VkPhysicalDeviceVideoFormatInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                          pNext\n            "
            },
            {
                "name": "imageUsage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                                    imageUsage\n        "
            }
        ],
        "VkVideoFormatPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                  pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                               format\n            "
            },
            {
                "name": "componentMapping",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentMapping",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentMapping                                                     componentMapping\n            "
            },
            {
                "name": "imageCreateFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCreateFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCreateFlags                                                     imageCreateFlags\n            "
            },
            {
                "name": "imageType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageType",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageType                                                            imageType\n            "
            },
            {
                "name": "imageTiling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageTiling",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageTiling                                                          imageTiling\n            "
            },
            {
                "name": "imageUsageFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageUsageFlags                                                      imageUsageFlags\n        "
            }
        ],
        "VkVideoProfileInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "videoCodecOperation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoCodecOperationFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoCodecOperationFlagBitsKHR   videoCodecOperation\n            "
            },
            {
                "name": "chromaSubsampling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoChromaSubsamplingFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoChromaSubsamplingFlagsKHR   chromaSubsampling\n            "
            },
            {
                "name": "lumaBitDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoComponentBitDepthFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoComponentBitDepthFlagsKHR   lumaBitDepth\n            "
            },
            {
                "name": "chromaBitDepth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoComponentBitDepthFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoComponentBitDepthFlagsKHR chromaBitDepth\n        "
            }
        ],
        "VkVideoCapabilitiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoCapabilityFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoCapabilityFlagsKHR        flags\n            "
            },
            {
                "name": "minBitstreamBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     minBitstreamBufferOffsetAlignment\n            "
            },
            {
                "name": "minBitstreamBufferSizeAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     minBitstreamBufferSizeAlignment\n            "
            },
            {
                "name": "pictureAccessGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       pictureAccessGranularity\n            "
            },
            {
                "name": "minCodedExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       minCodedExtent\n            "
            },
            {
                "name": "maxCodedExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       maxCodedExtent\n            "
            },
            {
                "name": "maxDpbSlots",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxDpbSlots\n            "
            },
            {
                "name": "maxActiveReferencePictures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxActiveReferencePictures\n            "
            },
            {
                "name": "stdHeaderVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtensionProperties",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtensionProperties            stdHeaderVersion\n        "
            }
        ],
        "VkVideoSessionMemoryRequirementsKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*             pNext\n            "
            },
            {
                "name": "memoryBindIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          memoryBindIndex\n            "
            },
            {
                "name": "memoryRequirements",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryRequirements",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryRequirements              memoryRequirements\n        "
            }
        ],
        "VkBindVideoSessionMemoryInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*       pNext\n            "
            },
            {
                "name": "memoryBindIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          memoryBindIndex\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                    memory\n            "
            },
            {
                "name": "memoryOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                      memoryOffset\n            "
            },
            {
                "name": "memorySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                      memorySize\n        "
            }
        ],
        "VkVideoPictureResourceInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "codedOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D         codedOffsetThe offset to be used for the picture resource, currently only used in field mode\n            "
            },
            {
                "name": "codedExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D         codedExtentThe extent to be used for the picture resource\n            "
            },
            {
                "name": "baseArrayLayer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t           baseArrayLayerThe first array layer to be accessed for the Decode or Encode Operations\n            "
            },
            {
                "name": "imageViewBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView        imageViewBindingThe ImageView binding of the resource\n        "
            }
        ],
        "VkVideoReferenceSlotInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "slotIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int32_t",
                "num_indirection": 0,
                "value": "",
                "header": "int32_t                            slotIndexThe reference slot index\n            "
            },
            {
                "name": "pPictureResource",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkVideoPictureResourceInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoPictureResourceInfoKHR* pPictureResourceThe reference picture resource\n        "
            }
        ],
        "VkVideoDecodeCapabilitiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                 pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoDecodeCapabilityFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoDecodeCapabilityFlagsKHR flags\n        "
            }
        ],
        "VkVideoDecodeUsageInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "videoUsageHints",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoDecodeUsageFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoDecodeUsageFlagsKHR videoUsageHints\n        "
            }
        ],
        "VkVideoDecodeInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoDecodeFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoDecodeFlagsKHR  flags\n            "
            },
            {
                "name": "srcBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                               srcBuffer\n            "
            },
            {
                "name": "srcBufferOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                           srcBufferOffset\n            "
            },
            {
                "name": "srcBufferRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                           srcBufferRange\n            "
            },
            {
                "name": "dstPictureResource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoPictureResourceInfoKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoPictureResourceInfoKHR          dstPictureResource\n            "
            },
            {
                "name": "pSetupReferenceSlot",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkVideoReferenceSlotInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoReferenceSlotInfoKHR* pSetupReferenceSlot\n            "
            },
            {
                "name": "referenceSlotCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               referenceSlotCount\n            "
            },
            {
                "name": "pReferenceSlots",
                "const": true,
                "length": [
                    "referenceSlotCount"
                ],
                "type": "VkVideoReferenceSlotInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoReferenceSlotInfoKHR* pReferenceSlots\n        "
            }
        ],
        "VkVideoDecodeH264ProfileInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                  pNext\n            "
            },
            {
                "name": "stdProfileIdc",
                "const": false,
                "length": [
                    ""
                ],
                "type": "StdVideoH264ProfileIdc",
                "num_indirection": 0,
                "value": "",
                "header": "StdVideoH264ProfileIdc                                       stdProfileIdc\n            "
            },
            {
                "name": "pictureLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoDecodeH264PictureLayoutFlagBitsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoDecodeH264PictureLayoutFlagBitsKHR    pictureLayout\n        "
            }
        ],
        "VkVideoDecodeH264CapabilitiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "maxLevelIdc",
                "const": false,
                "length": [
                    ""
                ],
                "type": "StdVideoH264LevelIdc",
                "num_indirection": 0,
                "value": "",
                "header": "StdVideoH264LevelIdc             maxLevelIdc\n            "
            },
            {
                "name": "fieldOffsetGranularity",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                       fieldOffsetGranularity\n        "
            }
        ],
        "VkVideoDecodeH264SessionParametersAddInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                    pNext\n            "
            },
            {
                "name": "stdSPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       stdSPSCount\n            "
            },
            {
                "name": "pStdSPSs",
                "const": true,
                "length": [
                    "stdSPSCount"
                ],
                "type": "StdVideoH264SequenceParameterSet",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoH264SequenceParameterSet*      pStdSPSs\n            "
            },
            {
                "name": "stdPPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       stdPPSCount\n            "
            },
            {
                "name": "pStdPPSs",
                "const": true,
                "length": [
                    "stdPPSCount"
                ],
                "type": "StdVideoH264PictureParameterSet",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoH264PictureParameterSet*       pStdPPSsList of Picture Parameters associated with the spsStd, above\n        "
            }
        ],
        "VkVideoDecodeH264SessionParametersCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                               pNext\n            "
            },
            {
                "name": "maxStdSPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                  maxStdSPSCount\n            "
            },
            {
                "name": "maxStdPPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                  maxStdPPSCount\n            "
            },
            {
                "name": "pParametersAddInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkVideoDecodeH264SessionParametersAddInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoDecodeH264SessionParametersAddInfoKHR*       pParametersAddInfo\n        "
            }
        ],
        "VkVideoDecodeH264PictureInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*           pNext\n            "
            },
            {
                "name": "pStdPictureInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "StdVideoDecodeH264PictureInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoDecodeH264PictureInfo*  pStdPictureInfo\n            "
            },
            {
                "name": "sliceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                              sliceCount\n            "
            },
            {
                "name": "pSliceOffsets",
                "const": true,
                "length": [
                    "sliceCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*      pSliceOffsets\n        "
            }
        ],
        "VkVideoDecodeH264DpbSlotInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "pStdReferenceInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "StdVideoDecodeH264ReferenceInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoDecodeH264ReferenceInfo* pStdReferenceInfo\n        "
            }
        ],
        "VkVideoDecodeH265ProfileInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "stdProfileIdc",
                "const": false,
                "length": [
                    ""
                ],
                "type": "StdVideoH265ProfileIdc",
                "num_indirection": 0,
                "value": "",
                "header": "StdVideoH265ProfileIdc         stdProfileIdc\n        "
            }
        ],
        "VkVideoDecodeH265CapabilitiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxLevelIdc",
                "const": false,
                "length": [
                    ""
                ],
                "type": "StdVideoH265LevelIdc",
                "num_indirection": 0,
                "value": "",
                "header": "StdVideoH265LevelIdc                             maxLevelIdc\n        "
            }
        ],
        "VkVideoDecodeH265SessionParametersAddInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                pNext\n            "
            },
            {
                "name": "stdVPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   stdVPSCount\n            "
            },
            {
                "name": "pStdVPSs",
                "const": true,
                "length": [
                    "stdVPSCount"
                ],
                "type": "StdVideoH265VideoParameterSet",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoH265VideoParameterSet*     pStdVPSs\n            "
            },
            {
                "name": "stdSPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   stdSPSCount\n            "
            },
            {
                "name": "pStdSPSs",
                "const": true,
                "length": [
                    "stdSPSCount"
                ],
                "type": "StdVideoH265SequenceParameterSet",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoH265SequenceParameterSet*  pStdSPSs\n            "
            },
            {
                "name": "stdPPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   stdPPSCount\n            "
            },
            {
                "name": "pStdPPSs",
                "const": true,
                "length": [
                    "stdPPSCount"
                ],
                "type": "StdVideoH265PictureParameterSet",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoH265PictureParameterSet*   pStdPPSsList of Picture Parameters associated with the spsStd, above\n        "
            }
        ],
        "VkVideoDecodeH265SessionParametersCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                         pNext\n            "
            },
            {
                "name": "maxStdVPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                            maxStdVPSCount\n            "
            },
            {
                "name": "maxStdSPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                            maxStdSPSCount\n            "
            },
            {
                "name": "maxStdPPSCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                            maxStdPPSCount\n            "
            },
            {
                "name": "pParametersAddInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkVideoDecodeH265SessionParametersAddInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoDecodeH265SessionParametersAddInfoKHR* pParametersAddInfo\n        "
            }
        ],
        "VkVideoDecodeH265PictureInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                pNext\n            "
            },
            {
                "name": "pStdPictureInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "StdVideoDecodeH265PictureInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoDecodeH265PictureInfo*       pStdPictureInfo\n            "
            },
            {
                "name": "sliceSegmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                   sliceSegmentCount\n            "
            },
            {
                "name": "pSliceSegmentOffsets",
                "const": true,
                "length": [
                    "sliceSegmentCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*    pSliceSegmentOffsets\n        "
            }
        ],
        "VkVideoDecodeH265DpbSlotInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*             pNext\n            "
            },
            {
                "name": "pStdReferenceInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "StdVideoDecodeH265ReferenceInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const StdVideoDecodeH265ReferenceInfo*  pStdReferenceInfo\n        "
            }
        ],
        "VkVideoSessionCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                   pNext\n            "
            },
            {
                "name": "queueFamilyIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      queueFamilyIndex\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoSessionCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoSessionCreateFlagsKHR  flags\n            "
            },
            {
                "name": "pVideoProfile",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkVideoProfileInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoProfileInfoKHR*                  pVideoProfile\n            "
            },
            {
                "name": "pictureFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                      pictureFormat\n            "
            },
            {
                "name": "maxCodedExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                                    maxCodedExtent\n            "
            },
            {
                "name": "referencePictureFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                      referencePictureFormat\n            "
            },
            {
                "name": "maxDpbSlots",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      maxDpbSlots\n            "
            },
            {
                "name": "maxActiveReferencePictures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      maxActiveReferencePictures\n            "
            },
            {
                "name": "pStdHeaderVersion",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkExtensionProperties",
                "num_indirection": 1,
                "value": "",
                "header": "const VkExtensionProperties*                  pStdHeaderVersion\n        "
            }
        ],
        "VkVideoSessionParametersCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoSessionParametersCreateFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoSessionParametersCreateFlagsKHR flags\n            "
            },
            {
                "name": "videoSessionParametersTemplate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoSessionParametersKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoSessionParametersKHR            videoSessionParametersTemplate\n            "
            },
            {
                "name": "videoSession",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoSessionKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoSessionKHR                                      videoSession\n        "
            }
        ],
        "VkVideoSessionParametersUpdateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "updateSequenceCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               updateSequenceCount\n        "
            }
        ],
        "VkVideoBeginCodingInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                             pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoBeginCodingFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoBeginCodingFlagsKHR              flags\n            "
            },
            {
                "name": "videoSession",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoSessionKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoSessionKHR                                       videoSession\n            "
            },
            {
                "name": "videoSessionParameters",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoSessionParametersKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoSessionParametersKHR             videoSessionParameters\n            "
            },
            {
                "name": "referenceSlotCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                referenceSlotCount\n            "
            },
            {
                "name": "pReferenceSlots",
                "const": true,
                "length": [
                    "referenceSlotCount"
                ],
                "type": "VkVideoReferenceSlotInfoKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkVideoReferenceSlotInfoKHR* pReferenceSlots\n        "
            }
        ],
        "VkVideoEndCodingInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                              pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoEndCodingFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoEndCodingFlagsKHR flags\n        "
            }
        ],
        "VkVideoCodingControlInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkVideoCodingControlFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkVideoCodingControlFlagsKHR  flags\n        "
            }
        ],
        "VkPhysicalDeviceInheritedViewportScissorFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "inheritedViewportScissor2D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            inheritedViewportScissor2D\n        "
            }
        ],
        "VkCommandBufferInheritanceViewportScissorInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                    pNext\n            "
            },
            {
                "name": "viewportScissor2D",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                       viewportScissor2D\n            "
            },
            {
                "name": "viewportDepthCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       viewportDepthCount\n            "
            },
            {
                "name": "pViewportDepths",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkViewport",
                "num_indirection": 1,
                "value": "",
                "header": "const VkViewport*        pViewportDepths\n        "
            }
        ],
        "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "ycbcr2plane444Formats",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     ycbcr2plane444Formats\n        "
            }
        ],
        "VkPhysicalDeviceProvokingVertexFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "provokingVertexLast",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           provokingVertexLast\n            "
            },
            {
                "name": "transformFeedbackPreservesProvokingVertex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           transformFeedbackPreservesProvokingVertex\n        "
            }
        ],
        "VkPhysicalDeviceProvokingVertexPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "provokingVertexModePerPipeline",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            provokingVertexModePerPipeline\n            "
            },
            {
                "name": "transformFeedbackPreservesTriangleFanProvokingVertex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            transformFeedbackPreservesTriangleFanProvokingVertex\n        "
            }
        ],
        "VkPipelineRasterizationProvokingVertexStateCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "provokingVertexMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkProvokingVertexModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkProvokingVertexModeEXT           provokingVertexMode\n        "
            }
        ],
        "VkCuModuleCreateInfoNVX": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "dataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                 dataSize\n            "
            },
            {
                "name": "pData",
                "const": true,
                "length": [
                    "dataSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*            pData\n        "
            }
        ],
        "VkCuFunctionCreateInfoNVX": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "module",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCuModuleNVX",
                "num_indirection": 0,
                "value": "",
                "header": "VkCuModuleNVX                      module\n            "
            },
            {
                "name": "pName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*  pName\n        "
            }
        ],
        "VkCuLaunchInfoNVX": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "function",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCuFunctionNVX",
                "num_indirection": 0,
                "value": "",
                "header": "VkCuFunctionNVX        function\n            "
            },
            {
                "name": "gridDimX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               gridDimX\n            "
            },
            {
                "name": "gridDimY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               gridDimY\n            "
            },
            {
                "name": "gridDimZ",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               gridDimZ\n            "
            },
            {
                "name": "blockDimX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               blockDimX\n            "
            },
            {
                "name": "blockDimY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               blockDimY\n            "
            },
            {
                "name": "blockDimZ",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               blockDimZ\n            "
            },
            {
                "name": "sharedMemBytes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               sharedMemBytes\n            "
            },
            {
                "name": "paramCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                 paramCount\n            "
            },
            {
                "name": "pParams",
                "const": true,
                "length": [
                    "paramCount"
                ],
                "type": "void",
                "num_indirection": 2,
                "value": "",
                "header": "const void* const *    pParams\n            "
            },
            {
                "name": "extraCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                 extraCount\n            "
            },
            {
                "name": "pExtras",
                "const": true,
                "length": [
                    "extraCount"
                ],
                "type": "void",
                "num_indirection": 2,
                "value": "",
                "header": "const void* const *    pExtras\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorBufferFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "descriptorBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           descriptorBuffer\n            "
            },
            {
                "name": "descriptorBufferCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           descriptorBufferCaptureReplay\n            "
            },
            {
                "name": "descriptorBufferImageLayoutIgnored",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           descriptorBufferImageLayoutIgnored\n            "
            },
            {
                "name": "descriptorBufferPushDescriptors",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           descriptorBufferPushDescriptors\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorBufferPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "combinedImageSamplerDescriptorSingleArray",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         combinedImageSamplerDescriptorSingleArray\n            "
            },
            {
                "name": "bufferlessPushDescriptors",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         bufferlessPushDescriptors\n            "
            },
            {
                "name": "allowSamplerImageViewPostSubmitCreation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         allowSamplerImageViewPostSubmitCreation\n            "
            },
            {
                "name": "descriptorBufferOffsetAlignment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     descriptorBufferOffsetAlignment\n            "
            },
            {
                "name": "maxDescriptorBufferBindings",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxDescriptorBufferBindings\n            "
            },
            {
                "name": "maxResourceDescriptorBufferBindings",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxResourceDescriptorBufferBindings\n            "
            },
            {
                "name": "maxSamplerDescriptorBufferBindings",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxSamplerDescriptorBufferBindings\n            "
            },
            {
                "name": "maxEmbeddedImmutableSamplerBindings",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxEmbeddedImmutableSamplerBindings\n            "
            },
            {
                "name": "maxEmbeddedImmutableSamplers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            maxEmbeddedImmutableSamplers\n            "
            },
            {
                "name": "bufferCaptureReplayDescriptorDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           bufferCaptureReplayDescriptorDataSize\n            "
            },
            {
                "name": "imageCaptureReplayDescriptorDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           imageCaptureReplayDescriptorDataSize\n            "
            },
            {
                "name": "imageViewCaptureReplayDescriptorDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           imageViewCaptureReplayDescriptorDataSize\n            "
            },
            {
                "name": "samplerCaptureReplayDescriptorDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           samplerCaptureReplayDescriptorDataSize\n            "
            },
            {
                "name": "accelerationStructureCaptureReplayDescriptorDataSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                           accelerationStructureCaptureReplayDescriptorDataSize\n            "
            },
            {
                "name": "samplerDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              samplerDescriptorSize\n            "
            },
            {
                "name": "combinedImageSamplerDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              combinedImageSamplerDescriptorSize\n            "
            },
            {
                "name": "sampledImageDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              sampledImageDescriptorSize\n            "
            },
            {
                "name": "storageImageDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              storageImageDescriptorSize\n            "
            },
            {
                "name": "uniformTexelBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              uniformTexelBufferDescriptorSize\n            "
            },
            {
                "name": "robustUniformTexelBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              robustUniformTexelBufferDescriptorSize\n            "
            },
            {
                "name": "storageTexelBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              storageTexelBufferDescriptorSize\n            "
            },
            {
                "name": "robustStorageTexelBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              robustStorageTexelBufferDescriptorSize\n            "
            },
            {
                "name": "uniformBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              uniformBufferDescriptorSize\n            "
            },
            {
                "name": "robustUniformBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              robustUniformBufferDescriptorSize\n            "
            },
            {
                "name": "storageBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              storageBufferDescriptorSize\n            "
            },
            {
                "name": "robustStorageBufferDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              robustStorageBufferDescriptorSize\n            "
            },
            {
                "name": "inputAttachmentDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              inputAttachmentDescriptorSize\n            "
            },
            {
                "name": "accelerationStructureDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              accelerationStructureDescriptorSize\n            "
            },
            {
                "name": "maxSamplerDescriptorBufferRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                        maxSamplerDescriptorBufferRange\n            "
            },
            {
                "name": "maxResourceDescriptorBufferRange",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                        maxResourceDescriptorBufferRange\n            "
            },
            {
                "name": "samplerDescriptorBufferAddressSpaceSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                        samplerDescriptorBufferAddressSpaceSize\n            "
            },
            {
                "name": "resourceDescriptorBufferAddressSpaceSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                        resourceDescriptorBufferAddressSpaceSize\n            "
            },
            {
                "name": "descriptorBufferAddressSpaceSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                        descriptorBufferAddressSpaceSize\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorBufferDensityMapPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "combinedImageSamplerDensityMapDescriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                              combinedImageSamplerDensityMapDescriptorSize\n        "
            }
        ],
        "VkDescriptorAddressInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                   pNext\n            "
            },
            {
                "name": "address",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                         address\n            "
            },
            {
                "name": "range",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                            range\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                format\n        "
            }
        ],
        "VkDescriptorBufferBindingInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                   pNext\n            "
            },
            {
                "name": "address",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                         address\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBufferUsageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkBufferUsageFlags                      usage\n        "
            }
        ],
        "VkDescriptorBufferBindingPushDescriptorBufferHandleEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                   pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                               buffer\n        "
            }
        ],
        "VkDescriptorDataEXT": [
            {
                "name": "pSampler",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkSampler",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSampler*                                                     pSampler\n            "
            },
            {
                "name": "pCombinedImageSampler",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorImageInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorImageInfo*                          pCombinedImageSampler\n            "
            },
            {
                "name": "pInputAttachmentImage",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorImageInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorImageInfo*                                pInputAttachmentImage\n            "
            },
            {
                "name": "pSampledImage",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorImageInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorImageInfo*                   pSampledImage\n            "
            },
            {
                "name": "pStorageImage",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorImageInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorImageInfo*                   pStorageImage\n            "
            },
            {
                "name": "pUniformTexelBuffer",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorAddressInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorAddressInfoEXT*       pUniformTexelBuffer\n            "
            },
            {
                "name": "pStorageTexelBuffer",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorAddressInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorAddressInfoEXT*       pStorageTexelBuffer\n            "
            },
            {
                "name": "pUniformBuffer",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorAddressInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorAddressInfoEXT*             pUniformBuffer\n            "
            },
            {
                "name": "pStorageBuffer",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkDescriptorAddressInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorAddressInfoEXT*             pStorageBuffer\n            "
            },
            {
                "name": "accelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress accelerationStructure\n        "
            }
        ],
        "VkDescriptorGetInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorType",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorType       type\n            "
            },
            {
                "name": "data",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorDataEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorDataEXT  data\n        "
            }
        ],
        "VkBufferCaptureDescriptorDataInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer               buffer\n        "
            }
        ],
        "VkImageCaptureDescriptorDataInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "image",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImage",
                "num_indirection": 0,
                "value": "",
                "header": "VkImage                image\n        "
            }
        ],
        "VkImageViewCaptureDescriptorDataInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "imageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                imageView\n        "
            }
        ],
        "VkSamplerCaptureDescriptorDataInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "sampler",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampler",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampler              sampler\n        "
            }
        ],
        "VkAccelerationStructureCaptureDescriptorDataInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "accelerationStructure",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureKHR             accelerationStructure\n            "
            },
            {
                "name": "accelerationStructureNV",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureNV              accelerationStructureNV\n        "
            }
        ],
        "VkOpaqueCaptureDescriptorDataCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "opaqueCaptureDescriptorData",
                "const": true,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*            opaqueCaptureDescriptorData\n        "
            }
        ],
        "VkPhysicalDeviceShaderIntegerDotProductFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "shaderIntegerDotProduct",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderIntegerDotProduct\n        "
            }
        ],
        "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "shaderIntegerDotProduct",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            shaderIntegerDotProduct\n        "
            }
        ],
        "VkPhysicalDeviceShaderIntegerDotProductProperties": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "integerDotProduct8BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct8BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct8BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct8BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct8BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct8BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct4x8BitPackedUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct4x8BitPackedSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct4x8BitPackedMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct16BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct16BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct16BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct32BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct32BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct32BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct64BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct64BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct64BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating8BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating8BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating16BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating16BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating32BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating32BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating64BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating64BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated\n        "
            }
        ],
        "VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "integerDotProduct8BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct8BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct8BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct8BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct8BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct8BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct4x8BitPackedUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct4x8BitPackedSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct4x8BitPackedMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct4x8BitPackedMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct16BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct16BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct16BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct16BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct32BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct32BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct32BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct32BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct64BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct64BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProduct64BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProduct64BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating8BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating8BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating16BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating16BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating32BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating32BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating64BitUnsignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitSignedAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating64BitSignedAccelerated\n            "
            },
            {
                "name": "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated\n        "
            }
        ],
        "VkPhysicalDeviceDrmPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "hasPrimary",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 hasPrimary\n            "
            },
            {
                "name": "hasRender",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 hasRender\n            "
            },
            {
                "name": "primaryMajor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int64_t",
                "num_indirection": 0,
                "value": "",
                "header": "int64_t primaryMajor\n            "
            },
            {
                "name": "primaryMinor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int64_t",
                "num_indirection": 0,
                "value": "",
                "header": "int64_t primaryMinor\n            "
            },
            {
                "name": "renderMajor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int64_t",
                "num_indirection": 0,
                "value": "",
                "header": "int64_t renderMajor\n            "
            },
            {
                "name": "renderMinor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "int64_t",
                "num_indirection": 0,
                "value": "",
                "header": "int64_t renderMinor\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShaderBarycentricFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "fragmentShaderBarycentric",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShaderBarycentric\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "fragmentShaderBarycentric",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32               fragmentShaderBarycentric\n        "
            }
        ],
        "VkPhysicalDeviceFragmentShaderBarycentricPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "triStripVertexOrderIndependentOfProvokingVertex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32              triStripVertexOrderIndependentOfProvokingVertex\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "rayTracingMotionBlur",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           rayTracingMotionBlur\n            "
            },
            {
                "name": "rayTracingMotionBlurPipelineTraceRaysIndirect",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           rayTracingMotionBlurPipelineTraceRaysIndirect\n        "
            }
        ],
        "VkAccelerationStructureGeometryMotionTrianglesDataNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                   pNext\n            "
            },
            {
                "name": "vertexData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                 vertexData\n        "
            }
        ],
        "VkAccelerationStructureMotionInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                    pNext\n            "
            },
            {
                "name": "maxInstances",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                       maxInstances\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureMotionInfoFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureMotionInfoFlagsNV flags\n        "
            }
        ],
        "VkSRTDataNV": [
            {
                "name": "sx",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float sx\n            "
            },
            {
                "name": "a",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float a\n            "
            },
            {
                "name": "b",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float b\n            "
            },
            {
                "name": "pvx",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float pvx\n            "
            },
            {
                "name": "sy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float sy\n            "
            },
            {
                "name": "c",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float c\n            "
            },
            {
                "name": "pvy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float pvy\n            "
            },
            {
                "name": "sz",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float sz\n            "
            },
            {
                "name": "pvz",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float pvz\n            "
            },
            {
                "name": "qx",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float qx\n            "
            },
            {
                "name": "qy",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float qy\n            "
            },
            {
                "name": "qz",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float qz\n            "
            },
            {
                "name": "qw",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float qw\n            "
            },
            {
                "name": "tx",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float tx\n            "
            },
            {
                "name": "ty",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float ty\n            "
            },
            {
                "name": "tz",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float tz\n        "
            }
        ],
        "VkAccelerationStructureSRTMotionInstanceNV": [
            {
                "name": "transformT0",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSRTDataNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkSRTDataNV                                             transformT0\n            "
            },
            {
                "name": "transformT1",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSRTDataNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkSRTDataNV                                             transformT1\n            "
            },
            {
                "name": "instanceCustomIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceCustomIndex:24\n            "
            },
            {
                "name": "mask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                mask:8\n            "
            },
            {
                "name": "instanceShaderBindingTableRecordOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceShaderBindingTableRecordOffset:24\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryInstanceFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryInstanceFlagsKHR              flags:8\n            "
            },
            {
                "name": "accelerationStructureReference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                                accelerationStructureReference\n        "
            }
        ],
        "VkAccelerationStructureMatrixMotionInstanceNV": [
            {
                "name": "transformT0",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkTransformMatrixKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkTransformMatrixKHR                                    transformT0\n            "
            },
            {
                "name": "transformT1",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkTransformMatrixKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkTransformMatrixKHR                                    transformT1\n            "
            },
            {
                "name": "instanceCustomIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceCustomIndex:24\n            "
            },
            {
                "name": "mask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                mask:8\n            "
            },
            {
                "name": "instanceShaderBindingTableRecordOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                instanceShaderBindingTableRecordOffset:24\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGeometryInstanceFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkGeometryInstanceFlagsKHR              flags:8\n            "
            },
            {
                "name": "accelerationStructureReference",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                                accelerationStructureReference\n        "
            }
        ],
        "VkAccelerationStructureMotionInstanceDataNV": [
            {
                "name": "staticInstance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureInstanceKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureInstanceKHR            staticInstance\n            "
            },
            {
                "name": "matrixMotionInstance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureMatrixMotionInstanceNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureMatrixMotionInstanceNV matrixMotionInstance\n            "
            },
            {
                "name": "srtMotionInstance",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureSRTMotionInstanceNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureSRTMotionInstanceNV    srtMotionInstance\n        "
            }
        ],
        "VkAccelerationStructureMotionInstanceNV": [
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureMotionInstanceTypeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureMotionInstanceTypeNV type\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureMotionInstanceFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureMotionInstanceFlagsNV flags\n            "
            },
            {
                "name": "data",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAccelerationStructureMotionInstanceDataNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkAccelerationStructureMotionInstanceDataNV data\n        "
            }
        ],
        "VkMemoryGetRemoteAddressInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory                     memory\n            "
            },
            {
                "name": "handleType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExternalMemoryHandleTypeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkExternalMemoryHandleTypeFlagBits handleType\n        "
            }
        ],
        "VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "formatRgba10x6WithoutYCbCrSampler",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           formatRgba10x6WithoutYCbCrSampler\n        "
            }
        ],
        "VkFormatProperties3": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "linearTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags2            linearTilingFeatures\n            "
            },
            {
                "name": "optimalTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags2            optimalTilingFeatures\n            "
            },
            {
                "name": "bufferFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags2            bufferFeatures\n        "
            }
        ],
        "VkFormatProperties3KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "linearTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags2            linearTilingFeatures\n            "
            },
            {
                "name": "optimalTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags2            optimalTilingFeatures\n            "
            },
            {
                "name": "bufferFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags2            bufferFeatures\n        "
            }
        ],
        "VkDrmFormatModifierPropertiesList2EXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "drmFormatModifierCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t drmFormatModifierCount\n            "
            },
            {
                "name": "pDrmFormatModifierProperties",
                "const": false,
                "length": [
                    "drmFormatModifierCount"
                ],
                "type": "VkDrmFormatModifierProperties2EXT",
                "num_indirection": 1,
                "value": "",
                "header": "VkDrmFormatModifierProperties2EXT* pDrmFormatModifierProperties\n        "
            }
        ],
        "VkDrmFormatModifierProperties2EXT": [
            {
                "name": "drmFormatModifier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t drmFormatModifier\n            "
            },
            {
                "name": "drmFormatModifierPlaneCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t drmFormatModifierPlaneCount\n            "
            },
            {
                "name": "drmFormatModifierTilingFeatures",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormatFeatureFlags2",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormatFeatureFlags2 drmFormatModifierTilingFeatures\n        "
            }
        ],
        "VkPipelineRenderingCreateInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   viewMask\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachmentFormats",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*           pColorAttachmentFormats\n            "
            },
            {
                "name": "depthAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                             depthAttachmentFormat\n            "
            },
            {
                "name": "stencilAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                             stencilAttachmentFormat\n        "
            }
        ],
        "VkPipelineRenderingCreateInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   viewMask\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachmentFormats",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*           pColorAttachmentFormats\n            "
            },
            {
                "name": "depthAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                             depthAttachmentFormat\n            "
            },
            {
                "name": "stencilAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                             stencilAttachmentFormat\n        "
            }
        ],
        "VkRenderingInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDERING_INFO",
                "header": "VkStructureType                  sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderingFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderingFlags                                           flags\n            "
            },
            {
                "name": "renderArea",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRect2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkRect2D                                                                   renderArea\n            "
            },
            {
                "name": "layerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   layerCount\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   viewMask\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkRenderingAttachmentInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRenderingAttachmentInfo*                pColorAttachments\n            "
            },
            {
                "name": "pDepthAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkRenderingAttachmentInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRenderingAttachmentInfo*                           pDepthAttachment\n            "
            },
            {
                "name": "pStencilAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkRenderingAttachmentInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRenderingAttachmentInfo*                           pStencilAttachment\n        "
            }
        ],
        "VkRenderingInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDERING_INFO",
                "header": "VkStructureType                  sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderingFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderingFlags                                           flags\n            "
            },
            {
                "name": "renderArea",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRect2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkRect2D                                                                   renderArea\n            "
            },
            {
                "name": "layerCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   layerCount\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   viewMask\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachments",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkRenderingAttachmentInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRenderingAttachmentInfo*                pColorAttachments\n            "
            },
            {
                "name": "pDepthAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkRenderingAttachmentInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRenderingAttachmentInfo*                           pDepthAttachment\n            "
            },
            {
                "name": "pStencilAttachment",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkRenderingAttachmentInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRenderingAttachmentInfo*                           pStencilAttachment\n        "
            }
        ],
        "VkRenderingAttachmentInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO",
                "header": "VkStructureType       sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "imageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                                                imageView\n            "
            },
            {
                "name": "imageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                                              imageLayout\n            "
            },
            {
                "name": "resolveMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlagBits                                      resolveMode\n            "
            },
            {
                "name": "resolveImageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                                                resolveImageView\n            "
            },
            {
                "name": "resolveImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                                              resolveImageLayout\n            "
            },
            {
                "name": "loadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp                                                         loadOp\n            "
            },
            {
                "name": "storeOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp                                                        storeOp\n            "
            },
            {
                "name": "clearValue",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkClearValue",
                "num_indirection": 0,
                "value": "",
                "header": "VkClearValue                                                               clearValue\n        "
            }
        ],
        "VkRenderingAttachmentInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO",
                "header": "VkStructureType       sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "imageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                                                imageView\n            "
            },
            {
                "name": "imageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                                              imageLayout\n            "
            },
            {
                "name": "resolveMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkResolveModeFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkResolveModeFlagBits                                      resolveMode\n            "
            },
            {
                "name": "resolveImageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                                                resolveImageView\n            "
            },
            {
                "name": "resolveImageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                                              resolveImageLayout\n            "
            },
            {
                "name": "loadOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentLoadOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentLoadOp                                                         loadOp\n            "
            },
            {
                "name": "storeOp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkAttachmentStoreOp",
                "num_indirection": 0,
                "value": "",
                "header": "VkAttachmentStoreOp                                                        storeOp\n            "
            },
            {
                "name": "clearValue",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkClearValue",
                "num_indirection": 0,
                "value": "",
                "header": "VkClearValue                                                               clearValue\n        "
            }
        ],
        "VkRenderingFragmentShadingRateAttachmentInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                               pNext\n            "
            },
            {
                "name": "imageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                                                imageView\n            "
            },
            {
                "name": "imageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                                              imageLayout\n            "
            },
            {
                "name": "shadingRateAttachmentTexelSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                                                                 shadingRateAttachmentTexelSize\n        "
            }
        ],
        "VkRenderingFragmentDensityMapAttachmentInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "imageView",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageView",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageView                                                                imageView\n            "
            },
            {
                "name": "imageLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageLayout                                                              imageLayout\n        "
            }
        ],
        "VkPhysicalDeviceDynamicRenderingFeatures": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                pNext\n            "
            },
            {
                "name": "dynamicRendering",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                   dynamicRendering\n        "
            }
        ],
        "VkPhysicalDeviceDynamicRenderingFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                pNext\n            "
            },
            {
                "name": "dynamicRendering",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                   dynamicRendering\n        "
            }
        ],
        "VkCommandBufferInheritanceRenderingInfo": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderingFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderingFlags                                           flags\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   viewMask\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachmentFormats",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*                                 pColorAttachmentFormats\n            "
            },
            {
                "name": "depthAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                                   depthAttachmentFormat\n            "
            },
            {
                "name": "stencilAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                                   stencilAttachmentFormat\n            "
            },
            {
                "name": "rasterizationSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits                                      rasterizationSamples\n        "
            }
        ],
        "VkCommandBufferInheritanceRenderingInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderingFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkRenderingFlags                                           flags\n            "
            },
            {
                "name": "viewMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                   viewMask\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                      colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachmentFormats",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkFormat",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFormat*                                 pColorAttachmentFormats\n            "
            },
            {
                "name": "depthAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                                   depthAttachmentFormat\n            "
            },
            {
                "name": "stencilAttachmentFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                                   stencilAttachmentFormat\n            "
            },
            {
                "name": "rasterizationSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits                                      rasterizationSamples\n        "
            }
        ],
        "VkAttachmentSampleCountInfoAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachmentSamples",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSampleCountFlagBits* pColorAttachmentSamples\n            "
            },
            {
                "name": "depthStencilAttachmentSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits                depthStencilAttachmentSamples\n        "
            }
        ],
        "VkAttachmentSampleCountInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                pNext\n            "
            },
            {
                "name": "colorAttachmentCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                   colorAttachmentCount\n            "
            },
            {
                "name": "pColorAttachmentSamples",
                "const": true,
                "length": [
                    "colorAttachmentCount"
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSampleCountFlagBits* pColorAttachmentSamples\n            "
            },
            {
                "name": "depthStencilAttachmentSamples",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSampleCountFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkSampleCountFlagBits                depthStencilAttachmentSamples\n        "
            }
        ],
        "VkMultiviewPerViewAttributesInfoNVX": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "perViewAttributes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                               perViewAttributes\n            "
            },
            {
                "name": "perViewAttributesPositionXOnly",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                               perViewAttributesPositionXOnly\n        "
            }
        ],
        "VkPhysicalDeviceImageViewMinLodFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "minLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        minLod\n        "
            }
        ],
        "VkImageViewMinLodCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "minLod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                       minLod\n        "
            }
        ],
        "VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "rasterizationOrderColorAttachmentAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rasterizationOrderColorAttachmentAccess\n            "
            },
            {
                "name": "rasterizationOrderDepthAttachmentAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rasterizationOrderDepthAttachmentAccess\n            "
            },
            {
                "name": "rasterizationOrderStencilAttachmentAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rasterizationOrderStencilAttachmentAccess\n        "
            }
        ],
        "VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "rasterizationOrderColorAttachmentAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rasterizationOrderColorAttachmentAccess\n            "
            },
            {
                "name": "rasterizationOrderDepthAttachmentAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rasterizationOrderDepthAttachmentAccess\n            "
            },
            {
                "name": "rasterizationOrderStencilAttachmentAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         rasterizationOrderStencilAttachmentAccess\n        "
            }
        ],
        "VkPhysicalDeviceLinearColorAttachmentFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "linearColorAttachment",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        linearColorAttachment\n        "
            }
        ],
        "VkPhysicalDeviceGraphicsPipelineLibraryFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "graphicsPipelineLibrary",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     graphicsPipelineLibrary\n        "
            }
        ],
        "VkPhysicalDeviceGraphicsPipelineLibraryPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "graphicsPipelineLibraryFastLinking",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     graphicsPipelineLibraryFastLinking\n            "
            },
            {
                "name": "graphicsPipelineLibraryIndependentInterpolationDecoration",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     graphicsPipelineLibraryIndependentInterpolationDecoration\n        "
            }
        ],
        "VkGraphicsPipelineLibraryCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*       pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkGraphicsPipelineLibraryFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkGraphicsPipelineLibraryFlagsEXT flags\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                           pNext\n            "
            },
            {
                "name": "descriptorSetHostMapping",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                                              descriptorSetHostMapping\n        "
            }
        ],
        "VkDescriptorSetBindingReferenceVALVE": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                       pNext\n            "
            },
            {
                "name": "descriptorSetLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDescriptorSetLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkDescriptorSetLayout                                                             descriptorSetLayout\n            "
            },
            {
                "name": "binding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                          binding\n        "
            }
        ],
        "VkDescriptorSetLayoutHostMappingInfoVALVE": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                                    pNext\n            "
            },
            {
                "name": "descriptorOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                                                                                   descriptorOffset\n            "
            },
            {
                "name": "descriptorSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                                 descriptorSize\n        "
            }
        ],
        "VkPhysicalDeviceShaderModuleIdentifierFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                      pNext\n            "
            },
            {
                "name": "shaderModuleIdentifier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                                         shaderModuleIdentifier\n        "
            }
        ],
        "VkPhysicalDeviceShaderModuleIdentifierPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "shaderModuleIdentifierAlgorithmUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t shaderModuleIdentifierAlgorithmUUID[VK_UUID_SIZE]\n        "
            }
        ],
        "VkPipelineShaderStageModuleIdentifierCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "identifierSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t            identifierSize\n            "
            },
            {
                "name": "pIdentifier",
                "const": true,
                "length": [
                    "identifierSize"
                ],
                "type": "uint8_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint8_t* pIdentifier\n        "
            }
        ],
        "VkShaderModuleIdentifierEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*          pNext\n            "
            },
            {
                "name": "identifierSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t identifierSize\n            "
            },
            {
                "name": "identifier",
                "const": false,
                "length": [
                    "VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                        identifier[VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT]\n        "
            }
        ],
        "VkImageCompressionControlEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCompressionFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCompressionFlagsEXT   flags\n            "
            },
            {
                "name": "compressionControlPlaneCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t             compressionControlPlaneCount\n            "
            },
            {
                "name": "pFixedRateFlags",
                "const": false,
                "length": [
                    "compressionControlPlaneCount"
                ],
                "type": "VkImageCompressionFixedRateFlagsEXT",
                "num_indirection": 1,
                "value": "",
                "header": "VkImageCompressionFixedRateFlagsEXT* pFixedRateFlags\n        "
            }
        ],
        "VkPhysicalDeviceImageCompressionControlFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "imageCompressionControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                             imageCompressionControl\n        "
            }
        ],
        "VkImageCompressionPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                pNext\n            "
            },
            {
                "name": "imageCompressionFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCompressionFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCompressionFlagsEXT           imageCompressionFlags\n            "
            },
            {
                "name": "imageCompressionFixedRateFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageCompressionFixedRateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageCompressionFixedRateFlagsEXT  imageCompressionFixedRateFlags\n        "
            }
        ],
        "VkPhysicalDeviceImageCompressionControlSwapchainFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "imageCompressionControlSwapchain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                             imageCompressionControlSwapchain\n        "
            }
        ],
        "VkImageSubresource2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresource",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresource     imageSubresource\n        "
            }
        ],
        "VkImageSubresource2EXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "imageSubresource",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkImageSubresource",
                "num_indirection": 0,
                "value": "",
                "header": "VkImageSubresource     imageSubresource\n        "
            }
        ],
        "VkSubresourceLayout2KHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "subresourceLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubresourceLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubresourceLayout    subresourceLayout\n        "
            }
        ],
        "VkSubresourceLayout2EXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*  pNext\n            "
            },
            {
                "name": "subresourceLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubresourceLayout",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubresourceLayout    subresourceLayout\n        "
            }
        ],
        "VkRenderPassCreationControlEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                 pNext\n            "
            },
            {
                "name": "disallowMerging",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                    disallowMerging\n        "
            }
        ],
        "VkRenderPassCreationFeedbackInfoEXT": [
            {
                "name": "postMergeSubpassCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                          postMergeSubpassCount\n        "
            }
        ],
        "VkRenderPassCreationFeedbackCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                              pNext\n            "
            },
            {
                "name": "pRenderPassFeedback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPassCreationFeedbackInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "VkRenderPassCreationFeedbackInfoEXT*                                                     pRenderPassFeedback\n        "
            }
        ],
        "VkRenderPassSubpassFeedbackInfoEXT": [
            {
                "name": "subpassMergeStatus",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSubpassMergeStatusEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkSubpassMergeStatusEXT                                                          subpassMergeStatus\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char                                                                             description[VK_MAX_DESCRIPTION_SIZE]\n            "
            },
            {
                "name": "postMergeIndex",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                                         postMergeIndex\n        "
            }
        ],
        "VkRenderPassSubpassFeedbackCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT",
                "header": "VkStructureType     sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                                 pNext\n            "
            },
            {
                "name": "pSubpassFeedback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRenderPassSubpassFeedbackInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "VkRenderPassSubpassFeedbackInfoEXT*                                                         pSubpassFeedback\n        "
            }
        ],
        "VkPhysicalDeviceSubpassMergeFeedbackFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                    pNext\n            "
            },
            {
                "name": "subpassMergeFeedback",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                                       subpassMergeFeedback\n        "
            }
        ],
        "VkMicromapBuildInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                                        pNext\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapTypeEXT                                     type\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuildMicromapFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuildMicromapFlagsEXT               flags\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuildMicromapModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuildMicromapModeEXT          mode\n            "
            },
            {
                "name": "dstMicromap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapEXT                   dstMicromap\n            "
            },
            {
                "name": "usageCountsCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                           usageCountsCount\n            "
            },
            {
                "name": "pUsageCounts",
                "const": true,
                "length": [
                    "usageCountsCount"
                ],
                "type": "VkMicromapUsageEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkMicromapUsageEXT*    pUsageCounts\n            "
            },
            {
                "name": "ppUsageCounts",
                "const": true,
                "length": [
                    "1",
                    "usageCountsCount"
                ],
                "type": "VkMicromapUsageEXT",
                "num_indirection": 2,
                "value": "",
                "header": "const VkMicromapUsageEXT* const*   ppUsageCounts\n            "
            },
            {
                "name": "data",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                               data\n            "
            },
            {
                "name": "scratchData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressKHR                                    scratchData\n            "
            },
            {
                "name": "triangleArray",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                               triangleArray\n            "
            },
            {
                "name": "triangleArrayStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                                                                      triangleArrayStride\n        "
            }
        ],
        "VkMicromapCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                             pNext\n            "
            },
            {
                "name": "createFlags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapCreateFlagsEXT   createFlags\n            "
            },
            {
                "name": "buffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBuffer",
                "num_indirection": 0,
                "value": "",
                "header": "VkBuffer                                                buffer\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                                            offsetSpecified in bytes\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                                            size\n            "
            },
            {
                "name": "type",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapTypeEXT                          type\n            "
            },
            {
                "name": "deviceAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                         deviceAddress\n        "
            }
        ],
        "VkMicromapVersionInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "pVersionData",
                "const": true,
                "length": [
                    "2*VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint8_t*                    pVersionData\n        "
            }
        ],
        "VkCopyMicromapInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "src",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapEXT                             src\n            "
            },
            {
                "name": "dst",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapEXT                             dst\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCopyMicromapModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkCopyMicromapModeEXT                     mode\n        "
            }
        ],
        "VkCopyMicromapToMemoryInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "src",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapEXT                             src\n            "
            },
            {
                "name": "dst",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressKHR                               dst\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCopyMicromapModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkCopyMicromapModeEXT                     mode\n        "
            }
        ],
        "VkCopyMemoryToMicromapInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                            pNext\n            "
            },
            {
                "name": "src",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR                          src\n            "
            },
            {
                "name": "dst",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapEXT                             dst\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCopyMicromapModeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkCopyMicromapModeEXT                     mode\n        "
            }
        ],
        "VkMicromapBuildSizesInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "micromapSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       micromapSize\n            "
            },
            {
                "name": "buildScratchSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       buildScratchSize\n            "
            },
            {
                "name": "discardable",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           discardable\n        "
            }
        ],
        "VkMicromapUsageEXT": [
            {
                "name": "count",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               count\n            "
            },
            {
                "name": "subdivisionLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               subdivisionLevel\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               formatInterpretation depends on parent type\n        "
            }
        ],
        "VkMicromapTriangleEXT": [
            {
                "name": "dataOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               dataOffsetSpecified in bytes\n            "
            },
            {
                "name": "subdivisionLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint16_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint16_t                                               subdivisionLevel\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint16_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint16_t                                               format\n        "
            }
        ],
        "VkPhysicalDeviceOpacityMicromapFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "micromap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         micromap\n            "
            },
            {
                "name": "micromapCaptureReplay",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         micromapCaptureReplay\n            "
            },
            {
                "name": "micromapHostCommands",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         micromapHostCommands\n        "
            }
        ],
        "VkPhysicalDeviceOpacityMicromapPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxOpacity2StateSubdivisionLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxOpacity2StateSubdivisionLevel\n            "
            },
            {
                "name": "maxOpacity4StateSubdivisionLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                         maxOpacity4StateSubdivisionLevel\n        "
            }
        ],
        "VkAccelerationStructureTrianglesOpacityMicromapEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                  pNext\n            "
            },
            {
                "name": "indexType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkIndexType",
                "num_indirection": 0,
                "value": "",
                "header": "VkIndexType                                            indexType\n            "
            },
            {
                "name": "indexBuffer",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceOrHostAddressConstKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceOrHostAddressConstKHR    indexBuffer\n            "
            },
            {
                "name": "indexStride",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                                           indexStride\n            "
            },
            {
                "name": "baseTriangle",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                               baseTriangle\n            "
            },
            {
                "name": "usageCountsCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                               usageCountsCount\n            "
            },
            {
                "name": "pUsageCounts",
                "const": true,
                "length": [
                    "usageCountsCount"
                ],
                "type": "VkMicromapUsageEXT",
                "num_indirection": 1,
                "value": "",
                "header": "const VkMicromapUsageEXT*  pUsageCounts\n            "
            },
            {
                "name": "ppUsageCounts",
                "const": true,
                "length": [
                    "1",
                    "usageCountsCount"
                ],
                "type": "VkMicromapUsageEXT",
                "num_indirection": 2,
                "value": "",
                "header": "const VkMicromapUsageEXT* const* ppUsageCounts\n            "
            },
            {
                "name": "micromap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMicromapEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkMicromapEXT                          micromap\n        "
            }
        ],
        "VkPipelinePropertiesIdentifierEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "pipelineIdentifier",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                            pipelineIdentifier[VK_UUID_SIZE]\n        "
            }
        ],
        "VkPhysicalDevicePipelinePropertiesFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "pipelinePropertiesIdentifier",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           pipelinePropertiesIdentifier\n        "
            }
        ],
        "VkPhysicalDeviceShaderEarlyAndLateFragmentTestsFeaturesAMD": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "shaderEarlyAndLateFragmentTests",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           shaderEarlyAndLateFragmentTests\n        "
            }
        ],
        "VkExternalMemoryAcquireUnmodifiedEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*    pNext\n            "
            },
            {
                "name": "acquireUnmodifiedMemory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                       acquireUnmodifiedMemory\n        "
            }
        ],
        "VkPhysicalDeviceNonSeamlessCubeMapFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                   pNext\n            "
            },
            {
                "name": "nonSeamlessCubeMap",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                                      nonSeamlessCubeMap\n        "
            }
        ],
        "VkPhysicalDevicePipelineRobustnessFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "pipelineRobustness",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                       pipelineRobustness\n        "
            }
        ],
        "VkPipelineRobustnessCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*      pNext\n            "
            },
            {
                "name": "storageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessBufferBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessBufferBehaviorEXT   storageBuffers\n            "
            },
            {
                "name": "uniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessBufferBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessBufferBehaviorEXT   uniformBuffers\n            "
            },
            {
                "name": "vertexInputs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessBufferBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessBufferBehaviorEXT   vertexInputs\n            "
            },
            {
                "name": "images",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessImageBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessImageBehaviorEXT    images\n        "
            }
        ],
        "VkPhysicalDevicePipelineRobustnessPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "defaultRobustnessStorageBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessBufferBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessBufferBehaviorEXT   defaultRobustnessStorageBuffers\n            "
            },
            {
                "name": "defaultRobustnessUniformBuffers",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessBufferBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessBufferBehaviorEXT   defaultRobustnessUniformBuffers\n            "
            },
            {
                "name": "defaultRobustnessVertexInputs",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessBufferBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessBufferBehaviorEXT   defaultRobustnessVertexInputs\n            "
            },
            {
                "name": "defaultRobustnessImages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPipelineRobustnessImageBehaviorEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPipelineRobustnessImageBehaviorEXT    defaultRobustnessImages\n        "
            }
        ],
        "VkImageViewSampleWeightCreateInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*       pNext\n            "
            },
            {
                "name": "filterCenter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                        filterCenter\n            "
            },
            {
                "name": "filterSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                        filterSize\n            "
            },
            {
                "name": "numPhases",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                          numPhases\n        "
            }
        ],
        "VkPhysicalDeviceImageProcessingFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "textureSampleWeighted",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           textureSampleWeighted\n            "
            },
            {
                "name": "textureBoxFilter",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           textureBoxFilter\n            "
            },
            {
                "name": "textureBlockMatch",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           textureBlockMatch\n         "
            }
        ],
        "VkPhysicalDeviceImageProcessingPropertiesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                            pNext\n            "
            },
            {
                "name": "maxWeightFilterPhases",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         maxWeightFilterPhases\n            "
            },
            {
                "name": "maxWeightFilterDimension",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D       maxWeightFilterDimension\n            "
            },
            {
                "name": "maxBlockMatchRegion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D       maxBlockMatchRegion\n            "
            },
            {
                "name": "maxBoxFilterBlockSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D       maxBoxFilterBlockSize\n        "
            }
        ],
        "VkPhysicalDeviceTilePropertiesFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "tileProperties",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         tileProperties\n        "
            }
        ],
        "VkTilePropertiesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_TILE_PROPERTIES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "tileSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent3D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent3D                       tileSize\n            "
            },
            {
                "name": "apronSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                       apronSize\n            "
            },
            {
                "name": "origin",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOffset2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkOffset2D                       origin\n        "
            }
        ],
        "VkPhysicalDeviceAmigoProfilingFeaturesSEC": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "amigoProfiling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         amigoProfiling\n        "
            }
        ],
        "VkAmigoProfilingSubmitInfoSEC": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*      pNext\n            "
            },
            {
                "name": "firstDrawTimestamp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         firstDrawTimestamp\n            "
            },
            {
                "name": "swapBufferTimestamp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                         swapBufferTimestamp\n        "
            }
        ],
        "VkPhysicalDeviceAttachmentFeedbackLoopLayoutFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "attachmentFeedbackLoopLayout",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           attachmentFeedbackLoopLayout\n        "
            }
        ],
        "VkPhysicalDeviceDepthClampZeroOneFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "depthClampZeroOne",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     depthClampZeroOne\n        "
            }
        ],
        "VkPhysicalDeviceAddressBindingReportFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "reportAddressBinding",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           reportAddressBinding\n        "
            }
        ],
        "VkDeviceAddressBindingCallbackDataEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddressBindingFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddressBindingFlagsEXT     flags\n            "
            },
            {
                "name": "baseAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                    baseAddress\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                       size\n            "
            },
            {
                "name": "bindingType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddressBindingTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddressBindingTypeEXT      bindingType\n        "
            }
        ],
        "VkPhysicalDeviceOpticalFlowFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "opticalFlow",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           opticalFlow\n        "
            }
        ],
        "VkPhysicalDeviceOpticalFlowPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "supportedOutputGridSizes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowGridSizeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowGridSizeFlagsNV supportedOutputGridSizes\n            "
            },
            {
                "name": "supportedHintGridSizes",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowGridSizeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowGridSizeFlagsNV supportedHintGridSizes\n            "
            },
            {
                "name": "hintSupported",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 hintSupported\n            "
            },
            {
                "name": "costSupported",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 costSupported\n            "
            },
            {
                "name": "bidirectionalFlowSupported",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 bidirectionalFlowSupported\n            "
            },
            {
                "name": "globalFlowSupported",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32 globalFlowSupported\n            "
            },
            {
                "name": "minWidth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t  minWidth\n            "
            },
            {
                "name": "minHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t  minHeight\n            "
            },
            {
                "name": "maxWidth",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t  maxWidth\n            "
            },
            {
                "name": "maxHeight",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t  maxHeight\n            "
            },
            {
                "name": "maxNumRegionsOfInterest",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t  maxNumRegionsOfInterest\n        "
            }
        ],
        "VkOpticalFlowImageFormatInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*  pNext\n            "
            },
            {
                "name": "usage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowUsageFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowUsageFlagsNV usage\n        "
            }
        ],
        "VkOpticalFlowImageFormatPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*  pNext\n            "
            },
            {
                "name": "format",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat format\n        "
            }
        ],
        "VkOpticalFlowSessionCreateInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                              pNext\n            "
            },
            {
                "name": "width",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                           width\n            "
            },
            {
                "name": "height",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                           height\n            "
            },
            {
                "name": "imageFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                           imageFormat\n            "
            },
            {
                "name": "flowVectorFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                                           flowVectorFormat\n            "
            },
            {
                "name": "costFormat",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFormat",
                "num_indirection": 0,
                "value": "",
                "header": "VkFormat                                           costFormat\n            "
            },
            {
                "name": "outputGridSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowGridSizeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowGridSizeFlagsNV                                       outputGridSize\n            "
            },
            {
                "name": "hintGridSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowGridSizeFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowGridSizeFlagsNV                       hintGridSize\n            "
            },
            {
                "name": "performanceLevel",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowPerformanceLevelNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowPerformanceLevelNV                    performanceLevel\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowSessionCreateFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowSessionCreateFlagsNV                  flags\n        "
            }
        ],
        "VkOpticalFlowSessionCreatePrivateDataInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                              pNext\n            "
            },
            {
                "name": "id",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                           id\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                           size\n            "
            },
            {
                "name": "pPrivateData",
                "const": true,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*                                                        pPrivateData\n        "
            }
        ],
        "VkOpticalFlowExecuteInfoNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkOpticalFlowExecuteFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkOpticalFlowExecuteFlagsNV        flags\n            "
            },
            {
                "name": "regionCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           regionCount\n            "
            },
            {
                "name": "pRegions",
                "const": true,
                "length": [
                    "regionCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D*                  pRegions\n        "
            }
        ],
        "VkPhysicalDeviceFaultFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "deviceFault",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            deviceFault\n            "
            },
            {
                "name": "deviceFaultVendorBinary",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            deviceFaultVendorBinary\n        "
            }
        ],
        "VkDeviceFaultAddressInfoEXT": [
            {
                "name": "addressType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceFaultAddressTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceFaultAddressTypeEXT         addressType\n            "
            },
            {
                "name": "reportedAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress                     reportedAddress\n            "
            },
            {
                "name": "addressPrecision",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                        addressPrecision\n        "
            }
        ],
        "VkDeviceFaultVendorInfoEXT": [
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char          description[VK_MAX_DESCRIPTION_SIZE]Free-form description of the fault\n            "
            },
            {
                "name": "vendorFaultCode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                            vendorFaultCode\n            "
            },
            {
                "name": "vendorFaultData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                            vendorFaultData\n        "
            }
        ],
        "VkDeviceFaultCountsEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "addressInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            addressInfoCount\n            "
            },
            {
                "name": "vendorInfoCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            vendorInfoCount\n            "
            },
            {
                "name": "vendorBinarySize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                        vendorBinarySizeSpecified in bytes\n        "
            }
        ],
        "VkDeviceFaultInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "description",
                "const": false,
                "length": [
                    "VK_MAX_DESCRIPTION_SIZE"
                ],
                "type": "char",
                "num_indirection": 0,
                "value": "",
                "header": "char          description[VK_MAX_DESCRIPTION_SIZE]Free-form description of the fault\n            "
            },
            {
                "name": "pAddressInfos",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceFaultAddressInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "VkDeviceFaultAddressInfoEXT* pAddressInfos\n            "
            },
            {
                "name": "pVendorInfos",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceFaultVendorInfoEXT",
                "num_indirection": 1,
                "value": "",
                "header": "VkDeviceFaultVendorInfoEXT*  pVendorInfos\n            "
            },
            {
                "name": "pVendorBinaryData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*                        pVendorBinaryData\n        "
            }
        ],
        "VkDeviceFaultVendorBinaryHeaderVersionOneEXT": [
            {
                "name": "headerSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               headerSize\n            "
            },
            {
                "name": "headerVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceFaultVendorBinaryHeaderVersionEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceFaultVendorBinaryHeaderVersionEXT headerVersion\n            "
            },
            {
                "name": "vendorID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               vendorID\n            "
            },
            {
                "name": "deviceID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               deviceID\n            "
            },
            {
                "name": "driverVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               driverVersion\n            "
            },
            {
                "name": "pipelineCacheUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                pipelineCacheUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "applicationNameOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               applicationNameOffset\n            "
            },
            {
                "name": "applicationVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               applicationVersion\n            "
            },
            {
                "name": "engineNameOffset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               engineNameOffset\n            "
            },
            {
                "name": "engineVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               engineVersion\n            "
            },
            {
                "name": "apiVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t               apiVersion\n        "
            }
        ],
        "VkPhysicalDevicePipelineLibraryGroupHandlesFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                            pNext\n            "
            },
            {
                "name": "pipelineLibraryGroupHandles",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                                               pipelineLibraryGroupHandles\n        "
            }
        ],
        "VkDepthBiasInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "depthBiasConstantFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                              depthBiasConstantFactor\n            "
            },
            {
                "name": "depthBiasClamp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                              depthBiasClamp\n            "
            },
            {
                "name": "depthBiasSlopeFactor",
                "const": false,
                "length": [
                    ""
                ],
                "type": "float",
                "num_indirection": 0,
                "value": "",
                "header": "float                              depthBiasSlopeFactor\n        "
            }
        ],
        "VkDepthBiasRepresentationInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*        pNext\n            "
            },
            {
                "name": "depthBiasRepresentation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDepthBiasRepresentationEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkDepthBiasRepresentationEXT       depthBiasRepresentation\n            "
            },
            {
                "name": "depthBiasExact",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           depthBiasExact\n        "
            }
        ],
        "VkDecompressMemoryRegionNV": [
            {
                "name": "srcAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress   srcAddress\n            "
            },
            {
                "name": "dstAddress",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceAddress",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceAddress   dstAddress\n            "
            },
            {
                "name": "compressedSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize      compressedSizeSpecified in bytes\n            "
            },
            {
                "name": "decompressedSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize      decompressedSizeSpecified in bytes\n            "
            },
            {
                "name": "decompressionMethod",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryDecompressionMethodFlagsNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryDecompressionMethodFlagsNV decompressionMethod\n        "
            }
        ],
        "VkPhysicalDeviceShaderCoreBuiltinsPropertiesARM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "shaderCoreMask",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                   shaderCoreMask\n            "
            },
            {
                "name": "shaderCoreCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       shaderCoreCount\n            "
            },
            {
                "name": "shaderWarpsPerCore",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                       shaderWarpsPerCore\n        "
            }
        ],
        "VkPhysicalDeviceShaderCoreBuiltinsFeaturesARM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "shaderCoreBuiltins",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                 shaderCoreBuiltins\n        "
            }
        ],
        "VkFrameBoundaryEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_FRAME_BOUNDARY_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                        pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkFrameBoundaryFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkFrameBoundaryFlagsEXT            flags\n            "
            },
            {
                "name": "frameID",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                                           frameID\n            "
            },
            {
                "name": "imageCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           imageCount\n            "
            },
            {
                "name": "pImages",
                "const": true,
                "length": [
                    "imageCount"
                ],
                "type": "VkImage",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImage*    pImages\n            "
            },
            {
                "name": "bufferCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                           bufferCount\n            "
            },
            {
                "name": "pBuffers",
                "const": true,
                "length": [
                    "bufferCount"
                ],
                "type": "VkBuffer",
                "num_indirection": 1,
                "value": "",
                "header": "const VkBuffer*  pBuffers\n            "
            },
            {
                "name": "tagName",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint64_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint64_t                           tagName\n            "
            },
            {
                "name": "tagSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                             tagSize\n            "
            },
            {
                "name": "pTag",
                "const": true,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*                        pTag\n        "
            }
        ],
        "VkPhysicalDeviceFrameBoundaryFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "frameBoundary",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                 frameBoundary\n        "
            }
        ],
        "VkPhysicalDeviceDynamicRenderingUnusedAttachmentsFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*    pNext\n            "
            },
            {
                "name": "dynamicRenderingUnusedAttachments",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                 dynamicRenderingUnusedAttachments\n        "
            }
        ],
        "VkSurfacePresentModeEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "presentMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentModeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentModeKHR                    presentMode\n        "
            }
        ],
        "VkSurfacePresentScalingCapabilitiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                    pNext\n            "
            },
            {
                "name": "supportedPresentScaling",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentScalingFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentScalingFlagsEXT supportedPresentScaling\n            "
            },
            {
                "name": "supportedPresentGravityX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentGravityFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentGravityFlagsEXT supportedPresentGravityX\n            "
            },
            {
                "name": "supportedPresentGravityY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentGravityFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentGravityFlagsEXT supportedPresentGravityY\n            "
            },
            {
                "name": "minScaledImageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D               minScaledImageExtentSupported minimum image width and height for the surface when scaling is used\n            "
            },
            {
                "name": "maxScaledImageExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D               maxScaledImageExtentSupported maximum image width and height for the surface when scaling is used\n        "
            }
        ],
        "VkSurfacePresentModeCompatibilityEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                    pNext\n            "
            },
            {
                "name": "presentModeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                 presentModeCount\n            "
            },
            {
                "name": "pPresentModes",
                "const": false,
                "length": [
                    "presentModeCount"
                ],
                "type": "VkPresentModeKHR",
                "num_indirection": 1,
                "value": "",
                "header": "VkPresentModeKHR* pPresentModesOutput list of present modes compatible with the one specified in VkSurfacePresentModeEXT\n        "
            }
        ],
        "VkPhysicalDeviceSwapchainMaintenance1FeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "swapchainMaintenance1",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            swapchainMaintenance1\n        "
            }
        ],
        "VkSwapchainPresentFenceInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "swapchainCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            swapchainCountCopy of VkPresentInfoKHR::swapchainCount\n            "
            },
            {
                "name": "pFences",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "VkFence",
                "num_indirection": 1,
                "value": "",
                "header": "const VkFence* pFencesFence to signal for each swapchain\n        "
            }
        ],
        "VkSwapchainPresentModesCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "presentModeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            presentModeCount"
            },
            {
                "name": "pPresentModes",
                "const": true,
                "length": [
                    "presentModeCount"
                ],
                "type": "VkPresentModeKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPresentModeKHR* pPresentModes"
            }
        ],
        "VkSwapchainPresentModeInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*         pNext\n            "
            },
            {
                "name": "swapchainCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            swapchainCountCopy of VkPresentInfoKHR::swapchainCount\n            "
            },
            {
                "name": "pPresentModes",
                "const": true,
                "length": [
                    "swapchainCount"
                ],
                "type": "VkPresentModeKHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPresentModeKHR* pPresentModesPresentation mode for each swapchain\n        "
            }
        ],
        "VkSwapchainPresentScalingCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                 pNext\n            "
            },
            {
                "name": "scalingBehavior",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentScalingFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentScalingFlagsEXT    scalingBehavior\n            "
            },
            {
                "name": "presentGravityX",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentGravityFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentGravityFlagsEXT    presentGravityX\n            "
            },
            {
                "name": "presentGravityY",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkPresentGravityFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkPresentGravityFlagsEXT    presentGravityY\n        "
            }
        ],
        "VkReleaseSwapchainImagesInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                 pNext\n            "
            },
            {
                "name": "swapchain",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkSwapchainKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkSwapchainKHR            swapchainSwapchain for which images are being released\n            "
            },
            {
                "name": "imageIndexCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                    imageIndexCountNumber of indices to release\n            "
            },
            {
                "name": "pImageIndices",
                "const": true,
                "length": [
                    "imageIndexCount"
                ],
                "type": "uint32_t",
                "num_indirection": 1,
                "value": "",
                "header": "const uint32_t*       pImageIndicesIndices of which presentable images to release\n        "
            }
        ],
        "VkPhysicalDeviceDepthBiasControlFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "depthBiasControl",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           depthBiasControl\n            "
            },
            {
                "name": "leastRepresentableValueForceUnormRepresentation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           leastRepresentableValueForceUnormRepresentation\n            "
            },
            {
                "name": "floatRepresentation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           floatRepresentation\n            "
            },
            {
                "name": "depthBiasExact",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           depthBiasExact\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingInvocationReorderFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                                      pNext\n            "
            },
            {
                "name": "rayTracingInvocationReorder",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                                         rayTracingInvocationReorder\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingInvocationReorderPropertiesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void* pNext\n            "
            },
            {
                "name": "rayTracingInvocationReorderReorderingHint",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkRayTracingInvocationReorderModeNV",
                "num_indirection": 0,
                "value": "",
                "header": "VkRayTracingInvocationReorderModeNV                                    rayTracingInvocationReorderReorderingHint\n        "
            }
        ],
        "VkDirectDriverLoadingInfoLUNARG": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                  pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDirectDriverLoadingFlagsLUNARG",
                "num_indirection": 0,
                "value": "",
                "header": "VkDirectDriverLoadingFlagsLUNARG                                             flags\n            "
            },
            {
                "name": "pfnGetInstanceProcAddr",
                "const": false,
                "length": [
                    ""
                ],
                "type": "PFN_vkGetInstanceProcAddrLUNARG",
                "num_indirection": 0,
                "value": "",
                "header": "PFN_vkGetInstanceProcAddrLUNARG                        pfnGetInstanceProcAddr\n        "
            }
        ],
        "VkDirectDriverLoadingListLUNARG": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                 pNext\n            "
            },
            {
                "name": "mode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDirectDriverLoadingModeLUNARG",
                "num_indirection": 0,
                "value": "",
                "header": "VkDirectDriverLoadingModeLUNARG                             mode\n            "
            },
            {
                "name": "driverCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                    driverCount\n            "
            },
            {
                "name": "pDrivers",
                "const": true,
                "length": [
                    "driverCount"
                ],
                "type": "VkDirectDriverLoadingInfoLUNARG",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDirectDriverLoadingInfoLUNARG*    pDrivers\n        "
            }
        ],
        "VkPhysicalDeviceMultiviewPerViewViewportsFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "multiviewPerViewViewports",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewPerViewViewports\n        "
            }
        ],
        "VkPhysicalDeviceRayTracingPositionFetchFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "rayTracingPositionFetch",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     rayTracingPositionFetch\n        "
            }
        ],
        "VkDeviceImageSubresourceInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                              pNext\n            "
            },
            {
                "name": "pCreateInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkImageCreateInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageCreateInfo*                                                 pCreateInfo\n            "
            },
            {
                "name": "pSubresource",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkImageSubresource2KHR",
                "num_indirection": 1,
                "value": "",
                "header": "const VkImageSubresource2KHR*                                            pSubresource\n        "
            }
        ],
        "VkPhysicalDeviceShaderCorePropertiesARM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                          pNext\n            "
            },
            {
                "name": "pixelRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         pixelRate\n            "
            },
            {
                "name": "texelRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         texelRate\n            "
            },
            {
                "name": "fmaRate",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         fmaRate\n        "
            }
        ],
        "VkPhysicalDeviceMultiviewPerViewRenderAreasFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "multiviewPerViewRenderAreas",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         multiviewPerViewRenderAreas\n        "
            }
        ],
        "VkMultiviewPerViewRenderAreasRenderPassBeginInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                      pNext\n            "
            },
            {
                "name": "perViewRenderAreaCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t         perViewRenderAreaCount\n            "
            },
            {
                "name": "pPerViewRenderAreas",
                "const": true,
                "length": [
                    "perViewRenderAreaCount"
                ],
                "type": "VkRect2D",
                "num_indirection": 1,
                "value": "",
                "header": "const VkRect2D*  pPerViewRenderAreas\n        "
            }
        ],
        "VkQueryLowLatencySupportNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void* pNext\n            "
            },
            {
                "name": "pQueriedLowLatencyData",
                "const": false,
                "length": [
                    ""
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "void*                                       pQueriedLowLatencyData\n        "
            }
        ],
        "VkMemoryMapInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*      pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryMapFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryMapFlags flags\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory memory\n            "
            },
            {
                "name": "offset",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     offset\n            "
            },
            {
                "name": "size",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceSize",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceSize                     size\n        "
            }
        ],
        "VkMemoryUnmapInfoKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*            pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkMemoryUnmapFlagsKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkMemoryUnmapFlagsKHR  flags\n            "
            },
            {
                "name": "memory",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkDeviceMemory",
                "num_indirection": 0,
                "value": "",
                "header": "VkDeviceMemory       memory\n        "
            }
        ],
        "VkPhysicalDeviceShaderObjectFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                           pNext\n            "
            },
            {
                "name": "shaderObject",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                                                              shaderObject\n        "
            }
        ],
        "VkPhysicalDeviceShaderObjectPropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                                             pNext\n            "
            },
            {
                "name": "shaderBinaryUUID",
                "const": false,
                "length": [
                    "VK_UUID_SIZE"
                ],
                "type": "uint8_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint8_t                                                              shaderBinaryUUID[VK_UUID_SIZE]\n            "
            },
            {
                "name": "shaderBinaryVersion",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                             shaderBinaryVersion\n        "
            }
        ],
        "VkShaderCreateInfoEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT",
                "header": "VkStructureType       sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                                             pNext\n            "
            },
            {
                "name": "flags",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderCreateFlagsEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderCreateFlagsEXT                                  flags\n            "
            },
            {
                "name": "stage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlagBits",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlagBits                                                   stage\n            "
            },
            {
                "name": "nextStage",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags                                      nextStage\n            "
            },
            {
                "name": "codeType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderCodeTypeEXT",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderCodeTypeEXT                                                     codeType\n            "
            },
            {
                "name": "codeSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "size_t",
                "num_indirection": 0,
                "value": "",
                "header": "size_t                                                                  codeSize\n            "
            },
            {
                "name": "pCode",
                "const": true,
                "length": [
                    "codeSize"
                ],
                "type": "void",
                "num_indirection": 1,
                "value": "",
                "header": "const void*                                              pCode\n            "
            },
            {
                "name": "pName",
                "const": true,
                "length": [
                    "null-terminated"
                ],
                "type": "char",
                "num_indirection": 1,
                "value": "",
                "header": "const char*                       pName\n            "
            },
            {
                "name": "setLayoutCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                setLayoutCount\n            "
            },
            {
                "name": "pSetLayouts",
                "const": true,
                "length": [
                    "setLayoutCount"
                ],
                "type": "VkDescriptorSetLayout",
                "num_indirection": 1,
                "value": "",
                "header": "const VkDescriptorSetLayout*       pSetLayouts\n            "
            },
            {
                "name": "pushConstantRangeCount",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                                                pushConstantRangeCount\n            "
            },
            {
                "name": "pPushConstantRanges",
                "const": true,
                "length": [
                    "pushConstantRangeCount"
                ],
                "type": "VkPushConstantRange",
                "num_indirection": 1,
                "value": "",
                "header": "const VkPushConstantRange* pPushConstantRanges\n            "
            },
            {
                "name": "pSpecializationInfo",
                "const": true,
                "length": [
                    ""
                ],
                "type": "VkSpecializationInfo",
                "num_indirection": 1,
                "value": "",
                "header": "const VkSpecializationInfo*                             pSpecializationInfo\n        "
            }
        ],
        "VkPhysicalDeviceShaderTileImageFeaturesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "shaderTileImageColorReadAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           shaderTileImageColorReadAccess\n            "
            },
            {
                "name": "shaderTileImageDepthReadAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           shaderTileImageDepthReadAccess\n            "
            },
            {
                "name": "shaderTileImageStencilReadAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           shaderTileImageStencilReadAccess\n        "
            }
        ],
        "VkPhysicalDeviceShaderTileImagePropertiesEXT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "shaderTileImageCoherentReadAccelerated",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        shaderTileImageCoherentReadAccelerated\n            "
            },
            {
                "name": "shaderTileImageReadSampleFromPixelRateInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        shaderTileImageReadSampleFromPixelRateInvocation\n            "
            },
            {
                "name": "shaderTileImageReadFromHelperInvocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32        shaderTileImageReadFromHelperInvocation\n        "
            }
        ],
        "VkPhysicalDeviceCooperativeMatrixFeaturesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*               pNext\n            "
            },
            {
                "name": "cooperativeMatrix",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            cooperativeMatrix\n            "
            },
            {
                "name": "cooperativeMatrixRobustBufferAccess",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            cooperativeMatrixRobustBufferAccess\n        "
            }
        ],
        "VkCooperativeMatrixPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "MSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            MSize\n            "
            },
            {
                "name": "NSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            NSize\n            "
            },
            {
                "name": "KSize",
                "const": false,
                "length": [
                    ""
                ],
                "type": "uint32_t",
                "num_indirection": 0,
                "value": "",
                "header": "uint32_t                            KSize\n            "
            },
            {
                "name": "AType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeKHR                  AType\n            "
            },
            {
                "name": "BType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeKHR                  BType\n            "
            },
            {
                "name": "CType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeKHR                  CType\n            "
            },
            {
                "name": "ResultType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkComponentTypeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkComponentTypeKHR                  ResultType\n            "
            },
            {
                "name": "saturatingAccumulation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                            saturatingAccumulation\n            "
            },
            {
                "name": "scope",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkScopeKHR",
                "num_indirection": 0,
                "value": "",
                "header": "VkScopeKHR                          scope\n        "
            }
        ],
        "VkPhysicalDeviceCooperativeMatrixPropertiesKHR": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                               pNext\n            "
            },
            {
                "name": "cooperativeMatrixSupportedStages",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkShaderStageFlags",
                "num_indirection": 0,
                "value": "",
                "header": "VkShaderStageFlags              cooperativeMatrixSupportedStages\n        "
            }
        ],
        "VkPhysicalDeviceCubicClampFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "cubicRangeClamp",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         cubicRangeClamp\n        "
            }
        ],
        "VkPhysicalDeviceYcbcrDegammaFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*        pNext\n            "
            },
            {
                "name": "ycbcrDegamma",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                     ycbcrDegamma\n        "
            }
        ],
        "VkSamplerYcbcrConversionYcbcrDegammaCreateInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*              pNext\n            "
            },
            {
                "name": "enableYDegamma",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           enableYDegamma\n            "
            },
            {
                "name": "enableCbCrDegamma",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                           enableCbCrDegamma\n        "
            }
        ],
        "VkPhysicalDeviceCubicWeightsFeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*            pNext\n            "
            },
            {
                "name": "selectableCubicWeights",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                         selectableCubicWeights\n        "
            }
        ],
        "VkSamplerCubicWeightsCreateInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*      pNext\n            "
            },
            {
                "name": "cubicWeights",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCubicFilterWeightsQCOM",
                "num_indirection": 0,
                "value": "",
                "header": "VkCubicFilterWeightsQCOM         cubicWeights\n        "
            }
        ],
        "VkBlitImageCubicWeightsInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*      pNext\n            "
            },
            {
                "name": "cubicWeights",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkCubicFilterWeightsQCOM",
                "num_indirection": 0,
                "value": "",
                "header": "VkCubicFilterWeightsQCOM         cubicWeights\n        "
            }
        ],
        "VkPhysicalDeviceImageProcessing2FeaturesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*   pNext\n            "
            },
            {
                "name": "textureBlockMatch2",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                      textureBlockMatch2\n        "
            }
        ],
        "VkPhysicalDeviceImageProcessing2PropertiesQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                        pNext\n            "
            },
            {
                "name": "maxBlockMatchWindow",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D  maxBlockMatchWindow\n        "
            }
        ],
        "VkSamplerBlockMatchWindowCreateInfoQCOM": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": true,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "const void*                  pNext\n            "
            },
            {
                "name": "windowExtent",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkExtent2D",
                "num_indirection": 0,
                "value": "",
                "header": "VkExtent2D                                   windowExtent\n            "
            },
            {
                "name": "windowCompareMode",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBlockMatchWindowCompareModeQCOM",
                "num_indirection": 0,
                "value": "",
                "header": "VkBlockMatchWindowCompareModeQCOM            windowCompareMode\n        "
            }
        ],
        "VkPhysicalDeviceDescriptorPoolOverallocationFeaturesNV": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*     pNext\n            "
            },
            {
                "name": "descriptorPoolOverallocation",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkBool32",
                "num_indirection": 0,
                "value": "",
                "header": "VkBool32                                        descriptorPoolOverallocation\n        "
            }
        ],
        "VkPhysicalDeviceLayeredDriverPropertiesMSFT": [
            {
                "name": "sType",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkStructureType",
                "num_indirection": 0,
                "value": "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT",
                "header": "VkStructureType sType\n            "
            },
            {
                "name": "pNext",
                "const": false,
                "length": [
                    ""
                ],
                "type": "pNext",
                "num_indirection": 0,
                "value": "",
                "header": "void*                       pNext\n            "
            },
            {
                "name": "underlyingAPI",
                "const": false,
                "length": [
                    ""
                ],
                "type": "VkLayeredDriverUnderlyingApiMSFT",
                "num_indirection": 0,
                "value": "",
                "header": "VkLayeredDriverUnderlyingApiMSFT            underlyingAPI\n        "
            }
        ]
    },
    "commands": {
        "vkCreateInstance": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateInstance(\nconst VkInstanceCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkInstance* pInstance\n)",
            "params": [
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkInstanceCreateInfo",
                    "header": "const VkInstanceCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance* pInstance\n        ",
                    "name": "pInstance"
                }
            ]
        },
        "vkDestroyInstance": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyInstance(\nVkInstance instance,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkEnumeratePhysicalDevices": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumeratePhysicalDevices(\nVkInstance instance,\n uint32_t* pPhysicalDeviceCount,\n VkPhysicalDevice* pPhysicalDevices\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPhysicalDeviceCount\n            ",
                    "name": "pPhysicalDeviceCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPhysicalDeviceCount"
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice* pPhysicalDevices\n        ",
                    "name": "pPhysicalDevices"
                }
            ]
        },
        "vkGetDeviceProcAddr": {
            "sync": false,
            "type": "PFN_vkVoidFunction",
            "num_indirection": 0,
            "header": "PFN_vkVoidFunction vkGetDeviceProcAddr(\nVkDevice device,\n const char* pName\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "null-terminated"
                    ],
                    "type": "char",
                    "header": "const char* pName\n        ",
                    "name": "pName"
                }
            ]
        },
        "vkGetInstanceProcAddr": {
            "sync": false,
            "type": "PFN_vkVoidFunction",
            "num_indirection": 0,
            "header": "PFN_vkVoidFunction vkGetInstanceProcAddr(\nVkInstance instance,\n const char* pName\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "null-terminated"
                    ],
                    "type": "char",
                    "header": "const char* pName\n        ",
                    "name": "pName"
                }
            ]
        },
        "vkGetPhysicalDeviceProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceProperties(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceProperties* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceProperties",
                    "header": "VkPhysicalDeviceProperties* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceQueueFamilyProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceQueueFamilyProperties(\nVkPhysicalDevice physicalDevice,\n uint32_t* pQueueFamilyPropertyCount,\n VkQueueFamilyProperties* pQueueFamilyProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pQueueFamilyPropertyCount\n            ",
                    "name": "pQueueFamilyPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pQueueFamilyPropertyCount"
                    ],
                    "type": "VkQueueFamilyProperties",
                    "header": "VkQueueFamilyProperties* pQueueFamilyProperties\n        ",
                    "name": "pQueueFamilyProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceMemoryProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceMemoryProperties(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceMemoryProperties* pMemoryProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceMemoryProperties",
                    "header": "VkPhysicalDeviceMemoryProperties* pMemoryProperties\n        ",
                    "name": "pMemoryProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceFeatures": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceFeatures(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceFeatures* pFeatures\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceFeatures",
                    "header": "VkPhysicalDeviceFeatures* pFeatures\n        ",
                    "name": "pFeatures"
                }
            ]
        },
        "vkGetPhysicalDeviceFormatProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceFormatProperties(\nVkPhysicalDevice physicalDevice,\n VkFormat format,\n VkFormatProperties* pFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFormat",
                    "header": "VkFormat format\n            ",
                    "name": "format"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFormatProperties",
                    "header": "VkFormatProperties* pFormatProperties\n        ",
                    "name": "pFormatProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceImageFormatProperties": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceImageFormatProperties(\nVkPhysicalDevice physicalDevice,\n VkFormat format,\n VkImageType type,\n VkImageTiling tiling,\n VkImageUsageFlags usage,\n VkImageCreateFlags flags,\n VkImageFormatProperties* pImageFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFormat",
                    "header": "VkFormat format\n            ",
                    "name": "format"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageType",
                    "header": "VkImageType type\n            ",
                    "name": "type"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageTiling",
                    "header": "VkImageTiling tiling\n            ",
                    "name": "tiling"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageUsageFlags",
                    "header": "VkImageUsageFlags usage\n            ",
                    "name": "usage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageCreateFlags",
                    "header": "VkImageCreateFlags flags\n            ",
                    "name": "flags"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageFormatProperties",
                    "header": "VkImageFormatProperties* pImageFormatProperties\n        ",
                    "name": "pImageFormatProperties"
                }
            ]
        },
        "vkCreateDevice": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDevice(\nVkPhysicalDevice physicalDevice,\n const VkDeviceCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDevice* pDevice\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceCreateInfo",
                    "header": "const VkDeviceCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice* pDevice\n        ",
                    "name": "pDevice"
                }
            ]
        },
        "vkDestroyDevice": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDevice(\nVkDevice device,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkEnumerateInstanceVersion": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumerateInstanceVersion(\nuint32_t* pApiVersion\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pApiVersion\n        ",
                    "name": "pApiVersion"
                }
            ]
        },
        "vkEnumerateInstanceLayerProperties": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumerateInstanceLayerProperties(\nuint32_t* pPropertyCount,\n VkLayerProperties* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkLayerProperties",
                    "header": "VkLayerProperties* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkEnumerateInstanceExtensionProperties": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumerateInstanceExtensionProperties(\nconst char* pLayerName,\n uint32_t* pPropertyCount,\n VkExtensionProperties* pProperties\n)",
            "params": [
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "null-terminated"
                    ],
                    "type": "char",
                    "header": "const char* pLayerName\n            ",
                    "name": "pLayerName"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkExtensionProperties",
                    "header": "VkExtensionProperties* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkEnumerateDeviceLayerProperties": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumerateDeviceLayerProperties(\nVkPhysicalDevice physicalDevice,\n uint32_t* pPropertyCount,\n VkLayerProperties* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkLayerProperties",
                    "header": "VkLayerProperties* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkEnumerateDeviceExtensionProperties": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumerateDeviceExtensionProperties(\nVkPhysicalDevice physicalDevice,\n const char* pLayerName,\n uint32_t* pPropertyCount,\n VkExtensionProperties* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "null-terminated"
                    ],
                    "type": "char",
                    "header": "const char* pLayerName\n            ",
                    "name": "pLayerName"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkExtensionProperties",
                    "header": "VkExtensionProperties* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetDeviceQueue": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceQueue(\nVkDevice device,\n uint32_t queueFamilyIndex,\n uint32_t queueIndex,\n VkQueue* pQueue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queueFamilyIndex\n            ",
                    "name": "queueFamilyIndex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queueIndex\n            ",
                    "name": "queueIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue* pQueue\n        ",
                    "name": "pQueue"
                }
            ]
        },
        "vkQueueSubmit": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkQueueSubmit(\nVkQueue queue,\n uint32_t submitCount,\n const VkSubmitInfo* pSubmits,\n VkFence fence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t submitCount\n            ",
                    "name": "submitCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "submitCount"
                    ],
                    "type": "VkSubmitInfo",
                    "header": "const VkSubmitInfo* pSubmits\n            ",
                    "name": "pSubmits"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence fence\n        ",
                    "name": "fence"
                }
            ]
        },
        "vkQueueWaitIdle": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkQueueWaitIdle(\nVkQueue queue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n        ",
                    "name": "queue"
                }
            ]
        },
        "vkDeviceWaitIdle": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkDeviceWaitIdle(\nVkDevice device\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                }
            ]
        },
        "vkAllocateMemory": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAllocateMemory(\nVkDevice device,\n const VkMemoryAllocateInfo* pAllocateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDeviceMemory* pMemory\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryAllocateInfo",
                    "header": "const VkMemoryAllocateInfo* pAllocateInfo\n            ",
                    "name": "pAllocateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory* pMemory\n        ",
                    "name": "pMemory"
                }
            ]
        },
        "vkFreeMemory": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkFreeMemory(\nVkDevice device,\n VkDeviceMemory memory,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory memory\n            ",
                    "name": "memory"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkMapMemory": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkMapMemory(\nVkDevice device,\n VkDeviceMemory memory,\n VkDeviceSize offset,\n VkDeviceSize size,\n VkMemoryMapFlags flags,\n void** ppData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory memory\n            ",
                    "name": "memory"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize size\n            ",
                    "name": "size"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryMapFlags",
                    "header": "VkMemoryMapFlags flags\n            ",
                    "name": "flags"
                },
                {
                    "const": false,
                    "num_indirection": 2,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void** ppData\n        ",
                    "name": "ppData"
                }
            ]
        },
        "vkUnmapMemory": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkUnmapMemory(\nVkDevice device,\n VkDeviceMemory memory\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory memory\n        ",
                    "name": "memory"
                }
            ]
        },
        "vkFlushMappedMemoryRanges": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkFlushMappedMemoryRanges(\nVkDevice device,\n uint32_t memoryRangeCount,\n const VkMappedMemoryRange* pMemoryRanges\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t memoryRangeCount\n            ",
                    "name": "memoryRangeCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "memoryRangeCount"
                    ],
                    "type": "VkMappedMemoryRange",
                    "header": "const VkMappedMemoryRange* pMemoryRanges\n        ",
                    "name": "pMemoryRanges"
                }
            ]
        },
        "vkInvalidateMappedMemoryRanges": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkInvalidateMappedMemoryRanges(\nVkDevice device,\n uint32_t memoryRangeCount,\n const VkMappedMemoryRange* pMemoryRanges\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t memoryRangeCount\n            ",
                    "name": "memoryRangeCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "memoryRangeCount"
                    ],
                    "type": "VkMappedMemoryRange",
                    "header": "const VkMappedMemoryRange* pMemoryRanges\n        ",
                    "name": "pMemoryRanges"
                }
            ]
        },
        "vkGetDeviceMemoryCommitment": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceMemoryCommitment(\nVkDevice device,\n VkDeviceMemory memory,\n VkDeviceSize* pCommittedMemoryInBytes\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory memory\n            ",
                    "name": "memory"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize* pCommittedMemoryInBytes\n        ",
                    "name": "pCommittedMemoryInBytes"
                }
            ]
        },
        "vkGetBufferMemoryRequirements": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetBufferMemoryRequirements(\nVkDevice device,\n VkBuffer buffer,\n VkMemoryRequirements* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements",
                    "header": "VkMemoryRequirements* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkBindBufferMemory": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindBufferMemory(\nVkDevice device,\n VkBuffer buffer,\n VkDeviceMemory memory,\n VkDeviceSize memoryOffset\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory memory\n            ",
                    "name": "memory"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize memoryOffset\n        ",
                    "name": "memoryOffset"
                }
            ]
        },
        "vkGetImageMemoryRequirements": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageMemoryRequirements(\nVkDevice device,\n VkImage image,\n VkMemoryRequirements* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements",
                    "header": "VkMemoryRequirements* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkBindImageMemory": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindImageMemory(\nVkDevice device,\n VkImage image,\n VkDeviceMemory memory,\n VkDeviceSize memoryOffset\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory memory\n            ",
                    "name": "memory"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize memoryOffset\n        ",
                    "name": "memoryOffset"
                }
            ]
        },
        "vkGetImageSparseMemoryRequirements": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageSparseMemoryRequirements(\nVkDevice device,\n VkImage image,\n uint32_t* pSparseMemoryRequirementCount,\n VkSparseImageMemoryRequirements* pSparseMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSparseMemoryRequirementCount\n            ",
                    "name": "pSparseMemoryRequirementCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSparseMemoryRequirementCount"
                    ],
                    "type": "VkSparseImageMemoryRequirements",
                    "header": "VkSparseImageMemoryRequirements* pSparseMemoryRequirements\n        ",
                    "name": "pSparseMemoryRequirements"
                }
            ]
        },
        "vkGetPhysicalDeviceSparseImageFormatProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceSparseImageFormatProperties(\nVkPhysicalDevice physicalDevice,\n VkFormat format,\n VkImageType type,\n VkSampleCountFlagBits samples,\n VkImageUsageFlags usage,\n VkImageTiling tiling,\n uint32_t* pPropertyCount,\n VkSparseImageFormatProperties* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFormat",
                    "header": "VkFormat format\n            ",
                    "name": "format"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageType",
                    "header": "VkImageType type\n            ",
                    "name": "type"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSampleCountFlagBits",
                    "header": "VkSampleCountFlagBits samples\n            ",
                    "name": "samples"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageUsageFlags",
                    "header": "VkImageUsageFlags usage\n            ",
                    "name": "usage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageTiling",
                    "header": "VkImageTiling tiling\n            ",
                    "name": "tiling"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkSparseImageFormatProperties",
                    "header": "VkSparseImageFormatProperties* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkQueueBindSparse": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkQueueBindSparse(\nVkQueue queue,\n uint32_t bindInfoCount,\n const VkBindSparseInfo* pBindInfo,\n VkFence fence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindInfoCount\n            ",
                    "name": "bindInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindInfoCount"
                    ],
                    "type": "VkBindSparseInfo",
                    "header": "const VkBindSparseInfo* pBindInfo\n            ",
                    "name": "pBindInfo"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence fence\n        ",
                    "name": "fence"
                }
            ]
        },
        "vkCreateFence": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateFence(\nVkDevice device,\n const VkFenceCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkFence* pFence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFenceCreateInfo",
                    "header": "const VkFenceCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence* pFence\n        ",
                    "name": "pFence"
                }
            ]
        },
        "vkDestroyFence": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyFence(\nVkDevice device,\n VkFence fence,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence fence\n            ",
                    "name": "fence"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkResetFences": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkResetFences(\nVkDevice device,\n uint32_t fenceCount,\n const VkFence* pFences\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t fenceCount\n            ",
                    "name": "fenceCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "fenceCount"
                    ],
                    "type": "VkFence",
                    "header": "const VkFence* pFences\n        ",
                    "name": "pFences"
                }
            ]
        },
        "vkGetFenceStatus": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetFenceStatus(\nVkDevice device,\n VkFence fence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence fence\n        ",
                    "name": "fence"
                }
            ]
        },
        "vkWaitForFences": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkWaitForFences(\nVkDevice device,\n uint32_t fenceCount,\n const VkFence* pFences,\n VkBool32 waitAll,\n uint64_t timeout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t fenceCount\n            ",
                    "name": "fenceCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "fenceCount"
                    ],
                    "type": "VkFence",
                    "header": "const VkFence* pFences\n            ",
                    "name": "pFences"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 waitAll\n            ",
                    "name": "waitAll"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t timeout\n        ",
                    "name": "timeout"
                }
            ]
        },
        "vkCreateSemaphore": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateSemaphore(\nVkDevice device,\n const VkSemaphoreCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSemaphore* pSemaphore\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphoreCreateInfo",
                    "header": "const VkSemaphoreCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphore",
                    "header": "VkSemaphore* pSemaphore\n        ",
                    "name": "pSemaphore"
                }
            ]
        },
        "vkDestroySemaphore": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroySemaphore(\nVkDevice device,\n VkSemaphore semaphore,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphore",
                    "header": "VkSemaphore semaphore\n            ",
                    "name": "semaphore"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateEvent": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateEvent(\nVkDevice device,\n const VkEventCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkEvent* pEvent\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkEventCreateInfo",
                    "header": "const VkEventCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent* pEvent\n        ",
                    "name": "pEvent"
                }
            ]
        },
        "vkDestroyEvent": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyEvent(\nVkDevice device,\n VkEvent event,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent event\n            ",
                    "name": "event"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetEventStatus": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetEventStatus(\nVkDevice device,\n VkEvent event\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent event\n        ",
                    "name": "event"
                }
            ]
        },
        "vkSetEvent": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkSetEvent(\nVkDevice device,\n VkEvent event\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent event\n        ",
                    "name": "event"
                }
            ]
        },
        "vkResetEvent": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkResetEvent(\nVkDevice device,\n VkEvent event\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent event\n        ",
                    "name": "event"
                }
            ]
        },
        "vkCreateQueryPool": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateQueryPool(\nVkDevice device,\n const VkQueryPoolCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkQueryPool* pQueryPool\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPoolCreateInfo",
                    "header": "const VkQueryPoolCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool* pQueryPool\n        ",
                    "name": "pQueryPool"
                }
            ]
        },
        "vkDestroyQueryPool": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyQueryPool(\nVkDevice device,\n VkQueryPool queryPool,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetQueryPoolResults": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetQueryPoolResults(\nVkDevice device,\n VkQueryPool queryPool,\n uint32_t firstQuery,\n uint32_t queryCount,\n size_t dataSize,\n void* pData,\n VkDeviceSize stride,\n VkQueryResultFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n            ",
                    "name": "firstQuery"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queryCount\n            ",
                    "name": "queryCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n            ",
                    "name": "pData"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize stride\n            ",
                    "name": "stride"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryResultFlags",
                    "header": "VkQueryResultFlags flags\n        ",
                    "name": "flags"
                }
            ]
        },
        "vkResetQueryPool": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkResetQueryPool(\nVkDevice device,\n VkQueryPool queryPool,\n uint32_t firstQuery,\n uint32_t queryCount\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n            ",
                    "name": "firstQuery"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queryCount\n        ",
                    "name": "queryCount"
                }
            ]
        },
        "vkResetQueryPoolEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkResetQueryPoolEXT(\nVkDevice device,\n VkQueryPool queryPool,\n uint32_t firstQuery,\n uint32_t queryCount\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n            ",
                    "name": "firstQuery"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queryCount\n        ",
                    "name": "queryCount"
                }
            ]
        },
        "vkCreateBuffer": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateBuffer(\nVkDevice device,\n const VkBufferCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkBuffer* pBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferCreateInfo",
                    "header": "const VkBufferCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer* pBuffer\n        ",
                    "name": "pBuffer"
                }
            ]
        },
        "vkDestroyBuffer": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyBuffer(\nVkDevice device,\n VkBuffer buffer,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateBufferView": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateBufferView(\nVkDevice device,\n const VkBufferViewCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkBufferView* pView\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferViewCreateInfo",
                    "header": "const VkBufferViewCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferView",
                    "header": "VkBufferView* pView\n        ",
                    "name": "pView"
                }
            ]
        },
        "vkDestroyBufferView": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyBufferView(\nVkDevice device,\n VkBufferView bufferView,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferView",
                    "header": "VkBufferView bufferView\n            ",
                    "name": "bufferView"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateImage": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateImage(\nVkDevice device,\n const VkImageCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkImage* pImage\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageCreateInfo",
                    "header": "const VkImageCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage* pImage\n        ",
                    "name": "pImage"
                }
            ]
        },
        "vkDestroyImage": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyImage(\nVkDevice device,\n VkImage image,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetImageSubresourceLayout": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageSubresourceLayout(\nVkDevice device,\n VkImage image,\n const VkImageSubresource* pSubresource,\n VkSubresourceLayout* pLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageSubresource",
                    "header": "const VkImageSubresource* pSubresource\n            ",
                    "name": "pSubresource"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubresourceLayout",
                    "header": "VkSubresourceLayout* pLayout\n        ",
                    "name": "pLayout"
                }
            ]
        },
        "vkCreateImageView": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateImageView(\nVkDevice device,\n const VkImageViewCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkImageView* pView\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageViewCreateInfo",
                    "header": "const VkImageViewCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageView",
                    "header": "VkImageView* pView\n        ",
                    "name": "pView"
                }
            ]
        },
        "vkDestroyImageView": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyImageView(\nVkDevice device,\n VkImageView imageView,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageView",
                    "header": "VkImageView imageView\n            ",
                    "name": "imageView"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateShaderModule": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateShaderModule(\nVkDevice device,\n const VkShaderModuleCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkShaderModule* pShaderModule\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderModuleCreateInfo",
                    "header": "const VkShaderModuleCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderModule",
                    "header": "VkShaderModule* pShaderModule\n        ",
                    "name": "pShaderModule"
                }
            ]
        },
        "vkDestroyShaderModule": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyShaderModule(\nVkDevice device,\n VkShaderModule shaderModule,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderModule",
                    "header": "VkShaderModule shaderModule\n            ",
                    "name": "shaderModule"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreatePipelineCache": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreatePipelineCache(\nVkDevice device,\n const VkPipelineCacheCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkPipelineCache* pPipelineCache\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCacheCreateInfo",
                    "header": "const VkPipelineCacheCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache* pPipelineCache\n        ",
                    "name": "pPipelineCache"
                }
            ]
        },
        "vkDestroyPipelineCache": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyPipelineCache(\nVkDevice device,\n VkPipelineCache pipelineCache,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache pipelineCache\n            ",
                    "name": "pipelineCache"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetPipelineCacheData": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPipelineCacheData(\nVkDevice device,\n VkPipelineCache pipelineCache,\n size_t* pDataSize,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache pipelineCache\n            ",
                    "name": "pipelineCache"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t* pDataSize\n            ",
                    "name": "pDataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pDataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkMergePipelineCaches": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkMergePipelineCaches(\nVkDevice device,\n VkPipelineCache dstCache,\n uint32_t srcCacheCount,\n const VkPipelineCache* pSrcCaches\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache dstCache\n            ",
                    "name": "dstCache"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t srcCacheCount\n            ",
                    "name": "srcCacheCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "srcCacheCount"
                    ],
                    "type": "VkPipelineCache",
                    "header": "const VkPipelineCache* pSrcCaches\n        ",
                    "name": "pSrcCaches"
                }
            ]
        },
        "vkCreateGraphicsPipelines": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateGraphicsPipelines(\nVkDevice device,\n VkPipelineCache pipelineCache,\n uint32_t createInfoCount,\n const VkGraphicsPipelineCreateInfo* pCreateInfos,\n const VkAllocationCallbacks* pAllocator,\n VkPipeline* pPipelines\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache pipelineCache\n            ",
                    "name": "pipelineCache"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t createInfoCount\n            ",
                    "name": "createInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkGraphicsPipelineCreateInfo",
                    "header": "const VkGraphicsPipelineCreateInfo* pCreateInfos\n            ",
                    "name": "pCreateInfos"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline* pPipelines\n        ",
                    "name": "pPipelines"
                }
            ]
        },
        "vkCreateComputePipelines": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateComputePipelines(\nVkDevice device,\n VkPipelineCache pipelineCache,\n uint32_t createInfoCount,\n const VkComputePipelineCreateInfo* pCreateInfos,\n const VkAllocationCallbacks* pAllocator,\n VkPipeline* pPipelines\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache pipelineCache\n            ",
                    "name": "pipelineCache"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t createInfoCount\n            ",
                    "name": "createInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkComputePipelineCreateInfo",
                    "header": "const VkComputePipelineCreateInfo* pCreateInfos\n            ",
                    "name": "pCreateInfos"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline* pPipelines\n        ",
                    "name": "pPipelines"
                }
            ]
        },
        "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI(\nVkDevice device,\n VkRenderPass renderpass,\n VkExtent2D* pMaxWorkgroupSize\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPass",
                    "header": "VkRenderPass renderpass\n            ",
                    "name": "renderpass"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExtent2D",
                    "header": "VkExtent2D* pMaxWorkgroupSize\n        ",
                    "name": "pMaxWorkgroupSize"
                }
            ]
        },
        "vkDestroyPipeline": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyPipeline(\nVkDevice device,\n VkPipeline pipeline,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreatePipelineLayout": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreatePipelineLayout(\nVkDevice device,\n const VkPipelineLayoutCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkPipelineLayout* pPipelineLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayoutCreateInfo",
                    "header": "const VkPipelineLayoutCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout* pPipelineLayout\n        ",
                    "name": "pPipelineLayout"
                }
            ]
        },
        "vkDestroyPipelineLayout": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyPipelineLayout(\nVkDevice device,\n VkPipelineLayout pipelineLayout,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout pipelineLayout\n            ",
                    "name": "pipelineLayout"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateSampler": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateSampler(\nVkDevice device,\n const VkSamplerCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSampler* pSampler\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerCreateInfo",
                    "header": "const VkSamplerCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSampler",
                    "header": "VkSampler* pSampler\n        ",
                    "name": "pSampler"
                }
            ]
        },
        "vkDestroySampler": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroySampler(\nVkDevice device,\n VkSampler sampler,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSampler",
                    "header": "VkSampler sampler\n            ",
                    "name": "sampler"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateDescriptorSetLayout": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDescriptorSetLayout(\nVkDevice device,\n const VkDescriptorSetLayoutCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDescriptorSetLayout* pSetLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayoutCreateInfo",
                    "header": "const VkDescriptorSetLayoutCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayout",
                    "header": "VkDescriptorSetLayout* pSetLayout\n        ",
                    "name": "pSetLayout"
                }
            ]
        },
        "vkDestroyDescriptorSetLayout": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDescriptorSetLayout(\nVkDevice device,\n VkDescriptorSetLayout descriptorSetLayout,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayout",
                    "header": "VkDescriptorSetLayout descriptorSetLayout\n            ",
                    "name": "descriptorSetLayout"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateDescriptorPool": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDescriptorPool(\nVkDevice device,\n const VkDescriptorPoolCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDescriptorPool* pDescriptorPool\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorPoolCreateInfo",
                    "header": "const VkDescriptorPoolCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorPool",
                    "header": "VkDescriptorPool* pDescriptorPool\n        ",
                    "name": "pDescriptorPool"
                }
            ]
        },
        "vkDestroyDescriptorPool": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDescriptorPool(\nVkDevice device,\n VkDescriptorPool descriptorPool,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorPool",
                    "header": "VkDescriptorPool descriptorPool\n            ",
                    "name": "descriptorPool"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkResetDescriptorPool": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkResetDescriptorPool(\nVkDevice device,\n VkDescriptorPool descriptorPool,\n VkDescriptorPoolResetFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorPool",
                    "header": "VkDescriptorPool descriptorPool\n            ",
                    "name": "descriptorPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorPoolResetFlags",
                    "header": "VkDescriptorPoolResetFlags flags\n            ",
                    "name": "flags"
                }
            ]
        },
        "vkAllocateDescriptorSets": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAllocateDescriptorSets(\nVkDevice device,\n const VkDescriptorSetAllocateInfo* pAllocateInfo,\n VkDescriptorSet* pDescriptorSets\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetAllocateInfo",
                    "header": "const VkDescriptorSetAllocateInfo* pAllocateInfo\n            ",
                    "name": "pAllocateInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "pAllocateInfo->descriptorSetCount"
                    ],
                    "type": "VkDescriptorSet",
                    "header": "VkDescriptorSet* pDescriptorSets\n        ",
                    "name": "pDescriptorSets"
                }
            ]
        },
        "vkFreeDescriptorSets": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkFreeDescriptorSets(\nVkDevice device,\n VkDescriptorPool descriptorPool,\n uint32_t descriptorSetCount,\n const VkDescriptorSet* pDescriptorSets\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorPool",
                    "header": "VkDescriptorPool descriptorPool\n            ",
                    "name": "descriptorPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t descriptorSetCount\n            ",
                    "name": "descriptorSetCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "descriptorSetCount"
                    ],
                    "type": "VkDescriptorSet",
                    "header": "const VkDescriptorSet* pDescriptorSets\n        ",
                    "name": "pDescriptorSets"
                }
            ]
        },
        "vkUpdateDescriptorSets": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkUpdateDescriptorSets(\nVkDevice device,\n uint32_t descriptorWriteCount,\n const VkWriteDescriptorSet* pDescriptorWrites,\n uint32_t descriptorCopyCount,\n const VkCopyDescriptorSet* pDescriptorCopies\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t descriptorWriteCount\n            ",
                    "name": "descriptorWriteCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "descriptorWriteCount"
                    ],
                    "type": "VkWriteDescriptorSet",
                    "header": "const VkWriteDescriptorSet* pDescriptorWrites\n            ",
                    "name": "pDescriptorWrites"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t descriptorCopyCount\n            ",
                    "name": "descriptorCopyCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "descriptorCopyCount"
                    ],
                    "type": "VkCopyDescriptorSet",
                    "header": "const VkCopyDescriptorSet* pDescriptorCopies\n        ",
                    "name": "pDescriptorCopies"
                }
            ]
        },
        "vkCreateFramebuffer": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateFramebuffer(\nVkDevice device,\n const VkFramebufferCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkFramebuffer* pFramebuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFramebufferCreateInfo",
                    "header": "const VkFramebufferCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFramebuffer",
                    "header": "VkFramebuffer* pFramebuffer\n        ",
                    "name": "pFramebuffer"
                }
            ]
        },
        "vkDestroyFramebuffer": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyFramebuffer(\nVkDevice device,\n VkFramebuffer framebuffer,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFramebuffer",
                    "header": "VkFramebuffer framebuffer\n            ",
                    "name": "framebuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateRenderPass": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateRenderPass(\nVkDevice device,\n const VkRenderPassCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkRenderPass* pRenderPass\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPassCreateInfo",
                    "header": "const VkRenderPassCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPass",
                    "header": "VkRenderPass* pRenderPass\n        ",
                    "name": "pRenderPass"
                }
            ]
        },
        "vkDestroyRenderPass": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyRenderPass(\nVkDevice device,\n VkRenderPass renderPass,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPass",
                    "header": "VkRenderPass renderPass\n            ",
                    "name": "renderPass"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetRenderAreaGranularity": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetRenderAreaGranularity(\nVkDevice device,\n VkRenderPass renderPass,\n VkExtent2D* pGranularity\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPass",
                    "header": "VkRenderPass renderPass\n            ",
                    "name": "renderPass"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExtent2D",
                    "header": "VkExtent2D* pGranularity\n        ",
                    "name": "pGranularity"
                }
            ]
        },
        "vkGetRenderingAreaGranularityKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetRenderingAreaGranularityKHR(\nVkDevice device,\n const VkRenderingAreaInfoKHR* pRenderingAreaInfo,\n VkExtent2D* pGranularity\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderingAreaInfoKHR",
                    "header": "const VkRenderingAreaInfoKHR* pRenderingAreaInfo\n            ",
                    "name": "pRenderingAreaInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExtent2D",
                    "header": "VkExtent2D* pGranularity\n        ",
                    "name": "pGranularity"
                }
            ]
        },
        "vkCreateCommandPool": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateCommandPool(\nVkDevice device,\n const VkCommandPoolCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkCommandPool* pCommandPool\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPoolCreateInfo",
                    "header": "const VkCommandPoolCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPool",
                    "header": "VkCommandPool* pCommandPool\n        ",
                    "name": "pCommandPool"
                }
            ]
        },
        "vkDestroyCommandPool": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyCommandPool(\nVkDevice device,\n VkCommandPool commandPool,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPool",
                    "header": "VkCommandPool commandPool\n            ",
                    "name": "commandPool"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkResetCommandPool": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkResetCommandPool(\nVkDevice device,\n VkCommandPool commandPool,\n VkCommandPoolResetFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPool",
                    "header": "VkCommandPool commandPool\n            ",
                    "name": "commandPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPoolResetFlags",
                    "header": "VkCommandPoolResetFlags flags\n        ",
                    "name": "flags"
                }
            ]
        },
        "vkAllocateCommandBuffers": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAllocateCommandBuffers(\nVkDevice device,\n const VkCommandBufferAllocateInfo* pAllocateInfo,\n VkCommandBuffer* pCommandBuffers\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBufferAllocateInfo",
                    "header": "const VkCommandBufferAllocateInfo* pAllocateInfo\n            ",
                    "name": "pAllocateInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "pAllocateInfo->commandBufferCount"
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer* pCommandBuffers\n        ",
                    "name": "pCommandBuffers"
                }
            ]
        },
        "vkFreeCommandBuffers": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkFreeCommandBuffers(\nVkDevice device,\n VkCommandPool commandPool,\n uint32_t commandBufferCount,\n const VkCommandBuffer* pCommandBuffers\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPool",
                    "header": "VkCommandPool commandPool\n            ",
                    "name": "commandPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t commandBufferCount\n            ",
                    "name": "commandBufferCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "commandBufferCount"
                    ],
                    "type": "VkCommandBuffer",
                    "header": "const VkCommandBuffer* pCommandBuffers\n        ",
                    "name": "pCommandBuffers"
                }
            ]
        },
        "vkBeginCommandBuffer": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBeginCommandBuffer(\nVkCommandBuffer commandBuffer,\n const VkCommandBufferBeginInfo* pBeginInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBufferBeginInfo",
                    "header": "const VkCommandBufferBeginInfo* pBeginInfo\n            ",
                    "name": "pBeginInfo"
                }
            ]
        },
        "vkEndCommandBuffer": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEndCommandBuffer(\nVkCommandBuffer commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkResetCommandBuffer": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkResetCommandBuffer(\nVkCommandBuffer commandBuffer,\n VkCommandBufferResetFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBufferResetFlags",
                    "header": "VkCommandBufferResetFlags flags\n            ",
                    "name": "flags"
                }
            ]
        },
        "vkCmdBindPipeline": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindPipeline(\nVkCommandBuffer commandBuffer,\n VkPipelineBindPoint pipelineBindPoint,\n VkPipeline pipeline\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineBindPoint",
                    "header": "VkPipelineBindPoint pipelineBindPoint\n            ",
                    "name": "pipelineBindPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n        ",
                    "name": "pipeline"
                }
            ]
        },
        "vkCmdSetAttachmentFeedbackLoopEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetAttachmentFeedbackLoopEnableEXT(\nVkCommandBuffer commandBuffer,\n VkImageAspectFlags aspectMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageAspectFlags",
                    "header": "VkImageAspectFlags aspectMask\n        ",
                    "name": "aspectMask"
                }
            ]
        },
        "vkCmdSetViewport": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetViewport(\nVkCommandBuffer commandBuffer,\n uint32_t firstViewport,\n uint32_t viewportCount,\n const VkViewport* pViewports\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstViewport\n            ",
                    "name": "firstViewport"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t viewportCount\n            ",
                    "name": "viewportCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "viewportCount"
                    ],
                    "type": "VkViewport",
                    "header": "const VkViewport* pViewports\n        ",
                    "name": "pViewports"
                }
            ]
        },
        "vkCmdSetScissor": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetScissor(\nVkCommandBuffer commandBuffer,\n uint32_t firstScissor,\n uint32_t scissorCount,\n const VkRect2D* pScissors\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstScissor\n            ",
                    "name": "firstScissor"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t scissorCount\n            ",
                    "name": "scissorCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "scissorCount"
                    ],
                    "type": "VkRect2D",
                    "header": "const VkRect2D* pScissors\n        ",
                    "name": "pScissors"
                }
            ]
        },
        "vkCmdSetLineWidth": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetLineWidth(\nVkCommandBuffer commandBuffer,\n float lineWidth\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float lineWidth\n        ",
                    "name": "lineWidth"
                }
            ]
        },
        "vkCmdSetDepthBias": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthBias(\nVkCommandBuffer commandBuffer,\n float depthBiasConstantFactor,\n float depthBiasClamp,\n float depthBiasSlopeFactor\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float depthBiasConstantFactor\n            ",
                    "name": "depthBiasConstantFactor"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float depthBiasClamp\n            ",
                    "name": "depthBiasClamp"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float depthBiasSlopeFactor\n        ",
                    "name": "depthBiasSlopeFactor"
                }
            ]
        },
        "vkCmdSetBlendConstants": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetBlendConstants(\nVkCommandBuffer commandBuffer,\n const float blendConstants[4]\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 0,
                    "length": [
                        "4"
                    ],
                    "type": "float",
                    "header": "const float blendConstants[4]\n        ",
                    "name": "blendConstants"
                }
            ]
        },
        "vkCmdSetDepthBounds": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthBounds(\nVkCommandBuffer commandBuffer,\n float minDepthBounds,\n float maxDepthBounds\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float minDepthBounds\n            ",
                    "name": "minDepthBounds"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float maxDepthBounds\n        ",
                    "name": "maxDepthBounds"
                }
            ]
        },
        "vkCmdSetStencilCompareMask": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetStencilCompareMask(\nVkCommandBuffer commandBuffer,\n VkStencilFaceFlags faceMask,\n uint32_t compareMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilFaceFlags",
                    "header": "VkStencilFaceFlags faceMask\n            ",
                    "name": "faceMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t compareMask\n        ",
                    "name": "compareMask"
                }
            ]
        },
        "vkCmdSetStencilWriteMask": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetStencilWriteMask(\nVkCommandBuffer commandBuffer,\n VkStencilFaceFlags faceMask,\n uint32_t writeMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilFaceFlags",
                    "header": "VkStencilFaceFlags faceMask\n            ",
                    "name": "faceMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t writeMask\n        ",
                    "name": "writeMask"
                }
            ]
        },
        "vkCmdSetStencilReference": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetStencilReference(\nVkCommandBuffer commandBuffer,\n VkStencilFaceFlags faceMask,\n uint32_t reference\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilFaceFlags",
                    "header": "VkStencilFaceFlags faceMask\n            ",
                    "name": "faceMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t reference\n        ",
                    "name": "reference"
                }
            ]
        },
        "vkCmdBindDescriptorSets": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindDescriptorSets(\nVkCommandBuffer commandBuffer,\n VkPipelineBindPoint pipelineBindPoint,\n VkPipelineLayout layout,\n uint32_t firstSet,\n uint32_t descriptorSetCount,\n const VkDescriptorSet* pDescriptorSets,\n uint32_t dynamicOffsetCount,\n const uint32_t* pDynamicOffsets\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineBindPoint",
                    "header": "VkPipelineBindPoint pipelineBindPoint\n            ",
                    "name": "pipelineBindPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstSet\n            ",
                    "name": "firstSet"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t descriptorSetCount\n            ",
                    "name": "descriptorSetCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "descriptorSetCount"
                    ],
                    "type": "VkDescriptorSet",
                    "header": "const VkDescriptorSet* pDescriptorSets\n            ",
                    "name": "pDescriptorSets"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t dynamicOffsetCount\n            ",
                    "name": "dynamicOffsetCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "dynamicOffsetCount"
                    ],
                    "type": "uint32_t",
                    "header": "const uint32_t* pDynamicOffsets\n        ",
                    "name": "pDynamicOffsets"
                }
            ]
        },
        "vkCmdBindIndexBuffer": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindIndexBuffer(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkIndexType indexType\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkIndexType",
                    "header": "VkIndexType indexType\n        ",
                    "name": "indexType"
                }
            ]
        },
        "vkCmdBindVertexBuffers": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindVertexBuffers(\nVkCommandBuffer commandBuffer,\n uint32_t firstBinding,\n uint32_t bindingCount,\n const VkBuffer* pBuffers,\n const VkDeviceSize* pOffsets\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstBinding\n            ",
                    "name": "firstBinding"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindingCount\n            ",
                    "name": "bindingCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkBuffer",
                    "header": "const VkBuffer* pBuffers\n            ",
                    "name": "pBuffers"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pOffsets\n        ",
                    "name": "pOffsets"
                }
            ]
        },
        "vkCmdDraw": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDraw(\nVkCommandBuffer commandBuffer,\n uint32_t vertexCount,\n uint32_t instanceCount,\n uint32_t firstVertex,\n uint32_t firstInstance\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t vertexCount\n            ",
                    "name": "vertexCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t instanceCount\n            ",
                    "name": "instanceCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstVertex\n            ",
                    "name": "firstVertex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstInstance\n        ",
                    "name": "firstInstance"
                }
            ]
        },
        "vkCmdDrawIndexed": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndexed(\nVkCommandBuffer commandBuffer,\n uint32_t indexCount,\n uint32_t instanceCount,\n uint32_t firstIndex,\n int32_t vertexOffset,\n uint32_t firstInstance\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t indexCount\n            ",
                    "name": "indexCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t instanceCount\n            ",
                    "name": "instanceCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstIndex\n            ",
                    "name": "firstIndex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "int32_t",
                    "header": "int32_t vertexOffset\n            ",
                    "name": "vertexOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstInstance\n        ",
                    "name": "firstInstance"
                }
            ]
        },
        "vkCmdDrawMultiEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMultiEXT(\nVkCommandBuffer commandBuffer,\n uint32_t drawCount,\n const VkMultiDrawInfoEXT* pVertexInfo,\n uint32_t instanceCount,\n uint32_t firstInstance,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t drawCount\n            ",
                    "name": "drawCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "drawCount"
                    ],
                    "type": "VkMultiDrawInfoEXT",
                    "header": "const VkMultiDrawInfoEXT* pVertexInfo\n            ",
                    "name": "pVertexInfo"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t instanceCount\n            ",
                    "name": "instanceCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstInstance\n            ",
                    "name": "firstInstance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawMultiIndexedEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMultiIndexedEXT(\nVkCommandBuffer commandBuffer,\n uint32_t drawCount,\n const VkMultiDrawIndexedInfoEXT* pIndexInfo,\n uint32_t instanceCount,\n uint32_t firstInstance,\n uint32_t stride,\n const int32_t* pVertexOffset\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t drawCount\n            ",
                    "name": "drawCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "drawCount"
                    ],
                    "type": "VkMultiDrawIndexedInfoEXT",
                    "header": "const VkMultiDrawIndexedInfoEXT* pIndexInfo\n            ",
                    "name": "pIndexInfo"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t instanceCount\n            ",
                    "name": "instanceCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstInstance\n            ",
                    "name": "firstInstance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n            ",
                    "name": "stride"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "int32_t",
                    "header": "const int32_t* pVertexOffset\n        ",
                    "name": "pVertexOffset"
                }
            ]
        },
        "vkCmdDrawIndirect": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndirect(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n uint32_t drawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t drawCount\n            ",
                    "name": "drawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawIndexedIndirect": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndexedIndirect(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n uint32_t drawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t drawCount\n            ",
                    "name": "drawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDispatch": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDispatch(\nVkCommandBuffer commandBuffer,\n uint32_t groupCountX,\n uint32_t groupCountY,\n uint32_t groupCountZ\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountX\n            ",
                    "name": "groupCountX"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountY\n            ",
                    "name": "groupCountY"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountZ\n        ",
                    "name": "groupCountZ"
                }
            ]
        },
        "vkCmdDispatchIndirect": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDispatchIndirect(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n        ",
                    "name": "offset"
                }
            ]
        },
        "vkCmdSubpassShadingHUAWEI": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSubpassShadingHUAWEI(\nVkCommandBuffer commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n        ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkCmdDrawClusterHUAWEI": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawClusterHUAWEI(\nVkCommandBuffer commandBuffer,\n uint32_t groupCountX,\n uint32_t groupCountY,\n uint32_t groupCountZ\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountX\n            ",
                    "name": "groupCountX"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountY\n            ",
                    "name": "groupCountY"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountZ\n        ",
                    "name": "groupCountZ"
                }
            ]
        },
        "vkCmdDrawClusterIndirectHUAWEI": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawClusterIndirectHUAWEI(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n        ",
                    "name": "offset"
                }
            ]
        },
        "vkCmdUpdatePipelineIndirectBufferNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdUpdatePipelineIndirectBufferNV(\nVkCommandBuffer commandBuffer,\n VkPipelineBindPoint           pipelineBindPoint,\n VkPipeline                    pipeline\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineBindPoint",
                    "header": "VkPipelineBindPoint           pipelineBindPoint\n            ",
                    "name": "pipelineBindPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline                    pipeline\n        ",
                    "name": "pipeline"
                }
            ]
        },
        "vkCmdCopyBuffer": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyBuffer(\nVkCommandBuffer commandBuffer,\n VkBuffer srcBuffer,\n VkBuffer dstBuffer,\n uint32_t regionCount,\n const VkBufferCopy* pRegions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer srcBuffer\n            ",
                    "name": "srcBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer dstBuffer\n            ",
                    "name": "dstBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t regionCount\n            ",
                    "name": "regionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "regionCount"
                    ],
                    "type": "VkBufferCopy",
                    "header": "const VkBufferCopy* pRegions\n        ",
                    "name": "pRegions"
                }
            ]
        },
        "vkCmdCopyImage": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyImage(\nVkCommandBuffer commandBuffer,\n VkImage srcImage,\n VkImageLayout srcImageLayout,\n VkImage dstImage,\n VkImageLayout dstImageLayout,\n uint32_t regionCount,\n const VkImageCopy* pRegions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage srcImage\n            ",
                    "name": "srcImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout srcImageLayout\n            ",
                    "name": "srcImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage dstImage\n            ",
                    "name": "dstImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout dstImageLayout\n            ",
                    "name": "dstImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t regionCount\n            ",
                    "name": "regionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "regionCount"
                    ],
                    "type": "VkImageCopy",
                    "header": "const VkImageCopy* pRegions\n        ",
                    "name": "pRegions"
                }
            ]
        },
        "vkCmdBlitImage": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBlitImage(\nVkCommandBuffer commandBuffer,\n VkImage srcImage,\n VkImageLayout srcImageLayout,\n VkImage dstImage,\n VkImageLayout dstImageLayout,\n uint32_t regionCount,\n const VkImageBlit* pRegions,\n VkFilter filter\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage srcImage\n            ",
                    "name": "srcImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout srcImageLayout\n            ",
                    "name": "srcImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage dstImage\n            ",
                    "name": "dstImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout dstImageLayout\n            ",
                    "name": "dstImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t regionCount\n            ",
                    "name": "regionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "regionCount"
                    ],
                    "type": "VkImageBlit",
                    "header": "const VkImageBlit* pRegions\n            ",
                    "name": "pRegions"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFilter",
                    "header": "VkFilter filter\n        ",
                    "name": "filter"
                }
            ]
        },
        "vkCmdCopyBufferToImage": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyBufferToImage(\nVkCommandBuffer commandBuffer,\n VkBuffer srcBuffer,\n VkImage dstImage,\n VkImageLayout dstImageLayout,\n uint32_t regionCount,\n const VkBufferImageCopy* pRegions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer srcBuffer\n            ",
                    "name": "srcBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage dstImage\n            ",
                    "name": "dstImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout dstImageLayout\n            ",
                    "name": "dstImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t regionCount\n            ",
                    "name": "regionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "regionCount"
                    ],
                    "type": "VkBufferImageCopy",
                    "header": "const VkBufferImageCopy* pRegions\n        ",
                    "name": "pRegions"
                }
            ]
        },
        "vkCmdCopyImageToBuffer": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyImageToBuffer(\nVkCommandBuffer commandBuffer,\n VkImage srcImage,\n VkImageLayout srcImageLayout,\n VkBuffer dstBuffer,\n uint32_t regionCount,\n const VkBufferImageCopy* pRegions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage srcImage\n            ",
                    "name": "srcImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout srcImageLayout\n            ",
                    "name": "srcImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer dstBuffer\n            ",
                    "name": "dstBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t regionCount\n            ",
                    "name": "regionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "regionCount"
                    ],
                    "type": "VkBufferImageCopy",
                    "header": "const VkBufferImageCopy* pRegions\n        ",
                    "name": "pRegions"
                }
            ]
        },
        "vkCmdCopyMemoryIndirectNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyMemoryIndirectNV(\nVkCommandBuffer commandBuffer,\n VkDeviceAddress copyBufferAddress,\n uint32_t copyCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceAddress",
                    "header": "VkDeviceAddress copyBufferAddress\n            ",
                    "name": "copyBufferAddress"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t copyCount\n            ",
                    "name": "copyCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdCopyMemoryToImageIndirectNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyMemoryToImageIndirectNV(\nVkCommandBuffer commandBuffer,\n VkDeviceAddress copyBufferAddress,\n uint32_t copyCount,\n uint32_t stride,\n VkImage dstImage,\n VkImageLayout dstImageLayout,\n const VkImageSubresourceLayers* pImageSubresources\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceAddress",
                    "header": "VkDeviceAddress copyBufferAddress\n            ",
                    "name": "copyBufferAddress"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t copyCount\n            ",
                    "name": "copyCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n            ",
                    "name": "stride"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage dstImage\n            ",
                    "name": "dstImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout dstImageLayout\n            ",
                    "name": "dstImageLayout"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "copyCount"
                    ],
                    "type": "VkImageSubresourceLayers",
                    "header": "const VkImageSubresourceLayers* pImageSubresources\n        ",
                    "name": "pImageSubresources"
                }
            ]
        },
        "vkCmdUpdateBuffer": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdUpdateBuffer(\nVkCommandBuffer commandBuffer,\n VkBuffer dstBuffer,\n VkDeviceSize dstOffset,\n VkDeviceSize dataSize,\n const void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer dstBuffer\n            ",
                    "name": "dstBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize dstOffset\n            ",
                    "name": "dstOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "const void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkCmdFillBuffer": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdFillBuffer(\nVkCommandBuffer commandBuffer,\n VkBuffer dstBuffer,\n VkDeviceSize dstOffset,\n VkDeviceSize size,\n uint32_t data\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer dstBuffer\n            ",
                    "name": "dstBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize dstOffset\n            ",
                    "name": "dstOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize size\n            ",
                    "name": "size"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t data\n        ",
                    "name": "data"
                }
            ]
        },
        "vkCmdClearColorImage": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdClearColorImage(\nVkCommandBuffer commandBuffer,\n VkImage image,\n VkImageLayout imageLayout,\n const VkClearColorValue* pColor,\n uint32_t rangeCount,\n const VkImageSubresourceRange* pRanges\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout imageLayout\n            ",
                    "name": "imageLayout"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkClearColorValue",
                    "header": "const VkClearColorValue* pColor\n            ",
                    "name": "pColor"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t rangeCount\n            ",
                    "name": "rangeCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "rangeCount"
                    ],
                    "type": "VkImageSubresourceRange",
                    "header": "const VkImageSubresourceRange* pRanges\n        ",
                    "name": "pRanges"
                }
            ]
        },
        "vkCmdClearDepthStencilImage": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdClearDepthStencilImage(\nVkCommandBuffer commandBuffer,\n VkImage image,\n VkImageLayout imageLayout,\n const VkClearDepthStencilValue* pDepthStencil,\n uint32_t rangeCount,\n const VkImageSubresourceRange* pRanges\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout imageLayout\n            ",
                    "name": "imageLayout"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkClearDepthStencilValue",
                    "header": "const VkClearDepthStencilValue* pDepthStencil\n            ",
                    "name": "pDepthStencil"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t rangeCount\n            ",
                    "name": "rangeCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "rangeCount"
                    ],
                    "type": "VkImageSubresourceRange",
                    "header": "const VkImageSubresourceRange* pRanges\n        ",
                    "name": "pRanges"
                }
            ]
        },
        "vkCmdClearAttachments": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdClearAttachments(\nVkCommandBuffer commandBuffer,\n uint32_t attachmentCount,\n const VkClearAttachment* pAttachments,\n uint32_t rectCount,\n const VkClearRect* pRects\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t attachmentCount\n            ",
                    "name": "attachmentCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "attachmentCount"
                    ],
                    "type": "VkClearAttachment",
                    "header": "const VkClearAttachment* pAttachments\n            ",
                    "name": "pAttachments"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t rectCount\n            ",
                    "name": "rectCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "rectCount"
                    ],
                    "type": "VkClearRect",
                    "header": "const VkClearRect* pRects\n        ",
                    "name": "pRects"
                }
            ]
        },
        "vkCmdResolveImage": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdResolveImage(\nVkCommandBuffer commandBuffer,\n VkImage srcImage,\n VkImageLayout srcImageLayout,\n VkImage dstImage,\n VkImageLayout dstImageLayout,\n uint32_t regionCount,\n const VkImageResolve* pRegions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage srcImage\n            ",
                    "name": "srcImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout srcImageLayout\n            ",
                    "name": "srcImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage dstImage\n            ",
                    "name": "dstImage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout dstImageLayout\n            ",
                    "name": "dstImageLayout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t regionCount\n            ",
                    "name": "regionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "regionCount"
                    ],
                    "type": "VkImageResolve",
                    "header": "const VkImageResolve* pRegions\n        ",
                    "name": "pRegions"
                }
            ]
        },
        "vkCmdSetEvent": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetEvent(\nVkCommandBuffer commandBuffer,\n VkEvent event,\n VkPipelineStageFlags stageMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent event\n            ",
                    "name": "event"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags",
                    "header": "VkPipelineStageFlags stageMask\n        ",
                    "name": "stageMask"
                }
            ]
        },
        "vkCmdResetEvent": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdResetEvent(\nVkCommandBuffer commandBuffer,\n VkEvent event,\n VkPipelineStageFlags stageMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent event\n            ",
                    "name": "event"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags",
                    "header": "VkPipelineStageFlags stageMask\n        ",
                    "name": "stageMask"
                }
            ]
        },
        "vkCmdWaitEvents": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWaitEvents(\nVkCommandBuffer commandBuffer,\n uint32_t eventCount,\n const VkEvent* pEvents,\n VkPipelineStageFlags srcStageMask,\n VkPipelineStageFlags dstStageMask,\n uint32_t memoryBarrierCount,\n const VkMemoryBarrier* pMemoryBarriers,\n uint32_t bufferMemoryBarrierCount,\n const VkBufferMemoryBarrier* pBufferMemoryBarriers,\n uint32_t imageMemoryBarrierCount,\n const VkImageMemoryBarrier* pImageMemoryBarriers\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t eventCount\n            ",
                    "name": "eventCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "eventCount"
                    ],
                    "type": "VkEvent",
                    "header": "const VkEvent* pEvents\n            ",
                    "name": "pEvents"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags",
                    "header": "VkPipelineStageFlags srcStageMask\n            ",
                    "name": "srcStageMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags",
                    "header": "VkPipelineStageFlags dstStageMask\n            ",
                    "name": "dstStageMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t memoryBarrierCount\n            ",
                    "name": "memoryBarrierCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "memoryBarrierCount"
                    ],
                    "type": "VkMemoryBarrier",
                    "header": "const VkMemoryBarrier* pMemoryBarriers\n            ",
                    "name": "pMemoryBarriers"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bufferMemoryBarrierCount\n            ",
                    "name": "bufferMemoryBarrierCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bufferMemoryBarrierCount"
                    ],
                    "type": "VkBufferMemoryBarrier",
                    "header": "const VkBufferMemoryBarrier* pBufferMemoryBarriers\n            ",
                    "name": "pBufferMemoryBarriers"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t imageMemoryBarrierCount\n            ",
                    "name": "imageMemoryBarrierCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "imageMemoryBarrierCount"
                    ],
                    "type": "VkImageMemoryBarrier",
                    "header": "const VkImageMemoryBarrier* pImageMemoryBarriers\n        ",
                    "name": "pImageMemoryBarriers"
                }
            ]
        },
        "vkCmdPipelineBarrier": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdPipelineBarrier(\nVkCommandBuffer commandBuffer,\n VkPipelineStageFlags srcStageMask,\n VkPipelineStageFlags dstStageMask,\n VkDependencyFlags dependencyFlags,\n uint32_t memoryBarrierCount,\n const VkMemoryBarrier* pMemoryBarriers,\n uint32_t bufferMemoryBarrierCount,\n const VkBufferMemoryBarrier* pBufferMemoryBarriers,\n uint32_t imageMemoryBarrierCount,\n const VkImageMemoryBarrier* pImageMemoryBarriers\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags",
                    "header": "VkPipelineStageFlags srcStageMask\n            ",
                    "name": "srcStageMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags",
                    "header": "VkPipelineStageFlags dstStageMask\n            ",
                    "name": "dstStageMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDependencyFlags",
                    "header": "VkDependencyFlags dependencyFlags\n            ",
                    "name": "dependencyFlags"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t memoryBarrierCount\n            ",
                    "name": "memoryBarrierCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "memoryBarrierCount"
                    ],
                    "type": "VkMemoryBarrier",
                    "header": "const VkMemoryBarrier* pMemoryBarriers\n            ",
                    "name": "pMemoryBarriers"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bufferMemoryBarrierCount\n            ",
                    "name": "bufferMemoryBarrierCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bufferMemoryBarrierCount"
                    ],
                    "type": "VkBufferMemoryBarrier",
                    "header": "const VkBufferMemoryBarrier* pBufferMemoryBarriers\n            ",
                    "name": "pBufferMemoryBarriers"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t imageMemoryBarrierCount\n            ",
                    "name": "imageMemoryBarrierCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "imageMemoryBarrierCount"
                    ],
                    "type": "VkImageMemoryBarrier",
                    "header": "const VkImageMemoryBarrier* pImageMemoryBarriers\n        ",
                    "name": "pImageMemoryBarriers"
                }
            ]
        },
        "vkCmdBeginQuery": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginQuery(\nVkCommandBuffer commandBuffer,\n VkQueryPool queryPool,\n uint32_t query,\n VkQueryControlFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t query\n            ",
                    "name": "query"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryControlFlags",
                    "header": "VkQueryControlFlags flags\n        ",
                    "name": "flags"
                }
            ]
        },
        "vkCmdEndQuery": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndQuery(\nVkCommandBuffer commandBuffer,\n VkQueryPool queryPool,\n uint32_t query\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t query\n        ",
                    "name": "query"
                }
            ]
        },
        "vkCmdBeginConditionalRenderingEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginConditionalRenderingEXT(\nVkCommandBuffer commandBuffer,\n const VkConditionalRenderingBeginInfoEXT* pConditionalRenderingBegin\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkConditionalRenderingBeginInfoEXT",
                    "header": "const VkConditionalRenderingBeginInfoEXT* pConditionalRenderingBegin\n        ",
                    "name": "pConditionalRenderingBegin"
                }
            ]
        },
        "vkCmdEndConditionalRenderingEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndConditionalRenderingEXT(\nVkCommandBuffer commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n        ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkCmdResetQueryPool": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdResetQueryPool(\nVkCommandBuffer commandBuffer,\n VkQueryPool queryPool,\n uint32_t firstQuery,\n uint32_t queryCount\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n            ",
                    "name": "firstQuery"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queryCount\n        ",
                    "name": "queryCount"
                }
            ]
        },
        "vkCmdWriteTimestamp": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteTimestamp(\nVkCommandBuffer commandBuffer,\n VkPipelineStageFlagBits pipelineStage,\n VkQueryPool queryPool,\n uint32_t query\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlagBits",
                    "header": "VkPipelineStageFlagBits pipelineStage\n            ",
                    "name": "pipelineStage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t query\n        ",
                    "name": "query"
                }
            ]
        },
        "vkCmdCopyQueryPoolResults": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyQueryPoolResults(\nVkCommandBuffer commandBuffer,\n VkQueryPool queryPool,\n uint32_t firstQuery,\n uint32_t queryCount,\n VkBuffer dstBuffer,\n VkDeviceSize dstOffset,\n VkDeviceSize stride,\n VkQueryResultFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n            ",
                    "name": "firstQuery"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queryCount\n            ",
                    "name": "queryCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer dstBuffer\n            ",
                    "name": "dstBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize dstOffset\n            ",
                    "name": "dstOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize stride\n            ",
                    "name": "stride"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryResultFlags",
                    "header": "VkQueryResultFlags flags\n        ",
                    "name": "flags"
                }
            ]
        },
        "vkCmdPushConstants": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdPushConstants(\nVkCommandBuffer commandBuffer,\n VkPipelineLayout layout,\n VkShaderStageFlags stageFlags,\n uint32_t offset,\n uint32_t size,\n const void* pValues\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderStageFlags",
                    "header": "VkShaderStageFlags stageFlags\n            ",
                    "name": "stageFlags"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t size\n            ",
                    "name": "size"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "size"
                    ],
                    "type": "void",
                    "header": "const void* pValues\n        ",
                    "name": "pValues"
                }
            ]
        },
        "vkCmdBeginRenderPass": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginRenderPass(\nVkCommandBuffer commandBuffer,\n const VkRenderPassBeginInfo* pRenderPassBegin,\n VkSubpassContents contents\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPassBeginInfo",
                    "header": "const VkRenderPassBeginInfo* pRenderPassBegin\n            ",
                    "name": "pRenderPassBegin"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassContents",
                    "header": "VkSubpassContents contents\n        ",
                    "name": "contents"
                }
            ]
        },
        "vkCmdNextSubpass": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdNextSubpass(\nVkCommandBuffer commandBuffer,\n VkSubpassContents contents\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassContents",
                    "header": "VkSubpassContents contents\n        ",
                    "name": "contents"
                }
            ]
        },
        "vkCmdEndRenderPass": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndRenderPass(\nVkCommandBuffer commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n        ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkCmdExecuteCommands": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdExecuteCommands(\nVkCommandBuffer commandBuffer,\n uint32_t commandBufferCount,\n const VkCommandBuffer* pCommandBuffers\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t commandBufferCount\n            ",
                    "name": "commandBufferCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "commandBufferCount"
                    ],
                    "type": "VkCommandBuffer",
                    "header": "const VkCommandBuffer* pCommandBuffers\n        ",
                    "name": "pCommandBuffers"
                }
            ]
        },
        "vkGetPhysicalDeviceDisplayPropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceDisplayPropertiesKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t* pPropertyCount,\n VkDisplayPropertiesKHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkDisplayPropertiesKHR",
                    "header": "VkDisplayPropertiesKHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceDisplayPlanePropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceDisplayPlanePropertiesKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t* pPropertyCount,\n VkDisplayPlanePropertiesKHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkDisplayPlanePropertiesKHR",
                    "header": "VkDisplayPlanePropertiesKHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetDisplayPlaneSupportedDisplaysKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDisplayPlaneSupportedDisplaysKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t planeIndex,\n uint32_t* pDisplayCount,\n VkDisplayKHR* pDisplays\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t planeIndex\n            ",
                    "name": "planeIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pDisplayCount\n            ",
                    "name": "pDisplayCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pDisplayCount"
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR* pDisplays\n        ",
                    "name": "pDisplays"
                }
            ]
        },
        "vkGetDisplayModePropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDisplayModePropertiesKHR(\nVkPhysicalDevice physicalDevice,\n VkDisplayKHR display,\n uint32_t* pPropertyCount,\n VkDisplayModePropertiesKHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR display\n            ",
                    "name": "display"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkDisplayModePropertiesKHR",
                    "header": "VkDisplayModePropertiesKHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkCreateDisplayModeKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDisplayModeKHR(\nVkPhysicalDevice physicalDevice,\n VkDisplayKHR display,\n const VkDisplayModeCreateInfoKHR* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDisplayModeKHR* pMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR display\n            ",
                    "name": "display"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayModeCreateInfoKHR",
                    "header": "const VkDisplayModeCreateInfoKHR* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayModeKHR",
                    "header": "VkDisplayModeKHR* pMode\n        ",
                    "name": "pMode"
                }
            ]
        },
        "vkGetDisplayPlaneCapabilitiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDisplayPlaneCapabilitiesKHR(\nVkPhysicalDevice physicalDevice,\n VkDisplayModeKHR mode,\n uint32_t planeIndex,\n VkDisplayPlaneCapabilitiesKHR* pCapabilities\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayModeKHR",
                    "header": "VkDisplayModeKHR mode\n            ",
                    "name": "mode"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t planeIndex\n            ",
                    "name": "planeIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayPlaneCapabilitiesKHR",
                    "header": "VkDisplayPlaneCapabilitiesKHR* pCapabilities\n        ",
                    "name": "pCapabilities"
                }
            ]
        },
        "vkCreateDisplayPlaneSurfaceKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDisplayPlaneSurfaceKHR(\nVkInstance instance,\n const VkDisplaySurfaceCreateInfoKHR* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSurfaceKHR* pSurface\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplaySurfaceCreateInfoKHR",
                    "header": "const VkDisplaySurfaceCreateInfoKHR* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR* pSurface\n        ",
                    "name": "pSurface"
                }
            ]
        },
        "vkCreateSharedSwapchainsKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateSharedSwapchainsKHR(\nVkDevice device,\n uint32_t swapchainCount,\n const VkSwapchainCreateInfoKHR* pCreateInfos,\n const VkAllocationCallbacks* pAllocator,\n VkSwapchainKHR* pSwapchains\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t swapchainCount\n            ",
                    "name": "swapchainCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "swapchainCount"
                    ],
                    "type": "VkSwapchainCreateInfoKHR",
                    "header": "const VkSwapchainCreateInfoKHR* pCreateInfos\n            ",
                    "name": "pCreateInfos"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "swapchainCount"
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR* pSwapchains\n        ",
                    "name": "pSwapchains"
                }
            ]
        },
        "vkDestroySurfaceKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroySurfaceKHR(\nVkInstance instance,\n VkSurfaceKHR surface,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetPhysicalDeviceSurfaceSupportKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSurfaceSupportKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t queueFamilyIndex,\n VkSurfaceKHR surface,\n VkBool32* pSupported\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queueFamilyIndex\n            ",
                    "name": "queueFamilyIndex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32* pSupported\n        ",
                    "name": "pSupported"
                }
            ]
        },
        "vkGetPhysicalDeviceSurfaceCapabilitiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSurfaceCapabilitiesKHR(\nVkPhysicalDevice physicalDevice,\n VkSurfaceKHR surface,\n VkSurfaceCapabilitiesKHR* pSurfaceCapabilities\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceCapabilitiesKHR",
                    "header": "VkSurfaceCapabilitiesKHR* pSurfaceCapabilities\n        ",
                    "name": "pSurfaceCapabilities"
                }
            ]
        },
        "vkGetPhysicalDeviceSurfaceFormatsKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSurfaceFormatsKHR(\nVkPhysicalDevice physicalDevice,\n VkSurfaceKHR surface,\n uint32_t* pSurfaceFormatCount,\n VkSurfaceFormatKHR* pSurfaceFormats\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSurfaceFormatCount\n            ",
                    "name": "pSurfaceFormatCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSurfaceFormatCount"
                    ],
                    "type": "VkSurfaceFormatKHR",
                    "header": "VkSurfaceFormatKHR* pSurfaceFormats\n        ",
                    "name": "pSurfaceFormats"
                }
            ]
        },
        "vkGetPhysicalDeviceSurfacePresentModesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSurfacePresentModesKHR(\nVkPhysicalDevice physicalDevice,\n VkSurfaceKHR surface,\n uint32_t* pPresentModeCount,\n VkPresentModeKHR* pPresentModes\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPresentModeCount\n            ",
                    "name": "pPresentModeCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPresentModeCount"
                    ],
                    "type": "VkPresentModeKHR",
                    "header": "VkPresentModeKHR* pPresentModes\n        ",
                    "name": "pPresentModes"
                }
            ]
        },
        "vkCreateSwapchainKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateSwapchainKHR(\nVkDevice device,\n const VkSwapchainCreateInfoKHR* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSwapchainKHR* pSwapchain\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainCreateInfoKHR",
                    "header": "const VkSwapchainCreateInfoKHR* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR* pSwapchain\n        ",
                    "name": "pSwapchain"
                }
            ]
        },
        "vkDestroySwapchainKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroySwapchainKHR(\nVkDevice device,\n VkSwapchainKHR swapchain,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n            ",
                    "name": "swapchain"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetSwapchainImagesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetSwapchainImagesKHR(\nVkDevice device,\n VkSwapchainKHR swapchain,\n uint32_t* pSwapchainImageCount,\n VkImage* pSwapchainImages\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n            ",
                    "name": "swapchain"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSwapchainImageCount\n            ",
                    "name": "pSwapchainImageCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSwapchainImageCount"
                    ],
                    "type": "VkImage",
                    "header": "VkImage* pSwapchainImages\n        ",
                    "name": "pSwapchainImages"
                }
            ]
        },
        "vkAcquireNextImageKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAcquireNextImageKHR(\nVkDevice device,\n VkSwapchainKHR swapchain,\n uint64_t timeout,\n VkSemaphore semaphore,\n VkFence fence,\n uint32_t* pImageIndex\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n            ",
                    "name": "swapchain"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t timeout\n            ",
                    "name": "timeout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphore",
                    "header": "VkSemaphore semaphore\n            ",
                    "name": "semaphore"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence fence\n            ",
                    "name": "fence"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pImageIndex\n        ",
                    "name": "pImageIndex"
                }
            ]
        },
        "vkQueuePresentKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkQueuePresentKHR(\nVkQueue queue,\n const VkPresentInfoKHR* pPresentInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPresentInfoKHR",
                    "header": "const VkPresentInfoKHR* pPresentInfo\n        ",
                    "name": "pPresentInfo"
                }
            ]
        },
        "vkCreateXlibSurfaceKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateXlibSurfaceKHR(\nVkInstance instance,\n const VkXlibSurfaceCreateInfoKHR* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSurfaceKHR* pSurface\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkXlibSurfaceCreateInfoKHR",
                    "header": "const VkXlibSurfaceCreateInfoKHR* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR* pSurface\n        ",
                    "name": "pSurface"
                }
            ]
        },
        "vkGetPhysicalDeviceXlibPresentationSupportKHR": {
            "sync": false,
            "type": "VkBool32",
            "num_indirection": 0,
            "header": "VkBool32 vkGetPhysicalDeviceXlibPresentationSupportKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t queueFamilyIndex,\n Display* dpy,\n VisualID visualID\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queueFamilyIndex\n            ",
                    "name": "queueFamilyIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "Display",
                    "header": "Display* dpy\n            ",
                    "name": "dpy"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VisualID",
                    "header": "VisualID visualID\n        ",
                    "name": "visualID"
                }
            ]
        },
        "vkCreateXcbSurfaceKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateXcbSurfaceKHR(\nVkInstance instance,\n const VkXcbSurfaceCreateInfoKHR* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSurfaceKHR* pSurface\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkXcbSurfaceCreateInfoKHR",
                    "header": "const VkXcbSurfaceCreateInfoKHR* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR* pSurface\n        ",
                    "name": "pSurface"
                }
            ]
        },
        "vkGetPhysicalDeviceXcbPresentationSupportKHR": {
            "sync": false,
            "type": "VkBool32",
            "num_indirection": 0,
            "header": "VkBool32 vkGetPhysicalDeviceXcbPresentationSupportKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t queueFamilyIndex,\n xcb_connection_t* connection,\n xcb_visualid_t visual_id\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queueFamilyIndex\n            ",
                    "name": "queueFamilyIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "xcb_connection_t",
                    "header": "xcb_connection_t* connection\n            ",
                    "name": "connection"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "xcb_visualid_t",
                    "header": "xcb_visualid_t visual_id\n        ",
                    "name": "visual_id"
                }
            ]
        },
        "vkCreateDebugReportCallbackEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDebugReportCallbackEXT(\nVkInstance instance,\n const VkDebugReportCallbackCreateInfoEXT* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDebugReportCallbackEXT* pCallback\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugReportCallbackCreateInfoEXT",
                    "header": "const VkDebugReportCallbackCreateInfoEXT* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugReportCallbackEXT",
                    "header": "VkDebugReportCallbackEXT* pCallback\n        ",
                    "name": "pCallback"
                }
            ]
        },
        "vkDestroyDebugReportCallbackEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDebugReportCallbackEXT(\nVkInstance instance,\n VkDebugReportCallbackEXT callback,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugReportCallbackEXT",
                    "header": "VkDebugReportCallbackEXT callback\n            ",
                    "name": "callback"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkDebugReportMessageEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDebugReportMessageEXT(\nVkInstance instance,\n VkDebugReportFlagsEXT flags,\n VkDebugReportObjectTypeEXT objectType,\n uint64_t object,\n size_t location,\n int32_t messageCode,\n const char* pLayerPrefix,\n const char* pMessage\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugReportFlagsEXT",
                    "header": "VkDebugReportFlagsEXT flags\n            ",
                    "name": "flags"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugReportObjectTypeEXT",
                    "header": "VkDebugReportObjectTypeEXT objectType\n            ",
                    "name": "objectType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t object\n            ",
                    "name": "object"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t location\n            ",
                    "name": "location"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "int32_t",
                    "header": "int32_t messageCode\n            ",
                    "name": "messageCode"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "null-terminated"
                    ],
                    "type": "char",
                    "header": "const char* pLayerPrefix\n            ",
                    "name": "pLayerPrefix"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "null-terminated"
                    ],
                    "type": "char",
                    "header": "const char* pMessage\n        ",
                    "name": "pMessage"
                }
            ]
        },
        "vkDebugMarkerSetObjectNameEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkDebugMarkerSetObjectNameEXT(\nVkDevice device,\n const VkDebugMarkerObjectNameInfoEXT* pNameInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugMarkerObjectNameInfoEXT",
                    "header": "const VkDebugMarkerObjectNameInfoEXT* pNameInfo\n        ",
                    "name": "pNameInfo"
                }
            ]
        },
        "vkDebugMarkerSetObjectTagEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkDebugMarkerSetObjectTagEXT(\nVkDevice device,\n const VkDebugMarkerObjectTagInfoEXT* pTagInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugMarkerObjectTagInfoEXT",
                    "header": "const VkDebugMarkerObjectTagInfoEXT* pTagInfo\n        ",
                    "name": "pTagInfo"
                }
            ]
        },
        "vkCmdDebugMarkerBeginEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDebugMarkerBeginEXT(\nVkCommandBuffer commandBuffer,\n const VkDebugMarkerMarkerInfoEXT* pMarkerInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugMarkerMarkerInfoEXT",
                    "header": "const VkDebugMarkerMarkerInfoEXT* pMarkerInfo\n        ",
                    "name": "pMarkerInfo"
                }
            ]
        },
        "vkCmdDebugMarkerEndEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDebugMarkerEndEXT(\nVkCommandBuffer commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n        ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkCmdDebugMarkerInsertEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDebugMarkerInsertEXT(\nVkCommandBuffer commandBuffer,\n const VkDebugMarkerMarkerInfoEXT* pMarkerInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugMarkerMarkerInfoEXT",
                    "header": "const VkDebugMarkerMarkerInfoEXT* pMarkerInfo\n        ",
                    "name": "pMarkerInfo"
                }
            ]
        },
        "vkGetPhysicalDeviceExternalImageFormatPropertiesNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceExternalImageFormatPropertiesNV(\nVkPhysicalDevice physicalDevice,\n VkFormat format,\n VkImageType type,\n VkImageTiling tiling,\n VkImageUsageFlags usage,\n VkImageCreateFlags flags,\n VkExternalMemoryHandleTypeFlagsNV externalHandleType,\n VkExternalImageFormatPropertiesNV* pExternalImageFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFormat",
                    "header": "VkFormat format\n            ",
                    "name": "format"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageType",
                    "header": "VkImageType type\n            ",
                    "name": "type"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageTiling",
                    "header": "VkImageTiling tiling\n            ",
                    "name": "tiling"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageUsageFlags",
                    "header": "VkImageUsageFlags usage\n            ",
                    "name": "usage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageCreateFlags",
                    "header": "VkImageCreateFlags flags\n            ",
                    "name": "flags"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalMemoryHandleTypeFlagsNV",
                    "header": "VkExternalMemoryHandleTypeFlagsNV externalHandleType\n            ",
                    "name": "externalHandleType"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalImageFormatPropertiesNV",
                    "header": "VkExternalImageFormatPropertiesNV* pExternalImageFormatProperties\n        ",
                    "name": "pExternalImageFormatProperties"
                }
            ]
        },
        "vkCmdExecuteGeneratedCommandsNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdExecuteGeneratedCommandsNV(\nVkCommandBuffer commandBuffer,\n VkBool32 isPreprocessed,\n const VkGeneratedCommandsInfoNV* pGeneratedCommandsInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 isPreprocessed\n            ",
                    "name": "isPreprocessed"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkGeneratedCommandsInfoNV",
                    "header": "const VkGeneratedCommandsInfoNV* pGeneratedCommandsInfo\n        ",
                    "name": "pGeneratedCommandsInfo"
                }
            ]
        },
        "vkCmdPreprocessGeneratedCommandsNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdPreprocessGeneratedCommandsNV(\nVkCommandBuffer commandBuffer,\n const VkGeneratedCommandsInfoNV* pGeneratedCommandsInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkGeneratedCommandsInfoNV",
                    "header": "const VkGeneratedCommandsInfoNV* pGeneratedCommandsInfo\n        ",
                    "name": "pGeneratedCommandsInfo"
                }
            ]
        },
        "vkCmdBindPipelineShaderGroupNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindPipelineShaderGroupNV(\nVkCommandBuffer commandBuffer,\n VkPipelineBindPoint pipelineBindPoint,\n VkPipeline pipeline,\n uint32_t groupIndex\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineBindPoint",
                    "header": "VkPipelineBindPoint pipelineBindPoint\n            ",
                    "name": "pipelineBindPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupIndex\n        ",
                    "name": "groupIndex"
                }
            ]
        },
        "vkGetGeneratedCommandsMemoryRequirementsNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetGeneratedCommandsMemoryRequirementsNV(\nVkDevice device,\n const VkGeneratedCommandsMemoryRequirementsInfoNV* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkGeneratedCommandsMemoryRequirementsInfoNV",
                    "header": "const VkGeneratedCommandsMemoryRequirementsInfoNV* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkCreateIndirectCommandsLayoutNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateIndirectCommandsLayoutNV(\nVkDevice device,\n const VkIndirectCommandsLayoutCreateInfoNV* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkIndirectCommandsLayoutNV* pIndirectCommandsLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkIndirectCommandsLayoutCreateInfoNV",
                    "header": "const VkIndirectCommandsLayoutCreateInfoNV* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkIndirectCommandsLayoutNV",
                    "header": "VkIndirectCommandsLayoutNV* pIndirectCommandsLayout\n        ",
                    "name": "pIndirectCommandsLayout"
                }
            ]
        },
        "vkDestroyIndirectCommandsLayoutNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyIndirectCommandsLayoutNV(\nVkDevice device,\n VkIndirectCommandsLayoutNV indirectCommandsLayout,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkIndirectCommandsLayoutNV",
                    "header": "VkIndirectCommandsLayoutNV indirectCommandsLayout\n            ",
                    "name": "indirectCommandsLayout"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetPhysicalDeviceFeatures2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceFeatures2(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceFeatures2* pFeatures\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceFeatures2",
                    "header": "VkPhysicalDeviceFeatures2* pFeatures\n        ",
                    "name": "pFeatures"
                }
            ]
        },
        "vkGetPhysicalDeviceFeatures2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceFeatures2KHR(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceFeatures2* pFeatures\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceFeatures2",
                    "header": "VkPhysicalDeviceFeatures2* pFeatures\n        ",
                    "name": "pFeatures"
                }
            ]
        },
        "vkGetPhysicalDeviceProperties2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceProperties2(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceProperties2* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceProperties2",
                    "header": "VkPhysicalDeviceProperties2* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceProperties2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceProperties2KHR(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceProperties2* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceProperties2",
                    "header": "VkPhysicalDeviceProperties2* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceFormatProperties2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceFormatProperties2(\nVkPhysicalDevice physicalDevice,\n VkFormat format,\n VkFormatProperties2* pFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFormat",
                    "header": "VkFormat format\n            ",
                    "name": "format"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFormatProperties2",
                    "header": "VkFormatProperties2* pFormatProperties\n        ",
                    "name": "pFormatProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceFormatProperties2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceFormatProperties2KHR(\nVkPhysicalDevice physicalDevice,\n VkFormat format,\n VkFormatProperties2* pFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFormat",
                    "header": "VkFormat format\n            ",
                    "name": "format"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFormatProperties2",
                    "header": "VkFormatProperties2* pFormatProperties\n        ",
                    "name": "pFormatProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceImageFormatProperties2": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceImageFormatProperties2(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo,\n VkImageFormatProperties2* pImageFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceImageFormatInfo2",
                    "header": "const VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo\n            ",
                    "name": "pImageFormatInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageFormatProperties2",
                    "header": "VkImageFormatProperties2* pImageFormatProperties\n        ",
                    "name": "pImageFormatProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceImageFormatProperties2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceImageFormatProperties2KHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo,\n VkImageFormatProperties2* pImageFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceImageFormatInfo2",
                    "header": "const VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo\n            ",
                    "name": "pImageFormatInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageFormatProperties2",
                    "header": "VkImageFormatProperties2* pImageFormatProperties\n        ",
                    "name": "pImageFormatProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceQueueFamilyProperties2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceQueueFamilyProperties2(\nVkPhysicalDevice physicalDevice,\n uint32_t* pQueueFamilyPropertyCount,\n VkQueueFamilyProperties2* pQueueFamilyProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pQueueFamilyPropertyCount\n            ",
                    "name": "pQueueFamilyPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pQueueFamilyPropertyCount"
                    ],
                    "type": "VkQueueFamilyProperties2",
                    "header": "VkQueueFamilyProperties2* pQueueFamilyProperties\n        ",
                    "name": "pQueueFamilyProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceQueueFamilyProperties2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceQueueFamilyProperties2KHR(\nVkPhysicalDevice physicalDevice,\n uint32_t* pQueueFamilyPropertyCount,\n VkQueueFamilyProperties2* pQueueFamilyProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pQueueFamilyPropertyCount\n            ",
                    "name": "pQueueFamilyPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pQueueFamilyPropertyCount"
                    ],
                    "type": "VkQueueFamilyProperties2",
                    "header": "VkQueueFamilyProperties2* pQueueFamilyProperties\n        ",
                    "name": "pQueueFamilyProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceMemoryProperties2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceMemoryProperties2(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceMemoryProperties2* pMemoryProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceMemoryProperties2",
                    "header": "VkPhysicalDeviceMemoryProperties2* pMemoryProperties\n        ",
                    "name": "pMemoryProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceMemoryProperties2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceMemoryProperties2KHR(\nVkPhysicalDevice physicalDevice,\n VkPhysicalDeviceMemoryProperties2* pMemoryProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceMemoryProperties2",
                    "header": "VkPhysicalDeviceMemoryProperties2* pMemoryProperties\n        ",
                    "name": "pMemoryProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceSparseImageFormatProperties2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceSparseImageFormatProperties2(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo,\n uint32_t* pPropertyCount,\n VkSparseImageFormatProperties2* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceSparseImageFormatInfo2",
                    "header": "const VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo\n            ",
                    "name": "pFormatInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkSparseImageFormatProperties2",
                    "header": "VkSparseImageFormatProperties2* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceSparseImageFormatProperties2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceSparseImageFormatProperties2KHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo,\n uint32_t* pPropertyCount,\n VkSparseImageFormatProperties2* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceSparseImageFormatInfo2",
                    "header": "const VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo\n            ",
                    "name": "pFormatInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkSparseImageFormatProperties2",
                    "header": "VkSparseImageFormatProperties2* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkCmdPushDescriptorSetKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdPushDescriptorSetKHR(\nVkCommandBuffer commandBuffer,\n VkPipelineBindPoint pipelineBindPoint,\n VkPipelineLayout layout,\n uint32_t set,\n uint32_t descriptorWriteCount,\n const VkWriteDescriptorSet* pDescriptorWrites\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineBindPoint",
                    "header": "VkPipelineBindPoint pipelineBindPoint\n            ",
                    "name": "pipelineBindPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t set\n            ",
                    "name": "set"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t descriptorWriteCount\n            ",
                    "name": "descriptorWriteCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "descriptorWriteCount"
                    ],
                    "type": "VkWriteDescriptorSet",
                    "header": "const VkWriteDescriptorSet* pDescriptorWrites\n        ",
                    "name": "pDescriptorWrites"
                }
            ]
        },
        "vkTrimCommandPool": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkTrimCommandPool(\nVkDevice device,\n VkCommandPool commandPool,\n VkCommandPoolTrimFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPool",
                    "header": "VkCommandPool commandPool\n            ",
                    "name": "commandPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPoolTrimFlags",
                    "header": "VkCommandPoolTrimFlags flags\n        ",
                    "name": "flags"
                }
            ]
        },
        "vkTrimCommandPoolKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkTrimCommandPoolKHR(\nVkDevice device,\n VkCommandPool commandPool,\n VkCommandPoolTrimFlags flags\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPool",
                    "header": "VkCommandPool commandPool\n            ",
                    "name": "commandPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandPoolTrimFlags",
                    "header": "VkCommandPoolTrimFlags flags\n        ",
                    "name": "flags"
                }
            ]
        },
        "vkGetPhysicalDeviceExternalBufferProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceExternalBufferProperties(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo,\n VkExternalBufferProperties* pExternalBufferProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceExternalBufferInfo",
                    "header": "const VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo\n            ",
                    "name": "pExternalBufferInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalBufferProperties",
                    "header": "VkExternalBufferProperties* pExternalBufferProperties\n        ",
                    "name": "pExternalBufferProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceExternalBufferPropertiesKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceExternalBufferPropertiesKHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo,\n VkExternalBufferProperties* pExternalBufferProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceExternalBufferInfo",
                    "header": "const VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo\n            ",
                    "name": "pExternalBufferInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalBufferProperties",
                    "header": "VkExternalBufferProperties* pExternalBufferProperties\n        ",
                    "name": "pExternalBufferProperties"
                }
            ]
        },
        "vkGetMemoryFdKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetMemoryFdKHR(\nVkDevice device,\n const VkMemoryGetFdInfoKHR* pGetFdInfo,\n int* pFd\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryGetFdInfoKHR",
                    "header": "const VkMemoryGetFdInfoKHR* pGetFdInfo\n            ",
                    "name": "pGetFdInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "int",
                    "header": "int* pFd\n        ",
                    "name": "pFd"
                }
            ]
        },
        "vkGetMemoryFdPropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetMemoryFdPropertiesKHR(\nVkDevice device,\n VkExternalMemoryHandleTypeFlagBits handleType,\n int fd,\n VkMemoryFdPropertiesKHR* pMemoryFdProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalMemoryHandleTypeFlagBits",
                    "header": "VkExternalMemoryHandleTypeFlagBits handleType\n            ",
                    "name": "handleType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "int",
                    "header": "int fd\n            ",
                    "name": "fd"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryFdPropertiesKHR",
                    "header": "VkMemoryFdPropertiesKHR* pMemoryFdProperties\n        ",
                    "name": "pMemoryFdProperties"
                }
            ]
        },
        "vkGetMemoryRemoteAddressNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetMemoryRemoteAddressNV(\nVkDevice device,\n const VkMemoryGetRemoteAddressInfoNV* pMemoryGetRemoteAddressInfo,\n VkRemoteAddressNV* pAddress\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryGetRemoteAddressInfoNV",
                    "header": "const VkMemoryGetRemoteAddressInfoNV* pMemoryGetRemoteAddressInfo\n            ",
                    "name": "pMemoryGetRemoteAddressInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRemoteAddressNV",
                    "header": "VkRemoteAddressNV* pAddress\n        ",
                    "name": "pAddress"
                }
            ]
        },
        "vkGetPhysicalDeviceExternalSemaphoreProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceExternalSemaphoreProperties(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo,\n VkExternalSemaphoreProperties* pExternalSemaphoreProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceExternalSemaphoreInfo",
                    "header": "const VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo\n            ",
                    "name": "pExternalSemaphoreInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalSemaphoreProperties",
                    "header": "VkExternalSemaphoreProperties* pExternalSemaphoreProperties\n        ",
                    "name": "pExternalSemaphoreProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo,\n VkExternalSemaphoreProperties* pExternalSemaphoreProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceExternalSemaphoreInfo",
                    "header": "const VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo\n            ",
                    "name": "pExternalSemaphoreInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalSemaphoreProperties",
                    "header": "VkExternalSemaphoreProperties* pExternalSemaphoreProperties\n        ",
                    "name": "pExternalSemaphoreProperties"
                }
            ]
        },
        "vkGetSemaphoreFdKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetSemaphoreFdKHR(\nVkDevice device,\n const VkSemaphoreGetFdInfoKHR* pGetFdInfo,\n int* pFd\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphoreGetFdInfoKHR",
                    "header": "const VkSemaphoreGetFdInfoKHR* pGetFdInfo\n            ",
                    "name": "pGetFdInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "int",
                    "header": "int* pFd\n        ",
                    "name": "pFd"
                }
            ]
        },
        "vkImportSemaphoreFdKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkImportSemaphoreFdKHR(\nVkDevice device,\n const VkImportSemaphoreFdInfoKHR* pImportSemaphoreFdInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImportSemaphoreFdInfoKHR",
                    "header": "const VkImportSemaphoreFdInfoKHR* pImportSemaphoreFdInfo\n        ",
                    "name": "pImportSemaphoreFdInfo"
                }
            ]
        },
        "vkGetPhysicalDeviceExternalFenceProperties": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceExternalFenceProperties(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo,\n VkExternalFenceProperties* pExternalFenceProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceExternalFenceInfo",
                    "header": "const VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo\n            ",
                    "name": "pExternalFenceInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalFenceProperties",
                    "header": "VkExternalFenceProperties* pExternalFenceProperties\n        ",
                    "name": "pExternalFenceProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceExternalFencePropertiesKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceExternalFencePropertiesKHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo,\n VkExternalFenceProperties* pExternalFenceProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceExternalFenceInfo",
                    "header": "const VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo\n            ",
                    "name": "pExternalFenceInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalFenceProperties",
                    "header": "VkExternalFenceProperties* pExternalFenceProperties\n        ",
                    "name": "pExternalFenceProperties"
                }
            ]
        },
        "vkGetFenceFdKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetFenceFdKHR(\nVkDevice device,\n const VkFenceGetFdInfoKHR* pGetFdInfo,\n int* pFd\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFenceGetFdInfoKHR",
                    "header": "const VkFenceGetFdInfoKHR* pGetFdInfo\n            ",
                    "name": "pGetFdInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "int",
                    "header": "int* pFd\n        ",
                    "name": "pFd"
                }
            ]
        },
        "vkImportFenceFdKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkImportFenceFdKHR(\nVkDevice device,\n const VkImportFenceFdInfoKHR* pImportFenceFdInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImportFenceFdInfoKHR",
                    "header": "const VkImportFenceFdInfoKHR* pImportFenceFdInfo\n        ",
                    "name": "pImportFenceFdInfo"
                }
            ]
        },
        "vkReleaseDisplayEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkReleaseDisplayEXT(\nVkPhysicalDevice physicalDevice,\n VkDisplayKHR display\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR display\n        ",
                    "name": "display"
                }
            ]
        },
        "vkDisplayPowerControlEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkDisplayPowerControlEXT(\nVkDevice device,\n VkDisplayKHR display,\n const VkDisplayPowerInfoEXT* pDisplayPowerInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR display\n            ",
                    "name": "display"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayPowerInfoEXT",
                    "header": "const VkDisplayPowerInfoEXT* pDisplayPowerInfo\n        ",
                    "name": "pDisplayPowerInfo"
                }
            ]
        },
        "vkRegisterDeviceEventEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkRegisterDeviceEventEXT(\nVkDevice device,\n const VkDeviceEventInfoEXT* pDeviceEventInfo,\n const VkAllocationCallbacks* pAllocator,\n VkFence* pFence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceEventInfoEXT",
                    "header": "const VkDeviceEventInfoEXT* pDeviceEventInfo\n            ",
                    "name": "pDeviceEventInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence* pFence\n        ",
                    "name": "pFence"
                }
            ]
        },
        "vkRegisterDisplayEventEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkRegisterDisplayEventEXT(\nVkDevice device,\n VkDisplayKHR display,\n const VkDisplayEventInfoEXT* pDisplayEventInfo,\n const VkAllocationCallbacks* pAllocator,\n VkFence* pFence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR display\n            ",
                    "name": "display"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayEventInfoEXT",
                    "header": "const VkDisplayEventInfoEXT* pDisplayEventInfo\n            ",
                    "name": "pDisplayEventInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence* pFence\n        ",
                    "name": "pFence"
                }
            ]
        },
        "vkGetSwapchainCounterEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetSwapchainCounterEXT(\nVkDevice device,\n VkSwapchainKHR swapchain,\n VkSurfaceCounterFlagBitsEXT counter,\n uint64_t* pCounterValue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n            ",
                    "name": "swapchain"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceCounterFlagBitsEXT",
                    "header": "VkSurfaceCounterFlagBitsEXT counter\n            ",
                    "name": "counter"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t* pCounterValue\n        ",
                    "name": "pCounterValue"
                }
            ]
        },
        "vkGetPhysicalDeviceSurfaceCapabilities2EXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSurfaceCapabilities2EXT(\nVkPhysicalDevice physicalDevice,\n VkSurfaceKHR surface,\n VkSurfaceCapabilities2EXT* pSurfaceCapabilities\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceCapabilities2EXT",
                    "header": "VkSurfaceCapabilities2EXT* pSurfaceCapabilities\n        ",
                    "name": "pSurfaceCapabilities"
                }
            ]
        },
        "vkEnumeratePhysicalDeviceGroups": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumeratePhysicalDeviceGroups(\nVkInstance instance,\n uint32_t* pPhysicalDeviceGroupCount,\n VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPhysicalDeviceGroupCount\n            ",
                    "name": "pPhysicalDeviceGroupCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPhysicalDeviceGroupCount"
                    ],
                    "type": "VkPhysicalDeviceGroupProperties",
                    "header": "VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties\n        ",
                    "name": "pPhysicalDeviceGroupProperties"
                }
            ]
        },
        "vkEnumeratePhysicalDeviceGroupsKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumeratePhysicalDeviceGroupsKHR(\nVkInstance instance,\n uint32_t* pPhysicalDeviceGroupCount,\n VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPhysicalDeviceGroupCount\n            ",
                    "name": "pPhysicalDeviceGroupCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPhysicalDeviceGroupCount"
                    ],
                    "type": "VkPhysicalDeviceGroupProperties",
                    "header": "VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties\n        ",
                    "name": "pPhysicalDeviceGroupProperties"
                }
            ]
        },
        "vkGetDeviceGroupPeerMemoryFeatures": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceGroupPeerMemoryFeatures(\nVkDevice device,\n uint32_t heapIndex,\n uint32_t localDeviceIndex,\n uint32_t remoteDeviceIndex,\n VkPeerMemoryFeatureFlags* pPeerMemoryFeatures\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t heapIndex\n            ",
                    "name": "heapIndex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t localDeviceIndex\n            ",
                    "name": "localDeviceIndex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t remoteDeviceIndex\n            ",
                    "name": "remoteDeviceIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPeerMemoryFeatureFlags",
                    "header": "VkPeerMemoryFeatureFlags* pPeerMemoryFeatures\n        ",
                    "name": "pPeerMemoryFeatures"
                }
            ]
        },
        "vkGetDeviceGroupPeerMemoryFeaturesKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceGroupPeerMemoryFeaturesKHR(\nVkDevice device,\n uint32_t heapIndex,\n uint32_t localDeviceIndex,\n uint32_t remoteDeviceIndex,\n VkPeerMemoryFeatureFlags* pPeerMemoryFeatures\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t heapIndex\n            ",
                    "name": "heapIndex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t localDeviceIndex\n            ",
                    "name": "localDeviceIndex"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t remoteDeviceIndex\n            ",
                    "name": "remoteDeviceIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPeerMemoryFeatureFlags",
                    "header": "VkPeerMemoryFeatureFlags* pPeerMemoryFeatures\n        ",
                    "name": "pPeerMemoryFeatures"
                }
            ]
        },
        "vkBindBufferMemory2": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindBufferMemory2(\nVkDevice device,\n uint32_t bindInfoCount,\n const VkBindBufferMemoryInfo* pBindInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindInfoCount\n            ",
                    "name": "bindInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindInfoCount"
                    ],
                    "type": "VkBindBufferMemoryInfo",
                    "header": "const VkBindBufferMemoryInfo* pBindInfos\n        ",
                    "name": "pBindInfos"
                }
            ]
        },
        "vkBindBufferMemory2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindBufferMemory2KHR(\nVkDevice device,\n uint32_t bindInfoCount,\n const VkBindBufferMemoryInfo* pBindInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindInfoCount\n            ",
                    "name": "bindInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindInfoCount"
                    ],
                    "type": "VkBindBufferMemoryInfo",
                    "header": "const VkBindBufferMemoryInfo* pBindInfos\n        ",
                    "name": "pBindInfos"
                }
            ]
        },
        "vkBindImageMemory2": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindImageMemory2(\nVkDevice device,\n uint32_t bindInfoCount,\n const VkBindImageMemoryInfo* pBindInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindInfoCount\n            ",
                    "name": "bindInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindInfoCount"
                    ],
                    "type": "VkBindImageMemoryInfo",
                    "header": "const VkBindImageMemoryInfo* pBindInfos\n        ",
                    "name": "pBindInfos"
                }
            ]
        },
        "vkBindImageMemory2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindImageMemory2KHR(\nVkDevice device,\n uint32_t bindInfoCount,\n const VkBindImageMemoryInfo* pBindInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindInfoCount\n            ",
                    "name": "bindInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindInfoCount"
                    ],
                    "type": "VkBindImageMemoryInfo",
                    "header": "const VkBindImageMemoryInfo* pBindInfos\n        ",
                    "name": "pBindInfos"
                }
            ]
        },
        "vkCmdSetDeviceMask": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDeviceMask(\nVkCommandBuffer commandBuffer,\n uint32_t deviceMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t deviceMask\n        ",
                    "name": "deviceMask"
                }
            ]
        },
        "vkCmdSetDeviceMaskKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDeviceMaskKHR(\nVkCommandBuffer commandBuffer,\n uint32_t deviceMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t deviceMask\n        ",
                    "name": "deviceMask"
                }
            ]
        },
        "vkGetDeviceGroupPresentCapabilitiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDeviceGroupPresentCapabilitiesKHR(\nVkDevice device,\n VkDeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceGroupPresentCapabilitiesKHR",
                    "header": "VkDeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities\n        ",
                    "name": "pDeviceGroupPresentCapabilities"
                }
            ]
        },
        "vkGetDeviceGroupSurfacePresentModesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDeviceGroupSurfacePresentModesKHR(\nVkDevice device,\n VkSurfaceKHR surface,\n VkDeviceGroupPresentModeFlagsKHR* pModes\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceGroupPresentModeFlagsKHR",
                    "header": "VkDeviceGroupPresentModeFlagsKHR* pModes\n        ",
                    "name": "pModes"
                }
            ]
        },
        "vkAcquireNextImage2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAcquireNextImage2KHR(\nVkDevice device,\n const VkAcquireNextImageInfoKHR* pAcquireInfo,\n uint32_t* pImageIndex\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAcquireNextImageInfoKHR",
                    "header": "const VkAcquireNextImageInfoKHR* pAcquireInfo\n            ",
                    "name": "pAcquireInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pImageIndex\n        ",
                    "name": "pImageIndex"
                }
            ]
        },
        "vkCmdDispatchBase": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDispatchBase(\nVkCommandBuffer commandBuffer,\n uint32_t baseGroupX,\n uint32_t baseGroupY,\n uint32_t baseGroupZ,\n uint32_t groupCountX,\n uint32_t groupCountY,\n uint32_t groupCountZ\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t baseGroupX\n            ",
                    "name": "baseGroupX"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t baseGroupY\n            ",
                    "name": "baseGroupY"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t baseGroupZ\n            ",
                    "name": "baseGroupZ"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountX\n            ",
                    "name": "groupCountX"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountY\n            ",
                    "name": "groupCountY"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountZ\n        ",
                    "name": "groupCountZ"
                }
            ]
        },
        "vkCmdDispatchBaseKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDispatchBaseKHR(\nVkCommandBuffer commandBuffer,\n uint32_t baseGroupX,\n uint32_t baseGroupY,\n uint32_t baseGroupZ,\n uint32_t groupCountX,\n uint32_t groupCountY,\n uint32_t groupCountZ\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t baseGroupX\n            ",
                    "name": "baseGroupX"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t baseGroupY\n            ",
                    "name": "baseGroupY"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t baseGroupZ\n            ",
                    "name": "baseGroupZ"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountX\n            ",
                    "name": "groupCountX"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountY\n            ",
                    "name": "groupCountY"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountZ\n        ",
                    "name": "groupCountZ"
                }
            ]
        },
        "vkGetPhysicalDevicePresentRectanglesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDevicePresentRectanglesKHR(\nVkPhysicalDevice physicalDevice,\n VkSurfaceKHR surface,\n uint32_t* pRectCount,\n VkRect2D* pRects\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR surface\n            ",
                    "name": "surface"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pRectCount\n            ",
                    "name": "pRectCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pRectCount"
                    ],
                    "type": "VkRect2D",
                    "header": "VkRect2D* pRects\n        ",
                    "name": "pRects"
                }
            ]
        },
        "vkCreateDescriptorUpdateTemplate": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDescriptorUpdateTemplate(\nVkDevice device,\n const VkDescriptorUpdateTemplateCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplateCreateInfo",
                    "header": "const VkDescriptorUpdateTemplateCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplate",
                    "header": "VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate\n        ",
                    "name": "pDescriptorUpdateTemplate"
                }
            ]
        },
        "vkCreateDescriptorUpdateTemplateKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDescriptorUpdateTemplateKHR(\nVkDevice device,\n const VkDescriptorUpdateTemplateCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplateCreateInfo",
                    "header": "const VkDescriptorUpdateTemplateCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplate",
                    "header": "VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate\n        ",
                    "name": "pDescriptorUpdateTemplate"
                }
            ]
        },
        "vkDestroyDescriptorUpdateTemplate": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDescriptorUpdateTemplate(\nVkDevice device,\n VkDescriptorUpdateTemplate descriptorUpdateTemplate,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplate",
                    "header": "VkDescriptorUpdateTemplate descriptorUpdateTemplate\n            ",
                    "name": "descriptorUpdateTemplate"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkDestroyDescriptorUpdateTemplateKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDescriptorUpdateTemplateKHR(\nVkDevice device,\n VkDescriptorUpdateTemplate descriptorUpdateTemplate,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplate",
                    "header": "VkDescriptorUpdateTemplate descriptorUpdateTemplate\n            ",
                    "name": "descriptorUpdateTemplate"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkUpdateDescriptorSetWithTemplate": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkUpdateDescriptorSetWithTemplate(\nVkDevice device,\n VkDescriptorSet descriptorSet,\n VkDescriptorUpdateTemplate descriptorUpdateTemplate,\n const void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSet",
                    "header": "VkDescriptorSet descriptorSet\n            ",
                    "name": "descriptorSet"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplate",
                    "header": "VkDescriptorUpdateTemplate descriptorUpdateTemplate\n            ",
                    "name": "descriptorUpdateTemplate"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "const void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkUpdateDescriptorSetWithTemplateKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkUpdateDescriptorSetWithTemplateKHR(\nVkDevice device,\n VkDescriptorSet descriptorSet,\n VkDescriptorUpdateTemplate descriptorUpdateTemplate,\n const void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSet",
                    "header": "VkDescriptorSet descriptorSet\n            ",
                    "name": "descriptorSet"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplate",
                    "header": "VkDescriptorUpdateTemplate descriptorUpdateTemplate\n            ",
                    "name": "descriptorUpdateTemplate"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "const void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkCmdPushDescriptorSetWithTemplateKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdPushDescriptorSetWithTemplateKHR(\nVkCommandBuffer commandBuffer,\n VkDescriptorUpdateTemplate descriptorUpdateTemplate,\n VkPipelineLayout layout,\n uint32_t set,\n const void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorUpdateTemplate",
                    "header": "VkDescriptorUpdateTemplate descriptorUpdateTemplate\n            ",
                    "name": "descriptorUpdateTemplate"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t set\n            ",
                    "name": "set"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "const void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkSetHdrMetadataEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkSetHdrMetadataEXT(\nVkDevice device,\n uint32_t swapchainCount,\n const VkSwapchainKHR* pSwapchains,\n const VkHdrMetadataEXT* pMetadata\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t swapchainCount\n            ",
                    "name": "swapchainCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "swapchainCount"
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "const VkSwapchainKHR* pSwapchains\n            ",
                    "name": "pSwapchains"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "swapchainCount"
                    ],
                    "type": "VkHdrMetadataEXT",
                    "header": "const VkHdrMetadataEXT* pMetadata\n        ",
                    "name": "pMetadata"
                }
            ]
        },
        "vkGetSwapchainStatusKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetSwapchainStatusKHR(\nVkDevice device,\n VkSwapchainKHR swapchain\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n        ",
                    "name": "swapchain"
                }
            ]
        },
        "vkGetRefreshCycleDurationGOOGLE": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetRefreshCycleDurationGOOGLE(\nVkDevice device,\n VkSwapchainKHR swapchain,\n VkRefreshCycleDurationGOOGLE* pDisplayTimingProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n            ",
                    "name": "swapchain"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRefreshCycleDurationGOOGLE",
                    "header": "VkRefreshCycleDurationGOOGLE* pDisplayTimingProperties\n        ",
                    "name": "pDisplayTimingProperties"
                }
            ]
        },
        "vkGetPastPresentationTimingGOOGLE": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPastPresentationTimingGOOGLE(\nVkDevice device,\n VkSwapchainKHR swapchain,\n uint32_t* pPresentationTimingCount,\n VkPastPresentationTimingGOOGLE* pPresentationTimings\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n            ",
                    "name": "swapchain"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPresentationTimingCount\n            ",
                    "name": "pPresentationTimingCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPresentationTimingCount"
                    ],
                    "type": "VkPastPresentationTimingGOOGLE",
                    "header": "VkPastPresentationTimingGOOGLE* pPresentationTimings\n        ",
                    "name": "pPresentationTimings"
                }
            ]
        },
        "vkCmdSetViewportWScalingNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetViewportWScalingNV(\nVkCommandBuffer commandBuffer,\n uint32_t firstViewport,\n uint32_t viewportCount,\n const VkViewportWScalingNV* pViewportWScalings\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstViewport\n            ",
                    "name": "firstViewport"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t viewportCount\n            ",
                    "name": "viewportCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "viewportCount"
                    ],
                    "type": "VkViewportWScalingNV",
                    "header": "const VkViewportWScalingNV* pViewportWScalings\n        ",
                    "name": "pViewportWScalings"
                }
            ]
        },
        "vkCmdSetDiscardRectangleEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDiscardRectangleEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstDiscardRectangle,\n uint32_t discardRectangleCount,\n const VkRect2D* pDiscardRectangles\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstDiscardRectangle\n            ",
                    "name": "firstDiscardRectangle"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t discardRectangleCount\n            ",
                    "name": "discardRectangleCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "discardRectangleCount"
                    ],
                    "type": "VkRect2D",
                    "header": "const VkRect2D* pDiscardRectangles\n        ",
                    "name": "pDiscardRectangles"
                }
            ]
        },
        "vkCmdSetDiscardRectangleEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDiscardRectangleEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 discardRectangleEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 discardRectangleEnable\n        ",
                    "name": "discardRectangleEnable"
                }
            ]
        },
        "vkCmdSetDiscardRectangleModeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDiscardRectangleModeEXT(\nVkCommandBuffer commandBuffer,\n VkDiscardRectangleModeEXT discardRectangleMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDiscardRectangleModeEXT",
                    "header": "VkDiscardRectangleModeEXT discardRectangleMode\n        ",
                    "name": "discardRectangleMode"
                }
            ]
        },
        "vkCmdSetSampleLocationsEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetSampleLocationsEXT(\nVkCommandBuffer commandBuffer,\n const VkSampleLocationsInfoEXT* pSampleLocationsInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSampleLocationsInfoEXT",
                    "header": "const VkSampleLocationsInfoEXT* pSampleLocationsInfo\n        ",
                    "name": "pSampleLocationsInfo"
                }
            ]
        },
        "vkGetPhysicalDeviceMultisamplePropertiesEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceMultisamplePropertiesEXT(\nVkPhysicalDevice physicalDevice,\n VkSampleCountFlagBits samples,\n VkMultisamplePropertiesEXT* pMultisampleProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSampleCountFlagBits",
                    "header": "VkSampleCountFlagBits samples\n            ",
                    "name": "samples"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMultisamplePropertiesEXT",
                    "header": "VkMultisamplePropertiesEXT* pMultisampleProperties\n        ",
                    "name": "pMultisampleProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceSurfaceCapabilities2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSurfaceCapabilities2KHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo,\n VkSurfaceCapabilities2KHR* pSurfaceCapabilities\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceSurfaceInfo2KHR",
                    "header": "const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo\n            ",
                    "name": "pSurfaceInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceCapabilities2KHR",
                    "header": "VkSurfaceCapabilities2KHR* pSurfaceCapabilities\n        ",
                    "name": "pSurfaceCapabilities"
                }
            ]
        },
        "vkGetPhysicalDeviceSurfaceFormats2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSurfaceFormats2KHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo,\n uint32_t* pSurfaceFormatCount,\n VkSurfaceFormat2KHR* pSurfaceFormats\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceSurfaceInfo2KHR",
                    "header": "const VkPhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo\n            ",
                    "name": "pSurfaceInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSurfaceFormatCount\n            ",
                    "name": "pSurfaceFormatCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSurfaceFormatCount"
                    ],
                    "type": "VkSurfaceFormat2KHR",
                    "header": "VkSurfaceFormat2KHR* pSurfaceFormats\n        ",
                    "name": "pSurfaceFormats"
                }
            ]
        },
        "vkGetPhysicalDeviceDisplayProperties2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceDisplayProperties2KHR(\nVkPhysicalDevice physicalDevice,\n uint32_t* pPropertyCount,\n VkDisplayProperties2KHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkDisplayProperties2KHR",
                    "header": "VkDisplayProperties2KHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceDisplayPlaneProperties2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceDisplayPlaneProperties2KHR(\nVkPhysicalDevice physicalDevice,\n uint32_t* pPropertyCount,\n VkDisplayPlaneProperties2KHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkDisplayPlaneProperties2KHR",
                    "header": "VkDisplayPlaneProperties2KHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetDisplayModeProperties2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDisplayModeProperties2KHR(\nVkPhysicalDevice physicalDevice,\n VkDisplayKHR display,\n uint32_t* pPropertyCount,\n VkDisplayModeProperties2KHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR display\n            ",
                    "name": "display"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkDisplayModeProperties2KHR",
                    "header": "VkDisplayModeProperties2KHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetDisplayPlaneCapabilities2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDisplayPlaneCapabilities2KHR(\nVkPhysicalDevice physicalDevice,\n const VkDisplayPlaneInfo2KHR* pDisplayPlaneInfo,\n VkDisplayPlaneCapabilities2KHR* pCapabilities\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayPlaneInfo2KHR",
                    "header": "const VkDisplayPlaneInfo2KHR* pDisplayPlaneInfo\n            ",
                    "name": "pDisplayPlaneInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayPlaneCapabilities2KHR",
                    "header": "VkDisplayPlaneCapabilities2KHR* pCapabilities\n        ",
                    "name": "pCapabilities"
                }
            ]
        },
        "vkGetBufferMemoryRequirements2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetBufferMemoryRequirements2(\nVkDevice device,\n const VkBufferMemoryRequirementsInfo2* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferMemoryRequirementsInfo2",
                    "header": "const VkBufferMemoryRequirementsInfo2* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetBufferMemoryRequirements2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetBufferMemoryRequirements2KHR(\nVkDevice device,\n const VkBufferMemoryRequirementsInfo2* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferMemoryRequirementsInfo2",
                    "header": "const VkBufferMemoryRequirementsInfo2* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetImageMemoryRequirements2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageMemoryRequirements2(\nVkDevice device,\n const VkImageMemoryRequirementsInfo2* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageMemoryRequirementsInfo2",
                    "header": "const VkImageMemoryRequirementsInfo2* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetImageMemoryRequirements2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageMemoryRequirements2KHR(\nVkDevice device,\n const VkImageMemoryRequirementsInfo2* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageMemoryRequirementsInfo2",
                    "header": "const VkImageMemoryRequirementsInfo2* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetImageSparseMemoryRequirements2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageSparseMemoryRequirements2(\nVkDevice device,\n const VkImageSparseMemoryRequirementsInfo2* pInfo,\n uint32_t* pSparseMemoryRequirementCount,\n VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageSparseMemoryRequirementsInfo2",
                    "header": "const VkImageSparseMemoryRequirementsInfo2* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSparseMemoryRequirementCount\n            ",
                    "name": "pSparseMemoryRequirementCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSparseMemoryRequirementCount"
                    ],
                    "type": "VkSparseImageMemoryRequirements2",
                    "header": "VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n        ",
                    "name": "pSparseMemoryRequirements"
                }
            ]
        },
        "vkGetImageSparseMemoryRequirements2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageSparseMemoryRequirements2KHR(\nVkDevice device,\n const VkImageSparseMemoryRequirementsInfo2* pInfo,\n uint32_t* pSparseMemoryRequirementCount,\n VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageSparseMemoryRequirementsInfo2",
                    "header": "const VkImageSparseMemoryRequirementsInfo2* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSparseMemoryRequirementCount\n            ",
                    "name": "pSparseMemoryRequirementCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSparseMemoryRequirementCount"
                    ],
                    "type": "VkSparseImageMemoryRequirements2",
                    "header": "VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n        ",
                    "name": "pSparseMemoryRequirements"
                }
            ]
        },
        "vkGetDeviceBufferMemoryRequirements": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceBufferMemoryRequirements(\nVkDevice device,\n const VkDeviceBufferMemoryRequirements* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceBufferMemoryRequirements",
                    "header": "const VkDeviceBufferMemoryRequirements* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetDeviceBufferMemoryRequirementsKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceBufferMemoryRequirementsKHR(\nVkDevice device,\n const VkDeviceBufferMemoryRequirements* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceBufferMemoryRequirements",
                    "header": "const VkDeviceBufferMemoryRequirements* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetDeviceImageMemoryRequirements": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceImageMemoryRequirements(\nVkDevice device,\n const VkDeviceImageMemoryRequirements* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceImageMemoryRequirements",
                    "header": "const VkDeviceImageMemoryRequirements* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetDeviceImageMemoryRequirementsKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceImageMemoryRequirementsKHR(\nVkDevice device,\n const VkDeviceImageMemoryRequirements* pInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceImageMemoryRequirements",
                    "header": "const VkDeviceImageMemoryRequirements* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetDeviceImageSparseMemoryRequirements": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceImageSparseMemoryRequirements(\nVkDevice device,\n const VkDeviceImageMemoryRequirements* pInfo,\n uint32_t* pSparseMemoryRequirementCount,\n VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceImageMemoryRequirements",
                    "header": "const VkDeviceImageMemoryRequirements* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSparseMemoryRequirementCount\n            ",
                    "name": "pSparseMemoryRequirementCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSparseMemoryRequirementCount"
                    ],
                    "type": "VkSparseImageMemoryRequirements2",
                    "header": "VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n        ",
                    "name": "pSparseMemoryRequirements"
                }
            ]
        },
        "vkGetDeviceImageSparseMemoryRequirementsKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceImageSparseMemoryRequirementsKHR(\nVkDevice device,\n const VkDeviceImageMemoryRequirements* pInfo,\n uint32_t* pSparseMemoryRequirementCount,\n VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceImageMemoryRequirements",
                    "header": "const VkDeviceImageMemoryRequirements* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pSparseMemoryRequirementCount\n            ",
                    "name": "pSparseMemoryRequirementCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pSparseMemoryRequirementCount"
                    ],
                    "type": "VkSparseImageMemoryRequirements2",
                    "header": "VkSparseImageMemoryRequirements2* pSparseMemoryRequirements\n        ",
                    "name": "pSparseMemoryRequirements"
                }
            ]
        },
        "vkCreateSamplerYcbcrConversion": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateSamplerYcbcrConversion(\nVkDevice device,\n const VkSamplerYcbcrConversionCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSamplerYcbcrConversion* pYcbcrConversion\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerYcbcrConversionCreateInfo",
                    "header": "const VkSamplerYcbcrConversionCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerYcbcrConversion",
                    "header": "VkSamplerYcbcrConversion* pYcbcrConversion\n        ",
                    "name": "pYcbcrConversion"
                }
            ]
        },
        "vkCreateSamplerYcbcrConversionKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateSamplerYcbcrConversionKHR(\nVkDevice device,\n const VkSamplerYcbcrConversionCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSamplerYcbcrConversion* pYcbcrConversion\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerYcbcrConversionCreateInfo",
                    "header": "const VkSamplerYcbcrConversionCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerYcbcrConversion",
                    "header": "VkSamplerYcbcrConversion* pYcbcrConversion\n        ",
                    "name": "pYcbcrConversion"
                }
            ]
        },
        "vkDestroySamplerYcbcrConversion": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroySamplerYcbcrConversion(\nVkDevice device,\n VkSamplerYcbcrConversion ycbcrConversion,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerYcbcrConversion",
                    "header": "VkSamplerYcbcrConversion ycbcrConversion\n            ",
                    "name": "ycbcrConversion"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkDestroySamplerYcbcrConversionKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroySamplerYcbcrConversionKHR(\nVkDevice device,\n VkSamplerYcbcrConversion ycbcrConversion,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerYcbcrConversion",
                    "header": "VkSamplerYcbcrConversion ycbcrConversion\n            ",
                    "name": "ycbcrConversion"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetDeviceQueue2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceQueue2(\nVkDevice device,\n const VkDeviceQueueInfo2* pQueueInfo,\n VkQueue* pQueue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceQueueInfo2",
                    "header": "const VkDeviceQueueInfo2* pQueueInfo\n            ",
                    "name": "pQueueInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue* pQueue\n        ",
                    "name": "pQueue"
                }
            ]
        },
        "vkCreateValidationCacheEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateValidationCacheEXT(\nVkDevice device,\n const VkValidationCacheCreateInfoEXT* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkValidationCacheEXT* pValidationCache\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkValidationCacheCreateInfoEXT",
                    "header": "const VkValidationCacheCreateInfoEXT* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkValidationCacheEXT",
                    "header": "VkValidationCacheEXT* pValidationCache\n        ",
                    "name": "pValidationCache"
                }
            ]
        },
        "vkDestroyValidationCacheEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyValidationCacheEXT(\nVkDevice device,\n VkValidationCacheEXT validationCache,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkValidationCacheEXT",
                    "header": "VkValidationCacheEXT validationCache\n            ",
                    "name": "validationCache"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetValidationCacheDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetValidationCacheDataEXT(\nVkDevice device,\n VkValidationCacheEXT validationCache,\n size_t* pDataSize,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkValidationCacheEXT",
                    "header": "VkValidationCacheEXT validationCache\n            ",
                    "name": "validationCache"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t* pDataSize\n            ",
                    "name": "pDataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pDataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkMergeValidationCachesEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkMergeValidationCachesEXT(\nVkDevice device,\n VkValidationCacheEXT dstCache,\n uint32_t srcCacheCount,\n const VkValidationCacheEXT* pSrcCaches\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkValidationCacheEXT",
                    "header": "VkValidationCacheEXT dstCache\n            ",
                    "name": "dstCache"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t srcCacheCount\n            ",
                    "name": "srcCacheCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "srcCacheCount"
                    ],
                    "type": "VkValidationCacheEXT",
                    "header": "const VkValidationCacheEXT* pSrcCaches\n        ",
                    "name": "pSrcCaches"
                }
            ]
        },
        "vkGetDescriptorSetLayoutSupport": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDescriptorSetLayoutSupport(\nVkDevice device,\n const VkDescriptorSetLayoutCreateInfo* pCreateInfo,\n VkDescriptorSetLayoutSupport* pSupport\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayoutCreateInfo",
                    "header": "const VkDescriptorSetLayoutCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayoutSupport",
                    "header": "VkDescriptorSetLayoutSupport* pSupport\n        ",
                    "name": "pSupport"
                }
            ]
        },
        "vkGetDescriptorSetLayoutSupportKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDescriptorSetLayoutSupportKHR(\nVkDevice device,\n const VkDescriptorSetLayoutCreateInfo* pCreateInfo,\n VkDescriptorSetLayoutSupport* pSupport\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayoutCreateInfo",
                    "header": "const VkDescriptorSetLayoutCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayoutSupport",
                    "header": "VkDescriptorSetLayoutSupport* pSupport\n        ",
                    "name": "pSupport"
                }
            ]
        },
        "vkGetShaderInfoAMD": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetShaderInfoAMD(\nVkDevice device,\n VkPipeline pipeline,\n VkShaderStageFlagBits shaderStage,\n VkShaderInfoTypeAMD infoType,\n size_t* pInfoSize,\n void* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderStageFlagBits",
                    "header": "VkShaderStageFlagBits shaderStage\n            ",
                    "name": "shaderStage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderInfoTypeAMD",
                    "header": "VkShaderInfoTypeAMD infoType\n            ",
                    "name": "infoType"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t* pInfoSize\n            ",
                    "name": "pInfoSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pInfoSize"
                    ],
                    "type": "void",
                    "header": "void* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkSetLocalDimmingAMD": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkSetLocalDimmingAMD(\nVkDevice device,\n VkSwapchainKHR swapChain,\n VkBool32 localDimmingEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapChain\n            ",
                    "name": "swapChain"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 localDimmingEnable\n        ",
                    "name": "localDimmingEnable"
                }
            ]
        },
        "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceCalibrateableTimeDomainsEXT(\nVkPhysicalDevice physicalDevice,\n uint32_t* pTimeDomainCount,\n VkTimeDomainEXT* pTimeDomains\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pTimeDomainCount\n            ",
                    "name": "pTimeDomainCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pTimeDomainCount"
                    ],
                    "type": "VkTimeDomainEXT",
                    "header": "VkTimeDomainEXT* pTimeDomains\n        ",
                    "name": "pTimeDomains"
                }
            ]
        },
        "vkGetCalibratedTimestampsEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetCalibratedTimestampsEXT(\nVkDevice device,\n uint32_t timestampCount,\n const VkCalibratedTimestampInfoEXT* pTimestampInfos,\n uint64_t* pTimestamps,\n uint64_t* pMaxDeviation\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t timestampCount\n            ",
                    "name": "timestampCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "timestampCount"
                    ],
                    "type": "VkCalibratedTimestampInfoEXT",
                    "header": "const VkCalibratedTimestampInfoEXT* pTimestampInfos\n            ",
                    "name": "pTimestampInfos"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "timestampCount"
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t* pTimestamps\n            ",
                    "name": "pTimestamps"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t* pMaxDeviation\n        ",
                    "name": "pMaxDeviation"
                }
            ]
        },
        "vkSetDebugUtilsObjectNameEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkSetDebugUtilsObjectNameEXT(\nVkDevice device,\n const VkDebugUtilsObjectNameInfoEXT* pNameInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsObjectNameInfoEXT",
                    "header": "const VkDebugUtilsObjectNameInfoEXT* pNameInfo\n        ",
                    "name": "pNameInfo"
                }
            ]
        },
        "vkSetDebugUtilsObjectTagEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkSetDebugUtilsObjectTagEXT(\nVkDevice device,\n const VkDebugUtilsObjectTagInfoEXT* pTagInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsObjectTagInfoEXT",
                    "header": "const VkDebugUtilsObjectTagInfoEXT* pTagInfo\n        ",
                    "name": "pTagInfo"
                }
            ]
        },
        "vkQueueBeginDebugUtilsLabelEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkQueueBeginDebugUtilsLabelEXT(\nVkQueue queue,\n const VkDebugUtilsLabelEXT* pLabelInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsLabelEXT",
                    "header": "const VkDebugUtilsLabelEXT* pLabelInfo\n        ",
                    "name": "pLabelInfo"
                }
            ]
        },
        "vkQueueEndDebugUtilsLabelEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkQueueEndDebugUtilsLabelEXT(\nVkQueue queue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n        ",
                    "name": "queue"
                }
            ]
        },
        "vkQueueInsertDebugUtilsLabelEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkQueueInsertDebugUtilsLabelEXT(\nVkQueue queue,\n const VkDebugUtilsLabelEXT* pLabelInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsLabelEXT",
                    "header": "const VkDebugUtilsLabelEXT* pLabelInfo\n        ",
                    "name": "pLabelInfo"
                }
            ]
        },
        "vkCmdBeginDebugUtilsLabelEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginDebugUtilsLabelEXT(\nVkCommandBuffer commandBuffer,\n const VkDebugUtilsLabelEXT* pLabelInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsLabelEXT",
                    "header": "const VkDebugUtilsLabelEXT* pLabelInfo\n        ",
                    "name": "pLabelInfo"
                }
            ]
        },
        "vkCmdEndDebugUtilsLabelEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndDebugUtilsLabelEXT(\nVkCommandBuffer commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n        ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkCmdInsertDebugUtilsLabelEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdInsertDebugUtilsLabelEXT(\nVkCommandBuffer commandBuffer,\n const VkDebugUtilsLabelEXT* pLabelInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsLabelEXT",
                    "header": "const VkDebugUtilsLabelEXT* pLabelInfo\n        ",
                    "name": "pLabelInfo"
                }
            ]
        },
        "vkCreateDebugUtilsMessengerEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDebugUtilsMessengerEXT(\nVkInstance instance,\n const VkDebugUtilsMessengerCreateInfoEXT* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkDebugUtilsMessengerEXT* pMessenger\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsMessengerCreateInfoEXT",
                    "header": "const VkDebugUtilsMessengerCreateInfoEXT* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsMessengerEXT",
                    "header": "VkDebugUtilsMessengerEXT* pMessenger\n        ",
                    "name": "pMessenger"
                }
            ]
        },
        "vkDestroyDebugUtilsMessengerEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDebugUtilsMessengerEXT(\nVkInstance instance,\n VkDebugUtilsMessengerEXT messenger,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsMessengerEXT",
                    "header": "VkDebugUtilsMessengerEXT messenger\n            ",
                    "name": "messenger"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkSubmitDebugUtilsMessageEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkSubmitDebugUtilsMessageEXT(\nVkInstance instance,\n VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,\n VkDebugUtilsMessageTypeFlagsEXT messageTypes,\n const VkDebugUtilsMessengerCallbackDataEXT* pCallbackData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsMessageSeverityFlagBitsEXT",
                    "header": "VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity\n            ",
                    "name": "messageSeverity"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsMessageTypeFlagsEXT",
                    "header": "VkDebugUtilsMessageTypeFlagsEXT messageTypes\n            ",
                    "name": "messageTypes"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDebugUtilsMessengerCallbackDataEXT",
                    "header": "const VkDebugUtilsMessengerCallbackDataEXT* pCallbackData\n        ",
                    "name": "pCallbackData"
                }
            ]
        },
        "vkGetMemoryHostPointerPropertiesEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetMemoryHostPointerPropertiesEXT(\nVkDevice device,\n VkExternalMemoryHandleTypeFlagBits handleType,\n const void* pHostPointer,\n VkMemoryHostPointerPropertiesEXT* pMemoryHostPointerProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkExternalMemoryHandleTypeFlagBits",
                    "header": "VkExternalMemoryHandleTypeFlagBits handleType\n            ",
                    "name": "handleType"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "const void* pHostPointer\n            ",
                    "name": "pHostPointer"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryHostPointerPropertiesEXT",
                    "header": "VkMemoryHostPointerPropertiesEXT* pMemoryHostPointerProperties\n        ",
                    "name": "pMemoryHostPointerProperties"
                }
            ]
        },
        "vkCmdWriteBufferMarkerAMD": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteBufferMarkerAMD(\nVkCommandBuffer commandBuffer,\n VkPipelineStageFlagBits pipelineStage,\n VkBuffer dstBuffer,\n VkDeviceSize dstOffset,\n uint32_t marker\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlagBits",
                    "header": "VkPipelineStageFlagBits pipelineStage\n            ",
                    "name": "pipelineStage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer dstBuffer\n            ",
                    "name": "dstBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize dstOffset\n            ",
                    "name": "dstOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t marker\n        ",
                    "name": "marker"
                }
            ]
        },
        "vkCreateRenderPass2": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateRenderPass2(\nVkDevice device,\n const VkRenderPassCreateInfo2* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkRenderPass* pRenderPass\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPassCreateInfo2",
                    "header": "const VkRenderPassCreateInfo2* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPass",
                    "header": "VkRenderPass* pRenderPass\n        ",
                    "name": "pRenderPass"
                }
            ]
        },
        "vkCreateRenderPass2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateRenderPass2KHR(\nVkDevice device,\n const VkRenderPassCreateInfo2* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkRenderPass* pRenderPass\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPassCreateInfo2",
                    "header": "const VkRenderPassCreateInfo2* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPass",
                    "header": "VkRenderPass* pRenderPass\n        ",
                    "name": "pRenderPass"
                }
            ]
        },
        "vkCmdBeginRenderPass2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginRenderPass2(\nVkCommandBuffer commandBuffer,\n const VkRenderPassBeginInfo*      pRenderPassBegin,\n const VkSubpassBeginInfo*      pSubpassBeginInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPassBeginInfo",
                    "header": "const VkRenderPassBeginInfo*      pRenderPassBegin\n            ",
                    "name": "pRenderPassBegin"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassBeginInfo",
                    "header": "const VkSubpassBeginInfo*      pSubpassBeginInfo\n        ",
                    "name": "pSubpassBeginInfo"
                }
            ]
        },
        "vkCmdBeginRenderPass2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginRenderPass2KHR(\nVkCommandBuffer commandBuffer,\n const VkRenderPassBeginInfo*      pRenderPassBegin,\n const VkSubpassBeginInfo*      pSubpassBeginInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderPassBeginInfo",
                    "header": "const VkRenderPassBeginInfo*      pRenderPassBegin\n            ",
                    "name": "pRenderPassBegin"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassBeginInfo",
                    "header": "const VkSubpassBeginInfo*      pSubpassBeginInfo\n        ",
                    "name": "pSubpassBeginInfo"
                }
            ]
        },
        "vkCmdNextSubpass2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdNextSubpass2(\nVkCommandBuffer commandBuffer,\n const VkSubpassBeginInfo*      pSubpassBeginInfo,\n const VkSubpassEndInfo*        pSubpassEndInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassBeginInfo",
                    "header": "const VkSubpassBeginInfo*      pSubpassBeginInfo\n            ",
                    "name": "pSubpassBeginInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassEndInfo",
                    "header": "const VkSubpassEndInfo*        pSubpassEndInfo\n        ",
                    "name": "pSubpassEndInfo"
                }
            ]
        },
        "vkCmdNextSubpass2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdNextSubpass2KHR(\nVkCommandBuffer commandBuffer,\n const VkSubpassBeginInfo*      pSubpassBeginInfo,\n const VkSubpassEndInfo*        pSubpassEndInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassBeginInfo",
                    "header": "const VkSubpassBeginInfo*      pSubpassBeginInfo\n            ",
                    "name": "pSubpassBeginInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassEndInfo",
                    "header": "const VkSubpassEndInfo*        pSubpassEndInfo\n        ",
                    "name": "pSubpassEndInfo"
                }
            ]
        },
        "vkCmdEndRenderPass2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndRenderPass2(\nVkCommandBuffer commandBuffer,\n const VkSubpassEndInfo*        pSubpassEndInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassEndInfo",
                    "header": "const VkSubpassEndInfo*        pSubpassEndInfo\n        ",
                    "name": "pSubpassEndInfo"
                }
            ]
        },
        "vkCmdEndRenderPass2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndRenderPass2KHR(\nVkCommandBuffer commandBuffer,\n const VkSubpassEndInfo*        pSubpassEndInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubpassEndInfo",
                    "header": "const VkSubpassEndInfo*        pSubpassEndInfo\n        ",
                    "name": "pSubpassEndInfo"
                }
            ]
        },
        "vkGetSemaphoreCounterValue": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetSemaphoreCounterValue(\nVkDevice device,\n VkSemaphore semaphore,\n uint64_t* pValue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphore",
                    "header": "VkSemaphore semaphore\n            ",
                    "name": "semaphore"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t* pValue\n        ",
                    "name": "pValue"
                }
            ]
        },
        "vkGetSemaphoreCounterValueKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetSemaphoreCounterValueKHR(\nVkDevice device,\n VkSemaphore semaphore,\n uint64_t* pValue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphore",
                    "header": "VkSemaphore semaphore\n            ",
                    "name": "semaphore"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t* pValue\n        ",
                    "name": "pValue"
                }
            ]
        },
        "vkWaitSemaphores": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkWaitSemaphores(\nVkDevice device,\n const VkSemaphoreWaitInfo* pWaitInfo,\n uint64_t timeout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphoreWaitInfo",
                    "header": "const VkSemaphoreWaitInfo* pWaitInfo\n            ",
                    "name": "pWaitInfo"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t timeout\n        ",
                    "name": "timeout"
                }
            ]
        },
        "vkWaitSemaphoresKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkWaitSemaphoresKHR(\nVkDevice device,\n const VkSemaphoreWaitInfo* pWaitInfo,\n uint64_t timeout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphoreWaitInfo",
                    "header": "const VkSemaphoreWaitInfo* pWaitInfo\n            ",
                    "name": "pWaitInfo"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t timeout\n        ",
                    "name": "timeout"
                }
            ]
        },
        "vkSignalSemaphore": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkSignalSemaphore(\nVkDevice device,\n const VkSemaphoreSignalInfo* pSignalInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphoreSignalInfo",
                    "header": "const VkSemaphoreSignalInfo* pSignalInfo\n        ",
                    "name": "pSignalInfo"
                }
            ]
        },
        "vkSignalSemaphoreKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkSignalSemaphoreKHR(\nVkDevice device,\n const VkSemaphoreSignalInfo* pSignalInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSemaphoreSignalInfo",
                    "header": "const VkSemaphoreSignalInfo* pSignalInfo\n        ",
                    "name": "pSignalInfo"
                }
            ]
        },
        "vkCmdDrawIndirectCount": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndirectCount(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawIndirectCountKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndirectCountKHR(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawIndirectCountAMD": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndirectCountAMD(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawIndexedIndirectCount": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndexedIndirectCount(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawIndexedIndirectCountKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndexedIndirectCountKHR(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawIndexedIndirectCountAMD": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndexedIndirectCountAMD(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdSetCheckpointNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCheckpointNV(\nVkCommandBuffer commandBuffer,\n const void* pCheckpointMarker\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "const void* pCheckpointMarker\n        ",
                    "name": "pCheckpointMarker"
                }
            ]
        },
        "vkGetQueueCheckpointDataNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetQueueCheckpointDataNV(\nVkQueue queue,\n uint32_t* pCheckpointDataCount,\n VkCheckpointDataNV* pCheckpointData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pCheckpointDataCount\n            ",
                    "name": "pCheckpointDataCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pCheckpointDataCount"
                    ],
                    "type": "VkCheckpointDataNV",
                    "header": "VkCheckpointDataNV* pCheckpointData\n        ",
                    "name": "pCheckpointData"
                }
            ]
        },
        "vkCmdBindTransformFeedbackBuffersEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindTransformFeedbackBuffersEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstBinding,\n uint32_t bindingCount,\n const VkBuffer* pBuffers,\n const VkDeviceSize* pOffsets,\n const VkDeviceSize* pSizes\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstBinding\n            ",
                    "name": "firstBinding"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindingCount\n            ",
                    "name": "bindingCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkBuffer",
                    "header": "const VkBuffer* pBuffers\n            ",
                    "name": "pBuffers"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pOffsets\n            ",
                    "name": "pOffsets"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pSizes\n        ",
                    "name": "pSizes"
                }
            ]
        },
        "vkCmdBeginTransformFeedbackEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginTransformFeedbackEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstCounterBuffer,\n uint32_t counterBufferCount,\n const VkBuffer* pCounterBuffers,\n const VkDeviceSize* pCounterBufferOffsets\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstCounterBuffer\n            ",
                    "name": "firstCounterBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t counterBufferCount\n            ",
                    "name": "counterBufferCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "counterBufferCount"
                    ],
                    "type": "VkBuffer",
                    "header": "const VkBuffer* pCounterBuffers\n            ",
                    "name": "pCounterBuffers"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "counterBufferCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pCounterBufferOffsets\n        ",
                    "name": "pCounterBufferOffsets"
                }
            ]
        },
        "vkCmdEndTransformFeedbackEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndTransformFeedbackEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstCounterBuffer,\n uint32_t counterBufferCount,\n const VkBuffer* pCounterBuffers,\n const VkDeviceSize* pCounterBufferOffsets\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstCounterBuffer\n            ",
                    "name": "firstCounterBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t counterBufferCount\n            ",
                    "name": "counterBufferCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "counterBufferCount"
                    ],
                    "type": "VkBuffer",
                    "header": "const VkBuffer* pCounterBuffers\n            ",
                    "name": "pCounterBuffers"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "counterBufferCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pCounterBufferOffsets\n        ",
                    "name": "pCounterBufferOffsets"
                }
            ]
        },
        "vkCmdBeginQueryIndexedEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginQueryIndexedEXT(\nVkCommandBuffer commandBuffer,\n VkQueryPool queryPool,\n uint32_t query,\n VkQueryControlFlags flags,\n uint32_t index\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t query\n            ",
                    "name": "query"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryControlFlags",
                    "header": "VkQueryControlFlags flags\n            ",
                    "name": "flags"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t index\n        ",
                    "name": "index"
                }
            ]
        },
        "vkCmdEndQueryIndexedEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndQueryIndexedEXT(\nVkCommandBuffer commandBuffer,\n VkQueryPool queryPool,\n uint32_t query,\n uint32_t index\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t query\n            ",
                    "name": "query"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t index\n        ",
                    "name": "index"
                }
            ]
        },
        "vkCmdDrawIndirectByteCountEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawIndirectByteCountEXT(\nVkCommandBuffer commandBuffer,\n uint32_t instanceCount,\n uint32_t firstInstance,\n VkBuffer counterBuffer,\n VkDeviceSize counterBufferOffset,\n uint32_t counterOffset,\n uint32_t vertexStride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t instanceCount\n            ",
                    "name": "instanceCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstInstance\n            ",
                    "name": "firstInstance"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer counterBuffer\n            ",
                    "name": "counterBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize counterBufferOffset\n            ",
                    "name": "counterBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t counterOffset\n            ",
                    "name": "counterOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t vertexStride\n        ",
                    "name": "vertexStride"
                }
            ]
        },
        "vkCmdSetExclusiveScissorNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetExclusiveScissorNV(\nVkCommandBuffer commandBuffer,\n uint32_t firstExclusiveScissor,\n uint32_t exclusiveScissorCount,\n const VkRect2D* pExclusiveScissors\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstExclusiveScissor\n            ",
                    "name": "firstExclusiveScissor"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t exclusiveScissorCount\n            ",
                    "name": "exclusiveScissorCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "exclusiveScissorCount"
                    ],
                    "type": "VkRect2D",
                    "header": "const VkRect2D* pExclusiveScissors\n        ",
                    "name": "pExclusiveScissors"
                }
            ]
        },
        "vkCmdSetExclusiveScissorEnableNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetExclusiveScissorEnableNV(\nVkCommandBuffer commandBuffer,\n uint32_t firstExclusiveScissor,\n uint32_t exclusiveScissorCount,\n const VkBool32* pExclusiveScissorEnables\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstExclusiveScissor\n            ",
                    "name": "firstExclusiveScissor"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t exclusiveScissorCount\n            ",
                    "name": "exclusiveScissorCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "exclusiveScissorCount"
                    ],
                    "type": "VkBool32",
                    "header": "const VkBool32* pExclusiveScissorEnables\n        ",
                    "name": "pExclusiveScissorEnables"
                }
            ]
        },
        "vkCmdBindShadingRateImageNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindShadingRateImageNV(\nVkCommandBuffer commandBuffer,\n VkImageView imageView,\n VkImageLayout imageLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageView",
                    "header": "VkImageView imageView\n            ",
                    "name": "imageView"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout imageLayout\n        ",
                    "name": "imageLayout"
                }
            ]
        },
        "vkCmdSetViewportShadingRatePaletteNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetViewportShadingRatePaletteNV(\nVkCommandBuffer commandBuffer,\n uint32_t firstViewport,\n uint32_t viewportCount,\n const VkShadingRatePaletteNV* pShadingRatePalettes\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstViewport\n            ",
                    "name": "firstViewport"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t viewportCount\n            ",
                    "name": "viewportCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "viewportCount"
                    ],
                    "type": "VkShadingRatePaletteNV",
                    "header": "const VkShadingRatePaletteNV* pShadingRatePalettes\n        ",
                    "name": "pShadingRatePalettes"
                }
            ]
        },
        "vkCmdSetCoarseSampleOrderNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCoarseSampleOrderNV(\nVkCommandBuffer commandBuffer,\n VkCoarseSampleOrderTypeNV sampleOrderType,\n uint32_t customSampleOrderCount,\n const VkCoarseSampleOrderCustomNV* pCustomSampleOrders\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCoarseSampleOrderTypeNV",
                    "header": "VkCoarseSampleOrderTypeNV sampleOrderType\n            ",
                    "name": "sampleOrderType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t customSampleOrderCount\n            ",
                    "name": "customSampleOrderCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "customSampleOrderCount"
                    ],
                    "type": "VkCoarseSampleOrderCustomNV",
                    "header": "const VkCoarseSampleOrderCustomNV* pCustomSampleOrders\n        ",
                    "name": "pCustomSampleOrders"
                }
            ]
        },
        "vkCmdDrawMeshTasksNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMeshTasksNV(\nVkCommandBuffer commandBuffer,\n uint32_t taskCount,\n uint32_t firstTask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t taskCount\n            ",
                    "name": "taskCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstTask\n        ",
                    "name": "firstTask"
                }
            ]
        },
        "vkCmdDrawMeshTasksIndirectNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMeshTasksIndirectNV(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n uint32_t drawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t drawCount\n            ",
                    "name": "drawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawMeshTasksIndirectCountNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMeshTasksIndirectCountNV(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawMeshTasksEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMeshTasksEXT(\nVkCommandBuffer commandBuffer,\n uint32_t groupCountX,\n uint32_t groupCountY,\n uint32_t groupCountZ\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountX\n            ",
                    "name": "groupCountX"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountY\n            ",
                    "name": "groupCountY"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCountZ\n        ",
                    "name": "groupCountZ"
                }
            ]
        },
        "vkCmdDrawMeshTasksIndirectEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMeshTasksIndirectEXT(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n uint32_t drawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t drawCount\n            ",
                    "name": "drawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdDrawMeshTasksIndirectCountEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDrawMeshTasksIndirectCountEXT(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkBuffer countBuffer,\n VkDeviceSize countBufferOffset,\n uint32_t maxDrawCount,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer countBuffer\n            ",
                    "name": "countBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize countBufferOffset\n            ",
                    "name": "countBufferOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t maxDrawCount\n            ",
                    "name": "maxDrawCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCompileDeferredNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCompileDeferredNV(\nVkDevice device,\n VkPipeline pipeline,\n uint32_t shader\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t shader\n        ",
                    "name": "shader"
                }
            ]
        },
        "vkCreateAccelerationStructureNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateAccelerationStructureNV(\nVkDevice device,\n const VkAccelerationStructureCreateInfoNV* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkAccelerationStructureNV* pAccelerationStructure\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureCreateInfoNV",
                    "header": "const VkAccelerationStructureCreateInfoNV* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "VkAccelerationStructureNV* pAccelerationStructure\n        ",
                    "name": "pAccelerationStructure"
                }
            ]
        },
        "vkCmdBindInvocationMaskHUAWEI": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindInvocationMaskHUAWEI(\nVkCommandBuffer commandBuffer,\n VkImageView imageView,\n VkImageLayout imageLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageView",
                    "header": "VkImageView imageView\n            ",
                    "name": "imageView"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout imageLayout\n        ",
                    "name": "imageLayout"
                }
            ]
        },
        "vkDestroyAccelerationStructureKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyAccelerationStructureKHR(\nVkDevice device,\n VkAccelerationStructureKHR accelerationStructure,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureKHR",
                    "header": "VkAccelerationStructureKHR accelerationStructure\n            ",
                    "name": "accelerationStructure"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkDestroyAccelerationStructureNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyAccelerationStructureNV(\nVkDevice device,\n VkAccelerationStructureNV accelerationStructure,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "VkAccelerationStructureNV accelerationStructure\n            ",
                    "name": "accelerationStructure"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetAccelerationStructureMemoryRequirementsNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetAccelerationStructureMemoryRequirementsNV(\nVkDevice device,\n const VkAccelerationStructureMemoryRequirementsInfoNV* pInfo,\n VkMemoryRequirements2KHR* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureMemoryRequirementsInfoNV",
                    "header": "const VkAccelerationStructureMemoryRequirementsInfoNV* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2KHR",
                    "header": "VkMemoryRequirements2KHR* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkBindAccelerationStructureMemoryNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindAccelerationStructureMemoryNV(\nVkDevice device,\n uint32_t bindInfoCount,\n const VkBindAccelerationStructureMemoryInfoNV* pBindInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindInfoCount\n            ",
                    "name": "bindInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindInfoCount"
                    ],
                    "type": "VkBindAccelerationStructureMemoryInfoNV",
                    "header": "const VkBindAccelerationStructureMemoryInfoNV* pBindInfos\n        ",
                    "name": "pBindInfos"
                }
            ]
        },
        "vkCmdCopyAccelerationStructureNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyAccelerationStructureNV(\nVkCommandBuffer commandBuffer,\n VkAccelerationStructureNV dst,\n VkAccelerationStructureNV src,\n VkCopyAccelerationStructureModeKHR mode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "VkAccelerationStructureNV dst\n            ",
                    "name": "dst"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "VkAccelerationStructureNV src\n            ",
                    "name": "src"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyAccelerationStructureModeKHR",
                    "header": "VkCopyAccelerationStructureModeKHR mode\n        ",
                    "name": "mode"
                }
            ]
        },
        "vkCmdCopyAccelerationStructureKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyAccelerationStructureKHR(\nVkCommandBuffer commandBuffer,\n const VkCopyAccelerationStructureInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyAccelerationStructureInfoKHR",
                    "header": "const VkCopyAccelerationStructureInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCopyAccelerationStructureKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyAccelerationStructureKHR(\nVkDevice device,\n VkDeferredOperationKHR deferredOperation,\n const VkCopyAccelerationStructureInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyAccelerationStructureInfoKHR",
                    "header": "const VkCopyAccelerationStructureInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCmdCopyAccelerationStructureToMemoryKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyAccelerationStructureToMemoryKHR(\nVkCommandBuffer commandBuffer,\n const VkCopyAccelerationStructureToMemoryInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyAccelerationStructureToMemoryInfoKHR",
                    "header": "const VkCopyAccelerationStructureToMemoryInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCopyAccelerationStructureToMemoryKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyAccelerationStructureToMemoryKHR(\nVkDevice device,\n VkDeferredOperationKHR deferredOperation,\n const VkCopyAccelerationStructureToMemoryInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyAccelerationStructureToMemoryInfoKHR",
                    "header": "const VkCopyAccelerationStructureToMemoryInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCmdCopyMemoryToAccelerationStructureKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyMemoryToAccelerationStructureKHR(\nVkCommandBuffer commandBuffer,\n const VkCopyMemoryToAccelerationStructureInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMemoryToAccelerationStructureInfoKHR",
                    "header": "const VkCopyMemoryToAccelerationStructureInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCopyMemoryToAccelerationStructureKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyMemoryToAccelerationStructureKHR(\nVkDevice device,\n VkDeferredOperationKHR deferredOperation,\n const VkCopyMemoryToAccelerationStructureInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMemoryToAccelerationStructureInfoKHR",
                    "header": "const VkCopyMemoryToAccelerationStructureInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCmdWriteAccelerationStructuresPropertiesKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteAccelerationStructuresPropertiesKHR(\nVkCommandBuffer commandBuffer,\n uint32_t accelerationStructureCount,\n const VkAccelerationStructureKHR* pAccelerationStructures,\n VkQueryType queryType,\n VkQueryPool queryPool,\n uint32_t firstQuery\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t accelerationStructureCount\n            ",
                    "name": "accelerationStructureCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "accelerationStructureCount"
                    ],
                    "type": "VkAccelerationStructureKHR",
                    "header": "const VkAccelerationStructureKHR* pAccelerationStructures\n            ",
                    "name": "pAccelerationStructures"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryType",
                    "header": "VkQueryType queryType\n            ",
                    "name": "queryType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n        ",
                    "name": "firstQuery"
                }
            ]
        },
        "vkCmdWriteAccelerationStructuresPropertiesNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteAccelerationStructuresPropertiesNV(\nVkCommandBuffer commandBuffer,\n uint32_t accelerationStructureCount,\n const VkAccelerationStructureNV* pAccelerationStructures,\n VkQueryType queryType,\n VkQueryPool queryPool,\n uint32_t firstQuery\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t accelerationStructureCount\n            ",
                    "name": "accelerationStructureCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "accelerationStructureCount"
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "const VkAccelerationStructureNV* pAccelerationStructures\n            ",
                    "name": "pAccelerationStructures"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryType",
                    "header": "VkQueryType queryType\n            ",
                    "name": "queryType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n        ",
                    "name": "firstQuery"
                }
            ]
        },
        "vkCmdBuildAccelerationStructureNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBuildAccelerationStructureNV(\nVkCommandBuffer commandBuffer,\n const VkAccelerationStructureInfoNV* pInfo,\n VkBuffer instanceData,\n VkDeviceSize instanceOffset,\n VkBool32 update,\n VkAccelerationStructureNV dst,\n VkAccelerationStructureNV src,\n VkBuffer scratch,\n VkDeviceSize scratchOffset\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureInfoNV",
                    "header": "const VkAccelerationStructureInfoNV* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer instanceData\n            ",
                    "name": "instanceData"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize instanceOffset\n            ",
                    "name": "instanceOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 update\n            ",
                    "name": "update"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "VkAccelerationStructureNV dst\n            ",
                    "name": "dst"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "VkAccelerationStructureNV src\n            ",
                    "name": "src"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer scratch\n            ",
                    "name": "scratch"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize scratchOffset\n        ",
                    "name": "scratchOffset"
                }
            ]
        },
        "vkWriteAccelerationStructuresPropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkWriteAccelerationStructuresPropertiesKHR(\nVkDevice device,\n uint32_t accelerationStructureCount,\n const VkAccelerationStructureKHR* pAccelerationStructures,\n VkQueryType  queryType,\n size_t       dataSize,\n void* pData,\n size_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t accelerationStructureCount\n            ",
                    "name": "accelerationStructureCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "accelerationStructureCount"
                    ],
                    "type": "VkAccelerationStructureKHR",
                    "header": "const VkAccelerationStructureKHR* pAccelerationStructures\n            ",
                    "name": "pAccelerationStructures"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryType",
                    "header": "VkQueryType  queryType\n            ",
                    "name": "queryType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t       dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n            ",
                    "name": "pData"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCmdTraceRaysKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdTraceRaysKHR(\nVkCommandBuffer commandBuffer,\n const VkStridedDeviceAddressRegionKHR* pRaygenShaderBindingTable,\n const VkStridedDeviceAddressRegionKHR* pMissShaderBindingTable,\n const VkStridedDeviceAddressRegionKHR* pHitShaderBindingTable,\n const VkStridedDeviceAddressRegionKHR* pCallableShaderBindingTable,\n uint32_t width,\n uint32_t height,\n uint32_t depth\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pRaygenShaderBindingTable\n            ",
                    "name": "pRaygenShaderBindingTable"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pMissShaderBindingTable\n            ",
                    "name": "pMissShaderBindingTable"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pHitShaderBindingTable\n            ",
                    "name": "pHitShaderBindingTable"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pCallableShaderBindingTable\n            ",
                    "name": "pCallableShaderBindingTable"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t width\n            ",
                    "name": "width"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t height\n            ",
                    "name": "height"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t depth\n        ",
                    "name": "depth"
                }
            ]
        },
        "vkCmdTraceRaysNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdTraceRaysNV(\nVkCommandBuffer commandBuffer,\n VkBuffer raygenShaderBindingTableBuffer,\n VkDeviceSize raygenShaderBindingOffset,\n VkBuffer missShaderBindingTableBuffer,\n VkDeviceSize missShaderBindingOffset,\n VkDeviceSize missShaderBindingStride,\n VkBuffer hitShaderBindingTableBuffer,\n VkDeviceSize hitShaderBindingOffset,\n VkDeviceSize hitShaderBindingStride,\n VkBuffer callableShaderBindingTableBuffer,\n VkDeviceSize callableShaderBindingOffset,\n VkDeviceSize callableShaderBindingStride,\n uint32_t width,\n uint32_t height,\n uint32_t depth\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer raygenShaderBindingTableBuffer\n            ",
                    "name": "raygenShaderBindingTableBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize raygenShaderBindingOffset\n            ",
                    "name": "raygenShaderBindingOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer missShaderBindingTableBuffer\n            ",
                    "name": "missShaderBindingTableBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize missShaderBindingOffset\n            ",
                    "name": "missShaderBindingOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize missShaderBindingStride\n            ",
                    "name": "missShaderBindingStride"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer hitShaderBindingTableBuffer\n            ",
                    "name": "hitShaderBindingTableBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize hitShaderBindingOffset\n            ",
                    "name": "hitShaderBindingOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize hitShaderBindingStride\n            ",
                    "name": "hitShaderBindingStride"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer callableShaderBindingTableBuffer\n            ",
                    "name": "callableShaderBindingTableBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize callableShaderBindingOffset\n            ",
                    "name": "callableShaderBindingOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize callableShaderBindingStride\n            ",
                    "name": "callableShaderBindingStride"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t width\n            ",
                    "name": "width"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t height\n            ",
                    "name": "height"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t depth\n        ",
                    "name": "depth"
                }
            ]
        },
        "vkGetRayTracingShaderGroupHandlesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetRayTracingShaderGroupHandlesKHR(\nVkDevice device,\n VkPipeline pipeline,\n uint32_t firstGroup,\n uint32_t groupCount,\n size_t dataSize,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstGroup\n            ",
                    "name": "firstGroup"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCount\n            ",
                    "name": "groupCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetRayTracingShaderGroupHandlesNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetRayTracingShaderGroupHandlesNV(\nVkDevice device,\n VkPipeline pipeline,\n uint32_t firstGroup,\n uint32_t groupCount,\n size_t dataSize,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstGroup\n            ",
                    "name": "firstGroup"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCount\n            ",
                    "name": "groupCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetRayTracingCaptureReplayShaderGroupHandlesKHR(\nVkDevice device,\n VkPipeline pipeline,\n uint32_t firstGroup,\n uint32_t groupCount,\n size_t dataSize,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstGroup\n            ",
                    "name": "firstGroup"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t groupCount\n            ",
                    "name": "groupCount"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetAccelerationStructureHandleNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetAccelerationStructureHandleNV(\nVkDevice device,\n VkAccelerationStructureNV accelerationStructure,\n size_t dataSize,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureNV",
                    "header": "VkAccelerationStructureNV accelerationStructure\n            ",
                    "name": "accelerationStructure"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkCreateRayTracingPipelinesNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateRayTracingPipelinesNV(\nVkDevice device,\n VkPipelineCache pipelineCache,\n uint32_t createInfoCount,\n const VkRayTracingPipelineCreateInfoNV* pCreateInfos,\n const VkAllocationCallbacks* pAllocator,\n VkPipeline* pPipelines\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache pipelineCache\n            ",
                    "name": "pipelineCache"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t createInfoCount\n            ",
                    "name": "createInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkRayTracingPipelineCreateInfoNV",
                    "header": "const VkRayTracingPipelineCreateInfoNV* pCreateInfos\n            ",
                    "name": "pCreateInfos"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline* pPipelines\n        ",
                    "name": "pPipelines"
                }
            ]
        },
        "vkCreateRayTracingPipelinesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateRayTracingPipelinesKHR(\nVkDevice device,\n VkDeferredOperationKHR deferredOperation,\n VkPipelineCache pipelineCache,\n uint32_t createInfoCount,\n const VkRayTracingPipelineCreateInfoKHR* pCreateInfos,\n const VkAllocationCallbacks* pAllocator,\n VkPipeline* pPipelines\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineCache",
                    "header": "VkPipelineCache pipelineCache\n            ",
                    "name": "pipelineCache"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t createInfoCount\n            ",
                    "name": "createInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkRayTracingPipelineCreateInfoKHR",
                    "header": "const VkRayTracingPipelineCreateInfoKHR* pCreateInfos\n            ",
                    "name": "pCreateInfos"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline* pPipelines\n        ",
                    "name": "pPipelines"
                }
            ]
        },
        "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceCooperativeMatrixPropertiesNV(\nVkPhysicalDevice physicalDevice,\n uint32_t* pPropertyCount,\n VkCooperativeMatrixPropertiesNV* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkCooperativeMatrixPropertiesNV",
                    "header": "VkCooperativeMatrixPropertiesNV* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkCmdTraceRaysIndirectKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdTraceRaysIndirectKHR(\nVkCommandBuffer commandBuffer,\n const VkStridedDeviceAddressRegionKHR* pRaygenShaderBindingTable,\n const VkStridedDeviceAddressRegionKHR* pMissShaderBindingTable,\n const VkStridedDeviceAddressRegionKHR* pHitShaderBindingTable,\n const VkStridedDeviceAddressRegionKHR* pCallableShaderBindingTable,\n VkDeviceAddress indirectDeviceAddress\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pRaygenShaderBindingTable\n            ",
                    "name": "pRaygenShaderBindingTable"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pMissShaderBindingTable\n            ",
                    "name": "pMissShaderBindingTable"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pHitShaderBindingTable\n            ",
                    "name": "pHitShaderBindingTable"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkStridedDeviceAddressRegionKHR",
                    "header": "const VkStridedDeviceAddressRegionKHR* pCallableShaderBindingTable\n            ",
                    "name": "pCallableShaderBindingTable"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceAddress",
                    "header": "VkDeviceAddress indirectDeviceAddress\n        ",
                    "name": "indirectDeviceAddress"
                }
            ]
        },
        "vkCmdTraceRaysIndirect2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdTraceRaysIndirect2KHR(\nVkCommandBuffer commandBuffer,\n VkDeviceAddress indirectDeviceAddress\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceAddress",
                    "header": "VkDeviceAddress indirectDeviceAddress\n        ",
                    "name": "indirectDeviceAddress"
                }
            ]
        },
        "vkGetDeviceAccelerationStructureCompatibilityKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceAccelerationStructureCompatibilityKHR(\nVkDevice device,\n const VkAccelerationStructureVersionInfoKHR* pVersionInfo,\n VkAccelerationStructureCompatibilityKHR* pCompatibility\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureVersionInfoKHR",
                    "header": "const VkAccelerationStructureVersionInfoKHR* pVersionInfo\n            ",
                    "name": "pVersionInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureCompatibilityKHR",
                    "header": "VkAccelerationStructureCompatibilityKHR* pCompatibility\n        ",
                    "name": "pCompatibility"
                }
            ]
        },
        "vkGetRayTracingShaderGroupStackSizeKHR": {
            "sync": false,
            "type": "VkDeviceSize",
            "num_indirection": 0,
            "header": "VkDeviceSize vkGetRayTracingShaderGroupStackSizeKHR(\nVkDevice device,\n VkPipeline pipeline,\n uint32_t group,\n VkShaderGroupShaderKHR groupShader\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipeline",
                    "header": "VkPipeline pipeline\n            ",
                    "name": "pipeline"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t group\n            ",
                    "name": "group"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderGroupShaderKHR",
                    "header": "VkShaderGroupShaderKHR groupShader\n        ",
                    "name": "groupShader"
                }
            ]
        },
        "vkCmdSetRayTracingPipelineStackSizeKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetRayTracingPipelineStackSizeKHR(\nVkCommandBuffer commandBuffer,\n uint32_t pipelineStackSize\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t pipelineStackSize\n        ",
                    "name": "pipelineStackSize"
                }
            ]
        },
        "vkGetImageViewHandleNVX": {
            "sync": false,
            "type": "uint32_t",
            "num_indirection": 0,
            "header": "uint32_t vkGetImageViewHandleNVX(\nVkDevice device,\n const VkImageViewHandleInfoNVX* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageViewHandleInfoNVX",
                    "header": "const VkImageViewHandleInfoNVX* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkGetImageViewAddressNVX": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetImageViewAddressNVX(\nVkDevice device,\n VkImageView imageView,\n VkImageViewAddressPropertiesNVX* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageView",
                    "header": "VkImageView imageView\n            ",
                    "name": "imageView"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageViewAddressPropertiesNVX",
                    "header": "VkImageViewAddressPropertiesNVX* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t queueFamilyIndex,\n uint32_t* pCounterCount,\n VkPerformanceCounterKHR* pCounters,\n VkPerformanceCounterDescriptionKHR* pCounterDescriptions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t queueFamilyIndex\n            ",
                    "name": "queueFamilyIndex"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pCounterCount\n            ",
                    "name": "pCounterCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pCounterCount"
                    ],
                    "type": "VkPerformanceCounterKHR",
                    "header": "VkPerformanceCounterKHR* pCounters\n            ",
                    "name": "pCounters"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pCounterCount"
                    ],
                    "type": "VkPerformanceCounterDescriptionKHR",
                    "header": "VkPerformanceCounterDescriptionKHR* pCounterDescriptions\n        ",
                    "name": "pCounterDescriptions"
                }
            ]
        },
        "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR(\nVkPhysicalDevice physicalDevice,\n const VkQueryPoolPerformanceCreateInfoKHR* pPerformanceQueryCreateInfo,\n uint32_t* pNumPasses\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPoolPerformanceCreateInfoKHR",
                    "header": "const VkQueryPoolPerformanceCreateInfoKHR* pPerformanceQueryCreateInfo\n            ",
                    "name": "pPerformanceQueryCreateInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pNumPasses\n        ",
                    "name": "pNumPasses"
                }
            ]
        },
        "vkAcquireProfilingLockKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAcquireProfilingLockKHR(\nVkDevice device,\n const VkAcquireProfilingLockInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAcquireProfilingLockInfoKHR",
                    "header": "const VkAcquireProfilingLockInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkReleaseProfilingLockKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkReleaseProfilingLockKHR(\nVkDevice device\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n        ",
                    "name": "device"
                }
            ]
        },
        "vkGetImageDrmFormatModifierPropertiesEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetImageDrmFormatModifierPropertiesEXT(\nVkDevice device,\n VkImage image,\n VkImageDrmFormatModifierPropertiesEXT* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageDrmFormatModifierPropertiesEXT",
                    "header": "VkImageDrmFormatModifierPropertiesEXT* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetBufferOpaqueCaptureAddress": {
            "sync": false,
            "type": "uint64_t",
            "num_indirection": 0,
            "header": "uint64_t vkGetBufferOpaqueCaptureAddress(\nVkDevice device,\n const VkBufferDeviceAddressInfo* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferDeviceAddressInfo",
                    "header": "const VkBufferDeviceAddressInfo* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkGetBufferOpaqueCaptureAddressKHR": {
            "sync": false,
            "type": "uint64_t",
            "num_indirection": 0,
            "header": "uint64_t vkGetBufferOpaqueCaptureAddressKHR(\nVkDevice device,\n const VkBufferDeviceAddressInfo* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferDeviceAddressInfo",
                    "header": "const VkBufferDeviceAddressInfo* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkGetBufferDeviceAddress": {
            "sync": false,
            "type": "VkDeviceAddress",
            "num_indirection": 0,
            "header": "VkDeviceAddress vkGetBufferDeviceAddress(\nVkDevice device,\n const VkBufferDeviceAddressInfo* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferDeviceAddressInfo",
                    "header": "const VkBufferDeviceAddressInfo* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkGetBufferDeviceAddressKHR": {
            "sync": false,
            "type": "VkDeviceAddress",
            "num_indirection": 0,
            "header": "VkDeviceAddress vkGetBufferDeviceAddressKHR(\nVkDevice device,\n const VkBufferDeviceAddressInfo* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferDeviceAddressInfo",
                    "header": "const VkBufferDeviceAddressInfo* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkGetBufferDeviceAddressEXT": {
            "sync": false,
            "type": "VkDeviceAddress",
            "num_indirection": 0,
            "header": "VkDeviceAddress vkGetBufferDeviceAddressEXT(\nVkDevice device,\n const VkBufferDeviceAddressInfo* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferDeviceAddressInfo",
                    "header": "const VkBufferDeviceAddressInfo* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCreateHeadlessSurfaceEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateHeadlessSurfaceEXT(\nVkInstance instance,\n const VkHeadlessSurfaceCreateInfoEXT* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkSurfaceKHR* pSurface\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkInstance",
                    "header": "VkInstance instance\n            ",
                    "name": "instance"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkHeadlessSurfaceCreateInfoEXT",
                    "header": "const VkHeadlessSurfaceCreateInfoEXT* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSurfaceKHR",
                    "header": "VkSurfaceKHR* pSurface\n        ",
                    "name": "pSurface"
                }
            ]
        },
        "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV(\nVkPhysicalDevice physicalDevice,\n uint32_t* pCombinationCount,\n VkFramebufferMixedSamplesCombinationNV* pCombinations\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pCombinationCount\n            ",
                    "name": "pCombinationCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pCombinationCount"
                    ],
                    "type": "VkFramebufferMixedSamplesCombinationNV",
                    "header": "VkFramebufferMixedSamplesCombinationNV* pCombinations\n        ",
                    "name": "pCombinations"
                }
            ]
        },
        "vkInitializePerformanceApiINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkInitializePerformanceApiINTEL(\nVkDevice device,\n const VkInitializePerformanceApiInfoINTEL* pInitializeInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkInitializePerformanceApiInfoINTEL",
                    "header": "const VkInitializePerformanceApiInfoINTEL* pInitializeInfo\n        ",
                    "name": "pInitializeInfo"
                }
            ]
        },
        "vkUninitializePerformanceApiINTEL": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkUninitializePerformanceApiINTEL(\nVkDevice device\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n        ",
                    "name": "device"
                }
            ]
        },
        "vkCmdSetPerformanceMarkerINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCmdSetPerformanceMarkerINTEL(\nVkCommandBuffer commandBuffer,\n const VkPerformanceMarkerInfoINTEL* pMarkerInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceMarkerInfoINTEL",
                    "header": "const VkPerformanceMarkerInfoINTEL* pMarkerInfo\n        ",
                    "name": "pMarkerInfo"
                }
            ]
        },
        "vkCmdSetPerformanceStreamMarkerINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCmdSetPerformanceStreamMarkerINTEL(\nVkCommandBuffer commandBuffer,\n const VkPerformanceStreamMarkerInfoINTEL* pMarkerInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceStreamMarkerInfoINTEL",
                    "header": "const VkPerformanceStreamMarkerInfoINTEL* pMarkerInfo\n        ",
                    "name": "pMarkerInfo"
                }
            ]
        },
        "vkCmdSetPerformanceOverrideINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCmdSetPerformanceOverrideINTEL(\nVkCommandBuffer commandBuffer,\n const VkPerformanceOverrideInfoINTEL* pOverrideInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceOverrideInfoINTEL",
                    "header": "const VkPerformanceOverrideInfoINTEL* pOverrideInfo\n        ",
                    "name": "pOverrideInfo"
                }
            ]
        },
        "vkAcquirePerformanceConfigurationINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAcquirePerformanceConfigurationINTEL(\nVkDevice device,\n const VkPerformanceConfigurationAcquireInfoINTEL* pAcquireInfo,\n VkPerformanceConfigurationINTEL* pConfiguration\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceConfigurationAcquireInfoINTEL",
                    "header": "const VkPerformanceConfigurationAcquireInfoINTEL* pAcquireInfo\n            ",
                    "name": "pAcquireInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceConfigurationINTEL",
                    "header": "VkPerformanceConfigurationINTEL* pConfiguration\n        ",
                    "name": "pConfiguration"
                }
            ]
        },
        "vkReleasePerformanceConfigurationINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkReleasePerformanceConfigurationINTEL(\nVkDevice device,\n VkPerformanceConfigurationINTEL configuration\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceConfigurationINTEL",
                    "header": "VkPerformanceConfigurationINTEL configuration\n        ",
                    "name": "configuration"
                }
            ]
        },
        "vkQueueSetPerformanceConfigurationINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkQueueSetPerformanceConfigurationINTEL(\nVkQueue queue,\n VkPerformanceConfigurationINTEL configuration\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceConfigurationINTEL",
                    "header": "VkPerformanceConfigurationINTEL configuration\n        ",
                    "name": "configuration"
                }
            ]
        },
        "vkGetPerformanceParameterINTEL": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPerformanceParameterINTEL(\nVkDevice device,\n VkPerformanceParameterTypeINTEL parameter,\n VkPerformanceValueINTEL* pValue\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceParameterTypeINTEL",
                    "header": "VkPerformanceParameterTypeINTEL parameter\n            ",
                    "name": "parameter"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPerformanceValueINTEL",
                    "header": "VkPerformanceValueINTEL* pValue\n        ",
                    "name": "pValue"
                }
            ]
        },
        "vkGetDeviceMemoryOpaqueCaptureAddress": {
            "sync": false,
            "type": "uint64_t",
            "num_indirection": 0,
            "header": "uint64_t vkGetDeviceMemoryOpaqueCaptureAddress(\nVkDevice device,\n const VkDeviceMemoryOpaqueCaptureAddressInfo* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemoryOpaqueCaptureAddressInfo",
                    "header": "const VkDeviceMemoryOpaqueCaptureAddressInfo* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkGetDeviceMemoryOpaqueCaptureAddressKHR": {
            "sync": false,
            "type": "uint64_t",
            "num_indirection": 0,
            "header": "uint64_t vkGetDeviceMemoryOpaqueCaptureAddressKHR(\nVkDevice device,\n const VkDeviceMemoryOpaqueCaptureAddressInfo* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemoryOpaqueCaptureAddressInfo",
                    "header": "const VkDeviceMemoryOpaqueCaptureAddressInfo* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkGetPipelineExecutablePropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPipelineExecutablePropertiesKHR(\nVkDevice                        device,\n const VkPipelineInfoKHR*        pPipelineInfo,\n uint32_t* pExecutableCount,\n VkPipelineExecutablePropertiesKHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                        device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineInfoKHR",
                    "header": "const VkPipelineInfoKHR*        pPipelineInfo\n            ",
                    "name": "pPipelineInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pExecutableCount\n            ",
                    "name": "pExecutableCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pExecutableCount"
                    ],
                    "type": "VkPipelineExecutablePropertiesKHR",
                    "header": "VkPipelineExecutablePropertiesKHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPipelineExecutableStatisticsKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPipelineExecutableStatisticsKHR(\nVkDevice                        device,\n const VkPipelineExecutableInfoKHR*  pExecutableInfo,\n uint32_t* pStatisticCount,\n VkPipelineExecutableStatisticKHR* pStatistics\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                        device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineExecutableInfoKHR",
                    "header": "const VkPipelineExecutableInfoKHR*  pExecutableInfo\n            ",
                    "name": "pExecutableInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pStatisticCount\n            ",
                    "name": "pStatisticCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pStatisticCount"
                    ],
                    "type": "VkPipelineExecutableStatisticKHR",
                    "header": "VkPipelineExecutableStatisticKHR* pStatistics\n        ",
                    "name": "pStatistics"
                }
            ]
        },
        "vkGetPipelineExecutableInternalRepresentationsKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPipelineExecutableInternalRepresentationsKHR(\nVkDevice                        device,\n const VkPipelineExecutableInfoKHR*  pExecutableInfo,\n uint32_t* pInternalRepresentationCount,\n VkPipelineExecutableInternalRepresentationKHR* pInternalRepresentations\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                        device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineExecutableInfoKHR",
                    "header": "const VkPipelineExecutableInfoKHR*  pExecutableInfo\n            ",
                    "name": "pExecutableInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pInternalRepresentationCount\n            ",
                    "name": "pInternalRepresentationCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pInternalRepresentationCount"
                    ],
                    "type": "VkPipelineExecutableInternalRepresentationKHR",
                    "header": "VkPipelineExecutableInternalRepresentationKHR* pInternalRepresentations\n        ",
                    "name": "pInternalRepresentations"
                }
            ]
        },
        "vkCmdSetLineStippleEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetLineStippleEXT(\nVkCommandBuffer commandBuffer,\n uint32_t lineStippleFactor,\n uint16_t lineStipplePattern\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t lineStippleFactor\n            ",
                    "name": "lineStippleFactor"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint16_t",
                    "header": "uint16_t lineStipplePattern\n        ",
                    "name": "lineStipplePattern"
                }
            ]
        },
        "vkGetPhysicalDeviceToolProperties": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceToolProperties(\nVkPhysicalDevice physicalDevice,\n uint32_t* pToolCount,\n VkPhysicalDeviceToolProperties* pToolProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pToolCount\n            ",
                    "name": "pToolCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pToolCount"
                    ],
                    "type": "VkPhysicalDeviceToolProperties",
                    "header": "VkPhysicalDeviceToolProperties* pToolProperties\n        ",
                    "name": "pToolProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceToolPropertiesEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceToolPropertiesEXT(\nVkPhysicalDevice physicalDevice,\n uint32_t* pToolCount,\n VkPhysicalDeviceToolProperties* pToolProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pToolCount\n            ",
                    "name": "pToolCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pToolCount"
                    ],
                    "type": "VkPhysicalDeviceToolProperties",
                    "header": "VkPhysicalDeviceToolProperties* pToolProperties\n        ",
                    "name": "pToolProperties"
                }
            ]
        },
        "vkCreateAccelerationStructureKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateAccelerationStructureKHR(\nVkDevice                                           device,\n const VkAccelerationStructureCreateInfoKHR*        pCreateInfo,\n const VkAllocationCallbacks*       pAllocator,\n VkAccelerationStructureKHR*                        pAccelerationStructure\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                                           device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureCreateInfoKHR",
                    "header": "const VkAccelerationStructureCreateInfoKHR*        pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks*       pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureKHR",
                    "header": "VkAccelerationStructureKHR*                        pAccelerationStructure\n        ",
                    "name": "pAccelerationStructure"
                }
            ]
        },
        "vkCmdBuildAccelerationStructuresKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBuildAccelerationStructuresKHR(\nVkCommandBuffer                                    commandBuffer,\n uint32_t infoCount,\n const VkAccelerationStructureBuildGeometryInfoKHR* pInfos,\n const VkAccelerationStructureBuildRangeInfoKHR* const* ppBuildRangeInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                                    commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t infoCount\n            ",
                    "name": "infoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                    "header": "const VkAccelerationStructureBuildGeometryInfoKHR* pInfos\n            ",
                    "name": "pInfos"
                },
                {
                    "const": true,
                    "num_indirection": 2,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkAccelerationStructureBuildRangeInfoKHR",
                    "header": "const VkAccelerationStructureBuildRangeInfoKHR* const* ppBuildRangeInfos\n        ",
                    "name": "ppBuildRangeInfos"
                }
            ]
        },
        "vkCmdBuildAccelerationStructuresIndirectKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBuildAccelerationStructuresIndirectKHR(\nVkCommandBuffer                  commandBuffer,\n uint32_t                                           infoCount,\n const VkAccelerationStructureBuildGeometryInfoKHR* pInfos,\n const VkDeviceAddress*             pIndirectDeviceAddresses,\n const uint32_t*                    pIndirectStrides,\n const uint32_t* const*             ppMaxPrimitiveCounts\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                  commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                                           infoCount\n            ",
                    "name": "infoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                    "header": "const VkAccelerationStructureBuildGeometryInfoKHR* pInfos\n            ",
                    "name": "pInfos"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkDeviceAddress",
                    "header": "const VkDeviceAddress*             pIndirectDeviceAddresses\n            ",
                    "name": "pIndirectDeviceAddresses"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "infoCount"
                    ],
                    "type": "uint32_t",
                    "header": "const uint32_t*                    pIndirectStrides\n            ",
                    "name": "pIndirectStrides"
                },
                {
                    "const": true,
                    "num_indirection": 2,
                    "length": [
                        "infoCount"
                    ],
                    "type": "uint32_t",
                    "header": "const uint32_t* const*             ppMaxPrimitiveCounts\n        ",
                    "name": "ppMaxPrimitiveCounts"
                }
            ]
        },
        "vkBuildAccelerationStructuresKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBuildAccelerationStructuresKHR(\nVkDevice                                           device,\n VkDeferredOperationKHR deferredOperation,\n uint32_t infoCount,\n const VkAccelerationStructureBuildGeometryInfoKHR* pInfos,\n const VkAccelerationStructureBuildRangeInfoKHR* const* ppBuildRangeInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                                           device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t infoCount\n            ",
                    "name": "infoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                    "header": "const VkAccelerationStructureBuildGeometryInfoKHR* pInfos\n            ",
                    "name": "pInfos"
                },
                {
                    "const": true,
                    "num_indirection": 2,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkAccelerationStructureBuildRangeInfoKHR",
                    "header": "const VkAccelerationStructureBuildRangeInfoKHR* const* ppBuildRangeInfos\n        ",
                    "name": "ppBuildRangeInfos"
                }
            ]
        },
        "vkGetAccelerationStructureDeviceAddressKHR": {
            "sync": false,
            "type": "VkDeviceAddress",
            "num_indirection": 0,
            "header": "VkDeviceAddress vkGetAccelerationStructureDeviceAddressKHR(\nVkDevice device,\n const VkAccelerationStructureDeviceAddressInfoKHR* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureDeviceAddressInfoKHR",
                    "header": "const VkAccelerationStructureDeviceAddressInfoKHR* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCreateDeferredOperationKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateDeferredOperationKHR(\nVkDevice device,\n const VkAllocationCallbacks* pAllocator,\n VkDeferredOperationKHR* pDeferredOperation\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR* pDeferredOperation\n        ",
                    "name": "pDeferredOperation"
                }
            ]
        },
        "vkDestroyDeferredOperationKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyDeferredOperationKHR(\nVkDevice device,\n VkDeferredOperationKHR operation,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR operation\n            ",
                    "name": "operation"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetDeferredOperationMaxConcurrencyKHR": {
            "sync": false,
            "type": "uint32_t",
            "num_indirection": 0,
            "header": "uint32_t vkGetDeferredOperationMaxConcurrencyKHR(\nVkDevice device,\n VkDeferredOperationKHR operation\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR operation\n        ",
                    "name": "operation"
                }
            ]
        },
        "vkGetDeferredOperationResultKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDeferredOperationResultKHR(\nVkDevice device,\n VkDeferredOperationKHR operation\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR operation\n        ",
                    "name": "operation"
                }
            ]
        },
        "vkDeferredOperationJoinKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkDeferredOperationJoinKHR(\nVkDevice device,\n VkDeferredOperationKHR operation\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR operation\n        ",
                    "name": "operation"
                }
            ]
        },
        "vkGetPipelineIndirectMemoryRequirementsNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPipelineIndirectMemoryRequirementsNV(\nVkDevice device,\n const VkComputePipelineCreateInfo* pCreateInfo,\n VkMemoryRequirements2* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkComputePipelineCreateInfo",
                    "header": "const VkComputePipelineCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryRequirements2",
                    "header": "VkMemoryRequirements2* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkGetPipelineIndirectDeviceAddressNV": {
            "sync": false,
            "type": "VkDeviceAddress",
            "num_indirection": 0,
            "header": "VkDeviceAddress vkGetPipelineIndirectDeviceAddressNV(\nVkDevice device,\n const VkPipelineIndirectDeviceAddressInfoNV* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineIndirectDeviceAddressInfoNV",
                    "header": "const VkPipelineIndirectDeviceAddressInfoNV* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCmdSetCullMode": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCullMode(\nVkCommandBuffer commandBuffer,\n VkCullModeFlags cullMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCullModeFlags",
                    "header": "VkCullModeFlags cullMode\n        ",
                    "name": "cullMode"
                }
            ]
        },
        "vkCmdSetCullModeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCullModeEXT(\nVkCommandBuffer commandBuffer,\n VkCullModeFlags cullMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCullModeFlags",
                    "header": "VkCullModeFlags cullMode\n        ",
                    "name": "cullMode"
                }
            ]
        },
        "vkCmdSetFrontFace": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetFrontFace(\nVkCommandBuffer commandBuffer,\n VkFrontFace frontFace\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFrontFace",
                    "header": "VkFrontFace frontFace\n        ",
                    "name": "frontFace"
                }
            ]
        },
        "vkCmdSetFrontFaceEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetFrontFaceEXT(\nVkCommandBuffer commandBuffer,\n VkFrontFace frontFace\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFrontFace",
                    "header": "VkFrontFace frontFace\n        ",
                    "name": "frontFace"
                }
            ]
        },
        "vkCmdSetPrimitiveTopology": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetPrimitiveTopology(\nVkCommandBuffer commandBuffer,\n VkPrimitiveTopology primitiveTopology\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrimitiveTopology",
                    "header": "VkPrimitiveTopology primitiveTopology\n        ",
                    "name": "primitiveTopology"
                }
            ]
        },
        "vkCmdSetPrimitiveTopologyEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetPrimitiveTopologyEXT(\nVkCommandBuffer commandBuffer,\n VkPrimitiveTopology primitiveTopology\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrimitiveTopology",
                    "header": "VkPrimitiveTopology primitiveTopology\n        ",
                    "name": "primitiveTopology"
                }
            ]
        },
        "vkCmdSetViewportWithCount": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetViewportWithCount(\nVkCommandBuffer commandBuffer,\n uint32_t viewportCount,\n const VkViewport* pViewports\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t viewportCount\n            ",
                    "name": "viewportCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "viewportCount"
                    ],
                    "type": "VkViewport",
                    "header": "const VkViewport* pViewports\n        ",
                    "name": "pViewports"
                }
            ]
        },
        "vkCmdSetViewportWithCountEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetViewportWithCountEXT(\nVkCommandBuffer commandBuffer,\n uint32_t viewportCount,\n const VkViewport* pViewports\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t viewportCount\n            ",
                    "name": "viewportCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "viewportCount"
                    ],
                    "type": "VkViewport",
                    "header": "const VkViewport* pViewports\n        ",
                    "name": "pViewports"
                }
            ]
        },
        "vkCmdSetScissorWithCount": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetScissorWithCount(\nVkCommandBuffer commandBuffer,\n uint32_t scissorCount,\n const VkRect2D* pScissors\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t scissorCount\n            ",
                    "name": "scissorCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "scissorCount"
                    ],
                    "type": "VkRect2D",
                    "header": "const VkRect2D* pScissors\n        ",
                    "name": "pScissors"
                }
            ]
        },
        "vkCmdSetScissorWithCountEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetScissorWithCountEXT(\nVkCommandBuffer commandBuffer,\n uint32_t scissorCount,\n const VkRect2D* pScissors\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t scissorCount\n            ",
                    "name": "scissorCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "scissorCount"
                    ],
                    "type": "VkRect2D",
                    "header": "const VkRect2D* pScissors\n        ",
                    "name": "pScissors"
                }
            ]
        },
        "vkCmdBindIndexBuffer2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindIndexBuffer2KHR(\nVkCommandBuffer commandBuffer,\n VkBuffer buffer,\n VkDeviceSize offset,\n VkDeviceSize size,\n VkIndexType indexType\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer buffer\n            ",
                    "name": "buffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize offset\n            ",
                    "name": "offset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize size\n            ",
                    "name": "size"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkIndexType",
                    "header": "VkIndexType indexType\n        ",
                    "name": "indexType"
                }
            ]
        },
        "vkCmdBindVertexBuffers2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindVertexBuffers2(\nVkCommandBuffer commandBuffer,\n uint32_t firstBinding,\n uint32_t bindingCount,\n const VkBuffer* pBuffers,\n const VkDeviceSize* pOffsets,\n const VkDeviceSize* pSizes,\n const VkDeviceSize* pStrides\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstBinding\n            ",
                    "name": "firstBinding"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindingCount\n            ",
                    "name": "bindingCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkBuffer",
                    "header": "const VkBuffer* pBuffers\n            ",
                    "name": "pBuffers"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pOffsets\n            ",
                    "name": "pOffsets"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pSizes\n            ",
                    "name": "pSizes"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pStrides\n        ",
                    "name": "pStrides"
                }
            ]
        },
        "vkCmdBindVertexBuffers2EXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindVertexBuffers2EXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstBinding,\n uint32_t bindingCount,\n const VkBuffer* pBuffers,\n const VkDeviceSize* pOffsets,\n const VkDeviceSize* pSizes,\n const VkDeviceSize* pStrides\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstBinding\n            ",
                    "name": "firstBinding"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindingCount\n            ",
                    "name": "bindingCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkBuffer",
                    "header": "const VkBuffer* pBuffers\n            ",
                    "name": "pBuffers"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pOffsets\n            ",
                    "name": "pOffsets"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pSizes\n            ",
                    "name": "pSizes"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindingCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pStrides\n        ",
                    "name": "pStrides"
                }
            ]
        },
        "vkCmdSetDepthTestEnable": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthTestEnable(\nVkCommandBuffer commandBuffer,\n VkBool32 depthTestEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthTestEnable\n        ",
                    "name": "depthTestEnable"
                }
            ]
        },
        "vkCmdSetDepthTestEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthTestEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 depthTestEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthTestEnable\n        ",
                    "name": "depthTestEnable"
                }
            ]
        },
        "vkCmdSetDepthWriteEnable": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthWriteEnable(\nVkCommandBuffer commandBuffer,\n VkBool32 depthWriteEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthWriteEnable\n        ",
                    "name": "depthWriteEnable"
                }
            ]
        },
        "vkCmdSetDepthWriteEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthWriteEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 depthWriteEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthWriteEnable\n        ",
                    "name": "depthWriteEnable"
                }
            ]
        },
        "vkCmdSetDepthCompareOp": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthCompareOp(\nVkCommandBuffer commandBuffer,\n VkCompareOp depthCompareOp\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCompareOp",
                    "header": "VkCompareOp depthCompareOp\n        ",
                    "name": "depthCompareOp"
                }
            ]
        },
        "vkCmdSetDepthCompareOpEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthCompareOpEXT(\nVkCommandBuffer commandBuffer,\n VkCompareOp depthCompareOp\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCompareOp",
                    "header": "VkCompareOp depthCompareOp\n        ",
                    "name": "depthCompareOp"
                }
            ]
        },
        "vkCmdSetDepthBoundsTestEnable": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthBoundsTestEnable(\nVkCommandBuffer commandBuffer,\n VkBool32 depthBoundsTestEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthBoundsTestEnable\n        ",
                    "name": "depthBoundsTestEnable"
                }
            ]
        },
        "vkCmdSetDepthBoundsTestEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthBoundsTestEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 depthBoundsTestEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthBoundsTestEnable\n        ",
                    "name": "depthBoundsTestEnable"
                }
            ]
        },
        "vkCmdSetStencilTestEnable": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetStencilTestEnable(\nVkCommandBuffer commandBuffer,\n VkBool32 stencilTestEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 stencilTestEnable\n        ",
                    "name": "stencilTestEnable"
                }
            ]
        },
        "vkCmdSetStencilTestEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetStencilTestEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 stencilTestEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 stencilTestEnable\n        ",
                    "name": "stencilTestEnable"
                }
            ]
        },
        "vkCmdSetStencilOp": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetStencilOp(\nVkCommandBuffer commandBuffer,\n VkStencilFaceFlags faceMask,\n VkStencilOp failOp,\n VkStencilOp passOp,\n VkStencilOp depthFailOp,\n VkCompareOp compareOp\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilFaceFlags",
                    "header": "VkStencilFaceFlags faceMask\n            ",
                    "name": "faceMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilOp",
                    "header": "VkStencilOp failOp\n            ",
                    "name": "failOp"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilOp",
                    "header": "VkStencilOp passOp\n            ",
                    "name": "passOp"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilOp",
                    "header": "VkStencilOp depthFailOp\n            ",
                    "name": "depthFailOp"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCompareOp",
                    "header": "VkCompareOp compareOp\n        ",
                    "name": "compareOp"
                }
            ]
        },
        "vkCmdSetStencilOpEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetStencilOpEXT(\nVkCommandBuffer commandBuffer,\n VkStencilFaceFlags faceMask,\n VkStencilOp failOp,\n VkStencilOp passOp,\n VkStencilOp depthFailOp,\n VkCompareOp compareOp\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilFaceFlags",
                    "header": "VkStencilFaceFlags faceMask\n            ",
                    "name": "faceMask"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilOp",
                    "header": "VkStencilOp failOp\n            ",
                    "name": "failOp"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilOp",
                    "header": "VkStencilOp passOp\n            ",
                    "name": "passOp"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkStencilOp",
                    "header": "VkStencilOp depthFailOp\n            ",
                    "name": "depthFailOp"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCompareOp",
                    "header": "VkCompareOp compareOp\n        ",
                    "name": "compareOp"
                }
            ]
        },
        "vkCmdSetPatchControlPointsEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetPatchControlPointsEXT(\nVkCommandBuffer commandBuffer,\n uint32_t patchControlPoints\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t patchControlPoints\n        ",
                    "name": "patchControlPoints"
                }
            ]
        },
        "vkCmdSetRasterizerDiscardEnable": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetRasterizerDiscardEnable(\nVkCommandBuffer commandBuffer,\n VkBool32 rasterizerDiscardEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 rasterizerDiscardEnable\n        ",
                    "name": "rasterizerDiscardEnable"
                }
            ]
        },
        "vkCmdSetRasterizerDiscardEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetRasterizerDiscardEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 rasterizerDiscardEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 rasterizerDiscardEnable\n        ",
                    "name": "rasterizerDiscardEnable"
                }
            ]
        },
        "vkCmdSetDepthBiasEnable": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthBiasEnable(\nVkCommandBuffer commandBuffer,\n VkBool32 depthBiasEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthBiasEnable\n        ",
                    "name": "depthBiasEnable"
                }
            ]
        },
        "vkCmdSetDepthBiasEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthBiasEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 depthBiasEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthBiasEnable\n        ",
                    "name": "depthBiasEnable"
                }
            ]
        },
        "vkCmdSetLogicOpEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetLogicOpEXT(\nVkCommandBuffer commandBuffer,\n VkLogicOp logicOp\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkLogicOp",
                    "header": "VkLogicOp logicOp\n        ",
                    "name": "logicOp"
                }
            ]
        },
        "vkCmdSetPrimitiveRestartEnable": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetPrimitiveRestartEnable(\nVkCommandBuffer commandBuffer,\n VkBool32 primitiveRestartEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 primitiveRestartEnable\n        ",
                    "name": "primitiveRestartEnable"
                }
            ]
        },
        "vkCmdSetPrimitiveRestartEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetPrimitiveRestartEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 primitiveRestartEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 primitiveRestartEnable\n        ",
                    "name": "primitiveRestartEnable"
                }
            ]
        },
        "vkCmdSetTessellationDomainOriginEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetTessellationDomainOriginEXT(\nVkCommandBuffer commandBuffer,\n VkTessellationDomainOrigin domainOrigin\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkTessellationDomainOrigin",
                    "header": "VkTessellationDomainOrigin domainOrigin\n        ",
                    "name": "domainOrigin"
                }
            ]
        },
        "vkCmdSetDepthClampEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthClampEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 depthClampEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthClampEnable\n        ",
                    "name": "depthClampEnable"
                }
            ]
        },
        "vkCmdSetPolygonModeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetPolygonModeEXT(\nVkCommandBuffer commandBuffer,\n VkPolygonMode polygonMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPolygonMode",
                    "header": "VkPolygonMode polygonMode\n        ",
                    "name": "polygonMode"
                }
            ]
        },
        "vkCmdSetRasterizationSamplesEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetRasterizationSamplesEXT(\nVkCommandBuffer commandBuffer,\n VkSampleCountFlagBits  rasterizationSamples\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSampleCountFlagBits",
                    "header": "VkSampleCountFlagBits  rasterizationSamples\n        ",
                    "name": "rasterizationSamples"
                }
            ]
        },
        "vkCmdSetSampleMaskEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetSampleMaskEXT(\nVkCommandBuffer commandBuffer,\n VkSampleCountFlagBits  samples,\n const VkSampleMask*    pSampleMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSampleCountFlagBits",
                    "header": "VkSampleCountFlagBits  samples\n            ",
                    "name": "samples"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "(samples + 31) / 32"
                    ],
                    "type": "VkSampleMask",
                    "header": "const VkSampleMask*    pSampleMask\n        ",
                    "name": "pSampleMask"
                }
            ]
        },
        "vkCmdSetAlphaToCoverageEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetAlphaToCoverageEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 alphaToCoverageEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 alphaToCoverageEnable\n        ",
                    "name": "alphaToCoverageEnable"
                }
            ]
        },
        "vkCmdSetAlphaToOneEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetAlphaToOneEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 alphaToOneEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 alphaToOneEnable\n        ",
                    "name": "alphaToOneEnable"
                }
            ]
        },
        "vkCmdSetLogicOpEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetLogicOpEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 logicOpEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 logicOpEnable\n        ",
                    "name": "logicOpEnable"
                }
            ]
        },
        "vkCmdSetColorBlendEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetColorBlendEnableEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstAttachment,\n uint32_t attachmentCount,\n const VkBool32* pColorBlendEnables\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstAttachment\n            ",
                    "name": "firstAttachment"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t attachmentCount\n            ",
                    "name": "attachmentCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "attachmentCount"
                    ],
                    "type": "VkBool32",
                    "header": "const VkBool32* pColorBlendEnables\n        ",
                    "name": "pColorBlendEnables"
                }
            ]
        },
        "vkCmdSetColorBlendEquationEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetColorBlendEquationEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstAttachment,\n uint32_t attachmentCount,\n const VkColorBlendEquationEXT* pColorBlendEquations\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstAttachment\n            ",
                    "name": "firstAttachment"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t attachmentCount\n            ",
                    "name": "attachmentCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "attachmentCount"
                    ],
                    "type": "VkColorBlendEquationEXT",
                    "header": "const VkColorBlendEquationEXT* pColorBlendEquations\n        ",
                    "name": "pColorBlendEquations"
                }
            ]
        },
        "vkCmdSetColorWriteMaskEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetColorWriteMaskEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstAttachment,\n uint32_t attachmentCount,\n const VkColorComponentFlags* pColorWriteMasks\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstAttachment\n            ",
                    "name": "firstAttachment"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t attachmentCount\n            ",
                    "name": "attachmentCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "attachmentCount"
                    ],
                    "type": "VkColorComponentFlags",
                    "header": "const VkColorComponentFlags* pColorWriteMasks\n        ",
                    "name": "pColorWriteMasks"
                }
            ]
        },
        "vkCmdSetRasterizationStreamEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetRasterizationStreamEXT(\nVkCommandBuffer commandBuffer,\n uint32_t rasterizationStream\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t rasterizationStream\n        ",
                    "name": "rasterizationStream"
                }
            ]
        },
        "vkCmdSetConservativeRasterizationModeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetConservativeRasterizationModeEXT(\nVkCommandBuffer commandBuffer,\n VkConservativeRasterizationModeEXT conservativeRasterizationMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkConservativeRasterizationModeEXT",
                    "header": "VkConservativeRasterizationModeEXT conservativeRasterizationMode\n        ",
                    "name": "conservativeRasterizationMode"
                }
            ]
        },
        "vkCmdSetExtraPrimitiveOverestimationSizeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetExtraPrimitiveOverestimationSizeEXT(\nVkCommandBuffer commandBuffer,\n float extraPrimitiveOverestimationSize\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float extraPrimitiveOverestimationSize\n        ",
                    "name": "extraPrimitiveOverestimationSize"
                }
            ]
        },
        "vkCmdSetDepthClipEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthClipEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 depthClipEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 depthClipEnable\n        ",
                    "name": "depthClipEnable"
                }
            ]
        },
        "vkCmdSetSampleLocationsEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetSampleLocationsEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 sampleLocationsEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 sampleLocationsEnable\n        ",
                    "name": "sampleLocationsEnable"
                }
            ]
        },
        "vkCmdSetColorBlendAdvancedEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetColorBlendAdvancedEXT(\nVkCommandBuffer commandBuffer,\n uint32_t firstAttachment,\n uint32_t attachmentCount,\n const VkColorBlendAdvancedEXT* pColorBlendAdvanced\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstAttachment\n            ",
                    "name": "firstAttachment"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t attachmentCount\n            ",
                    "name": "attachmentCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "attachmentCount"
                    ],
                    "type": "VkColorBlendAdvancedEXT",
                    "header": "const VkColorBlendAdvancedEXT* pColorBlendAdvanced\n        ",
                    "name": "pColorBlendAdvanced"
                }
            ]
        },
        "vkCmdSetProvokingVertexModeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetProvokingVertexModeEXT(\nVkCommandBuffer commandBuffer,\n VkProvokingVertexModeEXT provokingVertexMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkProvokingVertexModeEXT",
                    "header": "VkProvokingVertexModeEXT provokingVertexMode\n        ",
                    "name": "provokingVertexMode"
                }
            ]
        },
        "vkCmdSetLineRasterizationModeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetLineRasterizationModeEXT(\nVkCommandBuffer commandBuffer,\n VkLineRasterizationModeEXT lineRasterizationMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkLineRasterizationModeEXT",
                    "header": "VkLineRasterizationModeEXT lineRasterizationMode\n        ",
                    "name": "lineRasterizationMode"
                }
            ]
        },
        "vkCmdSetLineStippleEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetLineStippleEnableEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 stippledLineEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 stippledLineEnable\n        ",
                    "name": "stippledLineEnable"
                }
            ]
        },
        "vkCmdSetDepthClipNegativeOneToOneEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthClipNegativeOneToOneEXT(\nVkCommandBuffer commandBuffer,\n VkBool32 negativeOneToOne\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 negativeOneToOne\n        ",
                    "name": "negativeOneToOne"
                }
            ]
        },
        "vkCmdSetViewportWScalingEnableNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetViewportWScalingEnableNV(\nVkCommandBuffer commandBuffer,\n VkBool32 viewportWScalingEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 viewportWScalingEnable\n        ",
                    "name": "viewportWScalingEnable"
                }
            ]
        },
        "vkCmdSetViewportSwizzleNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetViewportSwizzleNV(\nVkCommandBuffer commandBuffer,\n uint32_t firstViewport,\n uint32_t viewportCount,\n const VkViewportSwizzleNV* pViewportSwizzles\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstViewport\n            ",
                    "name": "firstViewport"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t viewportCount\n            ",
                    "name": "viewportCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "viewportCount"
                    ],
                    "type": "VkViewportSwizzleNV",
                    "header": "const VkViewportSwizzleNV* pViewportSwizzles\n        ",
                    "name": "pViewportSwizzles"
                }
            ]
        },
        "vkCmdSetCoverageToColorEnableNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCoverageToColorEnableNV(\nVkCommandBuffer commandBuffer,\n VkBool32 coverageToColorEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 coverageToColorEnable\n        ",
                    "name": "coverageToColorEnable"
                }
            ]
        },
        "vkCmdSetCoverageToColorLocationNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCoverageToColorLocationNV(\nVkCommandBuffer commandBuffer,\n uint32_t coverageToColorLocation\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t coverageToColorLocation\n        ",
                    "name": "coverageToColorLocation"
                }
            ]
        },
        "vkCmdSetCoverageModulationModeNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCoverageModulationModeNV(\nVkCommandBuffer commandBuffer,\n VkCoverageModulationModeNV coverageModulationMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCoverageModulationModeNV",
                    "header": "VkCoverageModulationModeNV coverageModulationMode\n        ",
                    "name": "coverageModulationMode"
                }
            ]
        },
        "vkCmdSetCoverageModulationTableEnableNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCoverageModulationTableEnableNV(\nVkCommandBuffer commandBuffer,\n VkBool32 coverageModulationTableEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 coverageModulationTableEnable\n        ",
                    "name": "coverageModulationTableEnable"
                }
            ]
        },
        "vkCmdSetCoverageModulationTableNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCoverageModulationTableNV(\nVkCommandBuffer commandBuffer,\n uint32_t coverageModulationTableCount,\n const float* pCoverageModulationTable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t coverageModulationTableCount\n            ",
                    "name": "coverageModulationTableCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "coverageModulationTableCount"
                    ],
                    "type": "float",
                    "header": "const float* pCoverageModulationTable\n        ",
                    "name": "pCoverageModulationTable"
                }
            ]
        },
        "vkCmdSetShadingRateImageEnableNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetShadingRateImageEnableNV(\nVkCommandBuffer commandBuffer,\n VkBool32 shadingRateImageEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 shadingRateImageEnable\n        ",
                    "name": "shadingRateImageEnable"
                }
            ]
        },
        "vkCmdSetCoverageReductionModeNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetCoverageReductionModeNV(\nVkCommandBuffer commandBuffer,\n VkCoverageReductionModeNV coverageReductionMode\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCoverageReductionModeNV",
                    "header": "VkCoverageReductionModeNV coverageReductionMode\n        ",
                    "name": "coverageReductionMode"
                }
            ]
        },
        "vkCmdSetRepresentativeFragmentTestEnableNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetRepresentativeFragmentTestEnableNV(\nVkCommandBuffer commandBuffer,\n VkBool32 representativeFragmentTestEnable\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBool32",
                    "header": "VkBool32 representativeFragmentTestEnable\n        ",
                    "name": "representativeFragmentTestEnable"
                }
            ]
        },
        "vkCreatePrivateDataSlot": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreatePrivateDataSlot(\nVkDevice device,\n const VkPrivateDataSlotCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkPrivateDataSlot* pPrivateDataSlot\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlotCreateInfo",
                    "header": "const VkPrivateDataSlotCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot* pPrivateDataSlot\n        ",
                    "name": "pPrivateDataSlot"
                }
            ]
        },
        "vkCreatePrivateDataSlotEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreatePrivateDataSlotEXT(\nVkDevice device,\n const VkPrivateDataSlotCreateInfo* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkPrivateDataSlot* pPrivateDataSlot\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlotCreateInfo",
                    "header": "const VkPrivateDataSlotCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot* pPrivateDataSlot\n        ",
                    "name": "pPrivateDataSlot"
                }
            ]
        },
        "vkDestroyPrivateDataSlot": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyPrivateDataSlot(\nVkDevice device,\n VkPrivateDataSlot privateDataSlot,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot privateDataSlot\n            ",
                    "name": "privateDataSlot"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkDestroyPrivateDataSlotEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyPrivateDataSlotEXT(\nVkDevice device,\n VkPrivateDataSlot privateDataSlot,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot privateDataSlot\n            ",
                    "name": "privateDataSlot"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkSetPrivateData": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkSetPrivateData(\nVkDevice device,\n VkObjectType objectType,\n uint64_t objectHandle,\n VkPrivateDataSlot privateDataSlot,\n uint64_t data\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkObjectType",
                    "header": "VkObjectType objectType\n            ",
                    "name": "objectType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t objectHandle\n            ",
                    "name": "objectHandle"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot privateDataSlot\n            ",
                    "name": "privateDataSlot"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t data\n        ",
                    "name": "data"
                }
            ]
        },
        "vkSetPrivateDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkSetPrivateDataEXT(\nVkDevice device,\n VkObjectType objectType,\n uint64_t objectHandle,\n VkPrivateDataSlot privateDataSlot,\n uint64_t data\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkObjectType",
                    "header": "VkObjectType objectType\n            ",
                    "name": "objectType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t objectHandle\n            ",
                    "name": "objectHandle"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot privateDataSlot\n            ",
                    "name": "privateDataSlot"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t data\n        ",
                    "name": "data"
                }
            ]
        },
        "vkGetPrivateData": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPrivateData(\nVkDevice device,\n VkObjectType objectType,\n uint64_t objectHandle,\n VkPrivateDataSlot privateDataSlot,\n uint64_t* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkObjectType",
                    "header": "VkObjectType objectType\n            ",
                    "name": "objectType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t objectHandle\n            ",
                    "name": "objectHandle"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot privateDataSlot\n            ",
                    "name": "privateDataSlot"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetPrivateDataEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetPrivateDataEXT(\nVkDevice device,\n VkObjectType objectType,\n uint64_t objectHandle,\n VkPrivateDataSlot privateDataSlot,\n uint64_t* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkObjectType",
                    "header": "VkObjectType objectType\n            ",
                    "name": "objectType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t objectHandle\n            ",
                    "name": "objectHandle"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPrivateDataSlot",
                    "header": "VkPrivateDataSlot privateDataSlot\n            ",
                    "name": "privateDataSlot"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkCmdCopyBuffer2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyBuffer2(\nVkCommandBuffer commandBuffer,\n const VkCopyBufferInfo2* pCopyBufferInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyBufferInfo2",
                    "header": "const VkCopyBufferInfo2* pCopyBufferInfo\n        ",
                    "name": "pCopyBufferInfo"
                }
            ]
        },
        "vkCmdCopyBuffer2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyBuffer2KHR(\nVkCommandBuffer commandBuffer,\n const VkCopyBufferInfo2* pCopyBufferInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyBufferInfo2",
                    "header": "const VkCopyBufferInfo2* pCopyBufferInfo\n        ",
                    "name": "pCopyBufferInfo"
                }
            ]
        },
        "vkCmdCopyImage2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyImage2(\nVkCommandBuffer commandBuffer,\n const VkCopyImageInfo2* pCopyImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyImageInfo2",
                    "header": "const VkCopyImageInfo2* pCopyImageInfo\n        ",
                    "name": "pCopyImageInfo"
                }
            ]
        },
        "vkCmdCopyImage2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyImage2KHR(\nVkCommandBuffer commandBuffer,\n const VkCopyImageInfo2* pCopyImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyImageInfo2",
                    "header": "const VkCopyImageInfo2* pCopyImageInfo\n        ",
                    "name": "pCopyImageInfo"
                }
            ]
        },
        "vkCmdBlitImage2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBlitImage2(\nVkCommandBuffer commandBuffer,\n const VkBlitImageInfo2* pBlitImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBlitImageInfo2",
                    "header": "const VkBlitImageInfo2* pBlitImageInfo\n        ",
                    "name": "pBlitImageInfo"
                }
            ]
        },
        "vkCmdBlitImage2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBlitImage2KHR(\nVkCommandBuffer commandBuffer,\n const VkBlitImageInfo2* pBlitImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBlitImageInfo2",
                    "header": "const VkBlitImageInfo2* pBlitImageInfo\n        ",
                    "name": "pBlitImageInfo"
                }
            ]
        },
        "vkCmdCopyBufferToImage2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyBufferToImage2(\nVkCommandBuffer commandBuffer,\n const VkCopyBufferToImageInfo2* pCopyBufferToImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyBufferToImageInfo2",
                    "header": "const VkCopyBufferToImageInfo2* pCopyBufferToImageInfo\n        ",
                    "name": "pCopyBufferToImageInfo"
                }
            ]
        },
        "vkCmdCopyBufferToImage2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyBufferToImage2KHR(\nVkCommandBuffer commandBuffer,\n const VkCopyBufferToImageInfo2* pCopyBufferToImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyBufferToImageInfo2",
                    "header": "const VkCopyBufferToImageInfo2* pCopyBufferToImageInfo\n        ",
                    "name": "pCopyBufferToImageInfo"
                }
            ]
        },
        "vkCmdCopyImageToBuffer2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyImageToBuffer2(\nVkCommandBuffer commandBuffer,\n const VkCopyImageToBufferInfo2* pCopyImageToBufferInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyImageToBufferInfo2",
                    "header": "const VkCopyImageToBufferInfo2* pCopyImageToBufferInfo\n        ",
                    "name": "pCopyImageToBufferInfo"
                }
            ]
        },
        "vkCmdCopyImageToBuffer2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyImageToBuffer2KHR(\nVkCommandBuffer commandBuffer,\n const VkCopyImageToBufferInfo2* pCopyImageToBufferInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyImageToBufferInfo2",
                    "header": "const VkCopyImageToBufferInfo2* pCopyImageToBufferInfo\n        ",
                    "name": "pCopyImageToBufferInfo"
                }
            ]
        },
        "vkCmdResolveImage2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdResolveImage2(\nVkCommandBuffer commandBuffer,\n const VkResolveImageInfo2* pResolveImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkResolveImageInfo2",
                    "header": "const VkResolveImageInfo2* pResolveImageInfo\n        ",
                    "name": "pResolveImageInfo"
                }
            ]
        },
        "vkCmdResolveImage2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdResolveImage2KHR(\nVkCommandBuffer commandBuffer,\n const VkResolveImageInfo2* pResolveImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkResolveImageInfo2",
                    "header": "const VkResolveImageInfo2* pResolveImageInfo\n        ",
                    "name": "pResolveImageInfo"
                }
            ]
        },
        "vkCmdSetFragmentShadingRateKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetFragmentShadingRateKHR(\nVkCommandBuffer           commandBuffer,\n const VkExtent2D*                           pFragmentSize,\n const VkFragmentShadingRateCombinerOpKHR    combinerOps[2]\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer           commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkExtent2D",
                    "header": "const VkExtent2D*                           pFragmentSize\n            ",
                    "name": "pFragmentSize"
                },
                {
                    "const": true,
                    "num_indirection": 0,
                    "length": [
                        "2"
                    ],
                    "type": "VkFragmentShadingRateCombinerOpKHR",
                    "header": "const VkFragmentShadingRateCombinerOpKHR    combinerOps[2]\n        ",
                    "name": "combinerOps"
                }
            ]
        },
        "vkGetPhysicalDeviceFragmentShadingRatesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceFragmentShadingRatesKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t* pFragmentShadingRateCount,\n VkPhysicalDeviceFragmentShadingRateKHR* pFragmentShadingRates\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pFragmentShadingRateCount\n            ",
                    "name": "pFragmentShadingRateCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pFragmentShadingRateCount"
                    ],
                    "type": "VkPhysicalDeviceFragmentShadingRateKHR",
                    "header": "VkPhysicalDeviceFragmentShadingRateKHR* pFragmentShadingRates\n        ",
                    "name": "pFragmentShadingRates"
                }
            ]
        },
        "vkCmdSetFragmentShadingRateEnumNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetFragmentShadingRateEnumNV(\nVkCommandBuffer           commandBuffer,\n VkFragmentShadingRateNV                     shadingRate,\n const VkFragmentShadingRateCombinerOpKHR    combinerOps[2]\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer           commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFragmentShadingRateNV",
                    "header": "VkFragmentShadingRateNV                     shadingRate\n            ",
                    "name": "shadingRate"
                },
                {
                    "const": true,
                    "num_indirection": 0,
                    "length": [
                        "2"
                    ],
                    "type": "VkFragmentShadingRateCombinerOpKHR",
                    "header": "const VkFragmentShadingRateCombinerOpKHR    combinerOps[2]\n        ",
                    "name": "combinerOps"
                }
            ]
        },
        "vkGetAccelerationStructureBuildSizesKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetAccelerationStructureBuildSizesKHR(\nVkDevice                                            device,\n VkAccelerationStructureBuildTypeKHR                 buildType,\n const VkAccelerationStructureBuildGeometryInfoKHR*  pBuildInfo,\n const uint32_t*  pMaxPrimitiveCounts,\n VkAccelerationStructureBuildSizesInfoKHR*           pSizeInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                                            device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureBuildTypeKHR",
                    "header": "VkAccelerationStructureBuildTypeKHR                 buildType\n            ",
                    "name": "buildType"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureBuildGeometryInfoKHR",
                    "header": "const VkAccelerationStructureBuildGeometryInfoKHR*  pBuildInfo\n            ",
                    "name": "pBuildInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "pBuildInfo->geometryCount"
                    ],
                    "type": "uint32_t",
                    "header": "const uint32_t*  pMaxPrimitiveCounts\n            ",
                    "name": "pMaxPrimitiveCounts"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureBuildSizesInfoKHR",
                    "header": "VkAccelerationStructureBuildSizesInfoKHR*           pSizeInfo\n        ",
                    "name": "pSizeInfo"
                }
            ]
        },
        "vkCmdSetVertexInputEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetVertexInputEXT(\nVkCommandBuffer commandBuffer,\n uint32_t vertexBindingDescriptionCount,\n const VkVertexInputBindingDescription2EXT* pVertexBindingDescriptions,\n uint32_t vertexAttributeDescriptionCount,\n const VkVertexInputAttributeDescription2EXT* pVertexAttributeDescriptions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t vertexBindingDescriptionCount\n            ",
                    "name": "vertexBindingDescriptionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "vertexBindingDescriptionCount"
                    ],
                    "type": "VkVertexInputBindingDescription2EXT",
                    "header": "const VkVertexInputBindingDescription2EXT* pVertexBindingDescriptions\n            ",
                    "name": "pVertexBindingDescriptions"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t vertexAttributeDescriptionCount\n            ",
                    "name": "vertexAttributeDescriptionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "vertexAttributeDescriptionCount"
                    ],
                    "type": "VkVertexInputAttributeDescription2EXT",
                    "header": "const VkVertexInputAttributeDescription2EXT* pVertexAttributeDescriptions\n        ",
                    "name": "pVertexAttributeDescriptions"
                }
            ]
        },
        "vkCmdSetColorWriteEnableEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetColorWriteEnableEXT(\nVkCommandBuffer       commandBuffer,\n uint32_t                                attachmentCount,\n const VkBool32*   pColorWriteEnables\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer       commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                                attachmentCount\n            ",
                    "name": "attachmentCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "attachmentCount"
                    ],
                    "type": "VkBool32",
                    "header": "const VkBool32*   pColorWriteEnables\n        ",
                    "name": "pColorWriteEnables"
                }
            ]
        },
        "vkCmdSetEvent2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetEvent2(\nVkCommandBuffer                   commandBuffer,\n VkEvent                                             event,\n const VkDependencyInfo*                             pDependencyInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent                                             event\n            ",
                    "name": "event"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDependencyInfo",
                    "header": "const VkDependencyInfo*                             pDependencyInfo\n        ",
                    "name": "pDependencyInfo"
                }
            ]
        },
        "vkCmdSetEvent2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetEvent2KHR(\nVkCommandBuffer                   commandBuffer,\n VkEvent                                             event,\n const VkDependencyInfo*                             pDependencyInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent                                             event\n            ",
                    "name": "event"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDependencyInfo",
                    "header": "const VkDependencyInfo*                             pDependencyInfo\n        ",
                    "name": "pDependencyInfo"
                }
            ]
        },
        "vkCmdResetEvent2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdResetEvent2(\nVkCommandBuffer                   commandBuffer,\n VkEvent                                             event,\n VkPipelineStageFlags2               stageMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent                                             event\n            ",
                    "name": "event"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags2",
                    "header": "VkPipelineStageFlags2               stageMask\n        ",
                    "name": "stageMask"
                }
            ]
        },
        "vkCmdResetEvent2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdResetEvent2KHR(\nVkCommandBuffer                   commandBuffer,\n VkEvent                                             event,\n VkPipelineStageFlags2               stageMask\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkEvent",
                    "header": "VkEvent                                             event\n            ",
                    "name": "event"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags2",
                    "header": "VkPipelineStageFlags2               stageMask\n        ",
                    "name": "stageMask"
                }
            ]
        },
        "vkCmdWaitEvents2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWaitEvents2(\nVkCommandBuffer                   commandBuffer,\n uint32_t                                            eventCount,\n const VkEvent*                     pEvents,\n const VkDependencyInfo*            pDependencyInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                                            eventCount\n            ",
                    "name": "eventCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "eventCount"
                    ],
                    "type": "VkEvent",
                    "header": "const VkEvent*                     pEvents\n            ",
                    "name": "pEvents"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "eventCount"
                    ],
                    "type": "VkDependencyInfo",
                    "header": "const VkDependencyInfo*            pDependencyInfos\n        ",
                    "name": "pDependencyInfos"
                }
            ]
        },
        "vkCmdWaitEvents2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWaitEvents2KHR(\nVkCommandBuffer                   commandBuffer,\n uint32_t                                            eventCount,\n const VkEvent*                     pEvents,\n const VkDependencyInfo*            pDependencyInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                                            eventCount\n            ",
                    "name": "eventCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "eventCount"
                    ],
                    "type": "VkEvent",
                    "header": "const VkEvent*                     pEvents\n            ",
                    "name": "pEvents"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "eventCount"
                    ],
                    "type": "VkDependencyInfo",
                    "header": "const VkDependencyInfo*            pDependencyInfos\n        ",
                    "name": "pDependencyInfos"
                }
            ]
        },
        "vkCmdPipelineBarrier2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdPipelineBarrier2(\nVkCommandBuffer                   commandBuffer,\n const VkDependencyInfo*                             pDependencyInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDependencyInfo",
                    "header": "const VkDependencyInfo*                             pDependencyInfo\n        ",
                    "name": "pDependencyInfo"
                }
            ]
        },
        "vkCmdPipelineBarrier2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdPipelineBarrier2KHR(\nVkCommandBuffer                   commandBuffer,\n const VkDependencyInfo*                             pDependencyInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDependencyInfo",
                    "header": "const VkDependencyInfo*                             pDependencyInfo\n        ",
                    "name": "pDependencyInfo"
                }
            ]
        },
        "vkQueueSubmit2": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkQueueSubmit2(\nVkQueue                           queue,\n uint32_t                            submitCount,\n const VkSubmitInfo2*              pSubmits,\n VkFence           fence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue                           queue\n            ",
                    "name": "queue"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                            submitCount\n            ",
                    "name": "submitCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "submitCount"
                    ],
                    "type": "VkSubmitInfo2",
                    "header": "const VkSubmitInfo2*              pSubmits\n            ",
                    "name": "pSubmits"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence           fence\n        ",
                    "name": "fence"
                }
            ]
        },
        "vkQueueSubmit2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkQueueSubmit2KHR(\nVkQueue                           queue,\n uint32_t                            submitCount,\n const VkSubmitInfo2*              pSubmits,\n VkFence           fence\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue                           queue\n            ",
                    "name": "queue"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                            submitCount\n            ",
                    "name": "submitCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "submitCount"
                    ],
                    "type": "VkSubmitInfo2",
                    "header": "const VkSubmitInfo2*              pSubmits\n            ",
                    "name": "pSubmits"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFence",
                    "header": "VkFence           fence\n        ",
                    "name": "fence"
                }
            ]
        },
        "vkCmdWriteTimestamp2": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteTimestamp2(\nVkCommandBuffer                   commandBuffer,\n VkPipelineStageFlags2               stage,\n VkQueryPool                                         queryPool,\n uint32_t                                            query\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags2",
                    "header": "VkPipelineStageFlags2               stage\n            ",
                    "name": "stage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool                                         queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                                            query\n        ",
                    "name": "query"
                }
            ]
        },
        "vkCmdWriteTimestamp2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteTimestamp2KHR(\nVkCommandBuffer                   commandBuffer,\n VkPipelineStageFlags2               stage,\n VkQueryPool                                         queryPool,\n uint32_t                                            query\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags2",
                    "header": "VkPipelineStageFlags2               stage\n            ",
                    "name": "stage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool                                         queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                                            query\n        ",
                    "name": "query"
                }
            ]
        },
        "vkCmdWriteBufferMarker2AMD": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteBufferMarker2AMD(\nVkCommandBuffer                   commandBuffer,\n VkPipelineStageFlags2               stage,\n VkBuffer                                            dstBuffer,\n VkDeviceSize                                        dstOffset,\n uint32_t                                            marker\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineStageFlags2",
                    "header": "VkPipelineStageFlags2               stage\n            ",
                    "name": "stage"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkBuffer",
                    "header": "VkBuffer                                            dstBuffer\n            ",
                    "name": "dstBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize                                        dstOffset\n            ",
                    "name": "dstOffset"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t                                            marker\n        ",
                    "name": "marker"
                }
            ]
        },
        "vkGetQueueCheckpointData2NV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetQueueCheckpointData2NV(\nVkQueue queue,\n uint32_t* pCheckpointDataCount,\n VkCheckpointData2NV* pCheckpointData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueue",
                    "header": "VkQueue queue\n            ",
                    "name": "queue"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pCheckpointDataCount\n            ",
                    "name": "pCheckpointDataCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pCheckpointDataCount"
                    ],
                    "type": "VkCheckpointData2NV",
                    "header": "VkCheckpointData2NV* pCheckpointData\n        ",
                    "name": "pCheckpointData"
                }
            ]
        },
        "vkCopyMemoryToImageEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyMemoryToImageEXT(\nVkDevice device,\n const VkCopyMemoryToImageInfoEXT* pCopyMemoryToImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMemoryToImageInfoEXT",
                    "header": "const VkCopyMemoryToImageInfoEXT* pCopyMemoryToImageInfo\n        ",
                    "name": "pCopyMemoryToImageInfo"
                }
            ]
        },
        "vkCopyImageToMemoryEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyImageToMemoryEXT(\nVkDevice device,\n const VkCopyImageToMemoryInfoEXT* pCopyImageToMemoryInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyImageToMemoryInfoEXT",
                    "header": "const VkCopyImageToMemoryInfoEXT* pCopyImageToMemoryInfo\n        ",
                    "name": "pCopyImageToMemoryInfo"
                }
            ]
        },
        "vkCopyImageToImageEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyImageToImageEXT(\nVkDevice device,\n const VkCopyImageToImageInfoEXT* pCopyImageToImageInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyImageToImageInfoEXT",
                    "header": "const VkCopyImageToImageInfoEXT* pCopyImageToImageInfo\n        ",
                    "name": "pCopyImageToImageInfo"
                }
            ]
        },
        "vkTransitionImageLayoutEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkTransitionImageLayoutEXT(\nVkDevice device,\n uint32_t transitionCount,\n const VkHostImageLayoutTransitionInfoEXT* pTransitions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t transitionCount\n            ",
                    "name": "transitionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "transitionCount"
                    ],
                    "type": "VkHostImageLayoutTransitionInfoEXT",
                    "header": "const VkHostImageLayoutTransitionInfoEXT* pTransitions\n        ",
                    "name": "pTransitions"
                }
            ]
        },
        "vkGetPhysicalDeviceVideoCapabilitiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceVideoCapabilitiesKHR(\nVkPhysicalDevice physicalDevice,\n const VkVideoProfileInfoKHR* pVideoProfile,\n VkVideoCapabilitiesKHR* pCapabilities\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoProfileInfoKHR",
                    "header": "const VkVideoProfileInfoKHR* pVideoProfile\n            ",
                    "name": "pVideoProfile"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoCapabilitiesKHR",
                    "header": "VkVideoCapabilitiesKHR* pCapabilities\n        ",
                    "name": "pCapabilities"
                }
            ]
        },
        "vkGetPhysicalDeviceVideoFormatPropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceVideoFormatPropertiesKHR(\nVkPhysicalDevice physicalDevice,\n const VkPhysicalDeviceVideoFormatInfoKHR* pVideoFormatInfo,\n uint32_t* pVideoFormatPropertyCount,\n VkVideoFormatPropertiesKHR* pVideoFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDeviceVideoFormatInfoKHR",
                    "header": "const VkPhysicalDeviceVideoFormatInfoKHR* pVideoFormatInfo\n            ",
                    "name": "pVideoFormatInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pVideoFormatPropertyCount\n            ",
                    "name": "pVideoFormatPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pVideoFormatPropertyCount"
                    ],
                    "type": "VkVideoFormatPropertiesKHR",
                    "header": "VkVideoFormatPropertiesKHR* pVideoFormatProperties\n        ",
                    "name": "pVideoFormatProperties"
                }
            ]
        },
        "vkCreateVideoSessionKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateVideoSessionKHR(\nVkDevice device,\n const VkVideoSessionCreateInfoKHR* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkVideoSessionKHR* pVideoSession\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionCreateInfoKHR",
                    "header": "const VkVideoSessionCreateInfoKHR* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionKHR",
                    "header": "VkVideoSessionKHR* pVideoSession\n        ",
                    "name": "pVideoSession"
                }
            ]
        },
        "vkDestroyVideoSessionKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyVideoSessionKHR(\nVkDevice device,\n VkVideoSessionKHR videoSession,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionKHR",
                    "header": "VkVideoSessionKHR videoSession\n            ",
                    "name": "videoSession"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCreateVideoSessionParametersKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateVideoSessionParametersKHR(\nVkDevice device,\n const VkVideoSessionParametersCreateInfoKHR* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkVideoSessionParametersKHR* pVideoSessionParameters\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionParametersCreateInfoKHR",
                    "header": "const VkVideoSessionParametersCreateInfoKHR* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionParametersKHR",
                    "header": "VkVideoSessionParametersKHR* pVideoSessionParameters\n        ",
                    "name": "pVideoSessionParameters"
                }
            ]
        },
        "vkUpdateVideoSessionParametersKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkUpdateVideoSessionParametersKHR(\nVkDevice device,\n VkVideoSessionParametersKHR videoSessionParameters,\n const VkVideoSessionParametersUpdateInfoKHR* pUpdateInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionParametersKHR",
                    "header": "VkVideoSessionParametersKHR videoSessionParameters\n            ",
                    "name": "videoSessionParameters"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionParametersUpdateInfoKHR",
                    "header": "const VkVideoSessionParametersUpdateInfoKHR* pUpdateInfo\n        ",
                    "name": "pUpdateInfo"
                }
            ]
        },
        "vkDestroyVideoSessionParametersKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyVideoSessionParametersKHR(\nVkDevice device,\n VkVideoSessionParametersKHR videoSessionParameters,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionParametersKHR",
                    "header": "VkVideoSessionParametersKHR videoSessionParameters\n            ",
                    "name": "videoSessionParameters"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetVideoSessionMemoryRequirementsKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetVideoSessionMemoryRequirementsKHR(\nVkDevice device,\n VkVideoSessionKHR videoSession,\n uint32_t* pMemoryRequirementsCount,\n VkVideoSessionMemoryRequirementsKHR* pMemoryRequirements\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionKHR",
                    "header": "VkVideoSessionKHR videoSession\n            ",
                    "name": "videoSession"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pMemoryRequirementsCount\n            ",
                    "name": "pMemoryRequirementsCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pMemoryRequirementsCount"
                    ],
                    "type": "VkVideoSessionMemoryRequirementsKHR",
                    "header": "VkVideoSessionMemoryRequirementsKHR* pMemoryRequirements\n        ",
                    "name": "pMemoryRequirements"
                }
            ]
        },
        "vkBindVideoSessionMemoryKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindVideoSessionMemoryKHR(\nVkDevice device,\n VkVideoSessionKHR videoSession,\n uint32_t bindSessionMemoryInfoCount,\n const VkBindVideoSessionMemoryInfoKHR* pBindSessionMemoryInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoSessionKHR",
                    "header": "VkVideoSessionKHR videoSession\n            ",
                    "name": "videoSession"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bindSessionMemoryInfoCount\n            ",
                    "name": "bindSessionMemoryInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bindSessionMemoryInfoCount"
                    ],
                    "type": "VkBindVideoSessionMemoryInfoKHR",
                    "header": "const VkBindVideoSessionMemoryInfoKHR* pBindSessionMemoryInfos\n        ",
                    "name": "pBindSessionMemoryInfos"
                }
            ]
        },
        "vkCmdDecodeVideoKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDecodeVideoKHR(\nVkCommandBuffer commandBuffer,\n const VkVideoDecodeInfoKHR* pDecodeInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoDecodeInfoKHR",
                    "header": "const VkVideoDecodeInfoKHR* pDecodeInfo\n        ",
                    "name": "pDecodeInfo"
                }
            ]
        },
        "vkCmdBeginVideoCodingKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginVideoCodingKHR(\nVkCommandBuffer commandBuffer,\n const VkVideoBeginCodingInfoKHR* pBeginInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoBeginCodingInfoKHR",
                    "header": "const VkVideoBeginCodingInfoKHR* pBeginInfo\n        ",
                    "name": "pBeginInfo"
                }
            ]
        },
        "vkCmdControlVideoCodingKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdControlVideoCodingKHR(\nVkCommandBuffer commandBuffer,\n const VkVideoCodingControlInfoKHR* pCodingControlInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoCodingControlInfoKHR",
                    "header": "const VkVideoCodingControlInfoKHR* pCodingControlInfo\n        ",
                    "name": "pCodingControlInfo"
                }
            ]
        },
        "vkCmdEndVideoCodingKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndVideoCodingKHR(\nVkCommandBuffer commandBuffer,\n const VkVideoEndCodingInfoKHR* pEndCodingInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkVideoEndCodingInfoKHR",
                    "header": "const VkVideoEndCodingInfoKHR* pEndCodingInfo\n        ",
                    "name": "pEndCodingInfo"
                }
            ]
        },
        "vkCmdDecompressMemoryNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDecompressMemoryNV(\nVkCommandBuffer commandBuffer,\n uint32_t decompressRegionCount,\n const VkDecompressMemoryRegionNV* pDecompressMemoryRegions\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t decompressRegionCount\n            ",
                    "name": "decompressRegionCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "decompressRegionCount"
                    ],
                    "type": "VkDecompressMemoryRegionNV",
                    "header": "const VkDecompressMemoryRegionNV* pDecompressMemoryRegions\n        ",
                    "name": "pDecompressMemoryRegions"
                }
            ]
        },
        "vkCmdDecompressMemoryIndirectCountNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdDecompressMemoryIndirectCountNV(\nVkCommandBuffer commandBuffer,\n VkDeviceAddress indirectCommandsAddress,\n VkDeviceAddress indirectCommandsCountAddress,\n uint32_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceAddress",
                    "header": "VkDeviceAddress indirectCommandsAddress\n            ",
                    "name": "indirectCommandsAddress"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceAddress",
                    "header": "VkDeviceAddress indirectCommandsCountAddress\n            ",
                    "name": "indirectCommandsCountAddress"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkCreateCuModuleNVX": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateCuModuleNVX(\nVkDevice device,\n const VkCuModuleCreateInfoNVX* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkCuModuleNVX* pModule\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCuModuleCreateInfoNVX",
                    "header": "const VkCuModuleCreateInfoNVX* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCuModuleNVX",
                    "header": "VkCuModuleNVX* pModule\n        ",
                    "name": "pModule"
                }
            ]
        },
        "vkCreateCuFunctionNVX": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateCuFunctionNVX(\nVkDevice device,\n const VkCuFunctionCreateInfoNVX* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkCuFunctionNVX* pFunction\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCuFunctionCreateInfoNVX",
                    "header": "const VkCuFunctionCreateInfoNVX* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCuFunctionNVX",
                    "header": "VkCuFunctionNVX* pFunction\n        ",
                    "name": "pFunction"
                }
            ]
        },
        "vkDestroyCuModuleNVX": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyCuModuleNVX(\nVkDevice device,\n VkCuModuleNVX module,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCuModuleNVX",
                    "header": "VkCuModuleNVX module\n            ",
                    "name": "module"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkDestroyCuFunctionNVX": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyCuFunctionNVX(\nVkDevice device,\n VkCuFunctionNVX function,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCuFunctionNVX",
                    "header": "VkCuFunctionNVX function\n            ",
                    "name": "function"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCmdCuLaunchKernelNVX": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCuLaunchKernelNVX(\nVkCommandBuffer commandBuffer,\n const VkCuLaunchInfoNVX* pLaunchInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCuLaunchInfoNVX",
                    "header": "const VkCuLaunchInfoNVX* pLaunchInfo\n        ",
                    "name": "pLaunchInfo"
                }
            ]
        },
        "vkGetDescriptorSetLayoutSizeEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDescriptorSetLayoutSizeEXT(\nVkDevice device,\n VkDescriptorSetLayout layout,\n VkDeviceSize* pLayoutSizeInBytes\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayout",
                    "header": "VkDescriptorSetLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize* pLayoutSizeInBytes\n        ",
                    "name": "pLayoutSizeInBytes"
                }
            ]
        },
        "vkGetDescriptorSetLayoutBindingOffsetEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDescriptorSetLayoutBindingOffsetEXT(\nVkDevice device,\n VkDescriptorSetLayout layout,\n uint32_t binding,\n VkDeviceSize* pOffset\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayout",
                    "header": "VkDescriptorSetLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t binding\n            ",
                    "name": "binding"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceSize",
                    "header": "VkDeviceSize* pOffset\n        ",
                    "name": "pOffset"
                }
            ]
        },
        "vkGetDescriptorEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDescriptorEXT(\nVkDevice device,\n const VkDescriptorGetInfoEXT* pDescriptorInfo,\n size_t dataSize,\n void* pDescriptor\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorGetInfoEXT",
                    "header": "const VkDescriptorGetInfoEXT* pDescriptorInfo\n            ",
                    "name": "pDescriptorInfo"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pDescriptor\n        ",
                    "name": "pDescriptor"
                }
            ]
        },
        "vkCmdBindDescriptorBuffersEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindDescriptorBuffersEXT(\nVkCommandBuffer commandBuffer,\n uint32_t bufferCount,\n const VkDescriptorBufferBindingInfoEXT* pBindingInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t bufferCount\n            ",
                    "name": "bufferCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "bufferCount"
                    ],
                    "type": "VkDescriptorBufferBindingInfoEXT",
                    "header": "const VkDescriptorBufferBindingInfoEXT* pBindingInfos\n        ",
                    "name": "pBindingInfos"
                }
            ]
        },
        "vkCmdSetDescriptorBufferOffsetsEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDescriptorBufferOffsetsEXT(\nVkCommandBuffer commandBuffer,\n VkPipelineBindPoint pipelineBindPoint,\n VkPipelineLayout layout,\n uint32_t firstSet,\n uint32_t setCount,\n const uint32_t* pBufferIndices,\n const VkDeviceSize* pOffsets\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineBindPoint",
                    "header": "VkPipelineBindPoint pipelineBindPoint\n            ",
                    "name": "pipelineBindPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstSet\n            ",
                    "name": "firstSet"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t setCount\n            ",
                    "name": "setCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "setCount"
                    ],
                    "type": "uint32_t",
                    "header": "const uint32_t* pBufferIndices\n            ",
                    "name": "pBufferIndices"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "setCount"
                    ],
                    "type": "VkDeviceSize",
                    "header": "const VkDeviceSize* pOffsets\n        ",
                    "name": "pOffsets"
                }
            ]
        },
        "vkCmdBindDescriptorBufferEmbeddedSamplersEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindDescriptorBufferEmbeddedSamplersEXT(\nVkCommandBuffer commandBuffer,\n VkPipelineBindPoint pipelineBindPoint,\n VkPipelineLayout layout,\n uint32_t set\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineBindPoint",
                    "header": "VkPipelineBindPoint pipelineBindPoint\n            ",
                    "name": "pipelineBindPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineLayout",
                    "header": "VkPipelineLayout layout\n            ",
                    "name": "layout"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t set\n        ",
                    "name": "set"
                }
            ]
        },
        "vkGetBufferOpaqueCaptureDescriptorDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetBufferOpaqueCaptureDescriptorDataEXT(\nVkDevice device,\n const VkBufferCaptureDescriptorDataInfoEXT* pInfo,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBufferCaptureDescriptorDataInfoEXT",
                    "header": "const VkBufferCaptureDescriptorDataInfoEXT* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetImageOpaqueCaptureDescriptorDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetImageOpaqueCaptureDescriptorDataEXT(\nVkDevice device,\n const VkImageCaptureDescriptorDataInfoEXT* pInfo,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageCaptureDescriptorDataInfoEXT",
                    "header": "const VkImageCaptureDescriptorDataInfoEXT* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetImageViewOpaqueCaptureDescriptorDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetImageViewOpaqueCaptureDescriptorDataEXT(\nVkDevice device,\n const VkImageViewCaptureDescriptorDataInfoEXT* pInfo,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageViewCaptureDescriptorDataInfoEXT",
                    "header": "const VkImageViewCaptureDescriptorDataInfoEXT* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetSamplerOpaqueCaptureDescriptorDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetSamplerOpaqueCaptureDescriptorDataEXT(\nVkDevice device,\n const VkSamplerCaptureDescriptorDataInfoEXT* pInfo,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSamplerCaptureDescriptorDataInfoEXT",
                    "header": "const VkSamplerCaptureDescriptorDataInfoEXT* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT(\nVkDevice device,\n const VkAccelerationStructureCaptureDescriptorDataInfoEXT* pInfo,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureCaptureDescriptorDataInfoEXT",
                    "header": "const VkAccelerationStructureCaptureDescriptorDataInfoEXT* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkSetDeviceMemoryPriorityEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkSetDeviceMemoryPriorityEXT(\nVkDevice       device,\n VkDeviceMemory memory,\n float          priority\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice       device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceMemory",
                    "header": "VkDeviceMemory memory\n            ",
                    "name": "memory"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "float",
                    "header": "float          priority\n        ",
                    "name": "priority"
                }
            ]
        },
        "vkAcquireDrmDisplayEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkAcquireDrmDisplayEXT(\nVkPhysicalDevice physicalDevice,\n int32_t drmFd,\n VkDisplayKHR display\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "int32_t",
                    "header": "int32_t drmFd\n            ",
                    "name": "drmFd"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR display\n        ",
                    "name": "display"
                }
            ]
        },
        "vkGetDrmDisplayEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDrmDisplayEXT(\nVkPhysicalDevice physicalDevice,\n int32_t drmFd,\n uint32_t connectorId,\n VkDisplayKHR* display\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "int32_t",
                    "header": "int32_t drmFd\n            ",
                    "name": "drmFd"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t connectorId\n            ",
                    "name": "connectorId"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDisplayKHR",
                    "header": "VkDisplayKHR* display\n        ",
                    "name": "display"
                }
            ]
        },
        "vkWaitForPresentKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkWaitForPresentKHR(\nVkDevice device,\n VkSwapchainKHR swapchain,\n uint64_t presentId,\n uint64_t timeout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkSwapchainKHR",
                    "header": "VkSwapchainKHR swapchain\n            ",
                    "name": "swapchain"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t presentId\n            ",
                    "name": "presentId"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint64_t",
                    "header": "uint64_t timeout\n        ",
                    "name": "timeout"
                }
            ]
        },
        "vkCmdBeginRendering": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginRendering(\nVkCommandBuffer                   commandBuffer,\n const VkRenderingInfo*                              pRenderingInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderingInfo",
                    "header": "const VkRenderingInfo*                              pRenderingInfo\n        ",
                    "name": "pRenderingInfo"
                }
            ]
        },
        "vkCmdBeginRenderingKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBeginRenderingKHR(\nVkCommandBuffer                   commandBuffer,\n const VkRenderingInfo*                              pRenderingInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderingInfo",
                    "header": "const VkRenderingInfo*                              pRenderingInfo\n        ",
                    "name": "pRenderingInfo"
                }
            ]
        },
        "vkCmdEndRendering": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndRendering(\nVkCommandBuffer                   commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n        ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkCmdEndRenderingKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdEndRenderingKHR(\nVkCommandBuffer                   commandBuffer\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                   commandBuffer\n        ",
                    "name": "commandBuffer"
                }
            ]
        },
        "vkGetDescriptorSetLayoutHostMappingInfoVALVE": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDescriptorSetLayoutHostMappingInfoVALVE(\nVkDevice device,\n const VkDescriptorSetBindingReferenceVALVE* pBindingReference,\n VkDescriptorSetLayoutHostMappingInfoVALVE* pHostMapping\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetBindingReferenceVALVE",
                    "header": "const VkDescriptorSetBindingReferenceVALVE* pBindingReference\n            ",
                    "name": "pBindingReference"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSetLayoutHostMappingInfoVALVE",
                    "header": "VkDescriptorSetLayoutHostMappingInfoVALVE* pHostMapping\n        ",
                    "name": "pHostMapping"
                }
            ]
        },
        "vkGetDescriptorSetHostMappingVALVE": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDescriptorSetHostMappingVALVE(\nVkDevice device,\n VkDescriptorSet descriptorSet,\n void** ppData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDescriptorSet",
                    "header": "VkDescriptorSet descriptorSet\n            ",
                    "name": "descriptorSet"
                },
                {
                    "const": false,
                    "num_indirection": 2,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void** ppData\n        ",
                    "name": "ppData"
                }
            ]
        },
        "vkCreateMicromapEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateMicromapEXT(\nVkDevice                                           device,\n const VkMicromapCreateInfoEXT*        pCreateInfo,\n const VkAllocationCallbacks*       pAllocator,\n VkMicromapEXT*                        pMicromap\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                                           device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMicromapCreateInfoEXT",
                    "header": "const VkMicromapCreateInfoEXT*        pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks*       pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMicromapEXT",
                    "header": "VkMicromapEXT*                        pMicromap\n        ",
                    "name": "pMicromap"
                }
            ]
        },
        "vkCmdBuildMicromapsEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBuildMicromapsEXT(\nVkCommandBuffer                                    commandBuffer,\n uint32_t infoCount,\n const VkMicromapBuildInfoEXT* pInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer                                    commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t infoCount\n            ",
                    "name": "infoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkMicromapBuildInfoEXT",
                    "header": "const VkMicromapBuildInfoEXT* pInfos\n        ",
                    "name": "pInfos"
                }
            ]
        },
        "vkBuildMicromapsEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBuildMicromapsEXT(\nVkDevice                                           device,\n VkDeferredOperationKHR deferredOperation,\n uint32_t infoCount,\n const VkMicromapBuildInfoEXT* pInfos\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                                           device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t infoCount\n            ",
                    "name": "infoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "infoCount"
                    ],
                    "type": "VkMicromapBuildInfoEXT",
                    "header": "const VkMicromapBuildInfoEXT* pInfos\n        ",
                    "name": "pInfos"
                }
            ]
        },
        "vkDestroyMicromapEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyMicromapEXT(\nVkDevice device,\n VkMicromapEXT micromap,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkMicromapEXT",
                    "header": "VkMicromapEXT micromap\n            ",
                    "name": "micromap"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkCmdCopyMicromapEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyMicromapEXT(\nVkCommandBuffer commandBuffer,\n const VkCopyMicromapInfoEXT* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMicromapInfoEXT",
                    "header": "const VkCopyMicromapInfoEXT* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCopyMicromapEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyMicromapEXT(\nVkDevice device,\n VkDeferredOperationKHR deferredOperation,\n const VkCopyMicromapInfoEXT* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMicromapInfoEXT",
                    "header": "const VkCopyMicromapInfoEXT* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCmdCopyMicromapToMemoryEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyMicromapToMemoryEXT(\nVkCommandBuffer commandBuffer,\n const VkCopyMicromapToMemoryInfoEXT* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMicromapToMemoryInfoEXT",
                    "header": "const VkCopyMicromapToMemoryInfoEXT* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCopyMicromapToMemoryEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyMicromapToMemoryEXT(\nVkDevice device,\n VkDeferredOperationKHR deferredOperation,\n const VkCopyMicromapToMemoryInfoEXT* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMicromapToMemoryInfoEXT",
                    "header": "const VkCopyMicromapToMemoryInfoEXT* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCmdCopyMemoryToMicromapEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdCopyMemoryToMicromapEXT(\nVkCommandBuffer commandBuffer,\n const VkCopyMemoryToMicromapInfoEXT* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMemoryToMicromapInfoEXT",
                    "header": "const VkCopyMemoryToMicromapInfoEXT* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCopyMemoryToMicromapEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCopyMemoryToMicromapEXT(\nVkDevice device,\n VkDeferredOperationKHR deferredOperation,\n const VkCopyMemoryToMicromapInfoEXT* pInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDeferredOperationKHR",
                    "header": "VkDeferredOperationKHR deferredOperation\n            ",
                    "name": "deferredOperation"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkCopyMemoryToMicromapInfoEXT",
                    "header": "const VkCopyMemoryToMicromapInfoEXT* pInfo\n        ",
                    "name": "pInfo"
                }
            ]
        },
        "vkCmdWriteMicromapsPropertiesEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdWriteMicromapsPropertiesEXT(\nVkCommandBuffer commandBuffer,\n uint32_t micromapCount,\n const VkMicromapEXT* pMicromaps,\n VkQueryType queryType,\n VkQueryPool queryPool,\n uint32_t firstQuery\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t micromapCount\n            ",
                    "name": "micromapCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "micromapCount"
                    ],
                    "type": "VkMicromapEXT",
                    "header": "const VkMicromapEXT* pMicromaps\n            ",
                    "name": "pMicromaps"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryType",
                    "header": "VkQueryType queryType\n            ",
                    "name": "queryType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryPool",
                    "header": "VkQueryPool queryPool\n            ",
                    "name": "queryPool"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t firstQuery\n        ",
                    "name": "firstQuery"
                }
            ]
        },
        "vkWriteMicromapsPropertiesEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkWriteMicromapsPropertiesEXT(\nVkDevice device,\n uint32_t micromapCount,\n const VkMicromapEXT* pMicromaps,\n VkQueryType  queryType,\n size_t       dataSize,\n void* pData,\n size_t stride\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t micromapCount\n            ",
                    "name": "micromapCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "micromapCount"
                    ],
                    "type": "VkMicromapEXT",
                    "header": "const VkMicromapEXT* pMicromaps\n            ",
                    "name": "pMicromaps"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkQueryType",
                    "header": "VkQueryType  queryType\n            ",
                    "name": "queryType"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t       dataSize\n            ",
                    "name": "dataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "dataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n            ",
                    "name": "pData"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t stride\n        ",
                    "name": "stride"
                }
            ]
        },
        "vkGetDeviceMicromapCompatibilityEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceMicromapCompatibilityEXT(\nVkDevice device,\n const VkMicromapVersionInfoEXT* pVersionInfo,\n VkAccelerationStructureCompatibilityKHR* pCompatibility\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMicromapVersionInfoEXT",
                    "header": "const VkMicromapVersionInfoEXT* pVersionInfo\n            ",
                    "name": "pVersionInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureCompatibilityKHR",
                    "header": "VkAccelerationStructureCompatibilityKHR* pCompatibility\n        ",
                    "name": "pCompatibility"
                }
            ]
        },
        "vkGetMicromapBuildSizesEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetMicromapBuildSizesEXT(\nVkDevice                                            device,\n VkAccelerationStructureBuildTypeKHR                 buildType,\n const VkMicromapBuildInfoEXT*  pBuildInfo,\n VkMicromapBuildSizesInfoEXT*           pSizeInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice                                            device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkAccelerationStructureBuildTypeKHR",
                    "header": "VkAccelerationStructureBuildTypeKHR                 buildType\n            ",
                    "name": "buildType"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMicromapBuildInfoEXT",
                    "header": "const VkMicromapBuildInfoEXT*  pBuildInfo\n            ",
                    "name": "pBuildInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMicromapBuildSizesInfoEXT",
                    "header": "VkMicromapBuildSizesInfoEXT*           pSizeInfo\n        ",
                    "name": "pSizeInfo"
                }
            ]
        },
        "vkGetShaderModuleIdentifierEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetShaderModuleIdentifierEXT(\nVkDevice device,\n VkShaderModule shaderModule,\n VkShaderModuleIdentifierEXT* pIdentifier\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderModule",
                    "header": "VkShaderModule shaderModule\n            ",
                    "name": "shaderModule"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderModuleIdentifierEXT",
                    "header": "VkShaderModuleIdentifierEXT* pIdentifier\n        ",
                    "name": "pIdentifier"
                }
            ]
        },
        "vkGetShaderModuleCreateInfoIdentifierEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetShaderModuleCreateInfoIdentifierEXT(\nVkDevice device,\n const VkShaderModuleCreateInfo* pCreateInfo,\n VkShaderModuleIdentifierEXT* pIdentifier\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderModuleCreateInfo",
                    "header": "const VkShaderModuleCreateInfo* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderModuleIdentifierEXT",
                    "header": "VkShaderModuleIdentifierEXT* pIdentifier\n        ",
                    "name": "pIdentifier"
                }
            ]
        },
        "vkGetImageSubresourceLayout2KHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageSubresourceLayout2KHR(\nVkDevice device,\n VkImage image,\n const VkImageSubresource2KHR* pSubresource,\n VkSubresourceLayout2KHR* pLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageSubresource2KHR",
                    "header": "const VkImageSubresource2KHR* pSubresource\n            ",
                    "name": "pSubresource"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubresourceLayout2KHR",
                    "header": "VkSubresourceLayout2KHR* pLayout\n        ",
                    "name": "pLayout"
                }
            ]
        },
        "vkGetImageSubresourceLayout2EXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetImageSubresourceLayout2EXT(\nVkDevice device,\n VkImage image,\n const VkImageSubresource2KHR* pSubresource,\n VkSubresourceLayout2KHR* pLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImage",
                    "header": "VkImage image\n            ",
                    "name": "image"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkImageSubresource2KHR",
                    "header": "const VkImageSubresource2KHR* pSubresource\n            ",
                    "name": "pSubresource"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubresourceLayout2KHR",
                    "header": "VkSubresourceLayout2KHR* pLayout\n        ",
                    "name": "pLayout"
                }
            ]
        },
        "vkGetPipelinePropertiesEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPipelinePropertiesEXT(\nVkDevice device,\n const VkPipelineInfoEXT* pPipelineInfo,\n VkBaseOutStructure* pPipelineProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkPipelineInfoEXT",
                    "header": "const VkPipelineInfoEXT* pPipelineInfo\n            ",
                    "name": "pPipelineInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkBaseOutStructure",
                    "header": "VkBaseOutStructure* pPipelineProperties\n        ",
                    "name": "pPipelineProperties"
                }
            ]
        },
        "vkGetFramebufferTilePropertiesQCOM": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetFramebufferTilePropertiesQCOM(\nVkDevice device,\n VkFramebuffer framebuffer,\n uint32_t* pPropertiesCount,\n VkTilePropertiesQCOM* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkFramebuffer",
                    "header": "VkFramebuffer framebuffer\n            ",
                    "name": "framebuffer"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertiesCount\n            ",
                    "name": "pPropertiesCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertiesCount"
                    ],
                    "type": "VkTilePropertiesQCOM",
                    "header": "VkTilePropertiesQCOM* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetDynamicRenderingTilePropertiesQCOM": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDynamicRenderingTilePropertiesQCOM(\nVkDevice device,\n const VkRenderingInfo* pRenderingInfo,\n VkTilePropertiesQCOM* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkRenderingInfo",
                    "header": "const VkRenderingInfo* pRenderingInfo\n            ",
                    "name": "pRenderingInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkTilePropertiesQCOM",
                    "header": "VkTilePropertiesQCOM* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        },
        "vkGetPhysicalDeviceOpticalFlowImageFormatsNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceOpticalFlowImageFormatsNV(\nVkPhysicalDevice physicalDevice,\n const VkOpticalFlowImageFormatInfoNV* pOpticalFlowImageFormatInfo,\n uint32_t* pFormatCount,\n VkOpticalFlowImageFormatPropertiesNV* pImageFormatProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowImageFormatInfoNV",
                    "header": "const VkOpticalFlowImageFormatInfoNV* pOpticalFlowImageFormatInfo\n            ",
                    "name": "pOpticalFlowImageFormatInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pFormatCount\n            ",
                    "name": "pFormatCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pFormatCount"
                    ],
                    "type": "VkOpticalFlowImageFormatPropertiesNV",
                    "header": "VkOpticalFlowImageFormatPropertiesNV* pImageFormatProperties\n        ",
                    "name": "pImageFormatProperties"
                }
            ]
        },
        "vkCreateOpticalFlowSessionNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateOpticalFlowSessionNV(\nVkDevice device,\n const VkOpticalFlowSessionCreateInfoNV* pCreateInfo,\n const VkAllocationCallbacks* pAllocator,\n VkOpticalFlowSessionNV* pSession\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowSessionCreateInfoNV",
                    "header": "const VkOpticalFlowSessionCreateInfoNV* pCreateInfo\n            ",
                    "name": "pCreateInfo"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowSessionNV",
                    "header": "VkOpticalFlowSessionNV* pSession\n        ",
                    "name": "pSession"
                }
            ]
        },
        "vkDestroyOpticalFlowSessionNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyOpticalFlowSessionNV(\nVkDevice device,\n VkOpticalFlowSessionNV session,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowSessionNV",
                    "header": "VkOpticalFlowSessionNV session\n            ",
                    "name": "session"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkBindOpticalFlowSessionImageNV": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkBindOpticalFlowSessionImageNV(\nVkDevice device,\n VkOpticalFlowSessionNV session,\n VkOpticalFlowSessionBindingPointNV bindingPoint,\n VkImageView view,\n VkImageLayout layout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowSessionNV",
                    "header": "VkOpticalFlowSessionNV session\n            ",
                    "name": "session"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowSessionBindingPointNV",
                    "header": "VkOpticalFlowSessionBindingPointNV bindingPoint\n            ",
                    "name": "bindingPoint"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageView",
                    "header": "VkImageView view\n            ",
                    "name": "view"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkImageLayout",
                    "header": "VkImageLayout layout\n        ",
                    "name": "layout"
                }
            ]
        },
        "vkCmdOpticalFlowExecuteNV": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdOpticalFlowExecuteNV(\nVkCommandBuffer commandBuffer,\n VkOpticalFlowSessionNV session,\n const VkOpticalFlowExecuteInfoNV* pExecuteInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowSessionNV",
                    "header": "VkOpticalFlowSessionNV session\n            ",
                    "name": "session"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkOpticalFlowExecuteInfoNV",
                    "header": "const VkOpticalFlowExecuteInfoNV* pExecuteInfo\n        ",
                    "name": "pExecuteInfo"
                }
            ]
        },
        "vkGetDeviceFaultInfoEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetDeviceFaultInfoEXT(\nVkDevice device,\n VkDeviceFaultCountsEXT* pFaultCounts,\n VkDeviceFaultInfoEXT* pFaultInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceFaultCountsEXT",
                    "header": "VkDeviceFaultCountsEXT* pFaultCounts\n            ",
                    "name": "pFaultCounts"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceFaultInfoEXT",
                    "header": "VkDeviceFaultInfoEXT* pFaultInfo\n        ",
                    "name": "pFaultInfo"
                }
            ]
        },
        "vkCmdSetDepthBias2EXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdSetDepthBias2EXT(\nVkCommandBuffer commandBuffer,\n const VkDepthBiasInfoEXT*         pDepthBiasInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDepthBiasInfoEXT",
                    "header": "const VkDepthBiasInfoEXT*         pDepthBiasInfo\n        ",
                    "name": "pDepthBiasInfo"
                }
            ]
        },
        "vkReleaseSwapchainImagesEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkReleaseSwapchainImagesEXT(\nVkDevice device,\n const VkReleaseSwapchainImagesInfoEXT* pReleaseInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkReleaseSwapchainImagesInfoEXT",
                    "header": "const VkReleaseSwapchainImagesInfoEXT* pReleaseInfo\n        ",
                    "name": "pReleaseInfo"
                }
            ]
        },
        "vkGetDeviceImageSubresourceLayoutKHR": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkGetDeviceImageSubresourceLayoutKHR(\nVkDevice device,\n const VkDeviceImageSubresourceInfoKHR* pInfo,\n VkSubresourceLayout2KHR* pLayout\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkDeviceImageSubresourceInfoKHR",
                    "header": "const VkDeviceImageSubresourceInfoKHR* pInfo\n            ",
                    "name": "pInfo"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkSubresourceLayout2KHR",
                    "header": "VkSubresourceLayout2KHR* pLayout\n        ",
                    "name": "pLayout"
                }
            ]
        },
        "vkMapMemory2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkMapMemory2KHR(\nVkDevice device,\n const VkMemoryMapInfoKHR* pMemoryMapInfo,\n void** ppData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryMapInfoKHR",
                    "header": "const VkMemoryMapInfoKHR* pMemoryMapInfo\n            ",
                    "name": "pMemoryMapInfo"
                },
                {
                    "const": false,
                    "num_indirection": 2,
                    "length": [
                        ""
                    ],
                    "type": "void",
                    "header": "void** ppData\n        ",
                    "name": "ppData"
                }
            ]
        },
        "vkUnmapMemory2KHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkUnmapMemory2KHR(\nVkDevice device,\n const VkMemoryUnmapInfoKHR* pMemoryUnmapInfo\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkMemoryUnmapInfoKHR",
                    "header": "const VkMemoryUnmapInfoKHR* pMemoryUnmapInfo\n        ",
                    "name": "pMemoryUnmapInfo"
                }
            ]
        },
        "vkCreateShadersEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkCreateShadersEXT(\nVkDevice device,\n uint32_t createInfoCount,\n const VkShaderCreateInfoEXT* pCreateInfos,\n const VkAllocationCallbacks* pAllocator,\n VkShaderEXT* pShaders\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t createInfoCount\n            ",
                    "name": "createInfoCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkShaderCreateInfoEXT",
                    "header": "const VkShaderCreateInfoEXT* pCreateInfos\n            ",
                    "name": "pCreateInfos"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n            ",
                    "name": "pAllocator"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "createInfoCount"
                    ],
                    "type": "VkShaderEXT",
                    "header": "VkShaderEXT* pShaders\n        ",
                    "name": "pShaders"
                }
            ]
        },
        "vkDestroyShaderEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkDestroyShaderEXT(\nVkDevice device,\n VkShaderEXT shader,\n const VkAllocationCallbacks* pAllocator\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderEXT",
                    "header": "VkShaderEXT shader\n            ",
                    "name": "shader"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "VkAllocationCallbacks",
                    "header": "const VkAllocationCallbacks* pAllocator\n        ",
                    "name": "pAllocator"
                }
            ]
        },
        "vkGetShaderBinaryDataEXT": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetShaderBinaryDataEXT(\nVkDevice device,\n VkShaderEXT shader,\n size_t* pDataSize,\n void* pData\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkDevice",
                    "header": "VkDevice device\n            ",
                    "name": "device"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkShaderEXT",
                    "header": "VkShaderEXT shader\n            ",
                    "name": "shader"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "size_t",
                    "header": "size_t* pDataSize\n            ",
                    "name": "pDataSize"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pDataSize"
                    ],
                    "type": "void",
                    "header": "void* pData\n        ",
                    "name": "pData"
                }
            ]
        },
        "vkCmdBindShadersEXT": {
            "sync": false,
            "type": "void",
            "num_indirection": 0,
            "header": "void vkCmdBindShadersEXT(\nVkCommandBuffer commandBuffer,\n uint32_t stageCount,\n const VkShaderStageFlagBits* pStages,\n const VkShaderEXT* pShaders\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkCommandBuffer",
                    "header": "VkCommandBuffer commandBuffer\n            ",
                    "name": "commandBuffer"
                },
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t stageCount\n            ",
                    "name": "stageCount"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "stageCount"
                    ],
                    "type": "VkShaderStageFlagBits",
                    "header": "const VkShaderStageFlagBits* pStages\n            ",
                    "name": "pStages"
                },
                {
                    "const": true,
                    "num_indirection": 1,
                    "length": [
                        "stageCount"
                    ],
                    "type": "VkShaderEXT",
                    "header": "const VkShaderEXT* pShaders\n        ",
                    "name": "pShaders"
                }
            ]
        },
        "vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR": {
            "sync": false,
            "type": "VkResult",
            "num_indirection": 0,
            "header": "VkResult vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR(\nVkPhysicalDevice physicalDevice,\n uint32_t* pPropertyCount,\n VkCooperativeMatrixPropertiesKHR* pProperties\n)",
            "params": [
                {
                    "const": false,
                    "num_indirection": 0,
                    "length": [
                        ""
                    ],
                    "type": "VkPhysicalDevice",
                    "header": "VkPhysicalDevice physicalDevice\n            ",
                    "name": "physicalDevice"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        ""
                    ],
                    "type": "uint32_t",
                    "header": "uint32_t* pPropertyCount\n            ",
                    "name": "pPropertyCount"
                },
                {
                    "const": false,
                    "num_indirection": 1,
                    "length": [
                        "*pPropertyCount"
                    ],
                    "type": "VkCooperativeMatrixPropertiesKHR",
                    "header": "VkCooperativeMatrixPropertiesKHR* pProperties\n        ",
                    "name": "pProperties"
                }
            ]
        }
    },
    "funcpointers": {
        "PFN_vkInternalAllocationNotification": {
            "header": "void PFN_vkInternalAllocationNotification(\n    void*                                       pUserData,\n    size_t                                      size,\n    VkInternalAllocationType                    allocationType,\n    VkSystemAllocationScope                     allocationScope)",
            "type": "void",
            "num_indirection": 0,
            "params": [
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pUserData"
                },
                {
                    "const": false,
                    "type": "size_t",
                    "num_indirection": 0,
                    "name": "size",
                    "length": [
                        ""
                    ],
                    "header": " size_t                                      size"
                },
                {
                    "const": false,
                    "type": "VkInternalAllocationType",
                    "num_indirection": 0,
                    "name": "allocationType",
                    "length": [
                        ""
                    ],
                    "header": " VkInternalAllocationType                    allocationType"
                },
                {
                    "const": false,
                    "type": "VkSystemAllocationScope",
                    "num_indirection": 0,
                    "name": "allocationScope",
                    "length": [
                        ""
                    ],
                    "header": " VkSystemAllocationScope                     allocationScope"
                }
            ]
        },
        "PFN_vkInternalFreeNotification": {
            "header": "void PFN_vkInternalFreeNotification(\n    void*                                       pUserData,\n    size_t                                      size,\n    VkInternalAllocationType                    allocationType,\n    VkSystemAllocationScope                     allocationScope)",
            "type": "void",
            "num_indirection": 0,
            "params": [
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pUserData"
                },
                {
                    "const": false,
                    "type": "size_t",
                    "num_indirection": 0,
                    "name": "size",
                    "length": [
                        ""
                    ],
                    "header": " size_t                                      size"
                },
                {
                    "const": false,
                    "type": "VkInternalAllocationType",
                    "num_indirection": 0,
                    "name": "allocationType",
                    "length": [
                        ""
                    ],
                    "header": " VkInternalAllocationType                    allocationType"
                },
                {
                    "const": false,
                    "type": "VkSystemAllocationScope",
                    "num_indirection": 0,
                    "name": "allocationScope",
                    "length": [
                        ""
                    ],
                    "header": " VkSystemAllocationScope                     allocationScope"
                }
            ]
        },
        "PFN_vkReallocationFunction": {
            "header": "void* PFN_vkReallocationFunction(\n    void*                                       pUserData,\n    void*                                       pOriginal,\n    size_t                                      size,\n    size_t                                      alignment,\n    VkSystemAllocationScope                     allocationScope)",
            "type": "void",
            "num_indirection": 1,
            "params": [
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pUserData"
                },
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pOriginal",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pOriginal"
                },
                {
                    "const": false,
                    "type": "size_t",
                    "num_indirection": 0,
                    "name": "size",
                    "length": [
                        ""
                    ],
                    "header": " size_t                                      size"
                },
                {
                    "const": false,
                    "type": "size_t",
                    "num_indirection": 0,
                    "name": "alignment",
                    "length": [
                        ""
                    ],
                    "header": " size_t                                      alignment"
                },
                {
                    "const": false,
                    "type": "VkSystemAllocationScope",
                    "num_indirection": 0,
                    "name": "allocationScope",
                    "length": [
                        ""
                    ],
                    "header": " VkSystemAllocationScope                     allocationScope"
                }
            ]
        },
        "PFN_vkAllocationFunction": {
            "header": "void* PFN_vkAllocationFunction(\n    void*                                       pUserData,\n    size_t                                      size,\n    size_t                                      alignment,\n    VkSystemAllocationScope                     allocationScope)",
            "type": "void",
            "num_indirection": 1,
            "params": [
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pUserData"
                },
                {
                    "const": false,
                    "type": "size_t",
                    "num_indirection": 0,
                    "name": "size",
                    "length": [
                        ""
                    ],
                    "header": " size_t                                      size"
                },
                {
                    "const": false,
                    "type": "size_t",
                    "num_indirection": 0,
                    "name": "alignment",
                    "length": [
                        ""
                    ],
                    "header": " size_t                                      alignment"
                },
                {
                    "const": false,
                    "type": "VkSystemAllocationScope",
                    "num_indirection": 0,
                    "name": "allocationScope",
                    "length": [
                        ""
                    ],
                    "header": " VkSystemAllocationScope                     allocationScope"
                }
            ]
        },
        "PFN_vkFreeFunction": {
            "header": "void PFN_vkFreeFunction(\n    void*                                       pUserData,\n    void*                                       pMemory)",
            "type": "void",
            "num_indirection": 0,
            "params": [
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pUserData"
                },
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pMemory",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pMemory"
                }
            ]
        },
        "PFN_vkDebugReportCallbackEXT": {
            "header": "VkBool32 PFN_vkDebugReportCallbackEXT(\n    VkDebugReportFlagsEXT                       flags,\n    VkDebugReportObjectTypeEXT                  objectType,\n    uint64_t                                    object,\n    size_t                                      location,\n    int32_t                                     messageCode,\n    const char*                                 pLayerPrefix,\n    const char*                                 pMessage,\n    void*                                       pUserData)",
            "type": "VkBool32",
            "num_indirection": 0,
            "params": [
                {
                    "const": false,
                    "type": "VkDebugReportFlagsEXT",
                    "num_indirection": 0,
                    "name": "flags",
                    "length": [
                        ""
                    ],
                    "header": " VkDebugReportFlagsEXT                       flags"
                },
                {
                    "const": false,
                    "type": "VkDebugReportObjectTypeEXT",
                    "num_indirection": 0,
                    "name": "objectType",
                    "length": [
                        ""
                    ],
                    "header": " VkDebugReportObjectTypeEXT                  objectType"
                },
                {
                    "const": false,
                    "type": "uint64_t",
                    "num_indirection": 0,
                    "name": "object",
                    "length": [
                        ""
                    ],
                    "header": " uint64_t                                    object"
                },
                {
                    "const": false,
                    "type": "size_t",
                    "num_indirection": 0,
                    "name": "location",
                    "length": [
                        ""
                    ],
                    "header": " size_t                                      location"
                },
                {
                    "const": false,
                    "type": "int32_t",
                    "num_indirection": 0,
                    "name": "messageCode",
                    "length": [
                        ""
                    ],
                    "header": " int32_t                                     messageCode"
                },
                {
                    "const": true,
                    "type": "char",
                    "num_indirection": 1,
                    "name": "pLayerPrefix",
                    "length": [
                        ""
                    ],
                    "header": "const char*                                 pLayerPrefix"
                },
                {
                    "const": true,
                    "type": "char",
                    "num_indirection": 1,
                    "name": "pMessage",
                    "length": [
                        ""
                    ],
                    "header": "const char*                                 pMessage"
                },
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pUserData"
                }
            ]
        },
        "PFN_vkDebugUtilsMessengerCallbackEXT": {
            "header": "VkBool32 PFN_vkDebugUtilsMessengerCallbackEXT(\n    VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity,\n    VkDebugUtilsMessageTypeFlagsEXT                  messageTypes,\n    const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData,\n    void*                                            pUserData)",
            "type": "VkBool32",
            "num_indirection": 0,
            "params": [
                {
                    "const": false,
                    "type": "VkDebugUtilsMessageSeverityFlagBitsEXT",
                    "num_indirection": 0,
                    "name": "messageSeverity",
                    "length": [
                        ""
                    ],
                    "header": " VkDebugUtilsMessageSeverityFlagBitsEXT           messageSeverity"
                },
                {
                    "const": false,
                    "type": "VkDebugUtilsMessageTypeFlagsEXT",
                    "num_indirection": 0,
                    "name": "messageTypes",
                    "length": [
                        ""
                    ],
                    "header": " VkDebugUtilsMessageTypeFlagsEXT                  messageTypes"
                },
                {
                    "const": true,
                    "type": "VkDebugUtilsMessengerCallbackDataEXT",
                    "num_indirection": 1,
                    "name": "pCallbackData",
                    "length": [
                        ""
                    ],
                    "header": "const VkDebugUtilsMessengerCallbackDataEXT*      pCallbackData"
                },
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                            pUserData"
                }
            ]
        },
        "PFN_vkDeviceMemoryReportCallbackEXT": {
            "header": "void PFN_vkDeviceMemoryReportCallbackEXT(\n    const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData,\n    void*                                       pUserData)",
            "type": "void",
            "num_indirection": 0,
            "params": [
                {
                    "const": true,
                    "type": "VkDeviceMemoryReportCallbackDataEXT",
                    "num_indirection": 1,
                    "name": "pCallbackData",
                    "length": [
                        ""
                    ],
                    "header": "const VkDeviceMemoryReportCallbackDataEXT*  pCallbackData"
                },
                {
                    "const": false,
                    "type": "void",
                    "num_indirection": 1,
                    "name": "pUserData",
                    "length": [
                        ""
                    ],
                    "header": " void*                                       pUserData"
                }
            ]
        },
        "PFN_vkGetInstanceProcAddrLUNARG": {
            "header": "PFN_vkVoidFunction PFN_vkGetInstanceProcAddrLUNARG(\n    VkInstance instance, const char* pName)",
            "type": "PFN_vkVoidFunction",
            "num_indirection": 0,
            "params": [
                {
                    "const": false,
                    "type": "VkInstance",
                    "num_indirection": 0,
                    "name": "instance",
                    "length": [
                        ""
                    ],
                    "header": " VkInstance instance"
                },
                {
                    "const": true,
                    "type": "char",
                    "num_indirection": 1,
                    "name": "pName",
                    "length": [
                        ""
                    ],
                    "header": "const char* pName"
                }
            ]
        }
    }
}